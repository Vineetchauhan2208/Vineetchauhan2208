{"version":3,"file":"213.b15199943783f1ff.js","mappings":"yWAwC4BA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCAOAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,+BA0CJA,mCAMQA,qBACIA,SAAyBA,kCADYA,8BACrCA,+DAERA,oBAEIA,kCACJA,gCAOAA,oBAEIA,uCACJA,2FAnGRA,mBAAmCA,6DAAYA,mCAA0B,GAGrEA,eAAK,cAC0CA,sBAAUA,QACrDA,oBAGAA,2BAIJA,QACAA,eAAK,cACyCA,qBAASA,QACnDA,oBAGAA,4BAIJA,QACAA,mBAAsB,eACoBA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIJA,QAEAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGJA,QAEAA,mBAAgG,SAAhGA,CAAgG,eAEnDA,iBAAIA,QACzCA,qBAGJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,qBACJA,UAGJA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGJA,QAEAA,mCAEAA,gBAAK,eAC4CA,yBAAYA,QACzDA,sBAA4D,gBACpBA,gCAAmBA,QACvDA,6BAEJA,QACAA,4BAIJA,QACAA,gBAAK,eACkDA,+BAAkBA,QACrEA,qBAGAA,4BAIJA,QAEAA,oBAAiDA,0FAAiFA,QAClIA,mBAAyB,gBACiBA,mBAAMA,WAAS,sCAxGvDA,oCAMMA,wHAGCA,6HAODA,sHAGCA,2HAODA,8GAGCA,kHAIAA,mHAQDA,kHAMAA,sHAQIA,4GAMAA,8GAYJA,0GAIOA,qCAAwB,wDAMHA,qCAI3BA,iIAODA,wIAGCA,qKAgBLA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCAQAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,+BA0CJA,gCAQIA,oBAEIA,sCACJA,gCAOAA,oBAEIA,0CACJA,gCAWAA,oBAEIA,iDACJA,kDAGJA,kBACkF,eAI1EA,0DAASA,iBAAQ,GAEjBA,0BACJA,SAAS,0BAJLA,kHA/HZA,mBAAuE,QAAvEA,CAAuE,cAEpBA,yBAAaA,QACxDA,oBAEAA,2BAIJA,QACAA,eAAK,cAC0CA,8BAAkBA,QAC7DA,oBAGAA,4BAIJA,QACAA,gBAAK,eACyCA,+BAAkBA,QAC5DA,qBAGAA,4BAIJA,QAEAA,gBAAK,eAC8CA,0BAAaA,QAC5DA,qBAGAA,4BAIAA,4BAIJA,QAEAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGJA,QAEAA,mBAAgG,SAAhGA,CAAgG,eAEnDA,iBAAIA,QACzCA,qBAGJA,QACAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,qBACJA,UAGJA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGJA,QAEAA,mCAGAA,gBAAK,eAC0CA,uBAAUA,QACrDA,qBAGAA,4BAIJA,QACAA,gBAAK,eAC8CA,2BAAcA,QAC7DA,qBAGAA,4BAIJA,QACAA,mBAAc,eAC6CA,kCAAqBA,QAC5EA,qBAIAA,oBAAkDA,0FAEnBA,QAAOA,eACtCA,4BAIJA,QAEAA,0BAWAA,oBAAiDA,0FAAiFA,QAClIA,mBAAyB,gBACqBA,0DAASA,6BAAoB,GAAEA,mBAAMA,WAAS,sCAxI1FA,kCAGmDA,oEAG5CA,+HAODA,oHAGCA,yHAODA,kHAGCA,uHAQDA,0GAGCA,8GAIAA,+GAQDA,8GAMAA,kHAQIA,wGAMAA,0GAYJA,sGAIOA,qCAAwB,sDAM/BA,oHAGCA,yHAODA,4HAGCA,iIAODA,4IAEAA,wFAKCA,iJAMJA,uHAqBDA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCAOAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,gCAOAA,oBAEIA,0CACJA,gCAOAA,oBAEIA,0CACJA,gCAOAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,gCAWAA,oBAEIA,0CACJA,+BAGJA,gCAOIA,oBAEIA,sCACJA,gCAOAA,oBAEIA,0CACJA,kDAvHRA,mBAAgE,QAAhEA,CAAgE,cAEbA,yBAAaA,QACxDA,oBAEAA,2BAIJA,QACAA,eAAK,cAC0CA,sBAAUA,QACrDA,oBAGAA,4BAIJA,QACAA,gBAAK,eACyCA,sBAASA,QACnDA,qBAGAA,4BAIJA,QACAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,4BAIJA,QACAA,gBAAK,eACoCA,iBAAIA,QACzCA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,qBACJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGAA,4BAIJA,QAEAA,mCAEAA,gBAAK,eAC0CA,uBAAUA,QACrDA,qBAGAA,4BAIJA,QACAA,gBAAK,eAC8CA,2BAAcA,QAC7DA,qBAGAA,4BAIJA,QACAA,mBAAuB,eACoCA,kCAC7CA,QACVA,qBAGAA,oBAAiDA,0FACVA,QAAOA,eAElDA,QAEAA,oBAAiDA,0FAAiFA,QAElIA,mBAAyB,gBACqBA,0DAASA,6BAAoB,GAAEA,mBAAMA,WAAS,sCAvI1FA,kCAGmDA,oEAG5CA,iIAODA,oHAGCA,2HAODA,kHAGCA,yHAODA,0GAGCA,8GAIAA,iHAODA,8GAGCA,qHAODA,kHAGCA,yHAODA,wGAGCA,+GAODA,0GAGCA,iHAWDA,sGAGCA,6GAKMA,qCAAwB,sDAK/BA,oHAGCA,2HAODA,4HAGCA,mIAQDA,oKAoBJA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCAOAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,gCAQAA,oBAEIA,0CACJA,gCAQAA,oBAEIA,0CACJA,gCAOAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,gCAWAA,oBAEIA,0CACJA,+BAGJA,gCAYIA,oBAEIA,iDACJA,kDApHRA,mBAA+D,QAA/DA,CAA+D,cAEZA,yBAAaA,QACxDA,oBAEAA,2BAIJA,QACAA,eAAK,cAC0CA,sBAAUA,QACrDA,oBAGAA,4BAIJA,QACAA,gBAAK,eACyCA,sBAASA,QACnDA,qBAGAA,4BAIJA,QACAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,oBAAiDA,0FAAiFA,QAClIA,4BAIJA,QAEAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,4BAIJA,QACAA,gBAAK,eACoCA,iBAAIA,QACzCA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,qBACJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGAA,4BAIJA,QAEAA,mCAEAA,mBAAuB,eACoCA,kCAC7CA,QAEVA,qBAGAA,oBAAiDA,0FAElBA,QAAOA,eACtCA,4BAIJA,QAGAA,mBAAyB,gBACqBA,0DAASA,8BAAqB,GAAEA,mBAAMA,WAAS,sCAzH3FA,mCAGmDA,qEAG5CA,mIAODA,sHAGCA,6HAODA,oHAGCA,2HAODA,4GAGCA,gHAIAA,mHAODA,gHAICA,uHAQDA,oHAGCA,2HAODA,0GAGCA,iHAODA,4GAGCA,mHAWDA,wGAGCA,+GAKMA,qCAAwB,uDAO/BA,8IAMCA,+LAvgBzBA,eAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,YAIZA,kBACAA,eAAK,YAEGA,kBACJA,QACAA,oBAAmBA,2DAAUA,wBAAoB,GAAjDA,cAMZA,kBAEIA,6BA4GAA,6BA4IAA,6BA4IAA,6BA6HJA,WAAM,yBA9gBOA,qFAcJA,yDA2G6BA,uDA4IAA,8CA4ICA,oEA2I3BA,oBAC6EA,qCACxDA,mCAJzBA,eAEIA,2BAGJA,qCAFSA,kIAWLA,oBACyEA,kCAC5DA,+BACbA,+FALJA,eAEIA,2BAGAA,kCAEJA,iDAJSA,sGAEUA,qCAA4B,oFAW3CA,oBAC6EA,sCACvDA,mCAJ1BA,eAEIA,2BAKJA,qCAJSA,kIAMLA,oBAEAA,mCACFA,kDA9ClBA,kBAA4C,WAA5CA,CAA4C,YAA5CA,CAA4C,QAA5CA,CAA4C,cAISA,4BAAgBA,QACrDA,oBAEAA,gBAA6BA,0EAA6B,YAA7BC,WAAwC,OAAO,WAAU,GAAGD,QACzFA,wBAMJA,QACAA,eAAK,eACoCA,yBAAYA,QACjDA,qBAEAA,iBAA6BA,2EAA+B,YAA/BE,YAA0C,OAAO,WAAU,GAAGF,QAC3FA,yBAQJA,QACAA,gBAAK,eACoCA,6BAAgBA,QACrDA,qBAEAA,iBAA6BA,2EAA+B,YAA/BG,YAA0C,OAAO,WAAU,GAAGH,QAC3FA,yBAQAA,gBACIA,4BAIJA,UAEJA,mBAAyB,gBACSA,+DAAa,UAAUA,mCAA0B,GAAEA,mBAAMA,QACvFA,sBAA0CA,yDAASA,mCAA0B,GAAEA,mBAAMA,eAAS,mCAjDhGA,iDAGSA,kCAIFA,iPAQEA,mCAIFA,qOAUEA,mCAIFA,iPASAA,4MAoBrBA,oBAKEA,2DACFA,gCAEEA,oBAKIA,0FACJA,gCAGAA,oBAGEA,4CACFA,mCAxBNA,SACEA,gBAAqBA,mCAAuBA,QAC5CA,kBACEA,qFAOAA,gBACEA,sFAOFA,QACAA,iBACEA,0DAKFA,UAEJA,6DAvBOA,0JAQEA,sJASAA,2GArBTA,wCAAeA,0EAuCPA,oBAEAA,mCACJA,gCACAA,oBAEIA,sCACJA,uHAfJA,kBAAwB,cACkBA,iBAAKA,QAC3CA,oBAKIA,8EAAiBA,4BAA4B,GALjDA,QAMIA,2BAIJA,2BAIJA,oCAhBKA,qBAGGA,sFAGAA,wCAGKA,0FAIAA,4FC7nBV,IAAMI,GAAkB,MAAzB,MAAOA,EAwBXC,YAAoBC,EAAyBC,EACnCC,EAA+BC,EAC/BC,EAA4CC,EAC5CC,GAHUC,UAAyBA,oBACnCA,cAA+BA,qBAC/BA,oBAA4CA,YAC5CA,sBA1BVA,8BAAmC,EAMnCA,eAAoB,EACpBA,SAAW,UACXA,eAAYC,WACZD,WAAa,GACbA,oBAAyB,EAGzBA,cAAgB,IAAIE,SAEpBF,iBAAsB,EAGtBA,6BAAkC,EAClCA,cAAgB,WAChBA,eAAiB,WACjBA,eAAiB,WA0GjBA,SAAW,CACT,CAAEG,OAAU,KAAMC,KAAQ,iBAC1B,CAAED,OAAU,KAAMC,KAAQ,mBA4F5BJ,oBAAiB,GAlMfA,KAAKJ,cAAcS,SAAS,cAC5BL,KAAKM,YAAcN,KAAKP,GAAGc,MAAM,CAC/BC,WAAY,CAAC,GAAIC,eACjBC,UAAW,CAAC,GAAID,eAChBE,QAAS,CAAC,GAAIF,eACdG,QAAS,CAAC,QAASH,eACnBI,SAAU,CAAC,GAAIJ,eACfK,MAAO,CAAC,GAAI,CAACL,cAAqBA,eAGpCT,KAAKe,gBAAkBf,KAAKP,GAAGc,MAAM,CACnCO,MAAO,CAAC,GAAI,CAACL,cAAqBA,eAGpCT,KAAKgB,cAAgBhB,KAAKP,GAAGc,MAAM,CACjCU,IAAK,CAAC,GAAIR,iBAGZT,KAAKkB,mBAAqBlB,KAAKP,GAAGc,MAAM,CACtCY,iBAAkB,CAAC,GAAIV,eACvBW,aAAc,CAAC,GAAI,CAACX,cAAqBA,aAAmB,oEAC5DY,iBAAkB,CAAC,GAAI,CAACZ,cAAqBA,aAAmB,sEAIlET,KAAKsB,eAAiBtB,KAAKP,GAAGc,MAAM,CAClCC,WAAY,CAAC,GAAI,CAACC,gBAClBC,UAAW,CAAC,GAAI,CAACD,gBACjBI,SAAU,CAAC,GAAI,CAACJ,gBAChBc,aAAc,CAAC,IACfT,MAAO,CAAC,GAAI,CAACL,cAAqBA,aAClCE,QAAS,CAAC,IACVa,UAAW,CAAC,IACZZ,QAAS,CAAC,kBACVa,MAAO,CAAC,IACRC,KAAM,CAAC,IACPC,IAAK,CAAC,IACNC,aAAc,CAAC,IAAK,IACpBC,mBAAoB,CAAC,GAAI,MAK3B7B,KAAK8B,aAAe9B,KAAKP,GAAGc,MAAM,CAChCwB,cAAe,CAAC,GAAI,CAACtB,gBACrBuB,WAAY,CAAC,GAAI,IACjBC,eAAgB,CAAC,GAAI,IACrBC,uBAAwB,CAAC,GAAI,IAC7BvB,QAAS,CAAC,IACVa,UAAW,CAAC,IACZZ,QAAS,CAAC,kBACVa,MAAO,CAAC,IACRC,KAAM,CAAC,IACPC,IAAK,CAAC,IACNnB,WAAY,CAAC,GAAI,CAACC,gBAClBC,UAAW,CAAC,GAAI,CAACD,gBACjBc,aAAc,CAAC,IACfV,SAAU,CAAC,GAAI,CAACJ,gBAChBK,MAAO,CAAC,GAAI,CAACL,cAAqBA,eAIpCT,KAAKmC,aAAenC,KAAKP,GAAGc,MAAM,CAChCwB,cAAe,CAAC,GAAI,CAACtB,gBACrBuB,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7B1B,WAAY,CAAC,GAAI,CAACC,gBAClBC,UAAW,CAAC,GAAI,CAACD,gBACjBI,SAAU,CAAC,IACXU,aAAc,CAAC,IACfT,MAAO,CAAC,GAAI,CAACL,cAAqBA,aAClCE,QAAS,CAAC,GAAI,CAACF,gBACfe,UAAW,CAAC,GAAI,CAACf,gBACjBG,QAAS,CAAC,iBAAkB,CAACH,gBAC7BgB,MAAO,CAAC,GAAI,CAAChB,gBACbiB,KAAM,CAAC,GAAI,CAACjB,gBACZkB,IAAK,CAAC,GAAI,CAAClB,kBAGbT,KAAKoC,cAAgBpC,KAAKP,GAAGc,MAAM,CACjCwB,cAAe,CAAC,GAAI,CAACtB,gBACrBuB,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7B1B,WAAY,CAAC,GAAI,CAACC,gBAClBC,UAAW,CAAC,GAAI,CAACD,gBACjBI,SAAU,CAAC,IACXU,aAAc,CAAC,IACfT,MAAO,CAAC,GAAI,CAACL,cAAqBA,aAClCE,QAAS,CAAC,GAAI,CAACF,gBACfe,UAAW,CAAC,GAAI,CAACf,gBACjBG,QAAS,CAAC,iBAAkB,CAACH,gBAC7BgB,MAAO,CAAC,GAAI,CAAChB,gBACbiB,KAAM,CAAC,GAAI,CAACjB,gBACZkB,IAAK,CAAC,GAAI,CAAClB,gBACX4B,WAAY,CAAC,kBAAmB,CAAC5B,iBAGrC,CAKA6B,WACEtC,KAAKuC,UAAUC,IAAIC,KAAK,CAACC,EAAQC,IAAYD,EAAEtC,KAAOuC,EAAEvC,KAAQ,GAAI,GACpEJ,KAAK4C,IAAIC,QAASC,IAChB9C,KAAK+C,iBAAiBD,EAAQ1C,KAAI,GAEpCJ,KAAKgD,YAAcC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IACrEpD,KAAKqD,SAAWrD,KAAKgD,aAAaM,KACb,uBAAjBtD,KAAKqD,UACPrD,KAAKsB,eAAeiC,SAAS3B,aAAgB4B,SAASxD,KAAKgD,aAAaS,WAAW7B,cACnF5B,KAAKsB,eAAeiC,SAAS1B,mBAAsB2B,SAASxD,KAAKgD,aAAaS,WAAW5B,oBACzF7B,KAAKsB,eAAeiC,SAAS/C,WAAcgD,SAASxD,KAAKgD,aAAaxC,YACtER,KAAKsB,eAAeiC,SAAS7C,UAAa8C,SAASxD,KAAKgD,aAAatC,WACrEV,KAAK0D,eAAe1D,KAAKgD,aAAanC,SAAUb,KAAKgD,aAAazB,aAAavB,KAAKsB,gBACpFtB,KAAKsB,eAAeiC,SAAShC,aAAgBiC,SAASxD,KAAKgD,aAAazB,cACxEvB,KAAKsB,eAAeiC,SAASzC,MAAS0C,SAASxD,KAAKgD,aAAalC,OACjEd,KAAKsB,eAAeiC,SAAS5C,QAAW6C,SAASxD,KAAKgD,aAAaW,cAAchD,SACjFX,KAAKsB,eAAeiC,SAAS/B,UAAagC,SAASxD,KAAKgD,aAAaW,cAAcnC,WACnFxB,KAAKsB,eAAeiC,SAAS3C,QAAW4C,SAASxD,KAAKgD,aAAaW,cAAc/C,SACjFZ,KAAKsB,eAAeiC,SAAS9B,MAAS+B,SAASxD,KAAKgD,aAAaW,cAAclC,OAC/EzB,KAAKsB,eAAeiC,SAAS7B,KAAQ8B,SAASxD,KAAKgD,aAAaW,cAAcjC,MAC9E1B,KAAKsB,eAAeiC,SAAS5B,IAAO6B,SAASxD,KAAKgD,aAAaW,cAAchC,KAC7E3B,KAAKF,KAAK8D,WAAW,GAAGC,kBAA4BC,KAAMC,IACxD/D,KAAKgE,SAAWD,EAAIE,KAAKC,WAKH,qBAAjBlE,KAAKqD,UACZrD,KAAK8B,aAAayB,SAASxB,cAAiByB,SAASxD,KAAKgD,aAAaS,WAAW1B,eAClF/B,KAAK8B,aAAayB,SAASvB,WAAcwB,SAASxD,KAAKgD,aAAaS,WAAWzB,YAC/EhC,KAAK8B,aAAayB,SAAStB,eAAkBuB,SAASxD,KAAKgD,aAAaS,WAAWxB,gBACnFjC,KAAK8B,aAAayB,SAASrB,uBAA0BsB,SAASxD,KAAKgD,aAAaS,WAAWvB,wBAC3FlC,KAAK8B,aAAayB,SAAS/C,WAAcgD,SAASxD,KAAKgD,aAAaxC,YACpER,KAAK8B,aAAayB,SAAS7C,UAAa8C,SAASxD,KAAKgD,aAAatC,WACnEV,KAAK8B,aAAayB,SAASzC,MAAS0C,SAASxD,KAAKgD,aAAalC,OAC/Dd,KAAK0D,eAAe1D,KAAKgD,aAAanC,SAAUb,KAAKgD,aAAazB,aAAavB,KAAK8B,cACpF9B,KAAK8B,aAAayB,SAAShC,aAAgBiC,SAASxD,KAAKgD,aAAazB,cACtEvB,KAAK8B,aAAayB,SAAS5C,QAAW6C,SAASxD,KAAKgD,aAAaW,cAAchD,SAC/EX,KAAK8B,aAAayB,SAAS/B,UAAagC,SAASxD,KAAKgD,aAAaW,cAAcnC,WACjFxB,KAAK8B,aAAayB,SAAS3C,QAAW4C,SAASxD,KAAKgD,aAAaW,cAAc/C,SAC/EZ,KAAK8B,aAAayB,SAAS9B,MAAS+B,SAASxD,KAAKgD,aAAaW,cAAclC,OAC7EzB,KAAK8B,aAAayB,SAAS7B,KAAQ8B,SAASxD,KAAKgD,aAAaW,cAAcjC,MAC5E1B,KAAK8B,aAAayB,SAAS5B,IAAO6B,SAASxD,KAAKgD,aAAaW,cAAchC,MAEnD,YAAjB3B,KAAKqD,UACZrD,KAAKmC,aAAaoB,SAASxB,cAAiByB,SAASxD,KAAKgD,aAAaS,WAAW1B,eAClF/B,KAAKmC,aAAaoB,SAASvB,WAAcwB,SAASxD,KAAKgD,aAAaS,WAAWzB,YAC/EhC,KAAKmC,aAAaoB,SAAStB,eAAkBuB,SAASxD,KAAKgD,aAAaS,WAAWxB,gBACnFjC,KAAKmC,aAAaoB,SAASrB,uBAA0BsB,SAASxD,KAAKgD,aAAaS,WAAWvB,wBAC3FlC,KAAKmC,aAAaoB,SAAS/C,WAAcgD,SAASxD,KAAKgD,aAAaxC,YACpER,KAAKmC,aAAaoB,SAAS7C,UAAa8C,SAASxD,KAAKgD,aAAatC,WACnEV,KAAKmC,aAAaoB,SAASzC,MAAS0C,SAASxD,KAAKgD,aAAalC,OAC/Dd,KAAK0D,eAAe1D,KAAKgD,aAAanC,SAAUb,KAAKgD,aAAazB,aAAavB,KAAKmC,cACpFnC,KAAKmC,aAAaoB,SAAShC,aAAgBiC,SAASxD,KAAKgD,aAAazB,cACtEvB,KAAKmC,aAAaoB,SAAS5C,QAAW6C,SAASxD,KAAKgD,aAAaW,cAAchD,SAC/EX,KAAKmC,aAAaoB,SAAS/B,UAAagC,SAASxD,KAAKgD,aAAaW,cAAcnC,WACjFxB,KAAKmC,aAAaoB,SAAS3C,QAAW4C,SAASxD,KAAKgD,aAAaW,cAAc/C,SAC/EZ,KAAKmC,aAAaoB,SAAS9B,MAAS+B,SAASxD,KAAKgD,aAAaW,cAAclC,OAC7EzB,KAAKmC,aAAaoB,SAAS7B,KAAQ8B,SAASxD,KAAKgD,aAAaW,cAAcjC,MAC5E1B,KAAKmC,aAAaoB,SAAS5B,IAAO6B,SAASxD,KAAKgD,aAAaW,cAAchC,MAEnD,UAAjB3B,KAAKqD,WACZrD,KAAKoC,cAAcmB,SAASxB,cAAiByB,SAASxD,KAAKgD,aAAaS,WAAW1B,eACnF/B,KAAKoC,cAAcmB,SAASvB,WAAcwB,SAASxD,KAAKgD,aAAaS,WAAWzB,YAChFhC,KAAKoC,cAAcmB,SAAStB,eAAkBuB,SAASxD,KAAKgD,aAAaS,WAAWxB,gBACpFjC,KAAKoC,cAAcmB,SAASrB,uBAA0BsB,SAASxD,KAAKgD,aAAaS,WAAWvB,wBAC5FlC,KAAKoC,cAAcmB,SAAS/C,WAAcgD,SAASxD,KAAKgD,aAAaxC,YACrER,KAAKoC,cAAcmB,SAAS7C,UAAa8C,SAASxD,KAAKgD,aAAatC,WACpEV,KAAKoC,cAAcmB,SAASzC,MAAS0C,SAASxD,KAAKgD,aAAalC,OAChEd,KAAK0D,eAAe1D,KAAKgD,aAAanC,SAAUb,KAAKgD,aAAazB,aAAavB,KAAKoC,eACpFpC,KAAKoC,cAAcmB,SAAShC,aAAgBiC,SAASxD,KAAKgD,aAAazB,cACvEvB,KAAKoC,cAAcmB,SAAS5C,QAAW6C,SAASxD,KAAKgD,aAAaW,cAAchD,SAChFX,KAAKoC,cAAcmB,SAAS/B,UAAagC,SAASxD,KAAKgD,aAAaW,cAAcnC,WAClFxB,KAAKoC,cAAcmB,SAAS3C,QAAW4C,SAASxD,KAAKgD,aAAaW,cAAc/C,SAChFZ,KAAKoC,cAAcmB,SAAS9B,MAAS+B,SAASxD,KAAKgD,aAAaW,cAAclC,OAC9EzB,KAAKoC,cAAcmB,SAAS7B,KAAQ8B,SAASxD,KAAKgD,aAAaW,cAAcjC,MAC7E1B,KAAKoC,cAAcmB,SAAS5B,IAAO6B,SAASxD,KAAKgD,aAAaW,cAAchC,MAE9E3B,KAAKmE,MAAQnE,KAAKgD,aAAamB,MAS/BnE,KAAKM,YAAY8D,WARC,CAChB5D,WAAcR,KAAKgD,aAAaxC,WAChCE,UAAaV,KAAKgD,aAAatC,UAC/BC,QAAWX,KAAKgD,aAAaW,aAAahD,QAC1CC,eAAmBZ,KAAKgD,aAAaW,cAAc/C,QAAY,IAAcZ,KAAKgD,aAAaW,cAAc/C,QAAU,QACvHC,SAAYb,KAAKgD,aAAanC,SAC9BC,MAASd,KAAKgD,aAAalC,OAG/B,CAIA4C,eAAeW,EAAcC,EAAoBC,GAC/CvE,KAAKwE,eAAiBF,EACtB,IAAIG,EAAS,GAEXA,EADCH,IAAgBD,EAAMK,SAASJ,GACvB,IAAIA,IAAcD,IAElBA,EAGXE,EAAKI,IAAI,aAAanB,SAASiB,GAC/BG,QAAQC,IAAIJ,EAAOF,EAAK,SAE1B,CAGAO,eAAeP,GACb,MAAMF,EAAeE,EAAKhB,SAAS1C,SAAYkE,MACzCT,EAAcC,EAAKhB,SAAShC,aAAgBwD,MAClD,OAAGT,GAAeD,EAAMK,SAAS,IAAMJ,GAC9BD,EAAMW,QAAQ,IAAMV,EAAa,IAChCA,GAAeD,EAAMK,SAAS,IAAM1E,KAAKwE,gBAC1CH,EAAMW,QAAQ,IAAMhF,KAAKwE,eAAgB,IAG3CH,CACT,CAEAY,eAAeC,EAAYX,GACzBK,QAAQC,IAAI,iBAAiBK,GAC7BX,EAAKH,WAAW,CAAE7C,aAAgB2D,EAAMC,UAC1C,CAIApC,iBAAiB3C,GACf,MAAMgF,EAAQpF,KAAKuC,UAAUC,IAAI6C,UAAWC,GAAcA,EAAKlF,OAASA,GACxE,IAAc,IAAVgF,EAAc,CAChB,MAAMG,EAAgBvF,KAAKuC,UAAUC,IAAIgD,OAAOJ,EAAO,GAAG,GAC1DpF,KAAKuC,UAAUC,IAAIiD,QAAQF,EAAa,CAE5C,CACAG,2BACE,IAAIC,EAAiB3F,KAAKsB,eAAeyD,MACrCd,EAAO,CACT2B,mBAAsB,CACpBhE,aAAgB+D,EAAe/D,aAC/BC,mBAAsB8D,EAAe9D,oBAEvClB,QAAW,CACTa,UAAamE,EAAenE,UAC5Bb,QAAWgF,EAAehF,QAC1Bc,MAASkE,EAAelE,MACxBC,KAAQiE,EAAejE,KACvBC,IAAOgE,EAAehE,KAExBkE,WAAc,CACZrF,WAAcmF,EAAenF,WAC7BE,UAAaiF,EAAejF,UAC5BG,SAAYb,KAAK8E,eAAe9E,KAAKsB,gBACrCC,aAAgBoE,EAAepE,aAC/BT,MAAS6E,EAAe7E,QAG5Bd,KAAKF,KAAKgG,YAAYjC,oCAA+CI,GAAMH,KAAMC,IAC3EA,IACF/D,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,MAChDjG,KAAKgD,YAAYxC,WAAgBR,KAAKsB,eAAeiC,SAAS/C,WAAcuE,MAC5E/E,KAAKgD,YAAYtC,UAAeV,KAAKsB,eAAeiC,SAAS7C,UAAaqE,MAC1E/E,KAAKgD,YAAYW,aAAkB,CACjChD,QAAWX,KAAKsB,eAAeiC,SAAS5C,QAAWoE,MACnDvD,UAAaxB,KAAKsB,eAAeiC,SAAS/B,UAAauD,MACvDnE,QAAWZ,KAAKsB,eAAeiC,SAAS3C,QAAWmE,MACnDtD,MAASzB,KAAKsB,eAAeiC,SAAS9B,MAASsD,MAC/CrD,KAAQ1B,KAAKsB,eAAeiC,SAAS7B,KAAQqD,MAC7CpD,IAAO3B,KAAKsB,eAAeiC,SAAS5B,IAAOoD,OAE7C/E,KAAKgD,YAAYS,WAAgB,CAC/B7B,aAAgB5B,KAAKsB,eAAeiC,SAAS3B,aAAgBmD,MAC7DlD,mBAAsB7B,KAAKsB,eAAeiC,SAAS1B,mBAAsBkD,OAE3E/E,KAAKgD,YAAYnC,SAAcb,KAAKsB,eAAeiC,SAAS1C,SAAYkE,MAExE5B,aAAa+C,QAAQ,cAAejD,KAAKkD,UAAUnG,KAAKgD,cACxDhD,KAAKH,aAAauG,kBAAiB,GAAI,EAG7C,CAEAC,qBAEE,GAAIrG,KAAK8B,aAAawE,QAAW,OACjC,IAAIC,EAAevG,KAAK8B,aAAaiD,MACjCd,EAAO,CACTuC,iBAAoB,CAClBzE,cAAiBwE,EAAaxE,cAC9BC,WAAcuE,EAAavE,WAC3BC,eAAkBsE,EAAatE,eAC/BC,uBAA0BqE,EAAarE,wBAEzCvB,QAAW,CACTa,UAAa+E,EAAa/E,UAC1Bb,QAAW4F,EAAa5F,QACxBC,QAAW2F,EAAa3F,QACxBa,MAAS8E,EAAa9E,MACtBC,KAAQ6E,EAAa7E,KACrBC,IAAO4E,EAAa5E,KAEtB8E,SAAY,CACVjG,WAAc+F,EAAa/F,WAC3BE,UAAa6F,EAAa7F,UAC1BG,SAAYb,KAAK8E,eAAe9E,KAAK8B,cACrCP,aAAgBgF,EAAahF,aAC7BT,MAASyF,EAAazF,OAExB4F,iBAAoB,IAGtB1G,KAAKF,KAAKgG,YAAYjC,kCAA6CI,GAAMH,KAAMC,IAE7E/D,KAAKgD,YAAYxC,WAAgBR,KAAK8B,aAAayB,SAAS/C,WAAcuE,MAK1E/E,KAAKgD,YAAYtC,UAAeV,KAAK8B,aAAayB,SAAS7C,UAAaqE,MACxE/E,KAAKgD,YAAYW,aAAkB,CACjChD,QAAWX,KAAK8B,aAAayB,SAAS5C,QAAWoE,MACjDvD,UAAaxB,KAAK8B,aAAayB,SAAS/B,UAAauD,MACrDnE,QAAWZ,KAAK8B,aAAayB,SAAS3C,QAAWmE,MACjDtD,MAASzB,KAAK8B,aAAayB,SAAS9B,MAASsD,MAC7CrD,KAAQ1B,KAAK8B,aAAayB,SAAS7B,KAAQqD,MAC3CpD,IAAO3B,KAAK8B,aAAayB,SAAS5B,IAAOoD,OAE3C/E,KAAKgD,YAAYS,WAAgB,CAC/BvB,uBAA0BlC,KAAK8B,aAAayB,SAASrB,uBAA0B6C,MAC/E9C,eAAkBjC,KAAK8B,aAAayB,SAAStB,eAAkB8C,MAC/D/C,WAAchC,KAAK8B,aAAayB,SAASvB,WAAc+C,MACvDhD,cAAiB/B,KAAK8B,aAAayB,SAASxB,cAAiBgD,OAE/D/E,KAAKgD,YAAYnC,SAAcb,KAAK8B,aAAayB,SAAS1C,SAAYkE,MACtE/E,KAAKgD,YAAY2D,gBAAqB5C,EAAIE,MAAM0C,gBAChD3G,KAAKgD,YAAY4D,yBAA8B7C,EAAIE,MAAM2C,yBAEzDzD,aAAa+C,QAAQ,cAAejD,KAAKkD,UAAUnG,KAAKgD,cACxDhD,KAAKH,aAAauG,kBAAiB,GACnCpG,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,KAAM,EAE1D,CACAY,qBACE,GAAI7G,KAAKmC,aAAamE,QAAW,OACjC,IAAIQ,EAAe9G,KAAKmC,aAAa4C,MACjCd,EAAO,CACT8C,OAAU,CACRhF,cAAiB+E,EAAa/E,cAC9BC,WAAc8E,EAAa9E,WAC3BC,eAAkB6E,EAAa7E,eAC/BC,uBAA0B4E,EAAa5E,wBAEzCvB,QAAW,CACTa,UAAasF,EAAatF,UAC1Bb,QAAWmG,EAAanG,QACxBC,QAAWkG,EAAalG,QACxBa,MAASqF,EAAarF,MACtBC,KAAQoF,EAAapF,KACrBC,IAAOmF,EAAanF,KAEtBqF,SAAY,CACVxG,WAAcsG,EAAatG,WAC3BE,UAAaoG,EAAapG,UAC1BG,SAAYb,KAAK8E,eAAe9E,KAAKmC,cACrCZ,aAAgBuF,EAAavF,aAC7BT,MAASgG,EAAahG,OAExBmG,KAAQjH,KAAKgD,YAAYiE,MAE3BjH,KAAKF,KAAKoH,WAAW,GAAGC,kBAA0BlD,GAAMH,KAAMC,IAC5D/D,KAAKgD,YAAYxC,WAAgBR,KAAKmC,aAAaoB,SAAS/C,WAAcuE,MAK1E/E,KAAKgD,YAAYtC,UAAeV,KAAKmC,aAAaoB,SAAS7C,UAAaqE,MACxE/E,KAAKgD,YAAYS,WAAgB,CAC/BvB,uBAA0BlC,KAAKmC,aAAaoB,SAASrB,uBAA0B6C,MAC/E9C,eAAkBjC,KAAKmC,aAAaoB,SAAStB,eAAkB8C,MAC/D/C,WAAchC,KAAKmC,aAAaoB,SAASvB,WAAc+C,MACvDhD,cAAiB/B,KAAKmC,aAAaoB,SAASxB,cAAiBgD,OAE/D/E,KAAKgD,YAAYW,aAAkB,CACjChD,QAAWX,KAAKmC,aAAaoB,SAAS5C,QAAWoE,MACjDvD,UAAaxB,KAAKmC,aAAaoB,SAAS/B,UAAauD,MACrDnE,QAAWZ,KAAKmC,aAAaoB,SAAS3C,QAAWmE,MACjDtD,MAASzB,KAAKmC,aAAaoB,SAAS9B,MAASsD,MAC7CrD,KAAQ1B,KAAKmC,aAAaoB,SAAS7B,KAAQqD,MAC3CpD,IAAO3B,KAAKmC,aAAaoB,SAAS5B,IAAOoD,OAE3C/E,KAAKgD,YAAYnC,SAAcb,KAAKmC,aAAaoB,SAAS1C,SAAYkE,MAEtE5B,aAAa+C,QAAQ,cAAejD,KAAKkD,UAAUnG,KAAKgD,cACxDhD,KAAKH,aAAauG,kBAAiB,GACnCpG,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,KAAM,EAE1D,CAEAmB,sBACE,GAAIpH,KAAKoC,cAAckE,QAAW,OAClC,IAAIe,EAAgBrH,KAAKoC,cAAc2C,MACnCd,EAAO,CACT8C,OAAU,CACRhF,cAAiBsF,EAActF,cAC/BC,WAAcqF,EAAcrF,WAC5BC,eAAkBoF,EAAcpF,eAChCC,uBAA0BmF,EAAcnF,wBAE1CvB,QAAW,CACTa,UAAa6F,EAAc7F,UAC3Bb,QAAW0G,EAAc1G,QACzBC,QAAWyG,EAAczG,QACzBa,MAAS4F,EAAc5F,MACvBC,KAAQ2F,EAAc3F,KACtBC,IAAO0F,EAAc1F,KAEvB2F,OAAU,CACR9G,WAAc6G,EAAc7G,WAC5BE,UAAa2G,EAAc3G,UAC3BG,SAAYb,KAAK8E,eAAe9E,KAAKoC,eACrCb,aAAgB8F,EAAc9F,aAC9BT,MAASuG,EAAcvG,OAEzBmG,KAAQjH,KAAKgD,YAAYiE,KACzBM,OAAUvH,KAAKgD,YAAYuE,QAG7BvH,KAAKF,KAAKoH,WAAWC,iBAAyBlD,GAAMH,KAAMC,IACpDA,IACF/D,KAAKgD,YAAYxC,WAAgBR,KAAKoC,cAAcmB,SAAS/C,WAAcuE,MAC3E/E,KAAKgD,YAAYtC,UAAeV,KAAKoC,cAAcmB,SAAS7C,UAAaqE,MACzE/E,KAAKgD,YAAYS,WAAgB,CAC/BvB,uBAA0BlC,KAAKoC,cAAcmB,SAASrB,uBAA0B6C,MAChF9C,eAAkBjC,KAAKoC,cAAcmB,SAAStB,eAAkB8C,MAChE/C,WAAchC,KAAKoC,cAAcmB,SAASvB,WAAc+C,MACxDhD,cAAiB/B,KAAKoC,cAAcmB,SAASxB,cAAiBgD,OAEhE/E,KAAKgD,YAAYW,aAAkB,CACjChD,QAAWX,KAAKoC,cAAcmB,SAAS5C,QAAWoE,MAClDvD,UAAaxB,KAAKoC,cAAcmB,SAAS/B,UAAauD,MACtDnE,QAAWZ,KAAKoC,cAAcmB,SAAS3C,QAAWmE,MAClDtD,MAASzB,KAAKoC,cAAcmB,SAAS9B,MAASsD,MAC9CrD,KAAQ1B,KAAKoC,cAAcmB,SAAS7B,KAAQqD,MAC5CpD,IAAO3B,KAAKoC,cAAcmB,SAAS5B,IAAOoD,OAE5C/E,KAAKgD,YAAYnC,SAAcb,KAAKoC,cAAcmB,SAAS1C,SAAYkE,MAEvE5B,aAAa+C,QAAQ,cAAejD,KAAKkD,UAAUnG,KAAKgD,cACxDhD,KAAKH,aAAauG,kBAAiB,GACnCpG,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,MAAM,EAG5D,CACAuB,oBAgBExH,KAAKyH,SAASC,OAAO,aAAc1H,KAAKM,YAAYiD,SAAS/C,WAAcuE,OAC3E/E,KAAKyH,SAASC,OAAO,YAAa1H,KAAKM,YAAYiD,SAAS7C,UAAaqE,OACzE/E,KAAKyH,SAASC,OAAO,UAAW1H,KAAKM,YAAYiD,SAAS3C,QAAWmE,OACrE/E,KAAKyH,SAASC,OAAO,UAAW1H,KAAKM,YAAYiD,SAAS5C,QAAWoE,OACrE/E,KAAKyH,SAASC,OAAO,WAAY1H,KAAKM,YAAYiD,SAAS1C,SAAYkE,OAEvE/E,KAAKN,aAAaiI,KAAK,wBAAyB3H,KAAKyH,UAAUG,UAAW7D,IAExE/D,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,MAChDjG,KAAKgD,YAAYxC,WAAgBR,KAAKM,YAAYiD,SAAS/C,WAAcuE,MACzE/E,KAAKgD,YAAYtC,UAAeV,KAAKM,YAAYiD,SAAS7C,UAAaqE,MACvE/E,KAAKgD,YAAYW,aAAkB,CACjChD,QAAWX,KAAKM,YAAYiD,SAAS5C,QAAWoE,MAChDnE,QAAWZ,KAAKM,YAAYiD,SAAS3C,QAAWmE,OAElD/E,KAAKgD,YAAYnC,SAAcb,KAAKM,YAAYiD,SAAS1C,SAAYkE,MACrE/E,KAAKgD,YAAYmB,MAAWJ,EAAII,MAEhChB,aAAa+C,QAAQ,cAAejD,KAAKkD,UAAUnG,KAAKgD,cAExDhD,KAAKH,aAAauG,kBAAiB,EAAI,EAGtCyB,IACC7H,KAAKL,OAAOmI,MAAMD,EAAIC,MAAMf,OAAQ,GAAI,CAAEd,QAAS,KAAM,EAI/D,CAEA8B,aAAa7C,GACX,GAAIA,EAAM8C,OAAOC,OAAS/C,EAAM8C,OAAOC,MAAM,GAAI,CAC/C,MAAMC,EAAOhD,EAAM8C,OAAOC,MAAM,GAC1BE,EAAS,IAAIC,WACnBD,EAAOE,OAASC,GAAKtI,KAAKmE,MAAQgE,EAAOI,OACzCJ,EAAOK,cAAcN,GACrBlI,KAAKyH,SAASC,OAAO,QAASQ,GAC9BlI,KAAKyH,SAASC,OAAO,OAAQ1H,KAAKgD,aAAaiE,MAC/CjH,KAAKoG,kBAAgB,CAEzB,CACAqC,uBAAuB7F,GACrB5C,KAAK0I,uBAAyB9F,EAE5B5C,KAAKmC,aAAaoB,SAASoF,UAAaC,UADtChG,EACgD,KAEA,CAAEiG,WAAa,GAErE,CACAzC,mBACEpG,KAAKF,KAAKgG,YAAY,GAAGqB,uBAA+BnH,KAAKyH,UAAU3D,KAAMC,IACvEA,IACF/D,KAAKgD,YAAYmB,MAAWJ,EAAI+E,IAChC3F,aAAa+C,QAAQ,cAAejD,KAAKkD,UAAUnG,KAAKgD,cACxDhD,KAAKH,aAAauG,kBAAiB,GAAI,EAG7C,CAEA2C,cAAcnG,GACZ5C,KAAKgJ,cAAgBpG,EAEnB5C,KAAKM,YAAYiD,SAAS1C,SAAY+H,UADpChG,EAC8C,KAEA,CAAEiG,WAAa,GAEnE,CAEAI,gBAAgB/D,GACdlF,KAAKM,YAAY8D,WAAW,CAAEvD,SAAYqE,GAC5C,CAEAgE,wBAAwBtG,GACtB5C,KAAKmJ,wBAA0BvG,EAE7B5C,KAAKsB,eAAeiC,SAAS1C,SAAY+H,UADvChG,EACiD,KAEA,CAAEiG,WAAa,GAEtE,CACAO,wBAEEpJ,KAAKN,aAAaiI,KAAK,uCADZ3H,KAAKe,gBAAgBgE,OACqC6C,UAAW7D,IAC9E/D,KAAKqJ,YAAa,EAClBrJ,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,KAAM,EAErD4B,IACC7H,KAAKqJ,YAAa,EAClBrJ,KAAKL,OAAOmI,MAAMD,EAAIC,MAAMf,OAAQ,GAAI,CAAEd,QAAS,KAAM,EAG/D,CAEAqD,sBACE,IAAIrF,EAAO,CACTnD,MAASd,KAAKe,gBAAgBgE,MAAMjE,MACpCG,IAAOjB,KAAKgB,cAAc+D,MAAM9D,IAChCgG,KAAQjH,KAAKgD,YAAYiE,MAE3BjH,KAAKN,aAAaiI,KAAK,+BAAgC1D,GAAM2D,UAAW7D,IACtE/D,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,MAChDsD,SAASC,eAAe,yBAAyBC,QACjDzJ,KAAKD,eAAe2J,WAAW,QAASzF,EAAKnD,OACxB,uBAAjBd,KAAKqD,SACPrD,KAAKsB,eAAeiC,SAASzC,MAAS0C,SAASS,EAAKnD,OAC5B,qBAAjBd,KAAKqD,UACZrD,KAAK8B,aAAayB,SAASzC,MAAS0C,SAASS,EAAKnD,MAAK,EAExD+G,IACC7H,KAAKL,OAAOmI,MAAMD,EAAIC,MAAMf,OAAQ,GAAI,CAAEd,QAAS,KAAM,EAE/D,CAEA0D,2BACE,GAAI3J,KAAKkB,mBAAmB0I,MAAO,CACjC,IAAIC,EAAY7J,KAAKkB,mBAAmB6D,MACxC8E,EAAU1I,oBAAsB2I,KAAW9J,KAAKkB,mBAAmBqC,SAASpC,iBAAoB4D,OAChG8E,EAAUzI,gBAAkB0I,KAAW9J,KAAKkB,mBAAmBqC,SAASnC,aAAgB2D,OACxF/E,KAAKN,aAAaiI,KAAK,WAAWR,sBAA8B0C,GAAWjC,UAAW7D,IACpF/D,KAAKL,OAAOoG,QAAQhC,EAAIiC,QAAS,GAAI,CAAEC,QAAS,KAAM,EAErD4B,IACC7H,KAAKL,OAAOmI,MAAMD,EAAIC,MAAMf,OAAQ,GAAI,CAAEd,QAAS,KAAM,EAC1D,MAEHjG,KAAK+J,yBAAyB/J,KAAKkB,mBAGvC,CACA6I,yBAAyBC,GACvBC,OAAOC,OAAOF,EAAUzG,UAAUV,QAAQsH,IACxCA,EAAQC,gBACJD,aAAmBE,MACrBrK,KAAK+J,yBAAyBI,EAAO,EAG3C,CACAG,2BAA2BpF,GACzBlF,KAAKmC,aAAaiC,WAAW,CAAEuE,UAAazD,GAC9C,CACAqF,0BAA0BrF,GACxBlF,KAAKsB,eAAe8C,WAAW,CAAEvD,SAAYqE,GAC/C,CAIAsF,SAKExK,KAAKF,KAAKgG,YAAY,GAAGjC,qBAJf,CACR3B,uBAA2C,qBAAjBlC,KAAKqD,SAAgCrD,KAAK8B,aAAaiD,MAAM7C,uBAAyC,YAAjBlC,KAAKqD,SAAuBrD,KAAKmC,aAAa4C,MAAM7C,uBAAuBlC,KAAKoC,cAAc2C,MAAM7C,uBACnN+E,KAAQjH,KAAKgD,YAAYiE,OAEmCnD,KAAMC,IAC9DA,GAAOA,EAAIgC,SACb/F,KAAKL,OAAOoG,QAAQhC,EAAIiC,SACxBhG,KAAKgD,YAAY2D,gBAAqB5C,EAAI4C,gBAC1C3G,KAAKgD,YAAY4D,yBAA8B7C,EAAI6C,yBACnD5G,KAAKgD,YAAYS,WAAcvB,uBAAyBlC,KAAK8B,aAAayB,SAASrB,uBAA0B6C,MAC7G5B,aAAa+C,QAAQ,cAAejD,KAAKkD,UAAUnG,KAAKgD,eAGxDhD,KAAKL,OAAOmI,MAAM/D,EAAIiC,QAEK,EAEjC,CAACyE,kDAvpBUlL,GAAkBmL,sHAAlBnL,EAAkBoL,g0JDjB/BxL,qBAA+B,SAA/BA,CAA+B,SAA/BA,CAA+B,SAE4BA,gBAAIA,UACvDA,gBAA4B,SAAsDA,sBAAUA,YAEhGA,iBAA2B,OAA3BA,CAA2B,WAEfA,sCAAa,SAAS,GACtBA,cAAGA,uBAAUA,UAEjBA,iBAAIA,sCAAa,MAAM,GACnBA,cAAGA,4BAAeA,YAI1BA,0BAshBAA,0BAwDJA,UAIJA,4CA+BEA,oDAznBsCA,iEAGHA,6DAKvBA,wCAshBAA,2qNCphBDI,CAAkB,8GCPxB,IAAMqL,GAAyB,MAAhC,MAAOA,EAIXpL,YAAqBqL,EAA2BC,GAA3B9K,aAA2BA,kBAHhDA,aAAU+K,YACF/K,uBAAoB,IAAIgL,IAAwB,GACxDhL,wBAAqBA,KAAKiL,kBAAkBC,cAC+B,CAE3EC,sBAAsBlH,GACpBjE,KAAKiL,kBAAkBG,KAAKnH,EAC9B,CAEAoH,YAEE,OAAOrL,KAAK8K,WAAWlH,WADX0H,0BAEd,CAMAC,iBAEE,OAAOvL,KAAK8K,WAAWlH,WADX0H,4BAEd,CAEAE,0BAEE,OAAOxL,KAAK8K,WAAWlH,WADX0H,gCAEd,CAACb,kDA3BUG,GAAyBF,+DAAzBE,EAAyBa,QAAzBb,EAAyB,qBAFxB,gBAEDA,CAAyB,6BCA/B,IAAMc,GAAuB,MAA9B,MAAOA,EAIXlM,YAAoBqL,EAA2BC,GAA3B9K,aAA2BA,kBAH/CA,aAAU+K,YACF/K,uBAAoB,IAAIgL,IAAwB,GACxDhL,wBAAqBA,KAAKiL,kBAAkBC,cAC6B,CAazES,sBAAsBC,EAASC,GAC7B,MAAM/C,EAAMwC,mCAAmC,QAASM,GAAI5G,QAAQ,UAAW6G,GAC/E,OAAO7L,KAAK8K,WAAWlH,WAAWkF,EACpC,CAUAgD,wBAGE,OAAO9L,KAAK8K,WAAWlH,WADX,4CAEd,CAAC6G,kDAlCUiB,GAAuBhB,+DAAvBgB,EAAuBD,QAAvBC,EAAuB,qBAFtB,gBAEDA,CAAuB,yNCuJxBvM,iBAAoEA,8BAAkBA,kDACtFA,iBAAqE,YAEjEA,kBAEAA,kBAAgCA,qEAASA,sBAAgB,GACvDA,eAAK,WACcA,SAAcA,QAC/BA,aAAGA,SAAiBA,UAEtBA,aAAGA,UAA4CA,aAAI,uCAPhDA,wIAIgBA,wBACdA,iCAEFA,gSCvJd,IAAM4M,EAA0B,MAAjC,MAAOA,EAqFXvM,YAAmBwM,EAAiDC,EAAoCnM,EAC9FoM,EAAuBrM,EAA4CsM,GAD1DnM,uBAAiDA,oBAAoCA,YAC9FA,cAAuBA,oBAA4CA,qBA9E7EA,iBAAsB,EACtBA,kBAAuB,GACvBA,oBAA6B,GAG7BA,eAAiBoM,KAEjBpM,4BAA8B,EAE9BA,wBAA0B,EAO1BA,UAAO,EACPA,cAAW,GACXA,eAAoB,EACpBA,UAAe,EACfA,mCAAwC,EACxCA,iBAA0B,GAC1BA,uBAA4B,EAG5BA,eAAY,OACZA,aAAU,KACVA,gBAAa,QACbA,iBAAc,SACdA,eAAY,OAMZA,kBAAwB,GACxBA,YAAc,CACZ,UAAW,CACTqM,MAAQC,SAAS,GAAI,QAAQC,QAAQ,OACrCF,MAAQG,MAAM,QAEhB,UAAW,CACTH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,QAEhB,SAAU,CACRH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,SAGlBxM,gBAAa,CACXyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,sBACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,MAEXhN,YAAS,CACPyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,aACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,KACTC,cAAe,cAEjBjN,cAAW,CACT,CAAEkN,KAAMb,MAASc,KAAM,8BACvB,CAAED,KAAMb,MAAQe,IAAI,EAAG,QAASD,KAAM,eAwDxCnN,mBAAiBqN,GACRrN,KAAKsN,aAAaC,KAAMC,GAAMA,EAAEC,OAAOJ,EAAG,QAGnDrN,kBAAgBkN,IACU,IAAjBA,EAAKQ,SAAkC,IAAjBR,EAAKQ,UAAgB,eAGpD1N,mBAAiBqN,IACf,MAAMM,EAAU3N,KAAK4N,SAASC,KAAMC,GAAOA,EAAGZ,KAAKO,OAAOJ,EAAG,QAC7D,QAAOM,GAAUA,EAAQR,IAAO,EAElCnN,eAAiB,CACf0M,UAAW,GACXC,QAAS,IAEX3M,mBAAqB,CACnB0M,UAAW,GACXC,QAAS,IAEX3M,qBAAuB,CACrB0M,UAAW,GACXC,QAAS,IAEX3M,oBAAsB,CACpB0M,UAAW,GACXC,QAAS,GA3EX,CAEMrK,WAAQ,qCACZ,MAIMyL,EAAc,IAAIC,KAClBC,EAAqBF,EAAYG,WAAa,EACpDC,EAAKC,iBANc,CACjB,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIrBL,EAAYG,YAC/CC,EAAKE,KAAON,EAAYO,cACxBH,EAAKI,UAAYJ,EAAKE,KAAO,KAC7BF,EAAKK,kBAAoBP,EACzBE,EAAKM,kBAAoBR,EACzBE,EAAKO,cAAgBT,EACrBE,EAAKQ,aAAeR,EAAKE,KACzBF,EAAKS,iBAAmBT,EAAKE,KAC7BF,EAAKU,iBAAmBV,EAAKE,KAC7BF,EAAKtO,aAAaiP,cAAclH,UAAW7D,IACrCA,GAAoB,wCAAbA,EAAIgL,OACbZ,EAAKa,gBAAkB,EAMvBb,EAAKc,iBAAiBxJ,QALX,CACTO,QAASjC,EAAIiC,QACb+I,KAAMhL,EAAIgL,KACVnD,GAAI7H,EAAImL,MAEwB,GAGtCf,EAAKgB,wBACChB,EAAKiB,oBAEXjB,EAAKkB,YACLlB,EAAKmB,oBAAoB,SACzBnB,EAAKoB,cAAc,QAAQ,EAhCf,EAkCd,CACAC,kBACExP,KAAKyP,mBACP,CACAA,oBACEzP,KAAK0P,YAAc,GACnB1P,KAAKiM,aAAa0D,kBAAkB/H,UAAWgI,IACzCA,GAAYA,EAAS3L,OACvBjE,KAAK0P,YAAcE,EAAS3L,KAAK4L,kBAGvC,CA+BAC,kBAAkBC,EAAahB,GAG7B/O,KAAKgQ,UAAUtD,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC1GnQ,KAAKgQ,UAAUrD,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GAC9FJ,EAAOK,QACG,kBAARrB,GACF/O,KAAKqQ,mBAAqC,WAAhBN,EAAOK,MAAqB,EAAqB,WAAhBL,EAAOK,MAAqB,EAAqB,UAAhBL,EAAOK,MAAoB,GAAI,EAC3HpQ,KAAKsQ,cAAc5D,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC9GnQ,KAAKsQ,cAAc3D,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACtGnQ,KAAKsP,oBAAoB,QAAStP,KAAKgQ,YAExB,0BAARjB,GACP/O,KAAKuQ,uBAAyC,WAAhBR,EAAOK,MAAqB,EAAqB,WAAhBL,EAAOK,MAAqB,EAAqB,UAAhBL,EAAOK,MAAoB,GAAI,EAC/HpQ,KAAKwQ,gBAAgB9D,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAChHnQ,KAAKwQ,gBAAgB7D,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACxGnQ,KAAKuP,cAAc,QAASvP,KAAKgQ,YAElB,6BAARjB,IACP/O,KAAKyQ,sCAAuC,EAC5CzQ,KAAK0Q,eAAehE,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC/GnQ,KAAK0Q,eAAe/D,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACvGnQ,KAAK2Q,eAAe3Q,KAAKgQ,YAG/B,CAEAY,mBAAmBb,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAEAc,mBAAmBd,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAGAZ,kBACEnP,KAAKF,KAAK8D,WAAW,GAAGuD,sBAA6BnH,KAAK8Q,kBAAkB9Q,KAAK+Q,YAAYjN,KAAMC,IAC7FA,IACF/D,KAAKiP,iBAAmBlL,EAAIE,KAAKC,QACjClE,KAAKgP,gBAAkBjL,EAAIE,KAAK+M,wBAItC,CACAC,QAAQC,GACN,OAAO,IAAIC,MAAMD,EACnB,CACAE,WAAWnN,GACQ,6BAAbA,EAAK8K,KACP/O,KAAKkM,OAAOmF,cAAc,+BACN,uCAAbpN,EAAK8K,KAEZ/O,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,OAAO5L,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,GAAG2F,MAAM,EAAG,OAClJtN,EAAKuN,QAEZxR,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAOtC,QAAQlP,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAO5F,MAEhK,CACA6F,mBACEzR,KAAKF,KAAKgG,YAAYqB,qBAA6B,IAAIrD,KAAMC,IACvDA,IACF/D,KAAKgP,gBAAkB,IAG7B,CACA0C,WAAWC,GACT3R,KAAK4R,YAAcD,EACnB3R,KAAKqP,WACP,CACAwC,WACM7R,KAAK4R,YAAc5R,KAAK8R,kBAC1B9R,KAAK4R,cACL5R,KAAKqP,YAET,CAEA0C,eACM/R,KAAK4R,YAAc,IACrB5R,KAAK4R,cACL5R,KAAKqP,YAET,CAEAyC,gBACE,OAAOE,KAAKC,KAAKjS,KAAKkS,eAAeC,OAASnS,KAAKoS,aACrD,CAIMhD,oBAAiB,qCACrBiD,EAAKrG,gBAAgBF,wBAAwBlE,UAAW7D,IACtD,IAAIuO,EAAavO,EAAIE,KAAKsO,4BAA4B,IAAID,WACtDE,EAAkBzO,EAAIE,KAAKsO,4BAA4B,IAAIC,gBAC3DC,EAAkB1O,EAAIE,KAAKsO,4BAA4B,IAAIE,gBAE/DJ,EAAKK,0BAA0BC,OAAO,CAACL,EAAYE,EAAiBC,GAAkB,CAAC,aAAc,kBAAmB,oBAExHJ,EAAKO,kBAAoB7O,GAAKE,KAC9BoO,EAAKQ,iBACLR,EAAK1B,gBAAc,EACnB,EAXmB,EAYvB,CAIAtB,YAGE,MAAMzD,EADO3I,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IAC/C6D,KAChBjH,KAAKgM,gBAAgBL,sBAAsBC,EAAI5L,KAAK4R,aAAahK,UAAWgI,IAC1E,MAAMkD,EAAgBlD,EAAS3L,KAAKC,QACpClE,KAAKkS,eAAiBY,EAAcC,IAAK9O,GAA+C,GAAGA,GAAMzD,cAAcyD,GAAMvD,aACrH,MAAMsS,EAAoBF,EAAcC,IAAK9O,GAAiDA,EAAKgP,OAAOT,iBAAmB,GACvHU,EAAkBJ,EAAcC,IAAK9O,GAAiDA,EAAKgP,OAAOR,iBAAmB,GACrHU,EAAaL,EAAcC,IAAK9O,GAA4CA,EAAKgP,OAAOX,YAAc,GACxG1C,GAAYA,EAAS3L,MAmBvBjE,KAAKoT,mBAAmBT,OAlBX,CACX,CACEvS,KAAM,mBACNiT,MAAO,UACPpP,KAAM+O,GAER,CACE5S,KAAM,mBACNiT,MAAO,UACPpP,KAAMiP,GAER,CACE9S,KAAM,cACNiT,MAAO,UACPpP,KAAMkP,IAI4BnT,KAAKkS,eAAc,EAG/D,CAIA5C,oBAAoBP,EAAWiB,GAC7B,IAAIlH,EAEFA,EADU,SAARiG,EACI,gCAAgC/O,KAAK0O,sBAAsB1O,KAAK2O,gBAEvC,GAA3B3O,KAAKqQ,mBACD,6BAA6BL,EAAUtD,sBAAsBsD,EAAUrD,UAGvE,yBAAyB3M,KAAKqQ,qBAExCrQ,KAAKF,KAAK6E,IAAI,gDAAgDmE,KAAOlB,UAAWgI,IAC9E,MAAM0D,EAAe1D,EAAS3L,KAAKsP,qBAC7BC,EAASF,EAAaP,IAAK9O,GAA0BA,EAAKyJ,OAC1DsF,EAAoBM,EAAaP,IAAK9O,GAA6CA,EAAKgP,OAAOQ,aAAe,GAC9GP,EAAkBI,EAAaP,IAAK9O,GAAiDA,EAAKgP,OAAOR,iBAAmB,GACpHU,EAAaG,EAAaP,IAAK9O,GAA4CA,EAAKgP,OAAOX,YAAc,GACvG1C,GAAYA,EAAS3L,MAmBvBjE,KAAK0T,cAAcf,OAjBF,CACf,CACEvS,KAAM,mBACNiT,MAAO,UACPpP,KAAM+O,GAER,CACE5S,KAAM,mBACNiT,MAAO,UACPpP,KAAMiP,GAER,CACE9S,KAAM,cACNiT,MAAO,UACPpP,KAAMkP,IAG2BK,EAAM,EAIjD,CAIAX,iBACE,MAAMc,EAAc1Q,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,QACtE,IAAIoP,EAAkB,EAClBC,EAAkB,EAClBH,EAAa,EACdqB,IACDnB,EAAkBmB,EAAYC,uBAAuBpB,gBACrDC,EAAkBkB,EAAYC,uBAAuBnB,gBACrDH,EAAaqB,EAAYC,uBAAuBtB,YAGlD,MAEMrO,EAAO,CACX,CACE7D,KAAM,UACN6D,KAAK,CAAEuO,GAAmB,EAAGC,GAAmB,EAAGH,GAAc,KAQlDtS,KAAK4S,mBAAmBiB,yBAAyBC,OAAO,CAACC,EAAoBzO,KAC9FyO,EAAYC,KAAK1O,EAAKkN,gBAAiBlN,EAAKmN,gBAAiBnN,EAAKgN,YAC3DyB,GACN,IACH/T,KAAKiU,mBAAmBtB,OAAQ1O,EATjB,CACb,mBACA,mBACA,eAOJ,CAIM0M,eAAeX,GAAe,qCAOlCkE,EAAKpU,KAAK8D,WALNoM,EACI,2EAA2EA,EAAUtD,qBAAqBsD,EAAUrD,UAEpH,sDAAwDuH,EAAK1F,kBAAoB,SAAW0F,EAAKrF,kBAE/E/K,KAAMC,IAE9B,IAAIoQ,EADOlK,OAAOmK,KAAKrQ,EAAIE,MACN8O,IAAKsB,GAAWA,EAAErP,QAAQ,KAAM,MACrDmP,EAAYA,EAAUpB,IAAKsB,GACdA,EAAEC,MAAM,KAAKvB,IAAKrQ,GACTA,EAAE,GAAG6R,cACL7R,EAAE6O,MAAM,IAEzBiD,KAAK,MAEV,QAAStD,EAAI,EAAGA,EAAIiD,EAAUhC,OAAQjB,IAChB,cAAhBiD,EAAUjD,KACZiD,EAAUjD,GAAK,eAEnB,MAAMuD,EAAmBxK,OAAOC,OAAOnG,EAAIE,MAC3CiQ,EAAKQ,eAAe/B,OAAO,CAAC,CAAEvS,KAAK,GAAI6D,KAAKwQ,IAAeN,EAAS,EACpE,EAvBgC,EA0BpC,CAcA5E,cAAcR,EAAciB,GAY1BhQ,KAAKF,KAAK6E,IAAI,kDARF,SAARoK,EACI,gCAAgC/O,KAAKyO,0BAA0BzO,KAAK4O,oBAEvC,GAA/B5O,KAAKuQ,uBACD,6BAA6BP,EAAUtD,sBAAsBsD,EAAUrD,UAEvE,SAAS3M,KAAKuQ,2CAE8C3I,UAAWgI,IAE/E,GAAIA,GAAYA,EAAS3L,KAAM,CAC7B,MAAMuP,EAAS5D,EAAS3L,MAAM0Q,cAAc5B,IAAK3C,GAE3CA,EAAM1C,OACNzJ,EAAO2L,EAAS3L,KAAK0Q,cAAc5B,IAAK9O,GAA0BA,EAAK2Q,OAC7E5U,KAAK6U,uBAAuBlC,OAAQ,CAAC,CAACvS,KAAK,GAAI6D,SAASuP,EAAM,GAGpE,CACAsB,WAAWlJ,GACThH,QAAQC,IAAI,gBAER7E,KAAKkM,OAAO6I,SAAS,CAAC,2BAA4B,CAAEC,YAAa,CAAE/N,KAAQ2E,IACjF,CAACnB,kDApcUsB,GAA0BrB,yGAA1BqB,EAA0BpB,6EAmF1BsK,KAAoC,4nMDvGjD9V,qBAA0B,SAA1BA,CAA0B,SAA1BA,CAA0B,SAE6BA,gBAAIA,UACvDA,gBAA4B,SAAgCA,qBAASA,YA4BvEA,iBAAiC,UAAjCA,CAAiC,WAEXA,qCAAwBA,QAE1CA,kBAAuB,WAAvBA,CAAuB,YAAvBA,CAAuB,QAGbA,8BAAgBA,QACpBA,eAAIA,UAA4CA,YAGpDA,kBAAwB,YAAxBA,CAAwB,QAEjBA,kCAAqBA,QACxBA,eAAIA,UAAsDA,YAG9DA,kBAAwB,SAAxBA,CAAwB,QAEjBA,qCAAwBA,QAC3BA,eAAIA,UAA4CA,cAKtDA,mBAAiC,YAAjCA,CAAiC,QAI1BA,kDAAqCA,QACxCA,eACAA,mBACEA,iCACFA,UAGFA,mBAA+B,YAA/BA,CAA+B,UAA/BA,CAA+B,cAEiCA,mBAAMA,QAAQA,gCAAkBA,UAO9FA,eAAI,2BAENA,UAIFA,mBAAyC,YAAzCA,CAAyC,QAElCA,wCAA2BA,QAC9BA,eACAA,cAAGA,iCAAoBA,QACvBA,2BACEA,oBAEmB,aAFnBA,CAEmB,aAFnBA,CAEmB,aAFnBA,CAEmB,aAFnBA,CAEmB,aAFnBA,CAEmB,aAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,eAFnBA,CAEmB,gBAmCrBA,UAGFA,2BAA+B,YAA/BA,CAA+B,YAA/BA,CAA+B,UAA/BA,CAA+B,cAGmCA,iBAAIA,QAAQA,gCAC/DA,oBAA4BA,UAAiLA,YAExNA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,2EAAyC,kCAIrD+V,sBAAyB,iBAAiB,GAL1D/V,cASNA,eAAI,2BAENA,YAIJA,mBAAyB,WACLA,2BAAcA,QAChCA,kBAAwB,UAAxBA,CAAwB,YAEyBA,8BAAgBA,QAC7DA,mBAA8CA,WAA4BA,QAC1EA,mBACEA,0BACAA,2BAaFA,YAKJA,oBAAmB,aAAnBA,CAAmB,aAAnBA,CAAmB,YAGkBA,8CACtBA,qBAA4BA,WAAqMA,YAE5OA,oBAAiE,aAAjEA,CAAiE,cAG3DA,kBACFA,QACAA,sBAC4BA,iFAA+C,kCAI3D+V,sBAAyB,yBAAyB,GALlE/V,cASNA,kCACFA,QAGAA,oBAAmB,aAAnBA,CAAmB,aAAnBA,CAAmB,YAGkBA,iDACtBA,qBAA4BA,WAAmIA,YAE1KA,oBAAiE,aAAjEA,CAAiE,cAG3DA,kBACFA,QACAA,sBAC4BA,oFAAkD,kCAI9D+V,sBAAyB,4BAA4B,GALrE/V,cASNA,gBAAI,4BAENA,QAEAA,oBAAmB,SACdA,0CAA4BA,QAC/BA,kCACFA,qBAlMSA,0CAA6C,4BAE5CA,yFAIDA,yCAA6C,4BAE5CA,mGAMAA,yFAYoDA,qCAA4C,gBAclEA,6BAAgB,cAuDXA,+OAQPA,wDAAyC,oBAAzCA,CAAyC,oBAAzCA,CAAyC,kBAAzCA,CAAyC,kBAAzCA,CAAyC,0BAAzCA,CAAyC,gBAAzCA,CAAyC,qBAAzCA,CAAyC,yBAAzCA,CAAyC,2BAAzCA,CAAyC,kCAAzCA,CAAyC,8BAAzCA,CAAyC,iCAS5CA,6BAAgB,cAUDA,0CAEvCA,oFAC2CA,6CAsBXA,sQAQPA,8DAA+C,oBAA/CA,CAA+C,oBAA/CA,CAA+C,kBAA/CA,CAA+C,kBAA/CA,CAA+C,0BAA/CA,CAA+C,gBAA/CA,CAA+C,qBAA/CA,CAA+C,yBAA/CA,CAA+C,2BAA/CA,CAA+C,kCAA/CA,CAA+C,8BAA/CA,CAA+C,iCAQzCA,6BAAc,uBAQbA,oMAQPA,iEAAkD,oBAAlDA,CAAkD,oBAAlDA,CAAkD,kBAAlDA,CAAkD,0BAAlDA,CAAkD,gBAAlDA,CAAkD,qBAAlDA,CAAkD,yBAAlDA,CAAkD,2BAAlDA,CAAkD,kCAAlDA,CAAkD,8BAAlDA,CAAkD,iCASpDA,6BAKIA,qCAA4C,iBAA5CA,CAA4C,+lYClN3E4M,CAA0B,4JC8C7B5M,iBAAoEA,8BAAkBA,kDACtFA,iBAAqE,YAEjEA,kBAEAA,kBAAgCA,qEAASA,sBAAgB,GACvDA,eAAK,WACcA,SAAcA,QAC/BA,aAAGA,SAAiBA,UAEtBA,aAAGA,UAA4CA,aAAI,uCAPhDA,wIAIgBA,wBACdA,iCAEFA,+NCzDZ,IAAMgW,GAA0B,MAAjC,MAAOA,EAiJX3V,YAAoBM,EAA2BF,EAA6BC,EAClEuV,EAA0DlJ,EAAwBC,GADxEnM,YAA2BA,qBAA6BA,oBAClEA,+BAA0DA,cAAwBA,qBAhJ5FA,WAAa,aACbA,WAAa,aAUbA,wBAAiC,GAEjCA,oBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFA,kBAAoB,MASpBA,wBAA0B,EAI1BA,4BAA8B,EAG9BA,eAAiBoM,KACjBpM,eAAoB,EACpBA,UAAe,EAGfA,UAAO,EACPA,cAAW,GAIXA,eAAY,OACZA,aAAU,KACVA,gBAAa,QACbA,iBAAc,SACdA,eAAY,OACZA,iCAAmC,EAOnCA,kBAAwB,GACxBA,YAAc,CACZ,UAAW,CACTqM,MAAQC,SAAS,GAAI,QAAQC,QAAQ,OACrCF,MAAQG,MAAM,QAEhB,UAAW,CACTH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,QAEhB,SAAU,CACRH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,SAGlBxM,gBAAa,CACXyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,sBACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,MAEXhN,YAAS,CACPyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,aACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,KACTC,cAAe,cAEjBjN,cAAW,CACT,CAAEkN,KAAMb,MAASc,KAAM,8BACvB,CAAED,KAAMb,MAAQe,IAAI,EAAG,QAASD,KAAM,eAExCnN,eAAY,GAKZA,eAAiB,CACf0M,UAAW,GACXC,QAAS,IAEX3M,iBAAmB,CACjB0M,UAAW,GACXC,QAAS,IAEX3M,oBAAsB,CACpB0M,UAAW,GACXC,QAAS,IAEX3M,mBAAqB,CACnB0M,UAAW,GACXC,QAAS,IAEX3M,mBAAqB,CACnB0M,UAAW,GACXC,QAAS,IAEX3M,cAAe,CAAEqV,IAAO,EAAGC,IAAO,EAAGC,IAAO,EAAGC,IAAO,EAAGC,IAAO,EAAGC,IAAO,EACxEC,IAAO,EAAGC,IAAO,EAAGC,IAAO,EAAGC,IAAO,GAAIC,IAAO,GAAIC,IAAO,IA4D7DhW,mBAAiBqN,GACRrN,KAAKsN,aAAaC,KAAMC,GAAMA,EAAEC,OAAOJ,EAAG,QAGnDrN,kBAAgBkN,IACU,IAAjBA,EAAKQ,SAAkC,IAAjBR,EAAKQ,UAAgB,eAGpD1N,mBAAiBqN,IACf,MAAMM,EAAU3N,KAAK4N,SAASC,KAAMC,GAAOA,EAAGZ,KAAKO,OAAOJ,EAAG,QAC7D,QAAOM,GAAUA,EAAQR,IAAO,EA4HlCnN,aAAU,CAAC,UAAU,WA7LnBA,KAAKJ,cAAcS,SAAS,aAC5B4V,oBAAuB,YACvBA,wBAA2B,EAC7B,CAEA3T,WACE,MAKMyL,EAAc,IAAIC,KAClBC,EAAqBF,EAAYG,WAAa,EACpDlO,KAAKoO,iBAPc,CACjB,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKrBL,EAAYG,YAC/ClO,KAAKqO,KAAON,EAAYO,cACxBtO,KAAKuO,UAAYvO,KAAKqO,KAAO,KAC7BrO,KAAKwO,kBAAoBP,EACzBjO,KAAK6O,iBAAmB7O,KAAKqO,KAC7BrO,KAAKkW,kBAAoBjI,EACzBjO,KAAKmW,eAAiBlI,EACtBjO,KAAKoW,cAAgBpW,KAAKqO,KAC1BrO,KAAKH,aAAaiP,cAAclH,UAAW7D,IACrCA,GAAoB,wCAAbA,EAAIgL,OACb/O,KAAKgP,gBAAkB,EAMvBhP,KAAKiP,iBAAiBxJ,QALX,CACTO,QAASjC,EAAIiC,QACb+I,KAAMhL,EAAIgL,KACVnD,GAAI7H,EAAImL,MAEwB,GAGtClP,KAAKmP,kBAULnP,KAAKoV,wBAAwBiB,mBAAmBzO,UAAW3D,IACzDjE,KAAKiL,kBAAoBhH,IAE3BjE,KAAKsW,gBACLtW,KAAKuW,yBACLvW,KAAKuL,iBACLvL,KAAKwW,qBACP,CAkBA1G,kBAAkBC,EAAahB,GAG7B/O,KAAKgQ,UAAUtD,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC1GnQ,KAAKgQ,UAAUrD,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GAC9FJ,EAAOK,QACG,kBAARrB,GACF/O,KAAKqQ,mBAAqC,WAAhBN,EAAOK,MAAqB,EAAqB,WAAhBL,EAAOK,MAAqB,EAAqB,UAAhBL,EAAOK,MAAoB,GAAI,EAC3HpQ,KAAKyW,YAAY/J,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC5GnQ,KAAKyW,YAAY9J,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACpGnQ,KAAKqP,WAAU,EAAMrP,KAAKgQ,YAEX,4BAARjB,GACP/O,KAAK0W,mCAAoC,EACzC1W,KAAK2W,eAAejK,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC/GnQ,KAAK2W,eAAehK,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACvGnQ,KAAKwW,oBAAoBxW,KAAKgQ,YAEf,eAARjB,GACP/O,KAAK4W,0BAA2B,EAChC5W,KAAK6W,cAAcnK,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC9GnQ,KAAK6W,cAAclK,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACtGnQ,KAAKuL,eAAevL,KAAKgQ,YAEV,oBAARjB,IACP/O,KAAK8W,uBAAyC,WAAhB/G,EAAOK,MAAqB,EAAqB,WAAhBL,EAAOK,MAAqB,EAAqB,UAAhBL,EAAOK,MAAoB,GAAI,EAC/HpQ,KAAK+W,cAAcrK,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC9GnQ,KAAK+W,cAAcpK,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACtGnQ,KAAKuW,uBAAuBvW,KAAKgQ,YAGvC,CAEAY,mBAAmBb,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAEAc,mBAAmBd,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAIAkB,QAAQC,GACN,OAAO,IAAIC,MAAMD,EACnB,CAGA/B,kBACEnP,KAAKF,KAAK8D,WAAW,GAAGuD,sBAA6BnH,KAAK8Q,kBAAkB9Q,KAAK+Q,YAAYjN,KAAMC,IAC7FA,IACF/D,KAAKiP,iBAAmBlL,EAAIE,KAAKC,QACjClE,KAAKgP,gBAAkBjL,EAAIE,KAAK+M,wBAItC,CAGAI,WAAWnN,GACQ,6BAAbA,EAAK8K,KACP/O,KAAKkM,OAAOmF,cAAc,+BACN,uCAAbpN,EAAK8K,KAEZ/O,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,OAAO5L,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,GAAG2F,MAAM,EAAG,OAClJtN,EAAKuN,QAEZxR,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAOtC,QAAQlP,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAO5F,MAEhK,CAIA6F,mBACEzR,KAAKF,KAAKgG,YAAYqB,qBAA6B,IAAIrD,KAAMC,IACvDA,IACF/D,KAAKgP,gBAAkB,IAG7B,CAIAK,UAAU2H,EAAgBhH,GAOxBhQ,KAAKF,KAAK8D,YALqB,GAA3B5D,KAAKqQ,mBACD,sDAAsDrQ,KAAKqQ,iCAAiCL,EAAUtD,sBAAsBsD,EAAUrD,UAEtI,sDAAsD3M,KAAKqQ,sBAEzCvM,KAAMC,IAC9B,MAAMkT,EAAelT,EAAIE,KAAKsP,qBACxB2D,EAASD,EAAalE,IAAKzN,GAAcA,EAAKoI,OAC9CyJ,EAAcF,EAAalE,IAAKzN,GAAcA,EAAK2N,OAAOQ,aAAe,GACzEN,EAAa8D,EAAalE,IAAKzN,GAAcA,EAAK2N,OAAOX,YAAc,GACvEY,EAAkB+D,EAAalE,IAAKzN,GAAcA,EAAK2N,OAAOR,iBAAmB,GAuBvFzS,KAAKoX,UAAUzE,OAnBH,CACR,CACEvS,KAAM,cACNiT,MAAO,UACPpP,KAAMkT,GAER,CACE/W,KAAM,aACNiT,MAAO,UACPpP,KAAMkP,GAER,CACE/S,KAAM,kBACNiT,MAAO,UACPpP,KAAMiP,IAKkBgE,EAAM,EAGxC,CAMA3L,eAAeyE,GAObhQ,KAAKF,KAAK8D,WALNoM,EACI,6EAA6EA,EAAUtD,qBAAqBsD,EAAUrD,UAEtH,wDAAwD3M,KAAKmW,uBAAuBnW,KAAKoW,iBAEvEtS,KAAM8L,IAC9B,GAAIA,GAAYA,EAAS3L,KAAM,CAC7B,MAAMoT,EAAazH,EAAS3L,KACtBuP,EAAS6D,EAAWtE,IAAKuE,GAAsCA,EAAMC,kBACrEtT,EAAOoT,EAAWtE,IAAKuE,GAA2BA,EAAM1C,OAC9D5U,KAAKwX,YAAY7E,OAAO,CAAC,CAACvS,KAAK,GAAG6D,SAAQuP,EAAM,GAGtD,CAIAgD,oBAAoBxG,GAClB,IAAIlH,EAAM,6CAERA,GADEkH,EACK,+BAA+BA,EAAUtD,qBAAqBsD,EAAUrD,UAExE,UAAY3M,KAAKwO,kBAAoB,SAAWxO,KAAK6O,iBAE9D7O,KAAKF,KAAK8D,WAAWkF,GAAKhF,KAAM8L,IAC9B,GAAIA,GAAYA,EAAS3L,KAAM,CAE7B,IAAIkQ,EADOlK,OAAOmK,KAAKxE,EAAS3L,MACX8O,IAAKsB,GAAWA,EAAErP,QAAQ,KAAM,MACrDmP,EAAYA,EAAUpB,IAAKsB,GACdA,EAAEC,MAAM,KAAKvB,IAAKrQ,GACTA,EAAE,GAAG6R,cACL7R,EAAE6O,MAAM,IAEzBiD,KAAK,MAEV,QAAStD,EAAI,EAAGA,EAAIiD,EAAUhC,OAAQjB,IAChB,cAAhBiD,EAAUjD,KACZiD,EAAUjD,GAAK,eAEnB,MAAMuD,EAAmBxK,OAAOC,OAAO0F,EAAS3L,MAChDjE,KAAKyX,eAAe9E,OAAO,CAAC,CAACvS,KAAK,UAAU6D,KAAKwQ,IAAeN,EAAS,GAG/E,CAIAoC,uBAAuBvG,GAOrBhQ,KAAKF,KAAK8D,YALyB,GAA/B5D,KAAK8W,uBACD,8DAA8D9G,EAAUtD,sBAAsBsD,EAAUrD,iBAAiB3M,KAAK8W,yBAE9H,yDAAyD9W,KAAK8W,0BAE5ChT,KAAM8L,IAC9B,GAAIA,GAAYA,EAAS3L,KAAM,CAC7B,MAAMyT,EAAoB9H,EAAS3L,KAC7BuP,EAASkE,EAAkB3E,IAAKuE,GAA2BA,GAAO5J,OAClEzJ,EAAOyT,EAAkB3E,IAAKuE,GAA2BA,GAAO1C,OACtE5U,KAAK2X,iBAAiBhF,OAAO,CAAC,CAACvS,KAAK,GAAG6D,SAAQuP,EAAM,GAG3D,CAIAX,eAAemE,GACb,MAcMY,EAAa5X,KAAK6X,mBAAmB/D,OAAO,CAACC,EAAazO,KAC9DyO,EAAYC,KAAK1O,EAAKkN,gBAAiBlN,EAAKmN,gBAAiBnN,EAAKgN,YAC3DyB,GACN,IACH/T,KAAK8X,mBAAmBnF,OAAO,CAAC,CAACvS,KAAK,GAAG6D,KAAK2T,IAlB/B,CACb,CACExH,MAAO,mBACPiD,MAAO,WAET,CACEjD,MAAO,mBACPiD,MAAO,WAET,CACEjD,MAAO,cACPiD,MAAO,YAOwDN,IAAI3C,GAASA,EAAMA,OACxF,CAEAkG,gBACEtW,KAAKoV,wBAAwB/J,YAAYzD,UAAWgI,IAC9CA,GAAYA,EAAS3L,OACvBjE,KAAKqP,YACLrP,KAAK+X,aAAenI,GAAU3L,KAC9BjE,KAAK6X,mBAAqBjI,GAAU3L,MAAM4P,yBAC1C7T,KAAK6S,iBAAc,EAGzB,CAACpI,kDAxbU0K,GAA0BzK,0GAA1ByK,EAA0BxK,6EAqH1BsK,KAAoC,s/SDxIjD9V,qBAA0B,SAA1BA,CAA0B,SAA1BA,CAA0B,SAE6BA,gBAAIA,UACvDA,gBAA4B,SAAgCA,qBAASA,YAEvEA,iBAA2B,UAA3BA,CAA2B,YAGrBA,0BAEsC,eAEpCA,2EACAA,QACAA,gBAEAA,oBAgBsC,aAhBtCA,CAgBsC,cAKtCA,UAEFA,sBAAGA,kCAAqBA,QACxBA,eAAIA,UAAiDA,UAIvDA,mBACEA,2BACEA,oBAA8rE,aAA9rEA,CAA8rE,aAA9rEA,CAA8rE,aAA9rEA,CAA8rE,aAA9rEA,CAA8rE,cAMhsEA,QACAA,sBAAGA,6BAAgBA,QACnBA,eAAIA,UAAuCA,UAI7CA,mBACEA,2BACEA,oBAAyqD,cAE3qDA,QACAA,yBAA6CA,4BAAeA,QAC5DA,kBAA8CA,UAAqBA,QACnEA,kBACEA,yBACAA,0BAaFA,YAIJA,mBAAyB,YAAzBA,CAAyB,YAAzBA,CAAyB,YAAzBA,CAAyB,WAKcA,oCACtBA,oBAA4BA,UAA6KA,YAEpNA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,2EAAyC,kCAIrD+V,sBAAyB,iBAAiB,GAL1D/V,cASNA,iCACFA,QAIAA,mBAA2B,YAA3BA,CAA2B,YAA3BA,CAA2B,WAGUA,+CACtBA,oBAA4BA,UAAgIA,YAEvKA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,iFAA+C,kCAK3D+V,sBAAyB,2BAA2B,GANpE/V,cAUNA,iCACFA,UAIFA,mBAAyB,SAAzBA,CAAyB,YAAzBA,CAAyB,YAAzBA,CAAyB,WAKcA,gCACtBA,oBAA4BA,UAAqHA,YAE5JA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,wEAAsC,kCAKlD+V,sBAAyB,cAAc,GANvD/V,cAUNA,iCACFA,QAGAA,gBAAK,YAALA,CAAK,YAALA,CAAK,WAGgCA,qCACtBA,oBAA4BA,UAAiMA,YAExOA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,sBAC4BA,wEAAsC,kCAIlD+V,sBAAyB,mBAAmB,GAL5D/V,cASNA,kCACFA,QAEAA,iBAAK,SACAA,yDAA2CA,QAC9CA,kCACFA,qBAvLwBA,0CAA6C,4BAiC/DA,0FAIkBA,yCAUlBA,gFAU0CA,oCAEvCA,oFAC2CA,6CAuBTA,sOAQPA,wDAAyC,oBAAzCA,CAAyC,oBAAzCA,CAAyC,kBAAzCA,CAAyC,kBAAzCA,CAAyC,0BAAzCA,CAAyC,gBAAzCA,CAAyC,qBAAzCA,CAAyC,yBAAzCA,CAAyC,2BAAzCA,CAAyC,kCAAzCA,CAAyC,8BAAzCA,CAAyC,iCAQhDA,0CAAyB,cASXA,iMAQPA,8DAA+C,oBAA/CA,CAA+C,kBAA/CA,CAA+C,oBAA/CA,CAA+C,kBAA/CA,CAA+C,0BAA/CA,CAA+C,gBAA/CA,CAA+C,qBAA/CA,CAA+C,yBAA/CA,CAA+C,2BAA/CA,CAA+C,kCAA/CA,CAA+C,8BAA/CA,CAA+C,iCASjDA,0CAWSA,oLAQPA,qDAAsC,oBAAtCA,CAAsC,kBAAtCA,CAAsC,oBAAtCA,CAAsC,kBAAtCA,CAAsC,0BAAtCA,CAAsC,gBAAtCA,CAAsC,qBAAtCA,CAAsC,yBAAtCA,CAAsC,2BAAtCA,CAAsC,kCAAtCA,CAAsC,8BAAtCA,CAAsC,iCAS3CA,iCAQYA,8PAQPA,qDAAsC,oBAAtCA,CAAsC,oBAAtCA,CAAsC,kBAAtCA,CAAsC,kBAAtCA,CAAsC,0BAAtCA,CAAsC,gBAAtCA,CAAsC,qBAAtCA,CAAsC,yBAAtCA,CAAsC,2BAAtCA,CAAsC,kCAAtCA,CAAsC,8BAAtCA,CAAsC,iCAQtCA,sCAAsB,aAKpBA,sCAAsB,k4GC1KrDgW,CAA0B,8IC6C3BhW,iBAAoEA,8BAAkBA,kDACtFA,iBAAqE,YAEjEA,kBAEAA,kBAAgCA,qEAASA,sBAAgB,GACvDA,eAAK,WACcA,SAAcA,QAC/BA,aAAGA,SAAiBA,UAEtBA,aAAGA,UAA4CA,aAAI,uCAPhDA,wIAIgBA,wBACdA,iCAEFA,6QCvDd,IAAM6Y,GAA2B,MAAlC,MAAOA,EA2JXxY,YAAoBM,EAA2BF,EAA6BC,EAClEuV,EAA0DlJ,EAAwBC,GADxEnM,YAA2BA,qBAA6BA,oBAClEA,+BAA0DA,cAAwBA,qBA1J5FA,WAAa,aACbA,WAAa,aAUbA,wBAAiC,GACjCA,cAAgB,CACdwT,OAAQ,CAAC,eAAgB,SACzByE,SAAU,CACR,CACEhU,KAAM,CAAC,MAAO,OACdiU,gBAAiB,CAAC,UAAW,WAC7BC,YAAa,EACbC,qBAAsB,CAAC,UAAW,cAIxCpY,uBAA4B,EAC5BA,eAAiB,CACfwT,OAAQ,CAAC,MAAO,MAAO,QAAS,QAC9B,MAAO,QACTyE,SAAU,CACR,CACE7H,MAAO,OACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,KAAM,MAAO,MACzCiU,gBAAiB,WAEnB,CACE9H,MAAO,QACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1CiU,gBAAiB,WAGnB,CACE9H,MAAO,cACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,OACzCiU,gBAAiB,WAGnB,CACE9H,MAAO,UACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAClFiU,gBAAiB,aAIvBlY,kBAAoB,MASpBA,wBAA0B,EAI1BA,4BAA8B,EAG9BA,eAAiBoM,KACjBpM,eAAoB,EACpBA,UAAe,EAGfA,UAAO,EACPA,cAAW,GAGXA,eAAY,OACZA,aAAU,KACVA,gBAAa,QACbA,iBAAc,SACdA,eAAY,OAOZA,kBAAwB,GACxBA,YAAc,CACZ,UAAW,CACTqM,MAAQC,SAAS,GAAI,QAAQC,QAAQ,OACrCF,MAAQG,MAAM,QAEhB,UAAW,CACTH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,QAEhB,SAAU,CACRH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,SAGlBxM,gBAAa,CACXyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,sBACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,MAEXhN,YAAS,CACPyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,aACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,KACTC,cAAe,cAEjBjN,cAAW,CACT,CAAEkN,KAAMb,MAASc,KAAM,8BACvB,CAAED,KAAMb,MAAQe,IAAI,EAAG,QAASD,KAAM,eAExCnN,oBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAwDFA,mBAAiBqN,GACRrN,KAAKsN,aAAaC,KAAMC,GAAMA,EAAEC,OAAOJ,EAAG,QAGnDrN,kBAAgBkN,IACU,IAAjBA,EAAKQ,SAAkC,IAAjBR,EAAKQ,UAAgB,eAGpD1N,mBAAiBqN,IACf,MAAMM,EAAU3N,KAAK4N,SAASC,KAAMC,GAAOA,EAAGZ,KAAKO,OAAOJ,EAAG,QAC7D,QAAOM,GAAUA,EAAQR,IAAO,EAElCnN,eAAiB,CACf0M,UAAW,GACXC,QAAS,IAEX3M,mBAAqB,CACnB0M,UAAW,GACXC,QAAS,IAEX3M,WAAa,CACX0M,UAAW,GACXC,QAAS,IAEX3M,mBAAqB,CACnB0M,UAAW,GACXC,QAAS,IAEX3M,sBAAwB,CACtB0M,UAAW,GACXC,QAAS,IA/ET3M,KAAKJ,cAAcS,SAAS,YAC9B,CAGAiC,WACE,MAIMyL,EAAc,IAAIC,KAClBC,EAAqBF,EAAYG,WAAa,EACpDlO,KAAKoO,iBANc,CACjB,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIrBL,EAAYG,YAC/ClO,KAAKqO,KAAON,EAAYO,cACxBtO,KAAKuO,UAAYvO,KAAKqO,KAAO,KAC7BrO,KAAKwO,kBAAoBP,EACzBjO,KAAK6O,iBAAmB7O,KAAKqO,KAC7BrO,KAAKkW,kBAAoBjI,EACzBjO,KAAKmW,eAAiBlI,EACtBjO,KAAKoW,cAAgBpW,KAAKqO,KAC1BrO,KAAKH,aAAaiP,cAAclH,UAAW7D,IACrCA,GAAoB,wCAAbA,EAAIgL,OACb/O,KAAKgP,gBAAkB,EAMvBhP,KAAKiP,iBAAiBxJ,QALX,CACTO,QAASjC,EAAIiC,QACb+I,KAAMhL,EAAIgL,KACVnD,GAAI7H,EAAImL,MAEwB,GAGtClP,KAAKmP,kBAULnP,KAAKoV,wBAAwBiB,mBAAmBzO,UAAW3D,IACzDjE,KAAKiL,kBAAoBhH,IAE3BjE,KAAKsW,gBACLtW,KAAKuW,yBACLvW,KAAKuL,iBACLvL,KAAKwW,qBACP,CAoCA1G,kBAAkBC,EAAahB,GAG7B/O,KAAKgQ,UAAUtD,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC1GnQ,KAAKgQ,UAAUrD,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GAC9FJ,EAAOK,QACG,kBAARrB,GACF/O,KAAKqQ,mBAAqC,WAAhBN,EAAOK,MAAqB,EAAqB,WAAhBL,EAAOK,MAAqB,EAAqB,UAAhBL,EAAOK,MAAoB,GAAI,EAC3HpQ,KAAKsQ,cAAc5D,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC9GnQ,KAAKsQ,cAAc3D,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACtGnQ,KAAKqP,WAAU,EAAMrP,KAAKgQ,YAEX,4BAARjB,GACP/O,KAAKqY,qCAAsC,EAC3CrY,KAAKsY,MAAM5L,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GACtGnQ,KAAKsY,MAAM3L,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GAC9FnQ,KAAKwW,oBAAoBxW,KAAKgQ,YAEf,eAARjB,GACP/O,KAAKuY,wBAAyB,EAC9BvY,KAAKwY,cAAc9L,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC9GnQ,KAAKwY,cAAc7L,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACtGnQ,KAAKuL,eAAevL,KAAKgQ,YAEV,qBAARjB,IACP/O,KAAK8W,uBAAyC,WAAhB/G,EAAOK,MAAqB,EAAqB,WAAhBL,EAAOK,MAAqB,EAAqB,UAAhBL,EAAOK,MAAoB,GAAI,EAC/HpQ,KAAKyY,iBAAiB/L,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GACjHnQ,KAAKyY,iBAAiB9L,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACzGnQ,KAAKuW,uBAAuBvW,KAAKgQ,YAGvC,CAEAY,mBAAmBb,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAEAc,mBAAmBd,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAKAkB,QAAQC,GACN,OAAO,IAAIC,MAAMD,EACnB,CACA/B,kBACEnP,KAAKF,KAAK8D,WAAW,GAAGuD,sBAA6BnH,KAAK8Q,kBAAkB9Q,KAAK+Q,YAAYjN,KAAMC,IAC7FA,IACF/D,KAAKiP,iBAAmBlL,EAAIE,KAAKC,QACjClE,KAAKgP,gBAAkBjL,EAAIE,KAAK+M,wBAItC,CACAI,WAAWnN,GACQ,6BAAbA,EAAK8K,KACP/O,KAAKkM,OAAOmF,cAAc,+BACN,uCAAbpN,EAAK8K,KAEZ/O,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,OAAO5L,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,GAAG2F,MAAM,EAAG,OAClJtN,EAAKuN,QAEZxR,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAOtC,QAAQlP,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAO5F,MAEhK,CACA6F,mBACEzR,KAAKF,KAAKgG,YAAYqB,qBAA6B,IAAIrD,KAAMC,IACvDA,IACF/D,KAAKgP,gBAAkB,IAG7B,CAGAK,UAAU2H,EAAgBhH,GASxBhQ,KAAKF,KAAK8D,YAPqB,GAA3B5D,KAAKqQ,mBACD,wDAAwDrQ,KAAKqQ,iCAAiCL,EAAUtD,sBAAsBsD,EAAUrD,UAGxI,wDAAwD3M,KAAKqQ,sBAG3CvM,KAAMC,IAC9B,MAAMkT,EAAelT,EAAIE,KAAKsP,qBACxB2D,EAASD,EAAalE,IAAKzN,GAAcA,EAAKoI,OAC9CyJ,EAAcF,EAAalE,IAAKzN,GAAcA,EAAK2N,OAAOQ,aAC1DN,EAAa8D,EAAalE,IAAKzN,GAAcA,EAAK2N,OAAOX,YACzDY,EAAkB+D,EAAalE,IAAKzN,GAAcA,EAAK2N,OAAOR,iBAuBpEzS,KAAKoX,UAAUzE,OAnBH,CACR,CACEvS,KAAM,cACN8X,gBAAiB,UACjBjU,KAAMkT,GAER,CACE/W,KAAM,aACN8X,gBAAiB,kBACjBjU,KAAMkP,GAER,CACE/S,KAAM,kBACN8X,gBAAiB,eACjBjU,KAAMiP,IAKkBgE,EAAM,EAGxC,CAGArE,eAAemE,GACb,MAcMY,EAAa5X,KAAK6X,mBAAmB/D,OAAO,CAACC,EAAazO,KAC9DyO,EAAYC,KAAK1O,EAAKkN,gBAAiBlN,EAAKmN,gBAAiBnN,EAAKgN,YAC3DyB,GACN,IACH/T,KAAK8X,mBAAmBnF,OAAO,CAAC,CAACvS,KAAK,GAAG6D,KAAK2T,IAlB/B,CACb,CACExH,MAAO,mBACPiD,MAAO,WAET,CACEjD,MAAO,mBACPiD,MAAO,WAET,CACEjD,MAAO,cACPiD,MAAO,YAOwDN,IAAI3C,GAASA,EAAMA,OACxF,CAGAmG,uBAAuBvG,GAUrBhQ,KAAKF,KAAK8D,YARyB,GAA/B5D,KAAK8W,uBACD,gEAAgE9G,EAAUtD,sBAAsBsD,EAAUrD,mBAG1G,2DAA6D3M,KAAK8W,wBAIhDhT,KAAM8L,IAC9B,GAAIA,GAAYA,EAAS3L,KAAM,CAC7B,MAAMyT,EAAoB9H,EAAS3L,KAC7BuP,EAASkE,EAAkB3E,IAAKuE,GAA2BA,GAAO5J,OAClEzJ,EAAOyT,EAAkB3E,IAAKuE,GAA2BA,GAAO1C,OACtE5U,KAAK2X,iBAAiBhF,OAAO,CAAC,CAACvS,KAAK,GAAG6D,SAAQuP,EAAM,GAG3D,CAGAjI,eAAeyE,GAQbhQ,KAAKF,KAAK8D,WANNoM,EACI,+EAA+EA,EAAUtD,qBAAqBsD,EAAUrD,UAGxH,0DAA4D3M,KAAKmW,eAAiB,SAAWnW,KAAKoW,eAEhFtS,KAAM8L,IAC9B,GAAIA,GAAYA,EAAS3L,KAAM,CAC7B,MAAMoT,EAAazH,EAAS3L,KACtBuP,EAAS6D,EAAWtE,IAAKuE,GAAsCA,EAAMC,kBACrEtT,EAAOoT,EAAWtE,IAAKuE,GAA2BA,EAAM1C,OAC9D5U,KAAKwX,YAAY7E,OAAO,CAAC,CAACvS,KAAK,GAAG6D,SAAQuP,EAAM,GAGtD,CAGAgD,oBAAoBxG,GAQlBhQ,KAAKF,KAAK8D,WANNoM,EACI,2EAA2EA,EAAUtD,qBAAqBsD,EAAUrD,UAGpH,sDAAwD3M,KAAKwO,kBAAoB,SAAWxO,KAAK6O,kBAE/E/K,KAAM8L,IAC9B,GAAIA,GAAYA,EAAS3L,KAAM,CAE7B,IAAIkQ,EADOlK,OAAOmK,KAAKxE,EAAS3L,MACX8O,IAAKsB,GAAWA,EAAErP,QAAQ,KAAM,MACrDmP,EAAYA,EAAUpB,IAAKsB,GACdA,EAAEC,MAAM,KAAKvB,IAAKrQ,GACTA,EAAE,GAAG6R,cACL7R,EAAE6O,MAAM,IAEzBiD,KAAK,MAEV,QAAStD,EAAI,EAAGA,EAAIiD,EAAUhC,OAAQjB,IAChB,cAAhBiD,EAAUjD,KACZiD,EAAUjD,GAAK,eAEnB,MAAMuD,EAAmBxK,OAAOC,OAAO0F,EAAS3L,MAChDjE,KAAKyX,eAAe9E,OAAO,CAAC,CAACvS,KAAK,UAAU6D,KAAKwQ,IAAeN,EAAS,GAG/E,CAEAmC,gBACEtW,KAAKoV,wBAAwB/J,YAAYzD,UAAWgI,IAC9CA,GAAYA,EAAS3L,OACvBjE,KAAKqP,YACLrP,KAAK+X,aAAenI,GAAU3L,KAC9BjE,KAAK6X,mBAAqBjI,GAAU3L,MAAM4P,yBAC1C7T,KAAK6S,iBAAc,EAGzB,CAACpI,kDA5cUuN,GAA2BtN,0GAA3BsN,EAA2BrN,+EAyJ3BsK,KAAoC,skTD5KjD9V,qBAA0B,SAA1BA,CAA0B,SAA1BA,CAA0B,SAE+BA,gBAAIA,UACvDA,gBAA4B,SAAgCA,qBAASA,YAEvEA,iBAA2B,UAA3BA,CAA2B,YAGrBA,0BAEsC,eAEpCA,2EACAA,QACAA,gBAEAA,oBAgBsC,aAhBtCA,CAgBsC,cAKtCA,UAEFA,sBAAGA,kCAAqBA,QACxBA,eAAIA,UAAiDA,UAGvDA,kBACEA,2BACEA,oBAA8rE,aAA9rEA,CAA8rE,aAA9rEA,CAA8rE,aAA9rEA,CAA8rE,aAA9rEA,CAA8rE,cAMhsEA,QACAA,sBAAGA,6BAAgBA,QACnBA,eAAIA,UAAuCA,UAG7CA,mBACEA,2BACEA,oBAAyqD,cAE3qDA,QACAA,yBAA6CA,4BAAeA,QAC5DA,kBAA8CA,UAAqBA,QACnEA,kBACEA,yBACAA,0BAaFA,YAIJA,mBAAyB,YAAzBA,CAAyB,YAAzBA,CAAyB,YAAzBA,CAAyB,WAKcA,oCACtBA,oBAA4BA,UAAiLA,YAExNA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,2EAAyC,kCAIrD+V,sBAAyB,iBAAiB,GAL1D/V,cASNA,iCACFA,QAIAA,mBAA2B,YAA3BA,CAA2B,YAA3BA,CAA2B,WAGUA,+CACtBA,oBAA4BA,UAAgHA,YAEvJA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,mFAAiD,kCAK7D+V,sBAAyB,2BAA2B,GANpE/V,cAUNA,iCACFA,UAGFA,mBAAyB,SAAzBA,CAAyB,YAAzBA,CAAyB,YAAzBA,CAAyB,WAKcA,gCACtBA,oBAA4BA,UAAmHA,YAE1JA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,sEAAoC,kCAKhD+V,sBAAyB,cAAc,GANvD/V,cAUNA,iCACFA,QAGAA,gBAAK,YAALA,CAAK,YAALA,CAAK,WAGgCA,qCACtBA,oBAA4BA,UAAuMA,YAE9OA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,sBAC4BA,sEAAoC,kCAIhD+V,sBAAyB,mBAAmB,GAL5D/V,cASNA,kCACFA,QAEAA,iBAAK,SACAA,yDAA2CA,QAC9CA,kCACFA,qBApLwBA,0CAA6C,4BAiC/DA,0FAGkBA,yCAA6C,4BAU/DA,gFAS0CA,oCAEvCA,oFAC2CA,6CAuBTA,8OAQPA,wDAAyC,oBAAzCA,CAAyC,oBAAzCA,CAAyC,kBAAzCA,CAAyC,kBAAzCA,CAAyC,0BAAzCA,CAAyC,gBAAzCA,CAAyC,qBAAzCA,CAAyC,yBAAzCA,CAAyC,2BAAzCA,CAAyC,kCAAzCA,CAAyC,8BAAzCA,CAAyC,iCAQhDA,0CAAyB,cASXA,+JAQPA,gEAAiD,oBAAjDA,CAAiD,kBAAjDA,CAAiD,oBAAjDA,CAAiD,kBAAjDA,CAAiD,0BAAjDA,CAAiD,gBAAjDA,CAAiD,qBAAjDA,CAAiD,yBAAjDA,CAAiD,2BAAjDA,CAAiD,kCAAjDA,CAAiD,8BAAjDA,CAAiD,iCASnDA,0CAUSA,kLAQPA,mDAAoC,oBAApCA,CAAoC,kBAApCA,CAAoC,oBAApCA,CAAoC,kBAApCA,CAAoC,0BAApCA,CAAoC,gBAApCA,CAAoC,qBAApCA,CAAoC,yBAApCA,CAAoC,2BAApCA,CAAoC,kCAApCA,CAAoC,8BAApCA,CAAoC,iCASzCA,iCAQYA,0QAQPA,mDAAoC,oBAApCA,CAAoC,oBAApCA,CAAoC,kBAApCA,CAAoC,kBAApCA,CAAoC,0BAApCA,CAAoC,gBAApCA,CAAoC,qBAApCA,CAAoC,yBAApCA,CAAoC,2BAApCA,CAAoC,kCAApCA,CAAoC,8BAApCA,CAAoC,iCAQpCA,sCAAsB,aAKpBA,sCAAsB,s3GCvKvD6Y,CAA2B,4BCO5B7Y,iBAAoEA,8BAAkBA,kDACtFA,iBAAqE,YAEjEA,kBAEAA,kBAAgCA,sEAASA,sBAAgB,GACvDA,eAAK,WACcA,SAAcA,QAC/BA,aAAGA,SAAiBA,UAEtBA,aAAGA,UAA4CA,aAAI,wCAPhDA,wIAIgBA,wBACdA,iCAEFA,oPApCrBA,qBAA+E,SAA/EA,CAA+E,SAA/EA,CAA+E,SAExBA,gBAAIA,UACvDA,gBAA4B,SAAgCA,qBAASA,YAEvEA,iBAA2B,UAA3BA,CAA2B,WAA3BA,CAA2B,YAA3BA,CAA2B,QAIhBA,kCAAqBA,QACxBA,eAAIA,UAAiDA,YAGzDA,kBACEA,mBACAA,mBAA+F,QAC1FA,6BAAgBA,QACnBA,eAAIA,UAAuCA,YAG/CA,kBACEA,mBACAA,gBAAK,WAC0CA,4BAAeA,QAC5DA,kBAA8CA,UAA0BA,QACxEA,kBACEA,yBACAA,0BAaFA,cAINA,mBAAkC,YAAlCA,CAAkC,aAG5BA,mBACAA,mBAAmB,WACcA,+CACtBA,oBAA4BA,UAA4HA,YAEnKA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,2GAAyC,2DAIrDA,4BAAyB,4BAA2B,GALpEA,cAmBNA,sBAAyCA,UAAWA,YAGxDA,mBAAyB,YAAzBA,CAAyB,aAGnBA,mBACAA,mBAAmB,WACcA,qCACtBA,oBAA4BA,UAAiMA,YAExOA,mBAAiE,YAAjEA,CAAiE,aAG3DA,iBACFA,QACAA,qBAC4BA,0GAAwC,2DAIpDA,4BAAyB,oBAAmB,GAL5DA,cA0BNA,sBAA2CA,UAAYA,UAEzDA,mBAAuB,QAClBA,wDAA2CA,QAC9CA,sBAA6CA,UAAYA,eAAS,yBAlH7DA,0CAA6C,4BAE5CA,yFAKDA,yCAA6C,4BAE5CA,+EAO0CA,uCAEvCA,oFAC2CA,6CAuBXA,+LAQPA,wDAAyC,oBAAzCA,CAAyC,oBAAzCA,CAAyC,kBAAzCA,CAAyC,0BAAzCA,CAAyC,gBAAzCA,CAAyC,qBAAzCA,CAAyC,yBAAzCA,CAAyC,2BAAzCA,CAAyC,kCAAzCA,CAAyC,8BAAzCA,CAAyC,iCAkBlCA,wBASAA,8PAQPA,uDAAwC,oBAAxCA,CAAwC,oBAAxCA,CAAwC,kBAAxCA,CAAwC,kBAAxCA,CAAwC,0BAAxCA,CAAwC,gBAAxCA,CAAwC,qBAAxCA,CAAwC,yBAAxCA,CAAwC,2BAAxCA,CAAwC,kCAAxCA,CAAwC,8BAAxCA,CAAwC,iCAyB/BA,yBAIEA,oDAKrDA,SACEA,qCACFA,8BAD0BA,qFAG1BA,SACEA,qCACFA,8BAD0BA,qFAE1BA,SACEA,uCACFA,8BAD4BA,2DCzH5B8W,iBAAkByC,MAMX,IAAMC,GAAkB,MAAzB,MAAOA,EAmHXnZ,YACUM,EAA2BoM,EAC3BtM,EACAgZ,EACAC,EACDhZ,EACCsM,GALAnM,YAA2BA,cAC3BA,qBACAA,qBACAA,yBACDA,oBACCA,qBAxHVA,WAAa,aACbA,WAAa,aAUbA,wBAAiC,GACjCA,mBAAqB,GACrBA,cAAgB,CACdwT,OAAQ,CAAC,eAAgB,SACzByE,SAAU,CACR,CAEEhU,KAAM,CAAC,MAAO,OACdiU,gBAAiB,CAAC,UAAW,WAC7BC,YAAa,EACbC,qBAAsB,CAAC,UAAW,cAOxCpY,uBAA4B,EAE5BA,eAAiB,CACfwT,OAAQ,CAAC,MAAO,MAAO,QAAS,QAC9B,MAAO,QACTyE,SAAU,CACR,CACE7H,MAAO,OACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,KAAM,MAAO,MACzCiU,gBAAiB,WAEnB,CACE9H,MAAO,QACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1CiU,gBAAiB,WAEnB,CACE9H,MAAO,cACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,OACzCiU,gBAAiB,WAEnB,CACE9H,MAAO,UACPnM,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAClFiU,gBAAiB,aAIvBlY,kBAAoB,MAMpBA,eAAY,OACZA,aAAU,KACVA,gBAAa,QACbA,iBAAc,SACdA,eAAY,OAKZA,kBAAwB,GACxBA,YAAc,CACZ,UAAW,CACTqM,MAAQC,SAAS,GAAI,QAAQC,QAAQ,OACrCF,MAAQG,MAAM,QAEhB,UAAW,CACTH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,QAEhB,SAAU,CACRH,MAAQC,SAAS,IAAK,QAAQC,QAAQ,OACtCF,MAAQG,MAAM,SAGlBxM,gBAAa,CACXyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,sBACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,MAEXhN,YAAS,CACPyM,SAAU,EACVC,UAAWL,MAAQE,QAAQ,OAC3BI,QAASN,MAAQG,MAAM,OACvBI,OAAQ,aACRC,WAAY,QACZC,YAAa,SACbC,UAAW,OACXC,QAAS,KACTC,cAAe,cAEjBjN,cAAW,CACT,CAAEkN,KAAMb,MAASc,KAAM,8BACvB,CAAED,KAAMb,MAAQe,IAAI,EAAG,QAASD,KAAM,eAexCnN,aAAeuJ,SAASC,eAAe,kBAGvCxJ,eAAiBoM,KACjBpM,uBAAyB,EAEzBA,4BAA8B,EAG9BA,UAAO,EACPA,cAAW,GACXA,eAAoB,EACpBA,UAAe,EAwDfA,mBAAiBqN,GACRrN,KAAKsN,aAAaC,KAAMC,GAAMA,EAAEC,OAAOJ,EAAG,QAGnDrN,kBAAgBkN,IACU,IAAjBA,EAAKQ,SAAkC,IAAjBR,EAAKQ,UAAgB,eAGpD1N,mBAAiBqN,IACf,MAAMM,EAAU3N,KAAK4N,SAASC,KAAMC,GAAOA,EAAGZ,KAAKO,OAAOJ,EAAG,QAC7D,QAAOM,GAAUA,EAAQR,IAAO,EAElCnN,eAAiB,CACf0M,UAAW,GACXC,QAAS,IAEX3M,qBAAuB,CACrB0M,UAAW,GACXC,QAAS,IAEX3M,mBAAqB,CACnB0M,UAAW,GACXC,QAAS,IA5FT3M,KAAKJ,cAAcS,SAAS,YAC9B,CAeAiC,WAGE,MAIMyL,EAAc,IAAIC,KAClBC,EAAqBF,EAAYG,WAAa,EACpDlO,KAAKoO,iBANc,CACjB,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIrBL,EAAYG,YAC/ClO,KAAKqO,KAAON,EAAYO,cACxBtO,KAAKuO,UAAYvO,KAAKqO,KAAO,KAC7BrO,KAAK8Y,YAAc7K,EACnBjO,KAAK+Y,WAAa/Y,KAAKqO,KACvBrO,KAAKgZ,iBAAmBhZ,KAAKqO,KAC7BrO,KAAKH,aAAaiP,cAAclH,UAAW7D,IACrCA,GAAoB,wCAAbA,EAAIgL,OACb/O,KAAKgP,gBAAkB,EAMvBhP,KAAKiP,iBAAiBxJ,QALX,CACTO,QAASjC,EAAIiC,QACb+I,KAAMhL,EAAIgL,KACVnD,GAAI7H,EAAImL,MAEwB,GAGtC,MAAM+J,EAAmB9V,aAAaC,QAAQ,eAC9CpD,KAAKkZ,cAAgBjW,KAAKC,MAAM+V,GAEA,wBAA5BjZ,KAAKkZ,cAAc5V,MACrBtD,KAAKmP,kBAYPnP,KAAK6Y,kBAAkBxC,mBAAmBzO,UAAW3D,IACnDjE,KAAKiL,kBAAoBhH,IAEK,aAA5BjE,KAAKkZ,cAAc5V,MAAkD,qBAA3BtD,KAAKkZ,cAAc5V,OAC/DtD,KAAKsW,gBACLtW,KAAKuW,uBAAuB,SAC5BvW,KAAKwW,sBAGT,CA6BA1G,kBAAkBC,EAAahB,GAC7BnK,QAAQC,IAAI,QAASkL,GAGrB/P,KAAKgQ,UAAUtD,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC1GnQ,KAAKgQ,UAAUrD,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GAC9FJ,EAAOK,QACG,4BAARrB,GACF/O,KAAKmZ,6BAA+B,EACpCnZ,KAAKoZ,gBAAgB1M,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAChHnQ,KAAKoZ,gBAAgBzM,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACxGnQ,KAAKwW,qBAAoB,EAAMxW,KAAKgQ,YAErB,oBAARjB,IACP/O,KAAK8W,uBAAyC,WAAhB/G,EAAOK,MAAqB,EAAqB,WAAhBL,EAAOK,MAAqB,EAAqB,UAAhBL,EAAOK,MAAoB,GAAI,EAC/HpQ,KAAKqZ,cAAc3M,UAAYqD,EAAOrD,UAAUuD,GAAK,KAAOF,EAAOrD,UAAUwD,GAAK,GAAK,IAAMH,EAAOrD,UAAUyD,GAC9GnQ,KAAKqZ,cAAc1M,QAAUoD,EAAOpD,QAAQsD,GAAK,KAAOF,EAAOpD,QAAQuD,GAAK,GAAK,IAAMH,EAAOpD,QAAQwD,GACtGnQ,KAAKuW,uBAAuB,SAAS,EAAMvW,KAAKgQ,YAGtD,CAEAY,mBAAmBb,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAEAc,mBAAmBd,GACjBnL,QAAQC,IAAI,SAAUkL,EACxB,CAMAkB,QAAQC,GACN,OAAO,IAAIC,MAAMD,EACnB,CACA/B,kBACEnP,KAAKF,KAAK8D,WAAW,GAAGuD,sBAA6BnH,KAAK8Q,kBAAkB9Q,KAAK+Q,YAAYjN,KAAMC,IAC7FA,IACF/D,KAAKiP,iBAAmBlL,EAAIE,KAAKC,QACjClE,KAAKgP,gBAAkBjL,EAAIE,KAAK+M,wBAItC,CACAI,WAAWnN,GACQ,6BAAbA,EAAK8K,KACP/O,KAAKkM,OAAOmF,cAAc,+BACN,uCAAbpN,EAAK8K,KAEZ/O,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,OAAO5L,KAAKmM,cAAcmF,kBAAkBrN,EAAK2H,GAAG2F,MAAM,EAAG,OAClJtN,EAAKuN,QAEZxR,KAAKkM,OAAOmF,cAAc,wBAAwBrR,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAOtC,QAAQlP,KAAKmM,cAAcmF,kBAAkBrN,EAAKuN,OAAO5F,MAEhK,CACA6F,mBACEzR,KAAKF,KAAKgG,YAAYqB,qBAA6B,IAAIrD,KAAMC,IACvDA,IACF/D,KAAKgP,gBAAkB,IAG7B,CAEA6D,iBACE,MAAMW,EAAS,CACb,CACEpD,MAAO,mBACPiD,MAAO,WAET,CACEjD,MAAO,mBACPiD,MAAO,WAET,CACEjD,MAAO,cACPiD,MAAO,YAILuE,EAAa5X,KAAK6X,mBAAmB/D,OAAO,CAACC,EAAazO,KAC9DyO,EAAYC,KAAK1O,GAAMkN,gBAAiBlN,GAAMmN,gBAAiBnN,GAAMgN,YAC9DyB,GACN,IAEH/T,KAAKsZ,OAAS,IAAIrD,KAAM,qBAAsB,CAC5ClH,KAAM,MACN9K,KAAM,CACJuP,OAAQA,EAAOT,IAAI3C,GAASA,GAAOA,OACnC6H,SAAU,CACR,CACE7H,MAAO,GACPnM,KAAM2T,EACNM,gBAdM,CAAC,UAAW,UAAW,WAe7BC,YAAa,EACboB,aAAc,KAKpBC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,EACTnG,OAAQ,CACNoG,eAAiBC,IACf,MAAM5V,EAAO4V,GAAO5V,KAEpB,OAAIA,GAAMgU,UAAU9F,OAAS,EACpBqB,EAAOT,IAAI,CAAC3C,EAAOc,MAEtB/D,KAAMiD,GAAOA,MACb0J,UAAW1J,GAAOiD,MAClB0G,YAAa3J,GAAOiD,MACpB2G,QAAQ,KAIP,KAGXC,MAAO,CACLN,SAAS,KAIfO,OAAQ,CACNC,EAAG,CACDF,MAAO,CACLN,SAAS,EACTxM,KAAM,+BAGViN,EAAG,CACDH,MAAO,CACLN,SAAS,EACTxM,KAAM,oBAMlB,CACAoJ,uBAAuBxH,EAAciI,EAAgBhH,GAUnDhQ,KAAKF,KAAK6E,IAAI,GAAG2G,wCARL,SAARyD,EACI,gCAAgC/O,KAAKkW,0BAA0BlW,KAAKqO,QAEvC,GAA/BrO,KAAK8W,uBACD,6BAA6B9G,GAAWtD,sBAAsBsD,GAAWrD,UAEzE,yBAAyB3M,KAAK8W,4BAEwBlP,UAAWgI,IACzE,GAAIA,EAAU,CACZ,MAAM8H,EAAoB9H,EAAS3L,KAC7BuP,EAASkE,EAAkB3E,IAAKuE,GAA2BA,EAAM5J,OACjEzJ,EAAOyT,EAAkB3E,IAAKuE,GAA2BA,EAAM1C,OACzD,GAARoC,GACFhX,KAAKqa,OAAOC,UACdta,KAAKqa,OAAS,IAAIpE,KAAM,mBAAoB,CAC1ClH,KAAM,MACN9K,KAAM,CACJuP,OAAQA,EACRyE,SAAU,CACR,CACE7H,MAAO,GACPnM,KAAMA,EACNiU,gBAAiB,UACjBC,YAAa,EACboB,aAAc,KAKpBC,QAAS,CACPU,OAAQ,CACNC,EAAG,CACDF,MAAO,CACLN,SAAS,EACTxM,KAAM,0BAGViN,EAAG,CACDH,MAAO,CACLN,SAAS,EACTxM,KAAM,4BAIZsM,QAAS,CACPC,OAAQ,CACNC,SAAS,EACTnG,OAAQ,GAERyG,MAAO,CACLN,SAAS,EACTxM,KAAM,0BAKf,GAoDP,CACAoN,eAAeC,GACb,MAAMC,EAAS,GACf,QAASvJ,EAAI,EAAGA,EAAIsJ,EAAWtJ,IAG7BuJ,EAAOzG,KADO,QADG,MAAJ9C,EAAa,IACI,kBAGhC,OAAOuJ,CACT,CAEAjE,oBAAoBQ,EAAgBhH,GAOlChQ,KAAKF,KAAK6E,IALNqL,EACI,wEAAwEA,EAAUtD,qBAAqBsD,EAAUrD,UAEjH,GAAGrB,wCAAwCtL,KAAK8Y,oBAAoB9Y,KAAKqO,0BAE9DzG,UAAWgI,IAC5B,GAAIA,GAAYA,EAAS3L,KAAM,CAE7B,IAAIkQ,EADOlK,OAAOmK,KAAKxE,EAAS3L,MACX8O,IAAKsB,GAAWA,EAAErP,QAAQ,KAAM,MACrDmP,EAAYA,EAAUpB,IAAKsB,GACdA,EAAEC,MAAM,KAAKvB,IAAKrQ,GACTA,EAAE,GAAG6R,cACL7R,EAAE6O,MAAM,IAEzBiD,KAAK,MAEV,QAAStD,EAAI,EAAGA,EAAIiD,GAAWhC,OAAQjB,IACjB,cAAhBiD,EAAUjD,KACZiD,EAAUjD,GAAK,eAEnB,MAAMuD,EAAmBxK,OAAOC,OAAO0F,EAAS3L,MAC5C+S,GACFhX,KAAK6Z,MAAMS,UACbta,KAAK6Z,MAAQ,IAAI5D,KAAM,iBAAkB,CACvClH,KAAM,MACN9K,KAAM,CACJuP,OAAQW,EACR8D,SAAU,CACR,CACE7H,MAAO,GACPnM,KAAMwQ,EACNyD,gBAAiBwC,KACjBvC,YAAa,EACboB,aAAc,KAKpBC,QAAS,CACPU,OAAQ,CACNC,EAAG,CACDQ,MAAO,CACLC,SAAU,EACVC,UAAW,GAEbZ,MAAO,CACLN,SAAS,EACTxM,KAAM,kBAGViN,EAAG,CACDO,MAAO,CACLC,SAAU,EACVC,UAAW,GAEbZ,MAAO,CACLN,SAAS,EACTxM,KAAM,uBAIZsM,QAAS,CACPC,OAAQ,CACNC,SAAS,EACTnG,OAAQ,CACNoG,eAAiBC,IACf,MAAM5V,EAAO4V,GAAO5V,KACpB,OAAIA,GAAMgU,UAAU9F,OAAS,EAEpBgC,GAAWpB,IAAI,CAAC3C,EAAYc,MAE/B/D,KAAMiD,EACN4J,QAAQ,KAIP,KAGXC,MAAO,CACLN,SAAS,OAMlB,GAIP,CAEArD,gBACEtW,KAAK6Y,kBAAkBxN,YAAYzD,UAAWgI,IACxCA,GAAYA,EAAS3L,OACvBjE,KAAK+X,aAAenI,GAAU3L,KAC9BjE,KAAK6X,mBAAqBjI,GAAU3L,MAAM4P,yBAC1C7T,KAAK6S,iBAAc,EAGzB,CAACpI,kDA3kBUkO,GAAkBjO,qHAAlBiO,EAAkBhO,mEAgHlBsK,KAAoC,wlEDpIjD9V,8BA+HAA,iCAIAA,iCAGAA,wCAtI2BA,2DA+HZA,kEAIAA,yDAGAA,shLClHFwZ,CAAkB,+BCEXxZ,cACsD,QAC9CA,SAA0BA,QAC9BA,cAAIA,SAA8CA,QAClDA,cAAIA,SAAgBA,QACpBA,cAAIA,SACuBA,8CAJvBA,+CACAA,qEACAA,yBACAA,uGCdrB,IAAM2b,GAA4B,MAAnC,MAAOA,EAUXtb,YAAoBM,EAA2BH,EAA+BC,EACrEC,EAA4Ckb,GADjC/a,YAA2BA,cAA+BA,qBACrEA,oBAA4CA,UAJrDA,UAAYA,KAAK+a,GAAG/F,YAKlBhV,KAAKJ,cAAcS,SAAS,gBAC5BL,KAAKiH,KAAOjH,KAAK+O,KAAKiM,OAAU/T,IAClC,CACA3E,WACEtC,KAAKgD,YAAcC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IACrEpD,KAAKib,4BACP,CACAA,6BACEjb,KAAKF,KAAK8D,WAAW,wCAAwC5D,KAAKiH,QAAQnD,KAAMC,IAC1EA,IACF/D,KAAKkb,aAAenX,EAAIE,OAG9B,CAACwG,kDAzBUqQ,GAA4BpQ,gGAA5BoQ,EAA4BnQ,6UDbzCxL,qBAA+B,SAA/BA,CAA+B,SAA/BA,CAA+B,SAE+BA,gBAAIA,UAC1DA,gBAA4B,SAAsEA,sBAC9FA,YAGRA,iBAA2B,OAA3BA,CAA2B,UAA3BA,CAA2B,QAGZA,iCAAoBA,YAG/BA,gBAAK,WAALA,CAAK,WAALA,CAAK,WAALA,CAAK,SAIeA,uBAAUA,QACdA,eAAIA,iBAAIA,QACRA,eAAIA,mBAAMA,QACVA,eAAIA,wBAAWA,UAEnBA,wBAQJA,uBAP0BA,mxFCV7B2b,CAA4B,8BCNlC,IAAMK,EAAiB,MAAxB,MAAOA,EAEX3b,YAAqB0M,EAAsBkP,GAAtBpb,cAAsBA,kBAAyB,CAEpEqb,mBAGE,GAAGrb,KAAKob,YAAYE,WACpB,CACE,IAAIC,EAAQvb,KAAKob,YAAYI,oBAC7B,OAAsB,GAAnBD,EAAME,WAAqC,GAAnBF,EAAME,WAAqC,GAAnBF,EAAME,WAAqC,GAAnBF,EAAME,YAM/Ezb,KAAKkM,OAAO6I,SAAS,CAAC,cACf,GAKP,YAAK7I,OAAO6I,SAAS,CAAC,cACf,CAIb,CAACtK,kDA3BU0Q,GAAiBzQ,gEAAjByQ,EAAiB1P,QAAjB0P,EAAiB,qBAFhB,gBAEDA,CAAiB,KCG9B,MAAMO,GAAiB,CACrB,CAACC,KAAK,GAAGC,UAAUC,KACnB,CAACF,KAAK,YAAYG,YAAY,CAACC,KAAeH,UAAUjD,IACxD,CAACgD,KAAK,qBAAqBG,YAAY,CAACC,KAAgBH,UAAU7P,GAClE,CAAC4P,KAAK,aAAaG,YAAY,CAACC,KAAgBH,UAAUrc,IAC1D,CAACoc,KAAK,yBAA0BG,YAAY,CAACC,KAAgBH,UAAUd,IACvE,CAAEa,KAAM,SAAUN,iBAAiB,CAACF,GAAoBa,aAAc,IAAMC,sDAAuCnY,KAAKuJ,GAAKA,EAAE6O,iBAC/H,CAAEP,KAAM,eAAgBN,iBAAiB,CAACF,GAAoBa,aAAc,IAAMC,8DAAmDnY,KAAKuJ,GAAKA,EAAE8O,sBACjJ,CAAER,KAAM,UAAWN,iBAAiB,CAACF,GAAoBa,aAAc,IAAMC,sEAAmCnY,KAAKuJ,GAAKA,EAAE+O,gBAC5H,CAAET,KAAM,gBAAiBN,iBAAiB,CAACF,GAAoBa,aAAc,IAAMK,8BAAiDvY,KAAKuJ,GAAKA,EAAEiP,sBAChJ,CAAEX,KAAM,MAAON,iBAAiB,CAACF,GAAoBa,aAAc,IAAMK,8BAA2BvY,KAAKuJ,GAAKA,EAAEkP,YAChH,CAAEZ,KAAM,aAAcN,iBAAiB,CAACF,GAAoBa,aAAc,IAAMC,8DAAyCnY,KAAKuJ,GAAKA,EAAEmP,kBACrI,CAAEb,KAAM,aAAcN,iBAAiB,CAACF,GAAoBa,aAAc,IAAMC,sDAAyCnY,KAAKuJ,GAAKA,EAAEoP,mBAQhI,IAAMC,GAAqB,MAA5B,MAAOA,EAAqBjS,kDAArBiS,EAAqB,sCAArBA,IAAqBjS,wCAHtBkS,cAAsBjB,IACtBiB,eAECD,CAAqB,qDCY3B,IAAME,GAAc,MAArB,MAAOA,EAAcnS,kDAAdmS,EAAc,sCAAdA,IAAcnS,wCAZvBoS,KACAH,GACAI,KACAC,KACAC,IACAC,KACAC,eACAC,MACAC,KACAC,eAGST,CAAc,wEClCpB,IAAMU,EAAa,MAApB,MAAOA,EAGX9d,YAAoBqL,gBADpB7K,aAAU+K,WAIV,CAEAwS,UAAUC,EAAWC,EAAuB,IAE1C,OAAOzd,KAAK6K,MAAMlG,IAAI3E,KAAK0d,QAAQ,2BAA2BD,IAAiB,CAAED,UACnF,CACAG,kBAAkBH,GAEhB,OAAOxd,KAAK6K,MAAMlG,IAAI3E,KAAK0d,QAAQ,qCAAsC,CAAEF,UAC7E,CACAI,aAAa3Z,GAEX,OAAOjE,KAAK6K,MAAMlD,KAAK3H,KAAK0d,QAAQ,2BAA2BzZ,EACjE,CAGA4Z,wBAAwBjS,GACtB,OAAO5L,KAAK6K,MAAMlG,IAAI,GAAG3E,KAAK0d,8CAA8C9R,IAC9E,CAGAkS,yBAAyB7Z,EAAS2H,GAChC,OAAO5L,KAAK6K,MAAMkT,IAAI,GAAG/d,KAAK0d,yCAAyC9R,KAAM3H,EAC/E,CAGA+Z,aAAa/Z,EAAS2H,GACpB,OAAO5L,KAAK6K,MAAMkT,IAAI,GAAG/d,KAAK0d,kCAAkC9R,KAAM3H,EACxE,CAEAga,aAAarS,GAEX,OAAO5L,KAAK6K,MAAMqT,OAAO,GAAGle,KAAK0d,kCAAkC9R,KACrE,CAEAuS,uBAEE,OAAOne,KAAK6K,MAAMlG,IAAI3E,KAAK0d,QAAQ,iCACrC,CAEAU,gBAAgBxS,GAEd,OAAO5L,KAAK6K,MAAMlG,IAAI,GAAG3E,KAAK0d,wCAAwC9R,yBACxE,CAEAyS,eAAenP,GAEb,OAAOlP,KAAK6K,MAAMlG,IAAI,GAAG3E,KAAK0d,mDAAmDxO,IACnF,CAEAoP,gBAAgBpP,EAAQhH,GAEtB,OAAOlI,KAAK6K,MAAMlD,KAAK,GAAG3H,KAAK0d,mDAAmDxO,IAAMhH,EAC1F,CAACuC,kDA3DU6S,GAAaiB,oDAAbjB,EAAa7R,QAAb6R,EAAa,qBAFZ,gBAEDA,CAAa,qBCR1B,0BACA,IACA,cACAvY,SAIA,CAHA,MAAI+C,GAEJ,YADA0W,IAEA,CACAC,OACAC,KAEAzC,4BAEA,CACe,cACf,kBACA,WACA0C,YACA,iCACA,mBACA,cACAC,qBACA,CACA,cACAA,sBACA,CACAC,SACA,EACA,CACA","names":["i0","ctx_r74","ctx_r76","ctx_r77","MyProfileComponent","constructor","fb","_crudservice","toastr","_titleservice","notification","crud","sessionService","this","require","FormData","alpha2","name","setTitle","profileForm","group","first_name","Validators","last_name","address","country","phone_no","email","changeEmailForm","verifyOtpForm","otp","changePasswordForm","current_password","new_password","confirm_password","individualForm","country_code","address_2","state","city","zip","product_name","tool_serial_number","businessForm","bussness_name","tax_number","company_number","win_ols_license_number","resellerForm","subDealerForm","resellerId","ngOnInit","countries","all","sort","a","b","obj","forEach","element","moveCountryOnTop","usersdetail","JSON","parse","localStorage","getItem","userRole","role","controls","setValue","additional","setPhoneNumber","address_user","getRequest","cusRequestUrl","then","res","products","data","results","image","patchValue","phone","countryCode","form","oldCountryCode","number","includes","get","console","log","getPhoneNumber","value","replace","setCountryCode","event","dialCode","index","findIndex","item","removedObject","splice","unshift","individualFormFormSubmit","individualData","individual_profile","individual","postRequest","success","message","timeOut","setItem","stringify","updateProfileImg","businessFormSubmit","invalid","businessData","business_profile","business","captcha_response","is_evc_customer","is_evc_reseller_customer","resellerFormSubmit","resellerData","detail","reseller","uuid","putRequest","requestUrl","subDealerFormSubmit","subDellerData","dealer","parent","profileFormSubmit","formData","append","post","subscribe","err","error","onFileChange","target","files","file","reader","FileReader","onload","e","result","readAsDataURL","addmobileResellerError","addmobileResellererror","mobile_no","setErrors","incorrect","url","addphoneError","addphoneerror","getPrimaryPhone","addphoneIndividualError","addphoneindividualerror","changeEmailFormSubmit","showOtpBox","verifyOtpFormSubmit","document","getElementById","click","replaceKey","changePasswordFormSubmit","valid","adminBody","encryption","markAllControlsAsTouched","formGroup","Object","values","control","markAsTouched","FormGroup","getPrimaryIndividualmobile","getPrimaryIndividualPhone","getEVC","static","core","selectors","CustomerIndividualService","_http","apiService","environment","BehaviorSubject","notificationCount","asObservable","broadCastNotification","next","getCounts","URLS","getMyToolUsage","getSupportsTicketStatus","factory","CustomerResellerService","getUnusedkeySubdealer","id","_pageNo","getSubDealerChartData","ResellerDashboardComponent","resellerService","adminService","router","xorEncryption","monthList","dayjs","subtract","startOf","endOf","firstDay","startDate","endDate","format","applyLabel","cancelLabel","fromLabel","toLabel","displayFormat","date","text","add","m","invalidDates","some","d","isSame","month","tooltip","tooltips","find","tt","currentDate","Date","currentMonthNumber","getMonth","_this","currentMonthName","year","getFullYear","yearCount","ticketStatusMonth","vehicleTunedMonth","usedKeysMonth","usedKeysYear","vehicleTunedYear","ticketStatusYear","onMessageUser","type","unseenNotiCount","notificationList","ids","getNotification","getSubdealerChart","getCharts","getDynamicDrilldown","vehiclesTuned","ngAfterViewInit","getRightPanelData","getTeamData","getTopSubdealer","response","top_sub_dealers","datesUpdatedRange","$event","dateRange","$y","$M","$D","label","usedKeysMonthRange","UKBDdateRange","vehicleTunedMonthRange","myVTBMdateRange","selectedRangeSupportsTicketsByStatus","mySTSdateRange","getStatusChart","datesUpdatedSingle","datesUpdatedInline","page","pageSize","un_seen_message_count","counter","i","Array","redirectTo","navigateByUrl","xorEncryptDecrypt","slice","ticket","readNotification","changePage","pageNumber","currentPage","nextPage","getTotalPages","previousPage","Math","ceil","subDealersName","length","itemsPerPage","_this2","evc_credit","unallocated_keys_sub_dealer","file_key_credit","function_credit","unallocatedSubdealerGraph","reDraw","getDashboardCards","getCreditChart","subdealerData","map","fileKeyCreditData","credit","functionCredits","evcCredits","unusedSubdealerKey","color","responseData","credit_used_by_month","labels","file_credit","usedKeyByDate","userDetails","reseller_dealer_credit","available_credit_balance","reduce","accumulator","push","myAvailableCredits","_this3","keysArray","keys","r","split","toUpperCase","join","valuesArray","supportTickets","vehicle_tuned","count","vehicleTunedMonthGraph","viewCredit","navigate","queryParams","NgxDaterangepickerBootstrapDirective","ctx","BusinessDashboardComponent","CustomerBusinessService","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Chart","fileSubmitedMonth","toolUsageMonth","toolUsageYear","notificationCount$","getCardsCount","getMyFileSubmittedData","getMySupportsTicket","uKdateRange","selectedRangeSupportTicketsStatus","MSTBSdateRange","selectedRangeMyToolUsage","MyTUdateRange","fileSubmitedMonthRange","MyFSdateRange","edit","originalData","months","fileCredits","usedByKey","getMyTools","entry","tuning_tool_used","myToolUsage","ticketByStatus","FileSubmittedData","myFilesSubmitted","allCredits","getCreditChartData","creditBalanceChart","getCountData","SubDealerDashboardComponent","datasets","backgroundColor","borderWidth","hoverBackgroundColor","selectedRangeSupportTicketsByStatus","mySTS","selectedRangeToolUsage","myTUDateRange","myFileSDateRange","registerables","DashboardComponent","ticketService","individualService","statusMonth","statusYear","fileSubmitedYear","user","customerRoles","selectedRangeCalendarCenter","mySTBSdateRange","myFSdateRange","chart2","borderRadius","options","plugins","legend","display","generateLabels","chart","fillStyle","strokeStyle","hidden","title","scales","x","y","chart1","destroy","generateColors","numColors","colors","chartColors","ticks","stepSize","precision","ViewSubDealerCreditComponent","ar","_value","getSpentHistoryByDashboard","spendhistory","CustomerRootGuard","authservice","canActivateChild","loggedIn","users","getLoggedInDetail","user_type","routes","path","component","CustomerComponent","canActivate","CustomerGuard","loadChildren","Promise","MyCreditModule","MyFileServiceModule","SupportModule","__webpack_require__","KnowledgeBaseModule","EvcModule","SubDealerModule","ReportLogModule","CustomerRoutingModule","RouterModule","CustomerModule","CommonModule","FormsModule","ReactiveFormsModule","Ng2TelInputModule","ChartsModule","NgxDaterangepickerBootstrapModule","NgxPaginationModule","SharedPipeModule","SharedModule","TicketService","getTicket","params","searchFilters","baseUrl","getTicketOnFilter","createTicket","getTicketForFileRequest","updateTicketFromCustomer","put","updateTicket","deleteTicket","delete","getAllTicketCategory","getConversation","getAttachments","saveAttachments","_angular_core__WEBPACK_IMPORTED_MODULE_1__","reject","info","resolve","args","asyncGeneratorStep","_next"],"sourceRoot":"webpack:///","sources":["./src/app/customer/my-profile/my-profile.component.html","./src/app/customer/my-profile/my-profile.component.ts","./src/app/customer/customer-individual.service.ts","./src/app/customer/customer-reseller.service.ts","./src/app/customer/Dashboard/reseller-dashboard/reseller-dashboard.component.html","./src/app/customer/Dashboard/reseller-dashboard/reseller-dashboard.component.ts","./src/app/customer/Dashboard/business-dashboard/business-dashboard.component.html","./src/app/customer/Dashboard/business-dashboard/business-dashboard.component.ts","./src/app/customer/Dashboard/sub-dealer-dashboard/sub-dealer-dashboard.component.html","./src/app/customer/Dashboard/sub-dealer-dashboard/sub-dealer-dashboard.component.ts","./src/app/customer/Dashboard/dashboard/dashboard.component.html","./src/app/customer/Dashboard/dashboard/dashboard.component.ts","./src/app/customer/Dashboard/view-sub-dealer-credit/view-sub-dealer-credit.component.html","./src/app/customer/Dashboard/view-sub-dealer-credit/view-sub-dealer-credit.component.ts","./src/app/guards/customerRoot.guard.ts","./src/app/customer/customer-routing.module.ts","./src/app/customer/customer.module.ts","./src/app/customer/services/ticket.service.ts","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["<section class=\"admin-profile\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/role\" routerLinkActive=\"active\">My Profile</a></li>\n    </ul>\n    <div class=\"profile-inner\">\n        <ul>\n            <li (click)=\"tab='profile'\" [ngClass]=\"tab =='profile'?'tactive':'tnactive'\">\n                <a>My Profile</a>\n            </li>\n            <li (click)=\"tab='cpwd'\" [ngClass]=\"tab =='cpwd'?'tactive':'tnactive'\">\n                <a>Change Password</a>\n            </li>\n        </ul>\n\n        <div *ngIf=\"tab=='profile'\">\n            <div class=\"addUser\">\n                <div class=\"profile-info\">\n                    <div class=\"upload-pic\">\n                        <img [src]=\"image || '../../../../assets/images/icon/avtarIcon.jpeg'\" />\n                        <div>\n                            <div class=\"uploadtext\">\n                                <img src=\"assets/images/icon/camraIcon.png\" alt=\"upload\" />\n                            </div>\n                            <input type=\"file\" (change)=\"onFileChange($event)\"\n                                accept=\"image/png, image/gif, image/jpeg\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"formFields\">\n\n                    <form [formGroup]=\"individualForm\" (ngSubmit)=\"individualFormFormSubmit()\"\n                        *ngIf=\"userRole=='INDIVIDUAL_CUSTOMER'\">\n\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                [class.is-invalid]=\"individualForm.controls['first_name'].invalid && individualForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['first_name'].dirty && individualForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                [class.is-invalid]=\"individualForm.controls['last_name'].invalid && individualForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['last_name'].dirty && individualForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n                        <div class=\"emaildiv\">\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                [class.is-invalid]=\"individualForm.controls['email'].invalid && individualForm.controls['email'].touched\"\n                                placeholder=\"Email\" readonly>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['email'].dirty && individualForm.controls['email'].hasError('pattern')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['email'].dirty && individualForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                        </div>\n\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                            <textarea class=\"form-control\" formControlName=\"address\"\n                                [class.is-invalid]=\"individualForm.controls['address'].invalid && individualForm.controls['address'].touched\"\n                                placeholder=\"Address Line 1\" readonly></textarea>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                [class.is-invalid]=\"individualForm.controls['address_2'].invalid && individualForm.controls['address_2'].touched\"\n                                placeholder=\"Address Line 2\" readonly></textarea>\n                        </div>\n\n                        <div class=\"cityStateCountry\" style=\"width:100%; display:flex; justify-content: space-between;\">\n                            <div>\n                                <label for=\"city\" class=\"form-label\">City</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                    [class.is-invalid]=\"individualForm.controls['city'].invalid && individualForm.controls['city'].touched\"\n                                    placeholder=\"City\" readonly>\n                            </div>\n                            <div>\n                                <label for=\"country\" class=\"form-label\">State</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                    [class.is-invalid]=\"individualForm.controls['state'].invalid && individualForm.controls['state'].touched\"\n                                    placeholder=\"State\" readonly>\n                            </div>\n                            <div>\n                                <label for=\"country\" class=\"form-label\">Country</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"country\" readonly>\n                            </div>\n                        </div>\n\n                        <div>\n                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                                [class.is-invalid]=\"individualForm.controls['zip'].invalid && individualForm.controls['zip'].touched\"\n                                placeholder=\"Zip / Postcode\" readonly>\n                        </div>\n\n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:individualForm}\"></ng-container>\n                        \n                        <div>\n                            <label for=\"product_name\" class=\"form-label\">Product Name</label>\n                            <select class=\"form-control\" formControlName=\"product_name\">\n                                <option selected disabled value=\" \">Select Product Name</option>\n                                <option *ngFor=\"let product of products\" [value]=\"product.product_name\">\n                                    {{product.product_name}} </option>\n                            </select>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['product_name'].dirty && individualForm.controls['product_name'].hasError('required')\">\n                                Select product name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"tool_serial_number\" class=\"form-label\">Tool Serial number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tool_serial_number\"\n                                [class.is-invalid]=\"individualForm.controls['tool_serial_number'].invalid && individualForm.controls['tool_serial_number'].touched\"\n                                placeholder=\"Tool Serial number\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['tool_serial_number'].dirty && individualForm.controls['tool_serial_number'].hasError('required')\">\n                                Enter Tool Serial number.\n                            </small>\n                        </div>\n\n                        <span style=\"font-size: 13px; padding-top: 3px;\">Please contact support&#64;viezu.com, if you wish to update your address details.</span>\n                        <div class=\"submitReset\">\n                        <button class=\"btn-primary\" type=\"submit\">Update</button>\n                        </div>\n                    </form>\n\n                    <form [formGroup]=\"businessForm\" *ngIf=\"userRole=='BUSINESS_CUSTOMER'\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                            <input type=\"text\" class=\"form-control\" readonly [value]=\"businessForm.controls['bussness_name'].value\"\n                                placeholder=\"Business Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['bussness_name'].dirty && businessForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"first_name\" class=\"form-label\">Contact First Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"first_name\"\n                                [class.is-invalid]=\"businessForm.controls['first_name'].invalid && businessForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['first_name'].dirty && businessForm.controls['first_name'].hasError('required')\">\n                                Please enter First name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last_name\" class=\"form-label\">Contact Last Name </label>\n                            <input type=\"text\" formControlName=\"last_name\" class=\"form-control\"\n                                [class.is-invalid]=\"businessForm.controls['last_name'].invalid && businessForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['last_name'].dirty && businessForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n\n                        <div>\n                            <label for=\"business_email\" class=\"form-label\">Contact Email</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\" readonly\n                                [class.is-invalid]=\"businessForm.controls['email'].invalid && businessForm.controls['email'].touched\"\n                                placeholder=\"Email\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['email'].dirty && businessForm.controls['email'].hasError('pattern')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['email'].dirty && businessForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                        </div>\n\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                            <textarea class=\"form-control\" formControlName=\"address\"\n                                [class.is-invalid]=\"businessForm.controls['address'].invalid && businessForm.controls['address'].touched\"\n                                placeholder=\"Address Line 1\" readonly></textarea>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                [class.is-invalid]=\"businessForm.controls['address_2'].invalid && businessForm.controls['address_2'].touched\"\n                                placeholder=\"Address Line 2\" readonly></textarea>\n                        </div>\n\n                        <div class=\"cityStateCountry\" style=\"width:100%; display:flex; justify-content: space-between;\">\n                            <div>\n                                <label for=\"city\" class=\"form-label\">City</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                    [class.is-invalid]=\"businessForm.controls['city'].invalid && businessForm.controls['city'].touched\"\n                                    placeholder=\"City\" readonly>\n                            </div>\n                            <div>\n                                <label for=\"state\" class=\"form-label\">State</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                    [class.is-invalid]=\"businessForm.controls['state'].invalid && businessForm.controls['state'].touched\"\n                                    placeholder=\"State\" readonly>\n                            </div>\n                            <div>\n                                <label for=\"country\" class=\"form-label\">Country</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"country\" readonly>\n                            </div>\n                        </div>\n\n                        <div>\n                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\" maxlength=\"10\" size=\"10\"\n                                [class.is-invalid]=\"businessForm.controls['zip'].invalid && businessForm.controls['zip'].touched\"\n                                placeholder=\"Zip / Postcode\" readonly>\n                        </div>\n\n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:businessForm}\"></ng-container>\n\n                        \n                        <div>\n                            <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                                [class.is-invalid]=\"businessForm.controls['tax_number'].invalid && businessForm.controls['tax_number'].touched\"\n                                placeholder=\"Tax number\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['tax_number'].dirty && businessForm.controls['tax_number'].hasError('required')\">\n                                Please enter Tax number.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"company_number\" class=\"form-label\">Company number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                                [class.is-invalid]=\"businessForm.controls['company_number'].invalid && businessForm.controls['company_number'].touched\"\n                                placeholder=\"Company number\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['company_number'].dirty && businessForm.controls['company_number'].hasError('required')\">\n                                Please enter Company number.\n                            </small>\n                        </div>\n                        <div class=\"\">\n                            <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                                [class.is-invalid]=\"businessForm.controls['win_ols_license_number'].invalid && businessForm.controls['win_ols_license_number'].touched\"\n                                placeholder=\"WinOLS License number\"\n                                [readonly]=\"usersdetail.is_evc_customer && usersdetail.is_evc_reseller_customer\">\n                            <span style=\"font-size: 13px; padding-top: 3px;;\">Applicable to EVC Software Operators only\n                                who are\n                                registered as EVC Resellers</span><br>\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['win_ols_license_number'].dirty && businessForm.controls['win_ols_license_number'].hasError('required')\">\n                                Please enter WinOLS License number.\n                            </small>\n                        </div>\n\n                        <div class=\"d-flex align-items-center\"\n                            *ngIf=\"!usersdetail.is_evc_customer || !usersdetail.is_evc_reseller_customer\">\n\n                            <button type=\"submit\" \n                                [disabled]=\"!businessForm.value.win_ols_license_number\"\n                                (click)=\"getEVC()\" \n                                class=\"evcSell\">\n                                EVC reseller\n                            </button>\n                        </div>\n                        \n                        <span style=\"font-size: 13px; padding-top: 3px;\">Please contact support&#64;viezu.com, if you wish to update your address details.</span>\n                        <div class=\"submitReset\">\n                            <button class=\"btn-primary\" type=\"submit\" (click)=\"businessFormSubmit()\">Update</button>\n                        </div>\n                    </form>\n\n                    <form [formGroup]=\"resellerForm\" *ngIf=\"userRole == 'RESELLER'\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                            <input type=\"text\" class=\"form-control\" readonly [value]=\"resellerForm.controls['bussness_name'].value\"\n                                placeholder=\"Business Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['bussness_name'].touched && resellerForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                [class.is-invalid]=\"resellerForm.controls['first_name'].invalid && resellerForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['first_name'].touched && resellerForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                [class.is-invalid]=\"resellerForm.controls['last_name'].invalid && resellerForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['last_name'].touched && resellerForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                [class.is-invalid]=\"resellerForm.controls['email'].invalid && resellerForm.controls['email'].touched\"\n                                placeholder=\"Email\" readonly>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['email'].dirty && resellerForm.controls['email'].hasError('pattern')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['email'].touched && resellerForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                            <textarea class=\"form-control\" formControlName=\"address\"\n                                [class.is-invalid]=\"resellerForm.controls['address'].invalid && resellerForm.controls['address'].touched\"\n                                placeholder=\"Address Line 1\" readonly></textarea>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['address'].touched && resellerForm.controls['address'].hasError('required')\">\n                                Please enter Address Line 1.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                [class.is-invalid]=\"resellerForm.controls['address_2'].invalid && resellerForm.controls['address_2'].touched\"\n                                placeholder=\"Address Line 2\" readonly></textarea>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['address_2'].touched && resellerForm.controls['address_2'].hasError('required')\">\n                                Please enter Address Line 2.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"city\" class=\"form-label\">City</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                [class.is-invalid]=\"resellerForm.controls['city'].invalid && resellerForm.controls['city'].touched\"\n                                placeholder=\"City\" readonly>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['city'].touched && resellerForm.controls['city'].hasError('required')\">\n                                Please enter City.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"country\" class=\"form-label\">State</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                [class.is-invalid]=\"resellerForm.controls['state'].invalid && resellerForm.controls['state'].touched\"\n                                placeholder=\"State\" readonly>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['state'].touched && resellerForm.controls['state'].hasError('required')\">\n                                Please enter State.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"country\" class=\"form-label\">Country</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"country\" readonly>\n                        </div>\n                        <div>\n                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                                [class.is-invalid]=\"resellerForm.controls['zip'].invalid && resellerForm.controls['zip'].touched\"\n                                placeholder=\"Zip / Postcode\" readonly>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['zip'].touched && resellerForm.controls['zip'].hasError('required')\">\n                                Please enter Zip / Postcode.\n                            </small>\n                        </div>\n          \n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:resellerForm}\"></ng-container>\n\n                        <div>\n                            <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                                [class.is-invalid]=\"resellerForm.controls['tax_number'].invalid && resellerForm.controls['tax_number'].touched\"\n                                placeholder=\"Tax number\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['tax_number'].touched && resellerForm.controls['tax_number'].hasError('required')\">\n                                Please enter Tax number.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"company_number\" class=\"form-label\">Company number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                                [class.is-invalid]=\"resellerForm.controls['company_number'].invalid && resellerForm.controls['company_number'].touched\"\n                                placeholder=\"Company number\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['company_number'].touched && resellerForm.controls['company_number'].hasError('required')\">\n                                Please enter Company number.\n                            </small>\n                        </div>\n                        <div class=\"alignLeft\">\n                            <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License\n                                number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                                [class.is-invalid]=\"resellerForm.controls['win_ols_license_number'].invalid && resellerForm.controls['win_ols_license_number'].touched\"\n                                placeholder=\"WinOLS License number\">\n                            <span style=\"font-size: 13px; padding-top: 3px;\">Applicable to EVC Software Operators only\n                                who are registered as EVC Resellers</span><br>\n\n                        </div>\n\n                        <span style=\"font-size: 13px; padding-top: 3px;\">Please contact support&#64;viezu.com, if you wish to update your address details.</span>\n\n                        <div class=\"submitReset\">\n                            <button class=\"btn-primary\" type=\"submit\" (click)=\"resellerFormSubmit()\">Update</button>\n                        </div>\n                    </form>\n\n\n                    <form [formGroup]=\"subDealerForm\" *ngIf=\"userRole == 'DEALER'\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                            <input type=\"text\" class=\"form-control\" readonly [value]=\"subDealerForm.controls['bussness_name'].value\"\n                                placeholder=\"Business Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['bussness_name'].touched && subDealerForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                [class.is-invalid]=\"subDealerForm.controls['first_name'].invalid && subDealerForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['first_name'].touched && subDealerForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                [class.is-invalid]=\"subDealerForm.controls['last_name'].invalid && subDealerForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['last_name'].touched && subDealerForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                [class.is-invalid]=\"subDealerForm.controls['email'].invalid && subDealerForm.controls['email'].touched\"\n                                placeholder=\"Email\" readonly>\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['email'].dirty && subDealerForm.controls['email'].hasError('pattern')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['email'].touched && subDealerForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                            <textarea class=\"form-control\" readonly formControlName=\"address\"\n                                [class.is-invalid]=\"subDealerForm.controls['address'].invalid && subDealerForm.controls['address'].touched\"\n                                placeholder=\"Address Line 1\"></textarea>\n                            <span style=\"font-size: 13px; padding-top: 3px;\">Please contact support&#64;viezu.com, if you wish to update your address details.</span>\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['address'].touched && subDealerForm.controls['address'].hasError('required')\">\n                                Please enter Address Line 1.\n                            </small>\n                        </div>\n\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                            <textarea class=\"form-control\" readonly formControlName=\"address_2\"\n                                [class.is-invalid]=\"subDealerForm.controls['address_2'].invalid && subDealerForm.controls['address_2'].touched\"\n                                placeholder=\"Address Line 2\"></textarea>\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['address_2'].touched && subDealerForm.controls['address_2'].hasError('required')\">\n                                Please enter Address Line 2.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"city\" class=\"form-label\">City</label>\n                            <input type=\"text\" readonly class=\"form-control\" formControlName=\"city\"\n                                [class.is-invalid]=\"subDealerForm.controls['city'].invalid && subDealerForm.controls['city'].touched\"\n                                placeholder=\"City\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['city'].touched && subDealerForm.controls['city'].hasError('required')\">\n                                Please enter City.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"country\" class=\"form-label\">State</label>\n                            <input type=\"text\" readonly class=\"form-control\" formControlName=\"state\"\n                                [class.is-invalid]=\"subDealerForm.controls['state'].invalid && subDealerForm.controls['state'].touched\"\n                                placeholder=\"State\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['state'].touched && subDealerForm.controls['state'].hasError('required')\">\n                                Please enter State.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"country\" class=\"form-label\">Country</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"country\" readonly>\n                        </div>\n                        <div>\n                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                            <input type=\"text\" readonly class=\"form-control\" formControlName=\"zip\"\n                                [class.is-invalid]=\"subDealerForm.controls['zip'].invalid && subDealerForm.controls['zip'].touched\"\n                                placeholder=\"Zip / Postcode\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['zip'].touched && subDealerForm.controls['zip'].hasError('required')\">\n                                Please enter Zip / Postcode.\n                            </small>\n                        </div>\n\n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:subDealerForm}\"></ng-container>\n\n                        <div class=\"alignLeft\">\n                            <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License\n                                number</label>\n                                <!-- Build Test -->\n                            <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                                [class.is-invalid]=\"subDealerForm.controls['win_ols_license_number'].invalid && subDealerForm.controls['win_ols_license_number'].touched\"\n                                placeholder=\"WinOLS License number\">\n                            <span style=\"font-size: 13px; padding-top: 3px;\">Applicable to EVC Software Operators only\n                                who are\n                                registered as EVC Resellers</span><br>\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['win_ols_license_number'].touched && subDealerForm.controls['win_ols_license_number'].hasError('required')\">\n                                Please enter WinOLS License number.\n                            </small>\n                        </div>\n                       \n\n                        <div class=\"submitReset\">\n                            <button class=\"btn-primary\" type=\"submit\" (click)=\"subDealerFormSubmit()\">Update</button>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"tab=='cpwd'\" class=\"chpassword\">\n            <div class=\"formFields\">\n                <form [formGroup]=\"changePasswordForm\">\n                    <div>\n                        <label for=\"opwd\" class=\"form-label\">Current Password</label>\n                        <input [type]=\"textType\" class=\"form-control\" id=\"opwd\" value=\"12345678\"\n                            formControlName=\"current_password\">\n                        <i class=\"fa fa-eye eyeIcon\" (click)=\"textType=(textType=='password'?'text':'password')\"></i>\n                        <div\n                            *ngIf=\"changePasswordForm.get('current_password')?.invalid && (changePasswordForm.get('current_password')?.touched || changePasswordForm.get('current_password')?.dirty)\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"changePasswordForm.get('current_password')?.hasError('required')\">Current\n                                password required</small>\n                        </div>\n                    </div>\n                    <div>\n                        <label for=\"npwd\" class=\"form-label\">New Password</label>\n                        <input [type]=\"textType2\" class=\"form-control\" id=\"npwd\" value=\"12345678\"\n                            formControlName=\"new_password\">\n                        <i class=\"fa fa-eye eyeIcon\" (click)=\"textType2=(textType2=='password'?'text':'password')\"></i>\n                        <div\n                            *ngIf=\"changePasswordForm.get('new_password')?.invalid && (changePasswordForm.get('new_password')?.touched || changePasswordForm.get('new_password')?.dirty)\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"changePasswordForm.get('new_password')?.hasError('required')\">New password\n                                required </small>\n                            <ng-container *ngTemplateOutlet=\"newErrors;context:{form:changePasswordForm,control:'new_password'}\"></ng-container>\n\n                        </div>\n                    </div>\n                    <div>\n                        <label for=\"cpwd\" class=\"form-label\">Confirm Password</label>\n                        <input [type]=\"textType3\" class=\"form-control\" id=\"cpwd\" value=\"12345678\"\n                            formControlName=\"confirm_password\">\n                        <i class=\"fa fa-eye eyeIcon\" (click)=\"textType3=(textType3=='password'?'text':'password')\"></i>\n                        <div\n                            *ngIf=\"changePasswordForm.get('confirm_password')?.invalid && (changePasswordForm.get('confirm_password')?.touched || changePasswordForm.get('confirm_password')?.dirty)\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"changePasswordForm.get('confirm_password')?.hasError('required')\">Confirm\n                                password required </small>\n                            <!-- <ng-container *ngTemplateOutlet=\"newErrors;context:{form:changePasswordForm,control:'confirm_password'}\"></ng-container> -->\n\n                        </div>\n                        <div>\n                            <small class=\"text-danger\"\n                            *ngIf=\"changePasswordForm.controls['confirm_password'].dirty && (changePasswordForm.controls['confirm_password'].value != changePasswordForm.controls['new_password'].value)\">\n                            Password not matched.\n                          </small>\n                        </div>\n                    </div>\n                    <div class=\"submitReset\">\n                        <button class=\"btn-secondary\" (click)=\"tab='profile';changePasswordForm.reset()\">Cancel</button>\n                        <button class=\"btn-primary\" type=\"submit\" (click)=\"changePasswordFormSubmit()\">Update</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>\n\n\n<ng-template #newErrors let-control=\"control\" let-form=\"form\">\n    <ng-container *ngIf=\"form.hasError('pattern', control)\">\n      <p class=\"mb-0 mt-2\">Password must needs to:</p>\n      <div class=\"ps-3\">\n        <small style=\"font-size: .9rem;\"\n          *ngIf=\"\n          (form.get(control)?.value | passwordValidator).includes('LOWERCASE') ||\n          (form.get(control)?.value | passwordValidator).includes('UPPERCASE')\"\n          class=\"text-danger\">\n          include both lower and upper case characters.\n        </small>\n        <p class=\"mb-0\">\n          <small style=\"font-size: .9rem;\"\n            *ngIf=\"\n            (form.get(control)?.value | passwordValidator).includes('NUMBER') ||\n            (form.get(control)?.value | passwordValidator).includes('SPECIAL')\"\n            class=\"text-danger\">\n              include at least one number and one special characters (! &#64; # $ % ^ & or *).\n          </small>\n        </p>\n        <p class=\"mb-0\">\n          <small style=\"font-size: .9rem;\"\n            *ngIf=\"(form.get(control)?.value | passwordValidator).includes('MIN')\"\n            class=\"text-danger\">\n            be at least 8 characters long.\n          </small>\n        </p>\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #phone let-form>\n    <div [formGroup]=\"form\">\n        <label for=\"phone\" class=\"form-label\">Phone</label>\n        <input class=\"form-control\" type=\"tel\" formControlName=\"phone_no\"\n            [class.is-invalid]=\"form.controls['phone_no'].invalid && form.controls['phone_no'].touched\"\n            pattern=\"^\\+?[\\d\\s]*$\"\n            placeholder=\" \" ng2TelInput\n            [ng2TelInputOptions]=\"{separateDialCode:true,initialCountry:'GB'}\"\n            (countryChange)=\"setCountryCode($event, form)\">\n            <small class=\"text-danger\"\n                *ngIf=\"form.controls['phone_no'].dirty && form.controls['phone_no'].hasError('pattern')\">\n            Invalid phone number.\n        </small>\n        <small class=\"text-danger\"\n                *ngIf=\"form.controls['phone_no'].dirty && form.controls['phone_no'].hasError('required')\">\n            Phone number is required\n        </small>\n    </div>\n  </ng-template>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { encryption } from 'src/app/encryption';\nimport { ToastrService } from 'ngx-toastr';\nimport { CrudjService } from 'src/app/services/crudj.service';\nimport { Title } from '@angular/platform-browser';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { SessionService } from 'src/app/services/session.service';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n  addphoneindividualerror: boolean = true;\n  businessForm!: FormGroup;\n  individualForm!: FormGroup;\n  resellerForm!: FormGroup;\n  subDealerForm!: FormGroup;\n  userRole: any;\n  formType: boolean = true;\n  tab: any = 'profile';\n  countries = require('country-data-list').countries;\n  image: any = '';\n  addphoneerror: boolean = true;\n  usersdetail: any;\n  profileForm: FormGroup;\n  formData: any = new FormData();\n  changeEmailForm: FormGroup;\n  showOtpBox: boolean = false;\n  verifyOtpForm: FormGroup;\n  changePasswordForm: FormGroup;\n  addmobileResellererror: boolean = true;\n  textType: any = 'password'\n  textType2: any = 'password'\n  textType3: any = 'password'\n  products: any;\n  constructor(private fb: FormBuilder, private _crudservice: CrudjService,\n    private toastr: ToastrService, private _titleservice: Title,\n    private notification: NotificationsService, private crud: CrudService,\n    private sessionService: SessionService) {\n    this._titleservice.setTitle('My Profile');\n    this.profileForm = this.fb.group({\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      address: ['', Validators.required],\n      country: ['India', Validators.required],\n      phone_no: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.changeEmailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n\n    this.verifyOtpForm = this.fb.group({\n      otp: ['', Validators.required]\n    });\n\n    this.changePasswordForm = this.fb.group({\n      current_password: ['', Validators.required],\n      new_password: ['', [Validators.required, Validators.pattern(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)]],\n      confirm_password: ['', [Validators.required, Validators.pattern(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)]]\n    });\n\n    /*individual and Business Profile statshere*/\n    this.individualForm = this.fb.group({\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      phone_no: ['', [Validators.required]],\n      country_code: [''],\n      email: ['', [Validators.required, Validators.email]],\n      address: [''],\n      address_2: [''],\n      country: ['United Kingdom'],\n      state: [''],\n      city: [''],\n      zip: [''],\n      product_name: [' ', []],\n      tool_serial_number: ['', []]\n      // captcha_response: ['', [Validators.required]]\n\n    });\n\n    this.businessForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: ['', []],\n      company_number: ['', []],\n      win_ols_license_number: ['', []],\n      address: [''],\n      address_2: [''],\n      country: ['United Kingdom'],\n      state: [''],\n      city: [''],\n      zip: [''],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      country_code: [''],\n      phone_no: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      // captcha_response: ['', [Validators.required]]\n    });\n\n    this.resellerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      phone_no: ['',],\n      country_code: [''],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n    });\n\n    this.subDealerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      phone_no: ['',],\n      country_code: [''],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      resellerId: ['Select Reseller', [Validators.required]],\n    });\n\n  }\n  obj: any = [\n    { \"alpha2\": \"US\", \"name\": \"United States\", },\n    { \"alpha2\": \"GB\", \"name\": \"United Kingdom\", }\n  ]\n  ngOnInit(): void {\n    this.countries.all.sort((a: any, b: any) => (a.name > b.name) ? 1 : -1)\n    this.obj.forEach((element: any) => {\n      this.moveCountryOnTop(element.name);\n    });\n    this.usersdetail = JSON.parse(localStorage.getItem('userdetails') || '');\n    this.userRole = this.usersdetail?.role;\n    if (this.userRole == 'INDIVIDUAL_CUSTOMER') {\n      this.individualForm.controls['product_name'].setValue(this.usersdetail?.additional.product_name);\n      this.individualForm.controls['tool_serial_number'].setValue(this.usersdetail?.additional.tool_serial_number);\n      this.individualForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n      this.individualForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n      this.setPhoneNumber(this.usersdetail?.phone_no, this.usersdetail?.country_code,this.individualForm)\n      this.individualForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n      this.individualForm.controls['email'].setValue(this.usersdetail?.email);\n      this.individualForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n      this.individualForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n      this.individualForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n      this.individualForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n      this.individualForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n      this.individualForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n      this.crud.getRequest(`${cusRequestUrl.getProduct}`).then((res: any) => {\n        this.products = res.data.results;\n\n      });\n    }\n\n    else if (this.userRole == 'BUSINESS_CUSTOMER') {\n      this.businessForm.controls['bussness_name'].setValue(this.usersdetail?.additional.bussness_name);\n      this.businessForm.controls['tax_number'].setValue(this.usersdetail?.additional.tax_number);\n      this.businessForm.controls['company_number'].setValue(this.usersdetail?.additional.company_number);\n      this.businessForm.controls['win_ols_license_number'].setValue(this.usersdetail?.additional.win_ols_license_number);\n      this.businessForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n      this.businessForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n      this.businessForm.controls['email'].setValue(this.usersdetail?.email);\n      this.setPhoneNumber(this.usersdetail?.phone_no, this.usersdetail?.country_code,this.businessForm)\n      this.businessForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n      this.businessForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n      this.businessForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n      this.businessForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n      this.businessForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n      this.businessForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n      this.businessForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n    }\n    else if (this.userRole == 'RESELLER') {\n      this.resellerForm.controls['bussness_name'].setValue(this.usersdetail?.additional.bussness_name);\n      this.resellerForm.controls['tax_number'].setValue(this.usersdetail?.additional.tax_number);\n      this.resellerForm.controls['company_number'].setValue(this.usersdetail?.additional.company_number);\n      this.resellerForm.controls['win_ols_license_number'].setValue(this.usersdetail?.additional.win_ols_license_number);\n      this.resellerForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n      this.resellerForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n      this.resellerForm.controls['email'].setValue(this.usersdetail?.email);\n      this.setPhoneNumber(this.usersdetail?.phone_no, this.usersdetail?.country_code,this.resellerForm)\n      this.resellerForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n      this.resellerForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n      this.resellerForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n      this.resellerForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n      this.resellerForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n      this.resellerForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n      this.resellerForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n    }\n    else if (this.userRole == 'DEALER') {\n      this.subDealerForm.controls['bussness_name'].setValue(this.usersdetail?.additional.bussness_name);\n      this.subDealerForm.controls['tax_number'].setValue(this.usersdetail?.additional.tax_number);\n      this.subDealerForm.controls['company_number'].setValue(this.usersdetail?.additional.company_number);\n      this.subDealerForm.controls['win_ols_license_number'].setValue(this.usersdetail?.additional.win_ols_license_number);\n      this.subDealerForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n      this.subDealerForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n      this.subDealerForm.controls['email'].setValue(this.usersdetail?.email);\n      this.setPhoneNumber(this.usersdetail?.phone_no, this.usersdetail?.country_code,this.subDealerForm)\n      this.subDealerForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n      this.subDealerForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n      this.subDealerForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n      this.subDealerForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n      this.subDealerForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n      this.subDealerForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n      this.subDealerForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n    }\n    this.image = this.usersdetail?.image;\n    let profileData = {\n      \"first_name\": this.usersdetail?.first_name,\n      \"last_name\": this.usersdetail?.last_name,\n      \"address\": this.usersdetail?.address_user.address,\n      \"country\": typeof (this.usersdetail?.address_user?.country) != 'undefined' ? this.usersdetail?.address_user?.country : 'India',\n      \"phone_no\": this.usersdetail?.phone_no,\n      \"email\": this.usersdetail?.email,\n    };\n    this.profileForm.patchValue(profileData);\n  }\n\n  oldCountryCode = \"\";\n  @ViewChild('phoneInput') phoneInput!:ElementRef;\n  setPhoneNumber(phone:string, countryCode:string, form:FormGroup) {\n    this.oldCountryCode = countryCode;\n    let number = \"\"\n    if(countryCode && !phone.includes(countryCode)) {\n      number = `+${countryCode}${phone}`;\n    } else {\n      number = phone;\n    }\n\n    form.get(\"phone_no\")?.setValue(number);\n    console.log(number,form,'number');\n\n  }\n\n\n  getPhoneNumber(form:FormGroup) {\n    const phone:string = form.controls['phone_no'].value;\n    const countryCode = form.controls['country_code'].value;\n    if(countryCode && phone.includes(\"+\" + countryCode)) {\n      return phone.replace(\"+\" + countryCode, \"\");\n    } else if(countryCode && phone.includes(\"+\" + this.oldCountryCode)){\n      return phone.replace(\"+\" + this.oldCountryCode, \"\");\n\n    }\n    return phone;\n  }\n\n  setCountryCode(event: any, form: FormGroup) {\n    console.log('change country',event);\n    form.patchValue({ 'country_code': event.dialCode });\n  }\n\n  \n\n  moveCountryOnTop(name: string) {\n    const index = this.countries.all.findIndex((item: any) => item.name === name);\n    if (index !== -1) {\n      const removedObject = this.countries.all.splice(index, 1)[0];\n      this.countries.all.unshift(removedObject);\n    }\n  }\n  individualFormFormSubmit() {\n    let individualData = this.individualForm.value;\n    let data = {\n      \"individual_profile\": {\n        \"product_name\": individualData.product_name,\n        \"tool_serial_number\": individualData.tool_serial_number\n      },\n      \"address\": {\n        \"address_2\": individualData.address_2,\n        \"address\": individualData.address,\n        \"state\": individualData.state,\n        \"city\": individualData.city,\n        \"zip\": individualData.zip\n      },\n      \"individual\": {\n        \"first_name\": individualData.first_name,\n        \"last_name\": individualData.last_name,\n        \"phone_no\": this.getPhoneNumber(this.individualForm),\n        \"country_code\": individualData.country_code,\n        \"email\": individualData.email\n      }\n    };\n    this.crud.postRequest(cusRequestUrl.updateCustomerIndividualProfile, data).then((res: any) => {\n      if (res) {\n        this.toastr.success(res.message, '', { timeOut: 4000 });\n        this.usersdetail['first_name'] = this.individualForm.controls['first_name'].value;\n        this.usersdetail['last_name'] = this.individualForm.controls['last_name'].value;\n        this.usersdetail['address_user'] = {\n          \"address\": this.individualForm.controls['address'].value,\n          \"address_2\": this.individualForm.controls['address_2'].value,\n          \"country\": this.individualForm.controls['country'].value,\n          \"state\": this.individualForm.controls['state'].value,\n          \"city\": this.individualForm.controls['city'].value,\n          \"zip\": this.individualForm.controls['zip'].value,\n        }\n        this.usersdetail['additional'] = {\n          \"product_name\": this.individualForm.controls['product_name'].value,\n          \"tool_serial_number\": this.individualForm.controls['tool_serial_number'].value,\n        }\n        this.usersdetail['phone_no'] = this.individualForm.controls['phone_no'].value;\n        // this.usersdetail['image'] = res.image;\n        localStorage.setItem('userdetails', JSON.stringify(this.usersdetail));\n        this.notification.updateProfileImg(true);\n      }\n    });\n  }\n\n  businessFormSubmit() {\n    // this.businessFormSubmitted = true;\n    if (this.businessForm.invalid) { return; }\n    let businessData = this.businessForm.value;\n    let data = {\n      \"business_profile\": {\n        \"bussness_name\": businessData.bussness_name,\n        \"tax_number\": businessData.tax_number,\n        \"company_number\": businessData.company_number,\n        \"win_ols_license_number\": businessData.win_ols_license_number\n      },\n      \"address\": {\n        \"address_2\": businessData.address_2,\n        \"address\": businessData.address,\n        \"country\": businessData.country,\n        \"state\": businessData.state,\n        \"city\": businessData.city,\n        \"zip\": businessData.zip\n      },\n      \"business\": {\n        \"first_name\": businessData.first_name,\n        \"last_name\": businessData.last_name,\n        \"phone_no\": this.getPhoneNumber(this.businessForm),\n        \"country_code\": businessData.country_code,\n        \"email\": businessData.email\n      },\n      \"captcha_response\": \"\"\n\n    };\n    this.crud.postRequest(cusRequestUrl.updateCustomerBusinessProfile, data).then((res: any) => {\n\n      this.usersdetail['first_name'] = this.businessForm.controls['first_name'].value;\n      // this.usersdetail['bussness_name'] = this.businessForm.controls['bussness_name'].value;\n      // this.usersdetail['tax_number'] = this.businessForm.controls['tax_number'].value;\n      // this.usersdetail['company_number'] = this.businessForm.controls['company_number'].value;\n      // this.usersdetail['win_ols_license_number'] = this.businessForm.controls['win_ols_license_number'].value;\n      this.usersdetail['last_name'] = this.businessForm.controls['last_name'].value;\n      this.usersdetail['address_user'] = {\n        \"address\": this.businessForm.controls['address'].value,\n        \"address_2\": this.businessForm.controls['address_2'].value,\n        \"country\": this.businessForm.controls['country'].value,\n        \"state\": this.businessForm.controls['state'].value,\n        \"city\": this.businessForm.controls['city'].value,\n        \"zip\": this.businessForm.controls['zip'].value,\n      };\n      this.usersdetail['additional'] = {\n        \"win_ols_license_number\": this.businessForm.controls['win_ols_license_number'].value,\n        \"company_number\": this.businessForm.controls['company_number'].value,\n        \"tax_number\": this.businessForm.controls['tax_number'].value,\n        \"bussness_name\": this.businessForm.controls['bussness_name'].value,\n      }\n      this.usersdetail['phone_no'] = this.businessForm.controls['phone_no'].value;\n      this.usersdetail['is_evc_customer'] = res.data?.is_evc_customer;\n      this.usersdetail['is_evc_reseller_customer'] = res.data?.is_evc_reseller_customer;\n      // this.usersdetail['image'] = res.image;\n      localStorage.setItem('userdetails', JSON.stringify(this.usersdetail));\n      this.notification.updateProfileImg(true);\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n    });\n  }\n  resellerFormSubmit() {\n    if (this.resellerForm.invalid) { return; }\n    let resellerData = this.resellerForm.value;\n    let data = {\n      \"detail\": {\n        \"bussness_name\": resellerData.bussness_name,\n        \"tax_number\": resellerData.tax_number,\n        \"company_number\": resellerData.company_number,\n        \"win_ols_license_number\": resellerData.win_ols_license_number\n      },\n      'address': {\n        'address_2': resellerData.address_2,\n        'address': resellerData.address,\n        'country': resellerData.country,\n        'state': resellerData.state,\n        'city': resellerData.city,\n        'zip': resellerData.zip,\n      },\n      'reseller': {\n        'first_name': resellerData.first_name,\n        'last_name': resellerData.last_name,\n        \"phone_no\": this.getPhoneNumber(this.resellerForm),\n        \"country_code\": resellerData.country_code,\n        'email': resellerData.email\n      },\n      \"uuid\": this.usersdetail.uuid\n    };\n    this.crud.putRequest(`${requestUrl.addReseller}`, data).then((res: any) => {\n      this.usersdetail['first_name'] = this.resellerForm.controls['first_name'].value;\n      // this.usersdetail['bussness_name'] = this.resellerForm.controls['bussness_name'].value;\n      // this.usersdetail['tax_number'] = this.resellerForm.controls['tax_number'].value;\n      // this.usersdetail['company_number'] = this.resellerForm.controls['company_number'].value;\n      // this.usersdetail['win_ols_license_number'] = this.resellerForm.controls['win_ols_license_number'].value;\n      this.usersdetail['last_name'] = this.resellerForm.controls['last_name'].value;\n      this.usersdetail['additional'] = {\n        \"win_ols_license_number\": this.resellerForm.controls['win_ols_license_number'].value,\n        \"company_number\": this.resellerForm.controls['company_number'].value,\n        \"tax_number\": this.resellerForm.controls['tax_number'].value,\n        \"bussness_name\": this.resellerForm.controls['bussness_name'].value,\n      }\n      this.usersdetail['address_user'] = {\n        \"address\": this.resellerForm.controls['address'].value,\n        \"address_2\": this.resellerForm.controls['address_2'].value,\n        \"country\": this.resellerForm.controls['country'].value,\n        \"state\": this.resellerForm.controls['state'].value,\n        \"city\": this.resellerForm.controls['city'].value,\n        \"zip\": this.resellerForm.controls['zip'].value,\n      }\n      this.usersdetail['phone_no'] = this.resellerForm.controls['phone_no'].value;\n      // this.usersdetail['image'] = res.image;\n      localStorage.setItem('userdetails', JSON.stringify(this.usersdetail));\n      this.notification.updateProfileImg(true);\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n    });\n  }\n\n  subDealerFormSubmit() {\n    if (this.subDealerForm.invalid) { return; }\n    let subDellerData = this.subDealerForm.value;\n    let data = {\n      \"detail\": {\n        \"bussness_name\": subDellerData.bussness_name,\n        \"tax_number\": subDellerData.tax_number,\n        \"company_number\": subDellerData.company_number,\n        \"win_ols_license_number\": subDellerData.win_ols_license_number\n      },\n      'address': {\n        'address_2': subDellerData.address_2,\n        'address': subDellerData.address,\n        'country': subDellerData.country,\n        'state': subDellerData.state,\n        'city': subDellerData.city,\n        'zip': subDellerData.zip,\n      },\n      'dealer': {\n        'first_name': subDellerData.first_name,\n        'last_name': subDellerData.last_name,\n        \"phone_no\": this.getPhoneNumber(this.subDealerForm),\n        \"country_code\": subDellerData.country_code,\n        'email': subDellerData.email\n      },\n      \"uuid\": this.usersdetail.uuid,\n      \"parent\": this.usersdetail.parent,\n      // \"captcha_response\": subDellerData.captcha_response\n    };\n    this.crud.putRequest(requestUrl.addSubDealer, data).then((res: any) => {\n      if (res) {\n        this.usersdetail['first_name'] = this.subDealerForm.controls['first_name'].value;\n        this.usersdetail['last_name'] = this.subDealerForm.controls['last_name'].value;\n        this.usersdetail['additional'] = {\n          \"win_ols_license_number\": this.subDealerForm.controls['win_ols_license_number'].value,\n          \"company_number\": this.subDealerForm.controls['company_number'].value,\n          \"tax_number\": this.subDealerForm.controls['tax_number'].value,\n          \"bussness_name\": this.subDealerForm.controls['bussness_name'].value,\n        }\n        this.usersdetail['address_user'] = {\n          \"address\": this.subDealerForm.controls['address'].value,\n          \"address_2\": this.subDealerForm.controls['address_2'].value,\n          \"country\": this.subDealerForm.controls['country'].value,\n          \"state\": this.subDealerForm.controls['state'].value,\n          \"city\": this.subDealerForm.controls['city'].value,\n          \"zip\": this.subDealerForm.controls['zip'].value,\n        }\n        this.usersdetail['phone_no'] = this.subDealerForm.controls['phone_no'].value;\n        // this.usersdetail['image'] = res.image;\n        localStorage.setItem('userdetails', JSON.stringify(this.usersdetail));\n        this.notification.updateProfileImg(true);\n        this.toastr.success(res.message, '', { timeOut: 4000 });\n      }\n    });\n  }\n  profileFormSubmit() {\n\n    // this.formData.append('first_name', this.profileForm.controls['first_name'].value);\n    // this.formData.append('last_name', this.profileForm.controls['last_name'].value);\n    // this.formData.append('country', this.profileForm.controls['country'].value);\n    // this.formData.append('address', this.profileForm.controls['address'].value);\n    // this.formData.append('phone_no', this.profileForm.controls['phone_no'].value);\n\n    //  this._crudservice.post('/api/v1/admin/profile',this.formData).subscribe((res:any)=>{\n    //   this.toastr.success(res.message, '', { timeOut: 4000 });\n    //  },\n    //  (err:any)=>{\n    //   this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n    //  })\n\n\n    this.formData.append('first_name', this.profileForm.controls['first_name'].value);\n    this.formData.append('last_name', this.profileForm.controls['last_name'].value);\n    this.formData.append('country', this.profileForm.controls['country'].value);\n    this.formData.append('address', this.profileForm.controls['address'].value);\n    this.formData.append('phone_no', this.profileForm.controls['phone_no'].value);\n\n    this._crudservice.post('/api/v1/admin/profile', this.formData).subscribe((res: any) => {\n\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.usersdetail['first_name'] = this.profileForm.controls['first_name'].value;\n      this.usersdetail['last_name'] = this.profileForm.controls['last_name'].value;\n      this.usersdetail['address_user'] = {\n        \"address\": this.profileForm.controls['address'].value,\n        \"country\": this.profileForm.controls['country'].value,\n      }\n      this.usersdetail['phone_no'] = this.profileForm.controls['phone_no'].value;\n      this.usersdetail['image'] = res.image;\n\n      localStorage.setItem('userdetails', JSON.stringify(this.usersdetail));\n\n      this.notification.updateProfileImg(true);\n\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      });\n\n\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => this.image = reader.result;\n      reader.readAsDataURL(file);\n      this.formData.append(\"image\", file);\n      this.formData.append(\"uuid\", this.usersdetail?.uuid);\n      this.updateProfileImg();\n    }\n  }\n  addmobileResellerError(obj: any) {\n    this.addmobileResellererror = obj;\n    if (obj) {\n      this.resellerForm.controls['mobile_no'].setErrors(null);\n    } else {\n      this.resellerForm.controls['mobile_no'].setErrors({ 'incorrect': false });\n    }\n  }\n  updateProfileImg() {\n    this.crud.postRequest(`${requestUrl.updateProfileImg}`, this.formData).then((res: any) => {\n      if (res) {\n        this.usersdetail['image'] = res.url;\n        localStorage.setItem('userdetails', JSON.stringify(this.usersdetail));\n        this.notification.updateProfileImg(true);\n      }\n    })\n  }\n\n  addphoneError(obj: any) {\n    this.addphoneerror = obj;\n    if (obj) {\n      this.profileForm.controls['phone_no'].setErrors(null);\n    } else {\n      this.profileForm.controls['phone_no'].setErrors({ 'incorrect': false });\n    }\n  }\n\n  getPrimaryPhone(event: any) {\n    this.profileForm.patchValue({ 'phone_no': event });\n  }\n\n  addphoneIndividualError(obj: any) {\n    this.addphoneindividualerror = obj;\n    if (obj) {\n      this.individualForm.controls['phone_no'].setErrors(null);\n    } else {\n      this.individualForm.controls['phone_no'].setErrors({ 'incorrect': false });\n    }\n  }\n  changeEmailFormSubmit() {\n    let data = this.changeEmailForm.value;\n    this._crudservice.post('/api/v1/account/update-email-request', data).subscribe((res: any) => {\n      this.showOtpBox = true;\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n    },\n      (err: any) => {\n        this.showOtpBox = false;\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n\n  }\n\n  verifyOtpFormSubmit() {\n    let data = {\n      'email': this.changeEmailForm.value.email,\n      'otp': this.verifyOtpForm.value.otp,\n      'uuid': this.usersdetail.uuid\n    };\n    this._crudservice.post('/api/v1/account/update-email', data).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      document.getElementById('hidechangeemailmodal')?.click();\n      this.sessionService.replaceKey('email', data.email);\n      if (this.userRole == 'INDIVIDUAL_CUSTOMER')\n        this.individualForm.controls['email'].setValue(data.email);\n      else if (this.userRole == 'BUSINESS_CUSTOMER')\n        this.businessForm.controls['email'].setValue(data.email);\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n  changePasswordFormSubmit() {\n    if (this.changePasswordForm.valid) {\n      let adminBody = this.changePasswordForm.value;\n      adminBody['current_password'] = encryption(this.changePasswordForm.controls['current_password'].value);\n      adminBody['new_password'] = encryption(this.changePasswordForm.controls['new_password'].value);\n      this._crudservice.post(`/api/v1/${requestUrl.adminChangePswd}`, adminBody).subscribe((res: any) => {\n        this.toastr.success(res.message, '', { timeOut: 4000 });\n      },\n        (err: any) => {\n          this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n        })\n    } else {\n      this.markAllControlsAsTouched(this.changePasswordForm);\n    }\n\n  }\n  markAllControlsAsTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markAllControlsAsTouched(control);\n      }\n    });\n  }\n  getPrimaryIndividualmobile(event: any) {\n    this.resellerForm.patchValue({ 'mobile_no': event });\n  }\n  getPrimaryIndividualPhone(event: any) {\n    this.individualForm.patchValue({ 'phone_no': event });\n  }\n  // getPrimaryPhone(event: any) {\n  //   this.businessForm.patchValue({ 'phone_no': event });\n  // }\n  getEVC() {\n    var data= {\n      \"win_ols_license_number\": this.userRole == 'BUSINESS_CUSTOMER'?this.businessForm.value.win_ols_license_number:(this.userRole == 'RESELLER'?this.resellerForm.value.win_ols_license_number:this.subDealerForm.value.win_ols_license_number),\n      \"uuid\": this.usersdetail.uuid\n    }\n    this.crud.postRequest(`${cusRequestUrl.getEVCcustomer}`,data).then((res: any) => {\n      if (res && res.success) {\n        this.toastr.success(res.message);\n        this.usersdetail['is_evc_customer'] = res.is_evc_customer;\n        this.usersdetail['is_evc_reseller_customer'] = res.is_evc_reseller_customer;\n        this.usersdetail['additional'].win_ols_license_number = this.businessForm.controls['win_ols_license_number'].value,\n        localStorage.setItem('userdetails', JSON.stringify(this.usersdetail));\n      }\n      else if (res && !res.success)\n        this.toastr.error(res.message);\n      else \n      this.toastr.error(res.message);\n    })\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ApiService } from '../auth/services/api.service';\nimport { URLS } from '../global-files/global.const';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerIndividualService {\n  baseUrl = environment.baseUrl;\n  private notificationCount = new BehaviorSubject<number>(0);\n  notificationCount$ = this.notificationCount.asObservable();\n  constructor( private _http: HttpClient, private apiService: ApiService ) { }\n\n  broadCastNotification(data: any) {\n    this.notificationCount.next(data)\n  }\n\n  getCounts() {\n    const url = URLS.getCountUrlIndividal;\n    return this.apiService.getRequest(url);\n  }\n  // getFileSubmittedData() {\n  //   const url = URLS.getFileSubmittedIndividual;\n  //   return this.apiService.getRequest(url);\n  // }\n\n  getMyToolUsage() {\n    const url = URLS.getMyToolUsageBusiness;\n    return this.apiService.getRequest(url);\n  }\n\n  getSupportsTicketStatus() {\n    const url = URLS.getSupportTicketIndividual;\n    return this.apiService.getRequest(url);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ApiService } from '../auth/services/api.service';\nimport { URLS } from '../global-files/global.const';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerResellerService {\n  baseUrl = environment.baseUrl;\n  private notificationCount = new BehaviorSubject<number>(0);\n  notificationCount$ = this.notificationCount.asObservable();\n  constructor(private _http: HttpClient, private apiService: ApiService) { }\n\n\n  // getResellerCardsData() {\n  //   const url = URLS.getCardsResellerData;\n  //   return this.apiService.getRequest(url);\n  // }\n\n  // getVechicleTuned() {\n  //   const url = URLS.getTunnedVechicleResseler;\n  //   return this.apiService.getRequest(url);\n  // }\n\n  getUnusedkeySubdealer(id: any, _pageNo: any) {\n    const url = URLS.getUnusedKeySubdealer.replace(':uuid', id).replace(':pageNo', _pageNo)\n    return this.apiService.getRequest(url)\n  }\n\n  // getResselerDynamicDrilldown() {\n  //   const url = URLS.resslerDynamicDrillDown;\n  //   return this.apiService.getRequest(url);\n  // }\n  // getStatusChartData() {\n  //   const url = '/api/v1/dashboard/reseller/ticket/by_status/activity';\n  //   return this.apiService.getRequest(url);\n  // }\n  getSubDealerChartData() {\n    // /api/v1/dashboard/reseller/dashboard/stats'\n    const url = 'api/v1/dashboard/reseller/dashboard/stats';\n    return this.apiService.getRequest(url);\n  }\n}\n","<section class=\"add-user\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Dashboard</a></li>\n  </ul>\n  <!-- <div class=\"sideBarChart\" style=\"position: absolute;\">\n    <i class=\"fa \" [ngClass]=\"showSidebarChart?'fa-chevron-right':'fa-chevron-left'\" aria-hidden=\"true\"\n      (click)=\"showSidebarChart = !showSidebarChart\"></i>\n    <ng-container *ngIf=\"getTeamData?.length && showSidebarChart\">\n      <div class=\"rightSide right-panel-wd\">\n        <p class=\"headTopRight\">Top 10 Dealers by Month</p>\n        <div *ngFor=\"let data of getTeamData\">\n          <img class=\"pointer\"\n            [src]=\"data?.dealer_profile_image || 'assets/images/icon/avtarIcon.jpeg'\" alt=\"\">\n          <div>\n            <p>{{data?.dealer_name}}</p>\n            <span>{{data?.total_credit_spent}}\n              <i class=\"fa fa-eye pointer\" title=\"View\"\n              (click)=\"viewCredit(data?.uuid)\"></i>\n            </span>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!getTeamData?.length && showSidebarChart\">\n      <div class=\"rightSide center-p\" style=\"color: white;\">\n        <p class=\"headTopRight\">Top 10 Dealers by Month</p>\n        <p>No data Available</p>\n      </div>\n    </ng-container>\n  </div> -->\n  <div class=\"dashboard-container\">\n    <div class=\"management\">\n      <h2 class=\"title\">MY SUB-DEALER MANAGEMENT</h2>\n      \n      <div class=\"dash-card\">\n        <div class=\"card-inner\">\n          <div [routerLink]=\"['/credit/credit-transaction']\" [queryParams]=\"{ type: 'purchaseHistory' }\">\n            <p> Credit Purchased</p>\n            <h5>{{getDashboardCards?.credit_purchased || 0}}</h5>\n          </div>\n        </div>\n        <div class=\"card-inner\">\n          <div [routerLink]=\"['/credit/credit-transaction']\" [queryParams]=\"{ type: 'spentHistory' }\">\n            <p>Credits Spent History</p>\n            <h5>{{getDashboardCards?.credit_spent_current_month || 0}}</h5>\n          </div>\n        </div>\n        <div class=\"card-inner\">\n          <div>\n            <p>Number of My Sub-Dealers</p>\n            <h5>{{getDashboardCards?.sub_dealer_count || 0}}</h5>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"upper-chart-wrapper\">\n\n        <!-- ======================= Number of unallocated sub-dealer Keys ===================== -->\n        <div class=\"barchrt\">\n          <p>Number of unallocated sub-dealer Keys</p>\n          <hr>\n          <div class=\"container d-center\">\n            <app-line-graph #unallocatedSubdealerGraph type=\"donut\" [colors]=\"['#394A9D', '#2091FF', '#58C1F3']\" [pieWidth]=\"220\" legendPosition=\"bottom\"></app-line-graph>\n          </div>\n        </div>\n\n        <div class=\"barchrt mg-lft-20\">\n          <div class=\"d-flex-page\">\n            <p class=\"mb-0\"><span class=\"ff-bold\" style=\"color:#E15553\">Unused</span> Keys by Sub Dealer</p>\n            <!-- <div class=\"pagination\">\n              <button (click)=\"previousPage()\" [disabled]=\"currentPage === 1\">Prev</button>\n              <span>{{ currentPage }} / {{ getTotalPages() }}</span>\n              <button (click)=\"nextPage()\" [disabled]=\"currentPage === getTotalPages()\">Next</button>\n            </div> -->\n          </div>\n          <hr>\n          <app-line-graph #unusedSubdealerKey [stacked]=\"true\" [height]=\"280\"></app-line-graph>\n        </div>\n      </div>\n\n\n      <div class=\"upper-chart-wrapper pointer\">\n        <div class=\"barchrt\" routerLink=\"/sub-dealer/dealer-credit\">\n          <p>Allocate Keys to Sub-Dealer</p>\n          <hr>\n          <p>My Sub-Dealer Lookup</p>\n          <svg style=\"width: 100%;\" height=\"200\" viewBox=\"50 30 100 150\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M168.5 83.5C164.5 83.5 161.167 86.8333 160 88.5C164.8 90.5 167.333 97.3333 168 100.5V115C168.8 118.2 166.333 120.667 165 121.5L164.5 141.5C168.1 143.9 170.667 142.5 171.5 141.5L172 116.21H175V140C178.2 144.4 181.333 141.833 182.5 140V95.5H184V113C186.4 115.8 189 114.167 190 113V93.5C189.6 88.3 182.833 84.6667 179.5 83.5H168.5Z\"\n              fill=\"#394A9C\" />\n            <path\n              d=\"M142.5 105.002C142.5 99.0019 137.833 94.8352 135.5 93.5019C140.7 88.7019 150 88.1686 154 88.5019C160.8 89.3019 164.167 94.8352 165 97.5019L165.5 119.002C163.1 121.002 160.5 119.835 159.5 119.002V100.002H158V146.002C156 148.002 152.167 146.835 150.5 146.002V121.002H147.5V146.002C145.1 148.402 141.5 147.002 140 146.002V126.502C141.6 126.102 142.333 124.335 142.5 123.502V105.002Z\"\n              fill=\"#394A9C\" />\n            <path\n              d=\"M118 109.998C118 105.598 113 100.832 110.5 98.9984C114.1 93.3984 124.667 93.3318 129.5 93.9984C137.5 95.1984 139.833 100.832 140 103.498V123.998C138 126.398 135.5 124.998 134.5 123.998V105.998H133L133.5 150.498C130.7 154.098 127 151.998 125.5 150.498L126 126.998C124.8 124.998 123.5 126.165 123 126.998V150.498C119.8 154.498 116.333 152.165 115 150.498V131.998C116.6 131.998 117.667 129.998 118 128.998V109.998Z\"\n              fill=\"#394A9C\" />\n            <path\n              d=\"M83 109V128.5C85 131.7 87.5 130.167 88.5 129V112C89.3 110.4 90.1667 111.333 90.5 112V155.5C93.3 158.7 96.6667 156.833 98 155.5V132.5C99.2 130.9 100.5 131.833 101 132.5V155.5C104.2 159.1 107 157 108 155.5V111.5C109.2 110.3 109.833 111 110 111.5V128.5C113.2 131.3 115 129.333 115.5 128L115 107.5C113.4 101.9 107.667 99.8333 105 99.5H93C88.2 100.3 84.3333 106.167 83 109Z\"\n              fill=\"#394A9C\" />\n            <path\n              d=\"M34 118C35.6 121.2 38.3333 119.333 39.5 118V100H41.5L41 146C43.8 148.4 46.8333 147 48 146L47.5 121H51V145C53.8 149.4 57.5 146.833 59 145V127C57.4 127 56.8333 125.667 56.5 125V101.5C56.9 99.5 61 95.3333 63 93.5C61.8 90.7 57.1667 89.3333 55 89H42.5C38.1 89.4 34.6667 94.5 33.5 97L34 118Z\"\n              fill=\"#394A9C\" />\n            <path\n              d=\"M58.5 103C61.7 96.6 67.1667 94.3333 69.5 94H78.5C84.1 94 87.5 97.6667 88.5 99.5C85.3 99.5 81.8333 105.5 80.5 108.5V127.5C80.5 130.3 82.8333 131.667 84 132V151C80.4 153.8 77.1667 152.167 76 151V127H73.5V151C70.3 154.2 67.1667 152.333 66 151L66.5 106.322H64V124C61.6 126.4 59.3333 125 58.5 124V103Z\"\n              fill=\"#394A9C\" />\n            <path\n              d=\"M9 114V93C10.5 88 13 85 18 83.5H29C34.6 84.7 37.8333 87.1667 38.5 88.5C34.5 90.1 32.1667 95.5 31.5 98V119C31.5 119.667 31.9 121 33.5 121V140C31.1 143.2 27.8333 141.333 26.5 140V116H23.5V140C20.7 142.8 17.6667 141.167 16.5 140V95H14.5V113.5C12.5 116.3 10 115 9 114Z\"\n              fill=\"#394A9C\" />\n            <circle cx=\"24.5\" cy=\"74\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"50.5\" cy=\"80\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"74.5\" cy=\"84\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"99.5\" cy=\"89\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"124.5\" cy=\"84\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"149.5\" cy=\"79\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"174.5\" cy=\"74\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"156.5\" cy=\"62\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"133.5\" cy=\"66\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"110.5\" cy=\"70\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"87.5\" cy=\"69\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"66.5\" cy=\"66\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"79.5\" cy=\"51\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"99.5\" cy=\"54\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"119.5\" cy=\"51\" r=\"8\" fill=\"#394A9C\" />\n            <circle cx=\"42.5\" cy=\"62\" r=\"8\" fill=\"#394A9C\" />\n          </svg>\n        </div>\n\n        <div class=\"barchrt mg-lft-20\">\n          <div class=\"d-flex row align-items-center mb-1\">\n            <div class=\"col-9\">\n              <p class=\"mb-0\"><span class=\"ff-bold\" style=\"color:#70CDAB\">Used</span> Keys By Date\n                &nbsp; <span class=\"chartDateSize\">{{usedKeysMonthRange == -1 ? (UKBDdateRange?.startDate + ' - ' + UKBDdateRange?.endDate) : (usedKeysMonthRange == 1 ?usedKeysMonthRange +' Year':usedKeysMonthRange +' Month' )}}</span></p>\n            </div>\n            <div class=\"col-3 d-flex justify-content-end align-items-center\">\n              <div class=\"dateRange\">\n                <div class=\"calIcon\">\n                  <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </div>\n                <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\"\n                ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeCalendarCenter\" [drops]=\"dropsDown\"\n                [opens]=\"opensLeft\" [locale]=\"locale\" [ranges]=\"ranges\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n                [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n                [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n                (datesUpdated)=\"datesUpdatedRange($event,'usedKeysByDate')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n              </div>\n            </div>\n          </div>\n          <hr>\n          <app-line-graph #usedKeyByDate [stacked]=\"true\" [height]=\"280\"></app-line-graph>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"performance\">\n      <h2 class=\"title\">MY PERFORMANCE</h2>\n      <div class=\"card-inner\">\n        <div>\n          <p class=\"pointer\" data-bs-toggle=\"dropdown\">My Notifications</p>\n          <h5 class=\"pointer\" data-bs-toggle=\"dropdown\">{{unseenNotifications || 0}}</h5>\n          <ul class=\"dropdown-menu\" style=\"min-width:350px; width: 450px; height: 300px; overflow-y: scroll;\">\n            <li *ngIf=\"notificationList?.length==0\" style=\"text-align: center;\">No Notification...</li>\n            <li style=\"padding-left: 5px;\" *ngFor=\"let noti of notificationList\">\n              <div class=\"profile mb-2\">\n                <img [src]=\"noti.sender?.image ? noti.sender?.image: 'assets/images/icon/customer-profile.png'\"\n                  alt=\"profile\" />\n                <div class=\"notification-inner\" (click)=\"redirectTo(noti)\">\n                  <div>\n                    <h6 class=\"mb-0\">{{noti.title}}</h6>\n                    <p>{{noti.message}} </p>\n                  </div>\n                  <p>{{notification.formatDate(noti.created_at)}}</p>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      \n      <div class=\"graph\">\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-9\">\n            <p style=\"margin-bottom: 0px;\">My Vehicles Tuned by month\n              &nbsp; <span class=\"chartDateSize\">{{vehicleTunedMonthRange == -1 ? (myVTBMdateRange?.startDate + ' - ' + myVTBMdateRange?.endDate) : (vehicleTunedMonthRange == 1 ?vehicleTunedMonthRange +' Year':vehicleTunedMonthRange +' Month' )}}</span></p>\n          </div>\n          <div class=\"col-2 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\"\n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeVehiclesTunedByMonth\" [drops]=\"dropsDown\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [ranges]=\"ranges\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'myVehiclesTunedByMonth')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <app-line-graph #vehicleTunedMonthGraph [height]=\"280\" [colors]=\"['#AD88F1']\"></app-line-graph>\n      </div>\n\n\n      <div class=\"graph\">\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-10\">\n            <p style=\"margin-bottom: 0px;\">My Supports Tickets by Status\n              &nbsp; <span class=\"chartDateSize\">{{selectedRangeSupportsTicketsByStatus == -1 ? (mySTSdateRange?.startDate + ' - ' + mySTSdateRange?.endDate) : (currentMonthName)}}</span></p>\n          </div>\n          <div class=\"col-2 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\"\n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeSupportsTicketsByStatus\" [drops]=\"dropsDown\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'mySupportsTicketsByStatus')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <hr>\n        <app-line-graph #supportTickets [height]=\"280\"></app-line-graph>\n      </div>\n\n      <div class=\"graph\">\n        <p>My Available Credits by Type</p>\n        <app-line-graph #myAvailableCredits [colors]=\"['#394A9D', '#2091FF', '#58C1F3']\" [distributed]=\"true\" [height]=\"280\"></app-line-graph>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, Input, ViewChild } from '@angular/core';\nimport { CustomerBusinessService } from '../../customer-business.service';\nimport { Chart } from 'chart.js';\nimport { CustomerResellerService } from '../../customer-reseller.service';\nimport { chartColors, monthList } from 'src/app/global-files/global.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { Router } from '@angular/router';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { NgxDaterangepickerBootstrapDirective } from 'ngx-daterangepicker-bootstrap';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { AdminService } from 'src/app/admin/admin.service';\nimport { LineGraphComponent } from 'src/app/shared/line-graph/line-graph.component';\nimport { XorEncryptionService } from 'src/app/services/xor-encryption.service';\n\n@Component({\n  selector: 'app-reseller-dashboard',\n  templateUrl: './reseller-dashboard.component.html',\n  styleUrls: ['./reseller-dashboard.component.scss', '../dashboard/dashboard.component.scss']\n})\nexport class ResellerDashboardComponent {\n  public chart: any;\n  public chart1: any;\n  public chart3: any;\n  public chart4: any;\n  public chart5: any;\n  public chart6: any;\n  getDashboardCards: any;\n  currentPage: number = 1;\n  itemsPerPage: number = 10;\n  subDealersName: Array<any> = [];\n  getId: any;\n  @Input() unseenNotifications: any\n  monthList: any = monthList;\n  ticketStatusMonth: any;\n  vehicleTunedMonthRange: any = 6;\n  vehicleTunedMonth: any;\n  usedKeysMonthRange: any = 6;\n  usedKeysMonth: any;\n  usedKeysYear: any;\n  vehicleTunedYear: any;\n  notificationList: any;\n  unseenNotiCount: any;\n  ticketStatusYear: any;\n  page = 1;\n  pageSize = 10;\n  yearCount: number = 0;\n  year: number = 0;\n  showDashBoardPermissionError: boolean = false;\n  getTeamData: Array<any> = [];\n  showSidebarChart: boolean = false;\n\n  // Date range picker code start from here\n  dropsDown = 'down';\n  dropsUp = 'up';\n  opensRight = 'right';\n  opensCenter = 'center';\n  opensLeft = 'left';\n  selectedRangeCalendarCenter: any;\n  selectedRangeVehiclesTunedByMonth: any;\n  selectedRangeSupportsTicketsByStatus: any;\n  maxDate?: Dayjs;\n  minDate?: Dayjs;\n  invalidDates: Dayjs[] = [];\n  ranges: any = {\n    '3 Month': [\n      dayjs().subtract(89, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '6 Month': [\n      dayjs().subtract(179, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '1 Year': [\n      dayjs().subtract(364, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n  };\n  localeTime = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'DD.MM.YYYY HH:mm:ss',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n  };\n  locale = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'YYYY-MM-DD',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n    displayFormat: 'YYYY-MM-DD',\n  };\n  tooltips = [\n    { date: dayjs(), text: 'Today is just unselectable' },\n    { date: dayjs().add(2, 'days'), text: 'Yeeeees!!!' },\n  ];\n  @ViewChild(NgxDaterangepickerBootstrapDirective, { static: false }) pickerDirective!: NgxDaterangepickerBootstrapDirective;\n  // Date range picker code end from here&&&&&&&&&&&&&&&&&&&&&\n  constructor(public resellerService: CustomerResellerService,private adminService: AdminService, private crud: CrudService,\n    private router: Router, public notification: NotificationsService, private xorEncryption:XorEncryptionService) {\n\n  }\n  currentMonthName:any;\n  async ngOnInit() {\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const currentDate = new Date();\n    const currentMonthNumber = currentDate.getMonth() + 1;\n    this.currentMonthName = monthNames[currentDate.getMonth()];\n    this.year = currentDate.getFullYear();\n    this.yearCount = this.year - 2022;\n    this.ticketStatusMonth = currentMonthNumber;\n    this.vehicleTunedMonth = currentMonthNumber;\n    this.usedKeysMonth = currentMonthNumber;\n    this.usedKeysYear = this.year;\n    this.vehicleTunedYear = this.year;\n    this.ticketStatusYear = this.year;\n    this.notification.onMessageUser.subscribe((res: any) => {\n      if (res && res.type === 'ticket_create_notification_customer') {\n        this.unseenNotiCount = 1;\n        let body = {\n          message: res.message,\n          type: res.type,\n          id: res.ids\n        }\n        this.notificationList.unshift(body)\n      }\n    });\n    this.getNotification();\n    await this.getSubdealerChart()\n    // this.getCardsAndMyCreditData();\n    this.getCharts();\n    this.getDynamicDrilldown('range');\n    this.vehiclesTuned('range')\n\n  }\n  ngAfterViewInit(){\n    this.getRightPanelData();\n  }\n  getRightPanelData() {\n    this.getTeamData = []\n    this.adminService.getTopSubdealer().subscribe((response) => {\n      if (response && response.data) {\n        this.getTeamData = response.data.top_sub_dealers\n      }\n    })\n  }\n\n  isInvalidDate = (m: Dayjs) => {\n    return this.invalidDates.some((d) => d.isSame(m, 'day'));\n  };\n\n  isCustomDate = (date: Dayjs) => {\n    return date.month() === 0 || date.month() === 6 ? 'mycustomdate' : false;\n  };\n\n  isTooltipDate = (m: Dayjs) => {\n    const tooltip = this.tooltips.find((tt) => tt.date.isSame(m, 'day'));\n    return tooltip ? tooltip.text : false;\n  };\n  dateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  UKBDdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  myVTBMdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  mySTSdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n\n  datesUpdatedRange($event: any, type: string) {\n\n    // start_date=2023-11-01&end_date=2023-11-30\n    this.dateRange.startDate = $event.startDate.$y + '-' + ($event.startDate.$M + 1) + '-' + $event.startDate.$D\n    this.dateRange.endDate = $event.endDate.$y + '-' + ($event.endDate.$M + 1) + '-' + $event.endDate.$D\n    if ($event.label) {\n      if (type == 'usedKeysByDate') {\n        this.usedKeysMonthRange = $event.label == '3 Month' ? 3 : ($event.label == '6 Month' ? 6 : ($event.label == '1 Year' ? 1 : -1))\n        this.UKBDdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.UKBDdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getDynamicDrilldown('range', this.dateRange)\n      }\n      else if (type == 'myVehiclesTunedByMonth') {\n        this.vehicleTunedMonthRange = $event.label == '3 Month' ? 3 : ($event.label == '6 Month' ? 6 : ($event.label == '1 Year' ? 1 : -1))\n        this.myVTBMdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.myVTBMdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.vehiclesTuned('range', this.dateRange)\n      }\n      else if (type == 'mySupportsTicketsByStatus') {\n        this.selectedRangeSupportsTicketsByStatus = -1;\n        this.mySTSdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.mySTSdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getStatusChart(this.dateRange);\n      }\n    }\n  }\n\n  datesUpdatedSingle($event: any) {\n    console.log('single', $event);\n  }\n\n  datesUpdatedInline($event: Object) {\n    console.log('inline', $event);\n  }\n\n\n  getNotification() {\n    this.crud.getRequest(`${requestUrl.getNotification}${this.page}&page_size=${this.pageSize}`).then((res: any) => {\n      if (res) {\n        this.notificationList = res.data.results;\n        this.unseenNotiCount = res.data.un_seen_message_count;\n        // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n      }\n    })\n  }\n  counter(i: number) {\n    return new Array(i);\n  }\n  redirectTo(data: any) {\n    if (data.type == 'file_submission_completed')\n      this.router.navigateByUrl(`/file-service/file-services`)\n    else if (data.type == 'ticket_create_notification_customer')\n      // this.router.navigateByUrl(`/support/view-ticket/${data?.id}/${data?.id.slice(2, 5)}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.id)}/${this.xorEncryption.xorEncryptDecrypt(data.id.slice(2, 5))}`);\n    else if (data.ticket) {\n      // this.router.navigateByUrl(`/support/view-ticket/${data.ticket.ids}/${data.ticket.id}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.ticket.ids)}/${this.xorEncryption.xorEncryptDecrypt(data.ticket.id)}`);\n    }\n  }\n  readNotification() {\n    this.crud.postRequest(requestUrl.readNotification, {}).then((res: any) => {\n      if (res)\n        this.unseenNotiCount = 0;\n      // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n    })\n  }\n  changePage(pageNumber: number) {\n    this.currentPage = pageNumber;\n    this.getCharts(); // Reload the chart with data for the new page\n  }\n  nextPage() {\n    if (this.currentPage < this.getTotalPages()) {\n      this.currentPage++;\n      this.getCharts();\n    }\n  }\n\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.getCharts();\n    }\n  }\n\n  getTotalPages(): number {\n    return Math.ceil(this.subDealersName.length / this.itemsPerPage);\n  }\n\n\n  @ViewChild('unallocatedSubdealerGraph') unallocatedSubdealerGraph!:LineGraphComponent;\n  async getSubdealerChart() {\n    this.resellerService.getSubDealerChartData().subscribe((res: any) => {\n      let evc_credit = res.data.unallocated_keys_sub_dealer[0]?.evc_credit\n      let file_key_credit = res.data.unallocated_keys_sub_dealer[0]?.file_key_credit\n      let function_credit = res.data.unallocated_keys_sub_dealer[0]?.function_credit\n\n      this.unallocatedSubdealerGraph.reDraw([evc_credit, file_key_credit, function_credit], ['Evc Credit', 'File Key Credit', 'Function Credit'])\n\n      this.getDashboardCards = res?.data;\n      this.getCreditChart();\n      this.getStatusChart();\n    })\n  }\n\n\n  @ViewChild('unusedSubdealerKey') unusedSubdealerKey!:LineGraphComponent;\n  getCharts() {\n    // const ctx = document.getElementById('canvas') as HTMLCanvasElement;\n    const data = JSON.parse(localStorage.getItem('userdetails') || '');\n    const id = data.uuid;\n    this.resellerService.getUnusedkeySubdealer(id, this.currentPage).subscribe((response) => {\n      const subdealerData = response.data.results\n      this.subDealersName = subdealerData.map((data: { first_name: any; last_name: any; }) => `${data?.first_name} ${data?.last_name}`);\n      const fileKeyCreditData = subdealerData.map((data: { credit: { file_key_credit: any; }; }) => data.credit.file_key_credit || 0);\n      const functionCredits = subdealerData.map((data: { credit: { function_credit: any; }; }) => data.credit.function_credit || 0);\n      const evcCredits = subdealerData.map((data: { credit: { evc_credit: any; }; }) => data.credit.evc_credit || 0)\n      if (response && response.data) {\n        const data = [\n          {\n            name: 'File Key Credits',\n            color: '#394A9D',\n            data: fileKeyCreditData,\n          },\n          {\n            name: 'Function Credits',\n            color: '#2091FF',\n            data: functionCredits,\n          },\n          {\n            name: 'EVC Credits',\n            color: '#58C1F3',\n            data: evcCredits,\n          },\n        ];\n        // this.unusedSubdealerKey.reDraw( data, this.subDealersName)\n        this.unusedSubdealerKey.reDraw( data, this.subDealersName)\n      }\n    })\n  }\n\n\n  @ViewChild('usedKeyByDate') usedKeyByDate!:LineGraphComponent;\n  getDynamicDrilldown(type: any, dateRange?: any) {\n    let url;\n    if (type == 'month')\n      url = `filter_by=month&month_number=${this.usedKeysMonth}&year=${this.usedKeysYear}`;\n    else {\n      if (this.usedKeysMonthRange == -1) {\n        url = `filter_by=date&start_date=${dateRange.startDate}&end_date=${dateRange.endDate}`;\n      }\n      else\n        url = `filter_by=range&range=${this.usedKeysMonthRange}`;\n    }\n    this.crud.get(`dashboard/reseller/dashboard/used_keys/month?${url}`).subscribe((response: any) => {\n      const responseData = response.data.credit_used_by_month\n      const labels = responseData.map((data: { month: any; }) => data.month)\n      const fileKeyCreditData = responseData.map((data: { credit: { file_credit: any; }; }) => data.credit.file_credit || 0);\n      const functionCredits = responseData.map((data: { credit: { function_credit: any; }; }) => data.credit.function_credit || 0);\n      const evcCredits = responseData.map((data: { credit: { evc_credit: any; }; }) => data.credit.evc_credit || 0)\n      if (response && response.data) {\n\n        const datasets = [\n          {\n            name: 'File Key Credits',\n            color: '#394A9D',\n            data: fileKeyCreditData,\n          },\n          {\n            name: 'Function Credits',\n            color: '#2091FF',\n            data: functionCredits,\n          },\n          {\n            name: 'EVC Credits',\n            color: '#58C1F3',\n            data: evcCredits,\n          },\n        ];\n        this.usedKeyByDate.reDraw( datasets, labels)\n\n      }\n    })\n  }\n\n\n  @ViewChild('myAvailableCredits') myAvailableCredits!:LineGraphComponent;\n  getCreditChart() {\n    const userDetails = JSON.parse(localStorage.getItem('userdetails') || 'null')\n    let file_key_credit = 0;\n    let function_credit = 0;\n    let evc_credit = 0;\n    if(userDetails) {\n      file_key_credit = userDetails.reseller_dealer_credit.file_key_credit\n      function_credit = userDetails.reseller_dealer_credit.function_credit\n      evc_credit = userDetails.reseller_dealer_credit.evc_credit\n    }\n\n    const colors = ['#394A9D', '#2091FF', '#58C1F3']\n\n    const data = [\n      {\n        name: 'Credits',\n        data:[ file_key_credit || 0, function_credit || 0, evc_credit || 0]\n      }\n    ]\n    const labels = [\n      'File Key Credits',\n      'Function Credits',\n      'EVC Credits'\n    ]\n    const allCredits = this.getDashboardCards?.available_credit_balance.reduce((accumulator: any[], item: { file_key_credit: any; function_credit: any; evc_credit: any; }) => {\n      accumulator.push(item.file_key_credit, item.function_credit, item.evc_credit,);\n      return accumulator;\n    }, []);\n    this.myAvailableCredits.reDraw( data, labels)\n  }\n\n\n  @ViewChild('supportTickets') supportTickets!:LineGraphComponent;\n  async getStatusChart(dateRange?: any) {\n    var url;\n    if (dateRange)\n      url = `dashboard/reseller/ticket/by_status/activity?filter_type=date&from_date=${dateRange.startDate}&to_date=${dateRange.endDate}`;\n    else\n      url = 'dashboard/reseller/ticket/by_status/activity?month=' + this.ticketStatusMonth + '&year=' + this.ticketStatusYear;\n\n    this.crud.getRequest(url).then((res: any) => {\n      let keys = Object.keys(res.data);\n      let keysArray = keys.map((r: any) => r.replace(/_/g, ' '))\n      keysArray = keysArray.map((r: any) => {\n        return r = r.split(' ').map((a: any) => {\n          const firstChar = a[0].toUpperCase(); // Get the first character and convert it to uppercase\n          const restOfStr = a.slice(1); // Get the rest of the string\n          return firstChar + restOfStr;\n        }).join(' ')\n      })\n      for (let i = 0; i < keysArray.length; i++) {\n        if (keysArray[i] == 'Inprogress')\n          keysArray[i] = 'In Progress';\n      }\n      const valuesArray: any = Object.values(res.data);\n      this.supportTickets.reDraw([{ name:\"\", data:valuesArray}], keysArray)\n    })\n\n\n  }\n\n\n  // getCardsAndMyCreditData() {\n  //   this.resellerService.getResellerCardsData().subscribe((response) => {\n  //     if (response && response.data) {\n  //       this.getDashboardCards = response.data;\n  //       this.getCreditChart();\n  //       this.getStatusChart();\n  //     }\n  //   })\n  // }\n\n  @ViewChild('vehicleTunedMonthGraph') vehicleTunedMonthGraph!:LineGraphComponent;\n  vehiclesTuned(type: string, dateRange?: any) {\n    // 2 - {{url}}/dashboard/reseller/dashboard/file_tuned/month?range=3&filter_by=range (By default)\n    // 3 - {{url}}/dashboard/reseller/dashboard/file_tuned/month?filter_by=month&month_number=12\n    var url;\n    if (type == 'month')\n      url = `filter_by=month&month_number=${this.vehicleTunedMonth}&year=${this.vehicleTunedYear}`;\n    else {\n      if (this.vehicleTunedMonthRange == -1)\n        url = `filter_by=date&start_date=${dateRange.startDate}&end_date=${dateRange.endDate}`;\n      else\n        url = `range=${this.vehicleTunedMonthRange}&filter_by=range`;\n    }\n    this.crud.get(`dashboard/reseller/dashboard/file_tuned/month?${url}`).subscribe((response: any) => {\n      // this.resellerService.getVechicleTuned().subscribe((response) => {\n      if (response && response.data) {\n        const labels = response.data?.vehicle_tuned.map((label: {\n          month: any; \"\": any;\n        }) => label.month)\n        const data = response.data.vehicle_tuned.map((data: { count: any; }) => data.count)\n        this.vehicleTunedMonthGraph.reDraw( [{name:\"\", data }], labels)\n      }\n    })\n  }\n  viewCredit(id:any){\n    console.log('functioncall');\n    \n        this.router.navigate([`/subDealer-credit-spent`], { queryParams: { 'uuid': id } });\n  }\n}\n","<section class=\"add-user\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Dashboard</a></li>\n  </ul>\n  <div class=\"add-user-inne\">\n    <div class=\"dash-card\">\n      <div class=\"card-inner\" [routerLink]=\"['/credit/credit-transaction']\" [queryParams]=\"{ type: 'spentHistory' }\">\n        <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"50\" viewBox=\"0 0 120.000000 156.000000\"\n          preserveAspectRatio=\"xMidYMid meet\">\n          <metadata>\n          Created by potrace 1.10, written by Peter Selinger 2001-2011\n          </metadata>\n          <g transform=\"translate(0.000000,156.000000) scale(0.100000,-0.100000)\"\n          fill=\"#000000\" stroke=\"none\">\n          <path d=\"M290 1415 l0 -35 -74 0 -74 0 -7 -30 c-23 -105 75 -248 216 -316 20\n          -11 45 -31 53 -45 8 -14 36 -45 61 -68 40 -37 45 -46 45 -86 0 -39 3 -45 21\n          -45 20 0 21 -3 15 -58 -3 -31 -19 -82 -34 -112 l-27 -55 -132 -3 -133 -3 0\n          -174 0 -175 -25 0 c-25 0 -26 -2 -23 -58 l3 -57 430 0 430 0 3 58 c3 55 2 57\n          -23 57 l-25 0 0 175 0 175 -130 0 -129 0 -25 42 c-23 41 -46 125 -46 168 0 13\n          7 20 20 20 17 0 20 7 20 43 0 38 6 48 68 112 37 39 99 92 139 118 83 55 117\n          92 149 162 24 50 29 90 18 133 -6 20 -12 22 -80 22 l-74 0 0 35 0 35 -315 0\n          -315 0 0 -35z m605 -60 c-15 -151 -57 -280 -121 -366 -100 -137 -237 -138\n          -337 -1 -63 85 -107 219 -122 372 l-7 65 297 0 297 0 -7 -70z m-600 -42 c14\n          -91 28 -152 50 -205 l23 -58 -31 18 c-54 31 -135 112 -156 155 -12 24 -21 62\n          -21 85 l0 42 65 0 64 0 6 -37z m755 -5 c0 -23 -9 -61 -21 -85 -21 -43 -102\n          -124 -156 -155 l-31 -18 23 58 c22 53 36 114 50 205 l6 37 64 0 65 0 0 -42z\n          m-372 -470 c-3 -21 -8 -23 -73 -23 -65 0 -70 2 -73 23 -3 21 0 22 73 22 73 0\n          76 -1 73 -22z m-35 -114 c3 -42 14 -83 30 -115 l26 -49 -94 0 -94 0 26 49 c16\n          32 27 73 30 115 l6 66 32 0 32 0 6 -66z m327 -349 l0 -165 -362 0 -363 0 2\n          162 c1 90 2 164 2 166 1 1 163 2 361 2 l360 0 0 -165z m50 -220 l0 -35 -415 0\n          -415 0 0 35 0 35 415 0 415 0 0 -35z\"/>\n          <path d=\"M385 440 c-3 -6 0 -12 7 -15 26 -10 433 0 433 10 0 14 -431 19 -440\n          5z\"/>\n          <path d=\"M385 320 c-3 -6 0 -12 7 -15 26 -10 433 0 433 10 0 14 -431 19 -440\n          5z\"/>\n          </g>\n        </svg>\n        <p>Credits Spent History</p>\n        <h5>{{getCountData?.credit_spent_current_month || 0}}</h5>\n      </div>\n\n\n      <div class=\"card-inner\" [routerLink]=\"['/credit/credit-transaction']\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 2048 1790\" width=\"70\">\n          <path transform=\"translate(1624,300)\" d=\"m0 0h24l17 3 13 5 10 6 10 8 10 10 9 14 8 16 4 13 1 14-3 22-6 15-6 11-13 16-12 10-12 7-17 6-13 2h-20l-16-3-21-8-7 14-8 14-10 18-13 24-13 23-13 24-20 35-16 29-8 14-10 18-12 22-10 18-12 22-15 27-6 10-6 8 1 4 8 9 11 15 8 16 4 15 1 9v10l-3 19-4 12-7 13-8 10-6 7-11 9-15 8-17 5-7 1h-22l-16-3-12-5-12-8-12-11-8-10-8-14-5-12-3-16-1-20-21-7-31-12-34-14-20-8-18-8-4-2-1 12-4 13-5 10-9 13-11 12-11 8-16 8-15 4-10 1h-15l-15-2-16-6-14-9-13-11-4-3 1 5-8 7-7 8-8 9-9 11-11 12-9 11-10 11-9 11-11 12-7 8-18 20-7 8-12 13-18 20-6 8 1 4 6 15 4 13 1 6v14l-3 17-5 13-8 15-9 10-7 8-12 9-12 6-15 4-7 1h-25l-17-4-14-6-11-8-10-9-9-11-9-16-5-16-1-9v-14l3-17v-7l-16-9-26-17-25-16-38-24-14-10-9-7-3-3-4 2-13 15-15 14-11 7-14 5-9 2-10 1h-15l-15-2-15-5-13-8-10-9-7-7-7-9-3-2-9 6-10 8-13 9-19 14-21 14-17 12-18 12-11 6-7 1-5-4-3-6 2-6 7-8 20-15 16-11 18-13 14-10 43-29 5-2-3-11-1-6v-23l4-16 8-16 6-9 12-13 12-9 12-7 16-5 6-1h27l17 4 13 6 12 7 15 15 10 15 7 16 4 15v32l4 5 18 11 19 12 48 30 33 22 10 9 4-2 7-8 4-5 16-12 17-9 15-4h26l16 4 16 8 11 8 8 4 2-4 7-8 11-12 8-10 11-12 9-11 16-17 7-8 9-10 11-13 9-10 9-11 24-28 9-9 6-7 4-3v-7l-5-18-1-6v-26l4-16 5-11 6-10 9-11 12-10 11-7 12-6 13-3 17-1 20 2 15 5 13 7 11 9 9 9 12 18 8 17 3 5 8 5 8 4 35 14 32 13 26 10 20 9h2l7-11 9-11 9-10 14-10 14-7 14-4 6-1h22l15 3 6 2 2-5 6-10 10-16 13-24 10-17 10-18 14-25 15-27 13-23 14-26 13-23 16-28 14-26 12-22 10-18 10-15-1-5-10-15-8-16-4-15-1-17 1-13 5-16 8-15 8-11 13-13 14-9 13-6zm4 25-16 4-13 7-13 13-8 13-4 13-2 13 1 15 3 10 7 11 11 12 10 8 12 6 18 4h14l12-3 16-8 8-6 7-7 7-11 4-12 2-13v-10l-3-16-4-9-7-11-10-10-11-7-14-5-7-1zm-583 397-13 3-14 7-10 8-7 7-7 11-5 12-3 14v17l4 13 7 13 7 8 5 5 11 8 11 5 12 3h19l13-4 12-6 10-8 7-7 6-10 4-11 2-13v-21l-4-14-6-11-9-10-12-9-16-8-9-2zm304 75-17 5-13 7-14 14-5 8-5 14-2 17 1 14 4 12 11 16 14 11 14 7 12 3h17l13-4 15-8 12-11 7-10 4-10 2-8 1-18-2-14-5-12-7-10-8-8-14-9-11-4-9-2zm-370 47 1 2zm-523 0-17 2-14 5-13 9-9 9-9 14-4 11-1 6v23l4 13 9 15 13 13 11 7 10 4 16 3h8l12-3 12-5 12-9 12-12 8-14 3-10 1-7v-12l-3-15-6-14-9-12-10-9-17-9-9-2zm294 159-11 2-12 5-13 9-12 12-8 14-4 16v22l3 11 5 9 9 11 10 9 10 6 16 5 6 1h15l11-3 14-7 12-11 7-8 8-16 2-12v-20l-3-12-6-11-10-12-13-10-14-7-13-3z\" fill=\"#000000\"/>\n          <path transform=\"translate(1566,579)\" d=\"m0 0h180l6 2v938l-2 5-5 2-8 1h-171l-3-2-1-3-1-22-1-359v-457l1-101 1-3zm20 22-1 2v896l1 6 140 1 2-1 1-219v-683l-1-1z\" fill=\"#000000\"/>\n          <path transform=\"translate(981,941)\" d=\"m0 0h156l7 1 2 3 1 9v398l-1 178-6 2-11 1-56 1h-73l-38-1-1-3-1-22v-561l3-5zm98 23-95 1-1 124v403l1 19 138-1v-545l-1-1z\" fill=\"#000000\"/>\n          <path transform=\"translate(1304,1022)\" d=\"m0 0h140l3 1v500l-2 4-6 2-25 1h-134l-21-1-3-7-1-15v-481l2-3zm48 23-72 1-1 460 1 1h143l1-2-1-460z\" fill=\"#000000\"/>\n          <path transform=\"translate(368,1050)\" d=\"m0 0h177l2 4v475l-6 2-24 1h-146l-6-2-1-1-1-9-1-31v-433l1-5zm19 22v438l44-1h90l2-1 1-56v-380z\" fill=\"#000000\"/>\n          <path transform=\"translate(795,1188)\" d=\"m0 0h37l14 1 4 4v335l-1 2-6 1-19 1h-158l-3-3-1-15v-322l2-2 9-1zm-1 25-109 1v295l142-1v-294l-1-1z\" fill=\"#000000\"/>\n        </svg>\n        <p>Credit Purchased</p>\n        <h5>{{getCountData?.credit_purchased || 0}}</h5>\n      </div>\n\n\n      <div class=\"card-inner\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 2023 2048\" width=\"40\">\n          <path transform=\"translate(1018,32)\" d=\"m0 0 32 1 19 3 21 6 23 11 12 8 16 13 16 16 13 17 9 14 9 17 6 15 5 18 3 26v17l-2 22 9 3 46 15 29 12 26 13 18 10 19 11 18 11 24 16 18 14 14 11 12 10 11 9 17 16 14 14 7 8 13 13 7 8 14 17 14 19 13 18 12 18 13 22 13 24 17 34 14 33 11 33 7 26 10 49 7 49 4 43 1 23 1 464 1 80 2 15 3 9 4 4v2l4 2 12 11 11 9 13 11 11 9 28 24 10 8 13 11 11 9 14 12 10 8 13 11 13 10 15 13 11 9 13 11 10 8 11 9 13 11 8 7 9 12 4 8 2 9v47l-2 14-7 14-9 10-8 5-11 3-10 1h-1709l-13-2-9-5-10-10-6-10-4-14-1-12v-41l3-10 7-12 9-10 13-12 13-10 13-11 11-9 12-11 11-9 15-13 9-7 16-13 15-13 14-12 16-13 11-9 12-10 22-18 13-11 10-8 14-12 5-6 3-9 1-14 1-148 1-391 2-33 7-62 6-35 9-39 6-19 10-29 11-26 12-26 16-33 11-19 9-14 24-36 10-14 22-26 9-10 9-11 9-9 7-8 13-13 8-7 11-10 22-18 15-12 15-11 18-12 28-17 24-14 27-14 31-13 44-14 4-2 1-10-1-13v-15l3-24 4-16 7-18 12-23 13-19 13-15 7-7 11-9 13-10 16-9 10-5 21-7 24-4zm-7 86-15 3-12 5-14 8-10 8-7 7-6 9-8 16-5 16-2 12v8l3 3h19l39-2h58l32 2 25 2 3-1 1-2-1-14-5-22-5-12-8-12-10-11-14-10-17-8-15-4-6-1zm-18 182-35 3-36 5-35 7-30 8-20 7-30 13-17 8-19 10-22 12-19 12-14 10-12 9-21 16-13 11-8 7-13 12-17 17-7 8-8 9-9 11-13 16-12 17-14 21-13 22-12 21-8 16-12 27-13 37-11 35-11 44-3 16-3 26-3 45-1 39-1 498-2 31-3 18-5 13-10 19-11 14-15 15-11 9-14 12-34 28-14 12-22 18-9 8-10 8-12 10-22 18-12 11-11 9-15 13-6 7 1 1 425 2h590l399-2h148l-6-7-14-14-8-7-12-11-11-9-9-8-11-9-13-11-11-9-14-12-14-11-13-11-14-11-14-12-11-9-13-11-13-12-9-10-11-15-8-15-5-16-3-18-1-12-1-29v-491l-1-34-5-77-3-21-8-34-12-36-10-27-10-25-11-24-12-22-12-19-18-27-8-11-11-14-11-12-7-8-9-9-7-8-22-22-11-9-13-11-20-15-15-11-15-10-20-12-24-13-16-8-33-15-28-11-34-9-23-5-38-6-26-3-14-1z\" fill=\"#000000\"/>\n          <path transform=\"translate(851,1812)\" d=\"m0 0 4 1 7 9 10 17 13 17 9 10 15 13 14 10 13 8 21 10 23 7 19 3 10 1h32l24-4 22-6 14-6 14-8 17-12 11-9 18-18 11-14 9-14 7-13 1-1 7 1 35 13 13 6 19 9 5 5-3 9-10 18-8 14-9 12-8 10-9 10-7 8-13 13-14 11-13 10-18 11-21 10-30 11-25 7-25 5-19 2h-31l-20-2-25-5-23-7-27-11-25-12-16-10-13-10-14-12-19-19-9-11-11-14-11-17-15-25 1-4 8-5 28-14 28-13z\" fill=\"#000000\"/>\n        </svg>\n        <p class=\"pointer\" data-bs-toggle=\"dropdown\">My Notification</p>\n        <h5 class=\"pointer\" data-bs-toggle=\"dropdown\">{{notificationCount}}</h5>\n        <ul class=\"dropdown-menu\" style=\"min-width:350px; width: 450px; height: 300px; overflow-y: scroll;\">\n          <li *ngIf=\"notificationList?.length==0\" style=\"text-align: center;\">No Notification...</li>\n          <li style=\"padding-left: 5px;\" *ngFor=\"let noti of notificationList\">\n            <div class=\"profile mb-2\">\n              <img [src]=\"noti.sender?.image ? noti.sender?.image: 'assets/images/icon/customer-profile.png'\"\n                alt=\"profile\" />\n              <div class=\"notification-inner\" (click)=\"redirectTo(noti)\">\n                <div>\n                  <h6 class=\"mb-0\">{{noti.title}}</h6>\n                  <p>{{noti.message}} </p>\n                </div>\n                <p>{{notification.formatDate(noti.created_at)}}</p>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"bottomChart\">\n      <!-- ====================== Used Keys By Date ======================= -->\n      <div class=\"barchrt w-100\">\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-9\">\n            <p style=\"margin-bottom: 0px;\">Used Keys By Date\n              &nbsp; <span class=\"chartDateSize\">{{usedKeysMonthRange == -1 ? (uKdateRange?.startDate + ' - ' + uKdateRange?.endDate) : (usedKeysMonthRange == 1 ?usedKeysMonthRange +' Year':usedKeysMonthRange +' Month' )}}</span></p>\n          </div>\n          <div class=\"col-3 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\"\n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeCalendarCenter\" [drops]=\"dropsDown\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [ranges]=\"ranges\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'usedKeysByDate')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <app-line-graph #usedByKey [colors]=\"gradientColors\" [stacked]=\"true\" ></app-line-graph>\n      </div>\n\n\n      <!-- ====================== My Support Tickets by Status ======================= -->\n      <div class=\"barchrt w-100\">\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-9\">\n            <p style=\"margin-bottom: 0px;\">My Support Tickets by Status\n              &nbsp; <span class=\"chartDateSize\">{{selectedRangeSupportTicketsStatus == -1 ? (MSTBSdateRange?.startDate + ' - ' + MSTBSdateRange?.endDate) : (currentMonthName)}}</span></p>\n          </div>\n          <div class=\"col-3 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\"\n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeSupportTicketsStatus\" [drops]=\"dropsDown\"\n              [ranges]=\"ranges\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'MySupportTicketsByStatus')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <app-line-graph #ticketByStatus [colors]=\"gradientColors\"></app-line-graph>\n      </div>\n    </div>\n\n\n    <div class=\"bottomChart\">\n      <!-- ====================== My Tool Usage Graph ======================= -->\n      <div>\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-9\">\n            <p style=\"margin-bottom: 0px;\">My Tool Usage\n              &nbsp; <span class=\"chartDateSize\">{{selectedRangeMyToolUsage == -1 ? (MyTUdateRange?.startDate + ' - ' + MyTUdateRange?.endDate) : (currentMonthName)}}</span></p>\n          </div>\n          <div class=\"col-3 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\" \n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeMyToolUsage\" [drops]=\"dropsDown\"\n              [ranges]=\"ranges\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'MyToolUsage')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <app-line-graph #myToolUsage [distributed]=\"false\" xAxisTitle=\"Tools name\" yAxisTitle=\"No of usages\"></app-line-graph>\n      </div>\n\n      <!-- ====================== My Files Submitted ======================= -->\n      <div>\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-9\">\n            <p style=\"margin-bottom: 0px;\">My Files Submitted\n              &nbsp; <span class=\"chartDateSize\">{{fileSubmitedMonthRange == -1 ? (MyFSdateRange?.startDate + ' - ' + MyFSdateRange?.endDate) : (fileSubmitedMonthRange == 1 ?fileSubmitedMonthRange +' Year':fileSubmitedMonthRange +' Month' )}}</span></p>\n          </div>\n          <div class=\"col-3 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\" \n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedMyFilesSubmitted\" [drops]=\"dropsDown\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [ranges]=\"ranges\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'MyFilesSubmitted')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <app-line-graph #myFilesSubmitted [colors]=\"['#AD88F1']\" [legend]=\"false\" xAxisTitle=\"Credit usage in months\" yAxisTitle=\"Number of credits used\"></app-line-graph>\n      </div>\n      \n      <div>\n        <p>My Available Credits by Type Credit Balance</p>\n        <app-line-graph #creditBalanceChart [colors]=\"['#32337E']\" [distributed]=\"true\" xAxisTitle=\"Credit types\" yAxisTitle=\"Number of credit available\"></app-line-graph>\n      </div>\n    </div>\n\n  </div>\n</section>","import { Component, Input, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Chart } from 'chart.js';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { CustomerBusinessService } from '../../customer-business.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { monthList } from 'src/app/global-files/global.const';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { NgxDaterangepickerBootstrapDirective } from 'ngx-daterangepicker-bootstrap';\nimport { LineGraphComponent } from 'src/app/shared/line-graph/line-graph.component';\nimport { XorEncryptionService } from 'src/app/services/xor-encryption.service';\n\n@Component({\n  selector: 'app-business-dashboard',\n  templateUrl: './business-dashboard.component.html',\n  styleUrls: ['./business-dashboard.component.scss']\n})\nexport class BusinessDashboardComponent {\n  @Input() unseenNotifications: any\n  fileT: any = 'submission';\n  fileR: any = 'submission';\n  // activeTickets: any;\n  // totalCustomer: any;\n  // newCustomer: any;\n  // recentActiveTicketList: any;\n  // recentActiveCustomerList: any;\n  // filedata: any;\n  // ticketData: any;\n  getCountData: any;\n  notificationCount: any;\n  getCreditChartData: Array<any> = [];\n\n  gradientColors = [\n    \"#AD88F1\",\n    \"#826ACA\",\n    \"#594DA3\",\n    \"#32337E\",\n    \"#20B2AA\",\n    \"#40E0D0\",\n    \"#48D1CC\",\n    \"#00FA9A\",\n    \"#7FFF00\",\n    \"#ADFF2F\",\n    \"#2091FF\",\n    \"#BA55D3\",\n    \"#8A2BE2\",\n    \"#7B68EE\",\n    \"#6A5ACD\",\n    \"#4169E1\",\n    \"#1E90FF\",\n    \"#0000FF\",\n    \"#00BFFF\",\n    \"#00CED1\",\n \n  ];\n  customertype: any = 'bar';\n  public chart!: Chart;\n  public chart1!: Chart;\n  public chart2!: Chart;\n  public chart3!: Chart;\n  public chart4!: Chart;\n\n  // toDate: any;\n  // fromDate: any;\n  usedKeysMonthRange: any = 6;\n  fileSubmitedMonth: any;\n  ticketStatusMonth: any;\n  ticketStatusYear: any;\n  fileSubmitedMonthRange: any = 6;\n  toolUsageMonth: any;\n  toolUsageYear: any;\n  monthList: any = monthList;\n  yearCount: number = 0;\n  year: number = 0;\n  notificationList: any;\n  unseenNotiCount: any;\n  page = 1;\n  pageSize = 10;\n\n\n  // Date range picker code start from here\n  dropsDown = 'down';\n  dropsUp = 'up';\n  opensRight = 'right';\n  opensCenter = 'center';\n  opensLeft = 'left';\n  selectedRangeCalendarCenter: any = 6;\n  selectedRangeCalendarTimeInline: any;\n  selectedRangeSupportTicketsStatus: any;\n  selectedRangeMyToolUsage: any;\n  selectedMyFilesSubmitted: any;\n  maxDate?: Dayjs;\n  minDate?: Dayjs;\n  invalidDates: Dayjs[] = [];\n  ranges: any = {\n    '3 Month': [\n      dayjs().subtract(89, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '6 Month': [\n      dayjs().subtract(179, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '1 Year': [\n      dayjs().subtract(364, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n  };\n  localeTime = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'DD.MM.YYYY HH:mm:ss',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n  };\n  locale = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'YYYY-MM-DD',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n    displayFormat: 'YYYY-MM-DD',\n  };\n  tooltips = [\n    { date: dayjs(), text: 'Today is just unselectable' },\n    { date: dayjs().add(2, 'days'), text: 'Yeeeees!!!' },\n  ];\n  titleSize = 15;\n  @ViewChild(NgxDaterangepickerBootstrapDirective, { static: false }) pickerDirective!: NgxDaterangepickerBootstrapDirective;\n  // Date range picker code end from here&&&&&&&&&&&&&&&&&&&&&\n\n\n  dateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  uKdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  MSTBSdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  MyTUdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  MyFSdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  monthMap:any = { 'Jan': 1, 'Feb': 2, 'Mar': 3, 'Apr': 4, 'May': 5, 'Jun': 6,\n    'Jul': 7, 'Aug': 8, 'Sep': 9, 'Oct': 10, 'Nov': 11, 'Dec': 12 };\n\n\n  constructor(private crud: CrudService, private _titleservice: Title, public notification: NotificationsService,\n    private CustomerBusinessService: CustomerBusinessService, private router: Router, private xorEncryption:XorEncryptionService) {\n    this._titleservice.setTitle('Dashboard');\n    Chart.defaults.color = '#000000e6';\n    Chart.defaults.font.size = 14;\n  }\n  currentMonthName: any;\n  ngOnInit(): void {\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    \n    const currentDate = new Date();\n    const currentMonthNumber = currentDate.getMonth() + 1;\n    this.currentMonthName = monthNames[currentDate.getMonth()];\n    this.year = currentDate.getFullYear();\n    this.yearCount = this.year - 2022;\n    this.ticketStatusMonth = currentMonthNumber;\n    this.ticketStatusYear = this.year;\n    this.fileSubmitedMonth = currentMonthNumber;\n    this.toolUsageMonth = currentMonthNumber;\n    this.toolUsageYear = this.year;\n    this.notification.onMessageUser.subscribe((res: any) => {\n      if (res && res.type === 'ticket_create_notification_customer') {\n        this.unseenNotiCount = 1;\n        let body = {\n          message: res.message,\n          type: res.type,\n          id: res.ids\n        }\n        this.notificationList.unshift(body)\n      }\n    });\n    this.getNotification();\n    // this.crud.getRequest(requestUrl.getAdminDasboardData).then((res: any) => {\n    //   this.activeTickets = res.data.active_ticket;\n    //   this.totalCustomer = res.data.total_customers_count;\n    //   this.newCustomer = res.data.last_week_customers_count;\n    //   this.ticketData = res.data.tickets_graph;\n    //   this.filedata = res.data.files_graph;\n    //   this.recentActiveTicketList = res.data.recent_active_five_ticket;\n    //   this.recentActiveCustomerList = res.data.recent_five_customers;\n    // })\n    this.CustomerBusinessService.notificationCount$.subscribe((data) => {\n      this.notificationCount = data;\n    })\n    this.getCardsCount();\n    this.getMyFileSubmittedData();\n    this.getMyToolUsage();\n    this.getMySupportsTicket();\n  }\n\n\n\n\n\n  isInvalidDate = (m: Dayjs) => {\n    return this.invalidDates.some((d) => d.isSame(m, 'day'));\n  };\n\n  isCustomDate = (date: Dayjs) => {\n    return date.month() === 0 || date.month() === 6 ? 'mycustomdate' : false;\n  };\n\n  isTooltipDate = (m: Dayjs) => {\n    const tooltip = this.tooltips.find((tt) => tt.date.isSame(m, 'day'));\n    return tooltip ? tooltip.text : false;\n  };\n  datesUpdatedRange($event: any, type: string) {\n\n    // start_date=2023-11-01&end_date=2023-11-30\n    this.dateRange.startDate = $event.startDate.$y + '-' + ($event.startDate.$M + 1) + '-' + $event.startDate.$D\n    this.dateRange.endDate = $event.endDate.$y + '-' + ($event.endDate.$M + 1) + '-' + $event.endDate.$D\n    if ($event.label) {\n      if (type == 'usedKeysByDate') {\n        this.usedKeysMonthRange = $event.label == '3 Month' ? 3 : ($event.label == '6 Month' ? 6 : ($event.label == '1 Year' ? 1 : -1))\n        this.uKdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.uKdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getCharts(true, this.dateRange)\n      }\n      else if (type == 'MySupportTicketsByStatus') {\n        this.selectedRangeSupportTicketsStatus = -1\n        this.MSTBSdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.MSTBSdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMySupportsTicket(this.dateRange)\n      }\n      else if (type == 'MyToolUsage') {\n        this.selectedRangeMyToolUsage = -1\n        this.MyTUdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.MyTUdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMyToolUsage(this.dateRange)\n      }\n      else if (type == 'MyFilesSubmitted') {\n        this.fileSubmitedMonthRange = $event.label == '3 Month' ? 3 : ($event.label == '6 Month' ? 6 : ($event.label == '1 Year' ? 1 : -1))\n        this.MyFSdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.MyFSdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMyFileSubmittedData(this.dateRange)\n      }\n    }\n  }\n\n  datesUpdatedSingle($event: any) {\n    console.log('single', $event);\n  }\n\n  datesUpdatedInline($event: Object) {\n    console.log('inline', $event);\n  }\n\n\n\n  counter(i: number) {\n    return new Array(i);\n  }\n\n\n  getNotification() {\n    this.crud.getRequest(`${requestUrl.getNotification}${this.page}&page_size=${this.pageSize}`).then((res: any) => {\n      if (res) {\n        this.notificationList = res.data.results;\n        this.unseenNotiCount = res.data.un_seen_message_count;\n        // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n      }\n    })\n  }\n\n\n  redirectTo(data: any) {\n    if (data.type == 'file_submission_completed')\n      this.router.navigateByUrl(`/file-service/file-services`)\n    else if (data.type == 'ticket_create_notification_customer')\n      // this.router.navigateByUrl(`/support/view-ticket/${data?.id}/${data?.id.slice(2, 5)}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.id)}/${this.xorEncryption.xorEncryptDecrypt(data.id.slice(2, 5))}`);\n    else if (data.ticket) {\n      // this.router.navigateByUrl(`/support/view-ticket/${data.ticket.ids}/${data.ticket.id}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.ticket.ids)}/${this.xorEncryption.xorEncryptDecrypt(data.ticket.id)}`);\n    }\n  }\n\n\n\n  readNotification() {\n    this.crud.postRequest(requestUrl.readNotification, {}).then((res: any) => {\n      if (res)\n        this.unseenNotiCount = 0;\n      // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n    })\n  }\n\n\n  @ViewChild('usedByKey') usedByKey!:LineGraphComponent;\n  getCharts(edit?: boolean, dateRange?: any) {\n    var url;\n    if (this.usedKeysMonthRange == -1)\n      url = `dashboard/business/dashboard/used_keys/month?range=${this.usedKeysMonthRange}&start_date=${dateRange.startDate}&end_date=${dateRange.endDate}`;\n    else {\n      url = `dashboard/business/dashboard/used_keys/month?range=${this.usedKeysMonthRange}`\n    }\n    this.crud.getRequest(url).then((res: any) => {\n      const originalData = res.data.credit_used_by_month\n      const months = originalData.map((item: any) => item.month);\n      const fileCredits = originalData.map((item: any) => item.credit.file_credit || 0);\n      const evcCredits = originalData.map((item: any) => item.credit.evc_credit || 0);\n      const functionCredits = originalData.map((item: any) => item.credit.function_credit || 0);\n\n      const chartData = {\n        labels: months,\n        datasets: [\n          {\n            name: 'File Credit',\n            color: '#2091FF',\n            data: fileCredits,\n          },\n          {\n            name: 'EVC Credit',\n            color: '#394A9D',\n            data: evcCredits,\n          },\n          {\n            name: 'Function Credit',\n            color: '#FFA500',\n            data: functionCredits,\n          },\n        ],\n      };\n      const series = chartData.datasets;\n      this.usedByKey.reDraw(series, months)\n    })\n\n  }\n  sColors = ['#FFA500','#394A9D'];\n\n\n\n  @ViewChild('myToolUsage') myToolUsage!:LineGraphComponent;\n  getMyToolUsage(dateRange?: any) {\n    var url;\n    if (dateRange)\n      url = `dashboard/business/dashboard/file_request/tool?filter_type=date&from_date=${dateRange.startDate}&to_date=${dateRange.endDate}`;\n    else {\n      url = `dashboard/business/dashboard/file_request/tool?month=${this.toolUsageMonth}&year=${this.toolUsageYear}`\n    }\n    this.crud.getRequest(url).then((response: any) => {\n      if (response && response.data) {\n        const getMyTools = response.data;\n        const labels = getMyTools.map((entry: { tuning_tool_used: any; }) => entry.tuning_tool_used);\n        const data = getMyTools.map((entry: { count: any; }) => entry.count);\n        this.myToolUsage.reDraw([{name:\"\",data}], labels)\n      }\n    })\n  }\n\n\n  @ViewChild('ticketByStatus') ticketByStatus!:LineGraphComponent;\n  getMySupportsTicket(dateRange?: any) {\n    let url = 'dashboard/business/dashboard/ticket/status';\n    if (dateRange)\n      url += `?filter_type=date&from_date=${dateRange.startDate}&to_date=${dateRange.endDate}`;\n    else {\n      url += '?month=' + this.ticketStatusMonth + '&year=' + this.ticketStatusYear;\n    }\n    this.crud.getRequest(url).then((response: any) => {\n      if (response && response.data) {\n        let keys = Object.keys(response.data);\n        let keysArray = keys.map((r: any) => r.replace(/_/g, ' '));\n        keysArray = keysArray.map((r: any) => {\n          return r = r.split(' ').map((a: any) => {\n            const firstChar = a[0].toUpperCase(); // Get the first character and convert it to uppercase\n            const restOfStr = a.slice(1); // Get the rest of the string\n            return firstChar + restOfStr;\n          }).join(' ')\n        })\n        for (let i = 0; i < keysArray.length; i++) {\n          if (keysArray[i] == 'Inprogress')\n            keysArray[i] = 'In Progress';\n        }\n        const valuesArray: any = Object.values(response.data);\n        this.ticketByStatus.reDraw([{name:\"Tickets\",data:valuesArray}], keysArray)\n      }\n    })\n  }\n\n\n  @ViewChild('myFilesSubmitted') myFilesSubmitted!:LineGraphComponent;\n  getMyFileSubmittedData(dateRange?: any) {\n    var url;\n    if (this.fileSubmitedMonthRange == -1)\n      url = `dashboard/business/dashboard/file_request/month?start_date=${dateRange.startDate}&end_date=${dateRange.endDate}&range=${this.fileSubmitedMonthRange}`;\n    else {\n      url = `dashboard/business/dashboard/file_request/month?range=${this.fileSubmitedMonthRange}`\n    }\n    this.crud.getRequest(url).then((response: any) => {\n      if (response && response.data) {\n        const FileSubmittedData = response.data;\n        const labels = FileSubmittedData.map((entry: { month: any; }) => entry?.month);\n        const data = FileSubmittedData.map((entry: { count: any; }) => entry?.count);\n        this.myFilesSubmitted.reDraw([{name:\"\",data}], labels)\n      }\n    })\n  }\n\n\n  @ViewChild('creditBalanceChart') creditBalanceChart!:LineGraphComponent;\n  getCreditChart(edit?: boolean) {\n    const labels = [\n      {\n        label: 'File Key Credits',\n        color: '#89CFF0'\n      },\n      {\n        label: 'Function Credits',\n        color: '#fff060'\n      },\n      {\n        label: 'EVC Credits',\n        color: '#FF5733'\n      }\n    ]\n    const allCredits = this.getCreditChartData.reduce((accumulator, item) => {\n      accumulator.push(item.file_key_credit, item.function_credit, item.evc_credit,);\n      return accumulator;\n    }, []);\n    this.creditBalanceChart.reDraw([{name:\"\",data:allCredits}], labels.map(label => label.label))\n  }\n\n  getCardsCount() {\n    this.CustomerBusinessService.getCounts().subscribe((response) => {\n      if (response && response.data) {\n        this.getCharts()\n        this.getCountData = response?.data;\n        this.getCreditChartData = response?.data?.available_credit_balance;\n        this.getCreditChart()\n      }\n    })\n  }\n\n}\n","<section class=\"add-user\">\n    <ul class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n      <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Dashboard</a></li>\n    </ul>\n    <div class=\"add-user-inne\">\n      <div class=\"dash-card\">\n        <div class=\"card-inner\" [routerLink]=\"['/credit/credit-transaction']\" [queryParams]=\"{ type: 'spentHistory' }\">\n          <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"50\" viewBox=\"0 0 120.000000 156.000000\"\n            preserveAspectRatio=\"xMidYMid meet\">\n            <metadata>\n            Created by potrace 1.10, written by Peter Selinger 2001-2011\n            </metadata>\n            <g transform=\"translate(0.000000,156.000000) scale(0.100000,-0.100000)\"\n            fill=\"#000000\" stroke=\"none\">\n            <path d=\"M290 1415 l0 -35 -74 0 -74 0 -7 -30 c-23 -105 75 -248 216 -316 20\n            -11 45 -31 53 -45 8 -14 36 -45 61 -68 40 -37 45 -46 45 -86 0 -39 3 -45 21\n            -45 20 0 21 -3 15 -58 -3 -31 -19 -82 -34 -112 l-27 -55 -132 -3 -133 -3 0\n            -174 0 -175 -25 0 c-25 0 -26 -2 -23 -58 l3 -57 430 0 430 0 3 58 c3 55 2 57\n            -23 57 l-25 0 0 175 0 175 -130 0 -129 0 -25 42 c-23 41 -46 125 -46 168 0 13\n            7 20 20 20 17 0 20 7 20 43 0 38 6 48 68 112 37 39 99 92 139 118 83 55 117\n            92 149 162 24 50 29 90 18 133 -6 20 -12 22 -80 22 l-74 0 0 35 0 35 -315 0\n            -315 0 0 -35z m605 -60 c-15 -151 -57 -280 -121 -366 -100 -137 -237 -138\n            -337 -1 -63 85 -107 219 -122 372 l-7 65 297 0 297 0 -7 -70z m-600 -42 c14\n            -91 28 -152 50 -205 l23 -58 -31 18 c-54 31 -135 112 -156 155 -12 24 -21 62\n            -21 85 l0 42 65 0 64 0 6 -37z m755 -5 c0 -23 -9 -61 -21 -85 -21 -43 -102\n            -124 -156 -155 l-31 -18 23 58 c22 53 36 114 50 205 l6 37 64 0 65 0 0 -42z\n            m-372 -470 c-3 -21 -8 -23 -73 -23 -65 0 -70 2 -73 23 -3 21 0 22 73 22 73 0\n            76 -1 73 -22z m-35 -114 c3 -42 14 -83 30 -115 l26 -49 -94 0 -94 0 26 49 c16\n            32 27 73 30 115 l6 66 32 0 32 0 6 -66z m327 -349 l0 -165 -362 0 -363 0 2\n            162 c1 90 2 164 2 166 1 1 163 2 361 2 l360 0 0 -165z m50 -220 l0 -35 -415 0\n            -415 0 0 35 0 35 415 0 415 0 0 -35z\"/>\n            <path d=\"M385 440 c-3 -6 0 -12 7 -15 26 -10 433 0 433 10 0 14 -431 19 -440\n            5z\"/>\n            <path d=\"M385 320 c-3 -6 0 -12 7 -15 26 -10 433 0 433 10 0 14 -431 19 -440\n            5z\"/>\n            </g>\n          </svg>\n          <p>Credits Spent History</p>\n          <h5>{{getCountData?.credit_spent_current_month || 0}}</h5>\n        </div>\n\n        <div class=\"card-inner\" [routerLink]=\"['/credit/credit-transaction']\" [queryParams]=\"{ type: 'purchaseHistory' }\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 2048 1790\" width=\"70\">\n            <path transform=\"translate(1624,300)\" d=\"m0 0h24l17 3 13 5 10 6 10 8 10 10 9 14 8 16 4 13 1 14-3 22-6 15-6 11-13 16-12 10-12 7-17 6-13 2h-20l-16-3-21-8-7 14-8 14-10 18-13 24-13 23-13 24-20 35-16 29-8 14-10 18-12 22-10 18-12 22-15 27-6 10-6 8 1 4 8 9 11 15 8 16 4 15 1 9v10l-3 19-4 12-7 13-8 10-6 7-11 9-15 8-17 5-7 1h-22l-16-3-12-5-12-8-12-11-8-10-8-14-5-12-3-16-1-20-21-7-31-12-34-14-20-8-18-8-4-2-1 12-4 13-5 10-9 13-11 12-11 8-16 8-15 4-10 1h-15l-15-2-16-6-14-9-13-11-4-3 1 5-8 7-7 8-8 9-9 11-11 12-9 11-10 11-9 11-11 12-7 8-18 20-7 8-12 13-18 20-6 8 1 4 6 15 4 13 1 6v14l-3 17-5 13-8 15-9 10-7 8-12 9-12 6-15 4-7 1h-25l-17-4-14-6-11-8-10-9-9-11-9-16-5-16-1-9v-14l3-17v-7l-16-9-26-17-25-16-38-24-14-10-9-7-3-3-4 2-13 15-15 14-11 7-14 5-9 2-10 1h-15l-15-2-15-5-13-8-10-9-7-7-7-9-3-2-9 6-10 8-13 9-19 14-21 14-17 12-18 12-11 6-7 1-5-4-3-6 2-6 7-8 20-15 16-11 18-13 14-10 43-29 5-2-3-11-1-6v-23l4-16 8-16 6-9 12-13 12-9 12-7 16-5 6-1h27l17 4 13 6 12 7 15 15 10 15 7 16 4 15v32l4 5 18 11 19 12 48 30 33 22 10 9 4-2 7-8 4-5 16-12 17-9 15-4h26l16 4 16 8 11 8 8 4 2-4 7-8 11-12 8-10 11-12 9-11 16-17 7-8 9-10 11-13 9-10 9-11 24-28 9-9 6-7 4-3v-7l-5-18-1-6v-26l4-16 5-11 6-10 9-11 12-10 11-7 12-6 13-3 17-1 20 2 15 5 13 7 11 9 9 9 12 18 8 17 3 5 8 5 8 4 35 14 32 13 26 10 20 9h2l7-11 9-11 9-10 14-10 14-7 14-4 6-1h22l15 3 6 2 2-5 6-10 10-16 13-24 10-17 10-18 14-25 15-27 13-23 14-26 13-23 16-28 14-26 12-22 10-18 10-15-1-5-10-15-8-16-4-15-1-17 1-13 5-16 8-15 8-11 13-13 14-9 13-6zm4 25-16 4-13 7-13 13-8 13-4 13-2 13 1 15 3 10 7 11 11 12 10 8 12 6 18 4h14l12-3 16-8 8-6 7-7 7-11 4-12 2-13v-10l-3-16-4-9-7-11-10-10-11-7-14-5-7-1zm-583 397-13 3-14 7-10 8-7 7-7 11-5 12-3 14v17l4 13 7 13 7 8 5 5 11 8 11 5 12 3h19l13-4 12-6 10-8 7-7 6-10 4-11 2-13v-21l-4-14-6-11-9-10-12-9-16-8-9-2zm304 75-17 5-13 7-14 14-5 8-5 14-2 17 1 14 4 12 11 16 14 11 14 7 12 3h17l13-4 15-8 12-11 7-10 4-10 2-8 1-18-2-14-5-12-7-10-8-8-14-9-11-4-9-2zm-370 47 1 2zm-523 0-17 2-14 5-13 9-9 9-9 14-4 11-1 6v23l4 13 9 15 13 13 11 7 10 4 16 3h8l12-3 12-5 12-9 12-12 8-14 3-10 1-7v-12l-3-15-6-14-9-12-10-9-17-9-9-2zm294 159-11 2-12 5-13 9-12 12-8 14-4 16v22l3 11 5 9 9 11 10 9 10 6 16 5 6 1h15l11-3 14-7 12-11 7-8 8-16 2-12v-20l-3-12-6-11-10-12-13-10-14-7-13-3z\" fill=\"#000000\"/>\n            <path transform=\"translate(1566,579)\" d=\"m0 0h180l6 2v938l-2 5-5 2-8 1h-171l-3-2-1-3-1-22-1-359v-457l1-101 1-3zm20 22-1 2v896l1 6 140 1 2-1 1-219v-683l-1-1z\" fill=\"#000000\"/>\n            <path transform=\"translate(981,941)\" d=\"m0 0h156l7 1 2 3 1 9v398l-1 178-6 2-11 1-56 1h-73l-38-1-1-3-1-22v-561l3-5zm98 23-95 1-1 124v403l1 19 138-1v-545l-1-1z\" fill=\"#000000\"/>\n            <path transform=\"translate(1304,1022)\" d=\"m0 0h140l3 1v500l-2 4-6 2-25 1h-134l-21-1-3-7-1-15v-481l2-3zm48 23-72 1-1 460 1 1h143l1-2-1-460z\" fill=\"#000000\"/>\n            <path transform=\"translate(368,1050)\" d=\"m0 0h177l2 4v475l-6 2-24 1h-146l-6-2-1-1-1-9-1-31v-433l1-5zm19 22v438l44-1h90l2-1 1-56v-380z\" fill=\"#000000\"/>\n            <path transform=\"translate(795,1188)\" d=\"m0 0h37l14 1 4 4v335l-1 2-6 1-19 1h-158l-3-3-1-15v-322l2-2 9-1zm-1 25-109 1v295l142-1v-294l-1-1z\" fill=\"#000000\"/>\n          </svg>\n          <p>Credit Purchased</p>\n          <h5>{{getCountData?.credit_purchased || 0}}</h5>\n        </div>\n\n        <div class=\"card-inner\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 2023 2048\" width=\"40\">\n            <path transform=\"translate(1018,32)\" d=\"m0 0 32 1 19 3 21 6 23 11 12 8 16 13 16 16 13 17 9 14 9 17 6 15 5 18 3 26v17l-2 22 9 3 46 15 29 12 26 13 18 10 19 11 18 11 24 16 18 14 14 11 12 10 11 9 17 16 14 14 7 8 13 13 7 8 14 17 14 19 13 18 12 18 13 22 13 24 17 34 14 33 11 33 7 26 10 49 7 49 4 43 1 23 1 464 1 80 2 15 3 9 4 4v2l4 2 12 11 11 9 13 11 11 9 28 24 10 8 13 11 11 9 14 12 10 8 13 11 13 10 15 13 11 9 13 11 10 8 11 9 13 11 8 7 9 12 4 8 2 9v47l-2 14-7 14-9 10-8 5-11 3-10 1h-1709l-13-2-9-5-10-10-6-10-4-14-1-12v-41l3-10 7-12 9-10 13-12 13-10 13-11 11-9 12-11 11-9 15-13 9-7 16-13 15-13 14-12 16-13 11-9 12-10 22-18 13-11 10-8 14-12 5-6 3-9 1-14 1-148 1-391 2-33 7-62 6-35 9-39 6-19 10-29 11-26 12-26 16-33 11-19 9-14 24-36 10-14 22-26 9-10 9-11 9-9 7-8 13-13 8-7 11-10 22-18 15-12 15-11 18-12 28-17 24-14 27-14 31-13 44-14 4-2 1-10-1-13v-15l3-24 4-16 7-18 12-23 13-19 13-15 7-7 11-9 13-10 16-9 10-5 21-7 24-4zm-7 86-15 3-12 5-14 8-10 8-7 7-6 9-8 16-5 16-2 12v8l3 3h19l39-2h58l32 2 25 2 3-1 1-2-1-14-5-22-5-12-8-12-10-11-14-10-17-8-15-4-6-1zm-18 182-35 3-36 5-35 7-30 8-20 7-30 13-17 8-19 10-22 12-19 12-14 10-12 9-21 16-13 11-8 7-13 12-17 17-7 8-8 9-9 11-13 16-12 17-14 21-13 22-12 21-8 16-12 27-13 37-11 35-11 44-3 16-3 26-3 45-1 39-1 498-2 31-3 18-5 13-10 19-11 14-15 15-11 9-14 12-34 28-14 12-22 18-9 8-10 8-12 10-22 18-12 11-11 9-15 13-6 7 1 1 425 2h590l399-2h148l-6-7-14-14-8-7-12-11-11-9-9-8-11-9-13-11-11-9-14-12-14-11-13-11-14-11-14-12-11-9-13-11-13-12-9-10-11-15-8-15-5-16-3-18-1-12-1-29v-491l-1-34-5-77-3-21-8-34-12-36-10-27-10-25-11-24-12-22-12-19-18-27-8-11-11-14-11-12-7-8-9-9-7-8-22-22-11-9-13-11-20-15-15-11-15-10-20-12-24-13-16-8-33-15-28-11-34-9-23-5-38-6-26-3-14-1z\" fill=\"#000000\"/>\n            <path transform=\"translate(851,1812)\" d=\"m0 0 4 1 7 9 10 17 13 17 9 10 15 13 14 10 13 8 21 10 23 7 19 3 10 1h32l24-4 22-6 14-6 14-8 17-12 11-9 18-18 11-14 9-14 7-13 1-1 7 1 35 13 13 6 19 9 5 5-3 9-10 18-8 14-9 12-8 10-9 10-7 8-13 13-14 11-13 10-18 11-21 10-30 11-25 7-25 5-19 2h-31l-20-2-25-5-23-7-27-11-25-12-16-10-13-10-14-12-19-19-9-11-11-14-11-17-15-25 1-4 8-5 28-14 28-13z\" fill=\"#000000\"/>\n          </svg>\n          <p class=\"pointer\" data-bs-toggle=\"dropdown\">My Notification</p>\n          <h5 class=\"pointer\" data-bs-toggle=\"dropdown\">{{notificationCount}}</h5>\n          <ul class=\"dropdown-menu\" style=\"min-width:350px; width: 450px; height: 300px; overflow-y: scroll;\">\n            <li *ngIf=\"notificationList?.length==0\" style=\"text-align: center;\">No Notification...</li>\n            <li style=\"padding-left: 5px;\" *ngFor=\"let noti of notificationList\">\n              <div class=\"profile mb-2\">\n                <img [src]=\"noti.sender?.image ? noti.sender?.image: 'assets/images/icon/customer-profile.png'\"\n                  alt=\"profile\" />\n                <div class=\"notification-inner\" (click)=\"redirectTo(noti)\">\n                  <div>\n                    <h6 class=\"mb-0\">{{noti.title}}</h6>\n                    <p>{{noti.message}} </p>\n                  </div>\n                  <p>{{notification.formatDate(noti.created_at)}}</p>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"bottomChart\">\n        <!-- ====================== Used Keys By Date ======================= -->\n        <div class=\"barchrt w-100\">\n          <div class=\"d-flex row align-items-center mb-1\">\n            <div class=\"col-9\">\n              <p style=\"margin-bottom: 0px;\">Used Keys By Date\n                &nbsp; <span class=\"chartDateSize\">{{usedKeysMonthRange == -1 ? (UKBDdateRange?.startDate + ' - ' + UKBDdateRange?.endDate) : (usedKeysMonthRange == 1 ?usedKeysMonthRange +' Year':usedKeysMonthRange +' Month' )}}</span></p>\n            </div>\n            <div class=\"col-3 d-flex justify-content-end align-items-center\">\n              <div class=\"dateRange\">\n                <div class=\"calIcon\">\n                  <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </div>\n                <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\"\n                ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeCalendarCenter\" [drops]=\"dropsDown\"\n                [opens]=\"opensLeft\" [locale]=\"locale\" [ranges]=\"ranges\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n                [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n                [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n                (datesUpdated)=\"datesUpdatedRange($event,'usedKeysByDate')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n              </div>\n            </div>\n          </div>\n          <app-line-graph #usedByKey [colors]=\"gradientColors\" [stacked]=\"true\" xAxisTitle=\"Credits used per month\" yAxisTitle=\"Number of credits used\"></app-line-graph>\n        </div>\n  \n  \n        <!-- ====================== My Support Tickets by Status ======================= -->\n        <div class=\"barchrt w-100\">\n          <div class=\"d-flex row align-items-center mb-1\">\n            <div class=\"col-9\">\n              <p style=\"margin-bottom: 0px;\">My Support Tickets by Status\n                &nbsp; <span class=\"chartDateSize\">{{selectedRangeSupportTicketsByStatus == -1 ? (mySTS?.startDate + ' - ' + mySTS?.endDate) : (currentMonthName)}}</span></p>\n            </div>\n            <div class=\"col-3 d-flex justify-content-end align-items-center\">\n              <div class=\"dateRange\">\n                <div class=\"calIcon\">\n                  <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </div>\n                <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\"\n                ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeSupportTicketsByStatus\" [drops]=\"dropsDown\"\n                [ranges]=\"ranges\"\n                [opens]=\"opensLeft\" [locale]=\"locale\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n                [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n                [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n                (datesUpdated)=\"datesUpdatedRange($event,'MySupportTicketsByStatus')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n              </div>\n            </div>\n          </div>\n          <app-line-graph #ticketByStatus [colors]=\"gradientColors\"></app-line-graph>\n        </div>\n      </div>\n\n      <div class=\"bottomChart\">\n        <!-- ====================== My Tool Usage Graph ======================= -->\n        <div>\n          <div class=\"d-flex row align-items-center mb-1\">\n            <div class=\"col-9\">\n              <p style=\"margin-bottom: 0px;\">My Tool Usage\n                &nbsp; <span class=\"chartDateSize\">{{selectedRangeToolUsage == -1 ? (myTUDateRange?.startDate + ' - ' + myTUDateRange?.endDate) : (currentMonthName)}}</span></p>\n            </div>\n            <div class=\"col-3 d-flex justify-content-end align-items-center\">\n              <div class=\"dateRange\">\n                <div class=\"calIcon\">\n                  <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </div>\n                <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\" \n                ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeToolUsage\" [drops]=\"dropsDown\"\n                [ranges]=\"ranges\"\n                [opens]=\"opensLeft\" [locale]=\"locale\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n                [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n                [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n                (datesUpdated)=\"datesUpdatedRange($event,'MyToolUsage')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n              </div>\n            </div>\n          </div>\n          <app-line-graph #myToolUsage [distributed]=\"false\" xAxisTitle=\"Tools name\" yAxisTitle=\"No of usages\"></app-line-graph>\n        </div>\n  \n        <!-- ====================== My Files Submitted ======================= -->\n        <div>\n          <div class=\"d-flex row align-items-center mb-1\">\n            <div class=\"col-9\">\n              <p style=\"margin-bottom: 0px;\">My Files Submitted\n                &nbsp; <span class=\"chartDateSize\">{{fileSubmitedMonthRange == -1 ? (myFileSDateRange?.startDate + ' - ' + myFileSDateRange?.endDate) : (fileSubmitedMonthRange == 1 ?fileSubmitedMonthRange +' Year':fileSubmitedMonthRange +' Month' )}}</span></p>\n            </div>\n            <div class=\"col-3 d-flex justify-content-end align-items-center\">\n              <div class=\"dateRange\">\n                <div class=\"calIcon\">\n                  <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </div>\n                <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\" \n                ngxDaterangepickerBootstrap [(ngModel)]=\"fileSubmitedMonthRange\" [drops]=\"dropsDown\"\n                [opens]=\"opensLeft\" [locale]=\"locale\" [ranges]=\"ranges\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n                [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n                [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n                (datesUpdated)=\"datesUpdatedRange($event,'MyFilesSubmitted')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n              </div>\n            </div>\n          </div>\n          <app-line-graph #myFilesSubmitted [colors]=\"['#AD88F1']\" [legend]=\"false\" xAxisTitle=\"Credit usage in months\" yAxisTitle=\"Number of credits used\"></app-line-graph>\n        </div>\n        \n        <div>\n          <p>My Available Credits by Type Credit Balance</p>\n          <app-line-graph #creditBalanceChart [colors]=\"['#32337E']\" [distributed]=\"true\" xAxisTitle=\"Credit types\" yAxisTitle=\"Number of credit available\"></app-line-graph>\n        </div>\n      </div>\n    </div>\n  </section>","import { Component, Input, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Chart } from 'chart.js';\nimport { chartColors, monthList } from 'src/app/global-files/global.const';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { CustomerBusinessService } from '../../customer-business.service';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { NgxDaterangepickerBootstrapDirective } from 'ngx-daterangepicker-bootstrap';\nimport { LineGraphComponent } from 'src/app/shared/line-graph/line-graph.component';\nimport { XorEncryptionService } from 'src/app/services/xor-encryption.service';\n\n@Component({\n  selector: 'app-sub-dealer-dashboard',\n  templateUrl: './sub-dealer-dashboard.component.html',\n  styleUrls: ['./sub-dealer-dashboard.component.scss']\n})\nexport class SubDealerDashboardComponent {\n  @Input() unseenNotifications: any\n  fileT: any = 'submission';\n  fileR: any = 'submission';\n  // activeTickets: any;\n  // totalCustomer: any;\n  // newCustomer: any;\n  // recentActiveTicketList: any;\n  // recentActiveCustomerList: any;\n  // filedata: any;\n  // ticketData: any;\n  getCountData: any;\n  notificationCount: any;\n  getCreditChartData: Array<any> = [];\n  userdata: any = {\n    labels: ['Active Users', 'Users'],\n    datasets: [\n      {\n        data: ['467', '100'],\n        backgroundColor: [\"#FFBC55\", \"#269B87\"],\n        borderWidth: 0,\n        hoverBackgroundColor: [\"#FFBC55\", \"#269B87\"]\n      }\n    ]\n  };\n  isdashboardChart: boolean = true;\n  userChart: any = {\n    labels: ['Jan', 'Feb', 'March', 'April',\n      'May', 'June'],\n    datasets: [\n      {\n        label: \"Open\",\n        data: ['467', '576', '572', '79', '546', '90'],\n        backgroundColor: '#3DCAB1',\n      },\n      {\n        label: \"Close\",\n        data: ['542', '542', '536', '327', '340', '560'],\n        backgroundColor: '#FE7375',\n\n      },\n      {\n        label: \"In progress\",\n        data: ['542', '542', '536', '327', '50', '100'],\n        backgroundColor: '#FFA500',\n\n      },\n      {\n        label: \"On hold\",\n        data: ['542', '542', '536', '327', '70', '150', '467', '576', '572', '79', '546', '90'],\n        backgroundColor: '#7B8196',\n      },\n    ]\n  };\n  customertype: any = 'bar';\n  public chart!: Chart;\n  public chart1!: Chart;\n  public chart2!: Chart;\n  public chart3!: Chart;\n  public chart4!: Chart;\n\n  // toDate: any;\n  // fromDate: any;\n  usedKeysMonthRange: any = 6;\n  fileSubmitedMonth: any;\n  ticketStatusMonth: any;\n  ticketStatusYear: any;\n  fileSubmitedMonthRange: any = 6;\n  toolUsageMonth: any;\n  toolUsageYear: any;\n  monthList: any = monthList;\n  yearCount: number = 0;\n  year: number = 0;\n  notificationList: any;\n  unseenNotiCount: any;\n  page = 1;\n  pageSize = 10;\n\n  // Date range picker code start from here\n  dropsDown = 'down';\n  dropsUp = 'up';\n  opensRight = 'right';\n  opensCenter = 'center';\n  opensLeft = 'left';\n  selectedRangeCalendarCenter: any;\n  selectedRangeSupportTicketsByStatus: any;\n  selectedRangeToolUsage: any;\n  selectedRangeFilesSubmitted: any;\n  maxDate?: Dayjs;\n  minDate?: Dayjs;\n  invalidDates: Dayjs[] = [];\n  ranges: any = {\n    '3 Month': [\n      dayjs().subtract(89, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '6 Month': [\n      dayjs().subtract(179, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '1 Year': [\n      dayjs().subtract(364, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n  };\n  localeTime = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'DD.MM.YYYY HH:mm:ss',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n  };\n  locale = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'YYYY-MM-DD',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n    displayFormat: 'YYYY-MM-DD',\n  };\n  tooltips = [\n    { date: dayjs(), text: 'Today is just unselectable' },\n    { date: dayjs().add(2, 'days'), text: 'Yeeeees!!!' },\n  ];\n  gradientColors = [\n    \"#AD88F1\",\n    \"#826ACA\",\n    \"#594DA3\",\n    \"#32337E\",\n    \"#20B2AA\",\n    \"#40E0D0\",\n    \"#48D1CC\",\n    \"#00FA9A\",\n    \"#7FFF00\",\n    \"#ADFF2F\",\n    \"#2091FF\",\n    \"#BA55D3\",\n    \"#8A2BE2\",\n    \"#7B68EE\",\n    \"#6A5ACD\",\n    \"#4169E1\",\n    \"#1E90FF\",\n    \"#0000FF\",\n    \"#00BFFF\",\n    \"#00CED1\",\n \n  ];\n  @ViewChild(NgxDaterangepickerBootstrapDirective, { static: false }) pickerDirective!: NgxDaterangepickerBootstrapDirective;\n  // Date range picker code end from here&&&&&&&&&&&&&&&&&&&&&\n  constructor(private crud: CrudService, private _titleservice: Title, public notification: NotificationsService,\n    private CustomerBusinessService: CustomerBusinessService, private router: Router, private xorEncryption:XorEncryptionService) {\n    this._titleservice.setTitle('Dashboard');\n  }\n  currentMonthName: any;\n\n  ngOnInit(): void {\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const currentDate = new Date();\n    const currentMonthNumber = currentDate.getMonth() + 1;\n    this.currentMonthName = monthNames[currentDate.getMonth()];\n    this.year = currentDate.getFullYear();\n    this.yearCount = this.year - 2022;\n    this.ticketStatusMonth = currentMonthNumber;\n    this.ticketStatusYear = this.year;\n    this.fileSubmitedMonth = currentMonthNumber;\n    this.toolUsageMonth = currentMonthNumber;\n    this.toolUsageYear = this.year;\n    this.notification.onMessageUser.subscribe((res: any) => {\n      if (res && res.type === 'ticket_create_notification_customer') {\n        this.unseenNotiCount = 1;\n        let body = {\n          message: res.message,\n          type: res.type,\n          id: res.ids\n        }\n        this.notificationList.unshift(body)\n      }\n    });\n    this.getNotification();\n    // this.crud.getRequest(requestUrl.getAdminDasboardData).then((res: any) => {\n    //   this.activeTickets = res.data.active_ticket;\n    //   this.totalCustomer = res.data.total_customers_count;\n    //   this.newCustomer = res.data.last_week_customers_count;\n    //   this.ticketData = res.data.tickets_graph;\n    //   this.filedata = res.data.files_graph;\n    //   this.recentActiveTicketList = res.data.recent_active_five_ticket;\n    //   this.recentActiveCustomerList = res.data.recent_five_customers;\n    // })\n    this.CustomerBusinessService.notificationCount$.subscribe((data: any) => {\n      this.notificationCount = data;\n    })\n    this.getCardsCount();\n    this.getMyFileSubmittedData();\n    this.getMyToolUsage();\n    this.getMySupportsTicket();\n  }\n\n  isInvalidDate = (m: Dayjs) => {\n    return this.invalidDates.some((d) => d.isSame(m, 'day'));\n  };\n\n  isCustomDate = (date: Dayjs) => {\n    return date.month() === 0 || date.month() === 6 ? 'mycustomdate' : false;\n  };\n\n  isTooltipDate = (m: Dayjs) => {\n    const tooltip = this.tooltips.find((tt) => tt.date.isSame(m, 'day'));\n    return tooltip ? tooltip.text : false;\n  };\n  dateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  UKBDdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  mySTS: any = {\n    startDate: '',\n    endDate: ''\n  }\n  myTUDateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  myFileSDateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n\n\n  datesUpdatedRange($event: any, type: string) {\n\n    // start_date=2023-11-01&end_date=2023-11-30\n    this.dateRange.startDate = $event.startDate.$y + '-' + ($event.startDate.$M + 1) + '-' + $event.startDate.$D\n    this.dateRange.endDate = $event.endDate.$y + '-' + ($event.endDate.$M + 1) + '-' + $event.endDate.$D\n    if ($event.label) {\n      if (type == 'usedKeysByDate') {\n        this.usedKeysMonthRange = $event.label == '3 Month' ? 3 : ($event.label == '6 Month' ? 6 : ($event.label == '1 Year' ? 1 : -1))\n        this.UKBDdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.UKBDdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getCharts(true, this.dateRange)\n      }\n      else if (type == 'mySupportTicketsbyStatus') {\n        this.selectedRangeSupportTicketsByStatus = -1;\n        this.mySTS.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.mySTS.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMySupportsTicket(this.dateRange)\n      }\n      else if (type == 'myToolUsage') {\n        this.selectedRangeToolUsage = -1;\n        this.myTUDateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.myTUDateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMyToolUsage(this.dateRange);\n      }\n      else if (type == 'myFilesSubmittedd') {\n        this.fileSubmitedMonthRange = $event.label == '3 Month' ? 3 : ($event.label == '6 Month' ? 6 : ($event.label == '1 Year' ? 1 : -1))\n        this.myFileSDateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.myFileSDateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMyFileSubmittedData(this.dateRange)\n      }\n    }\n  }\n\n  datesUpdatedSingle($event: any) {\n    console.log('single', $event);\n  }\n\n  datesUpdatedInline($event: Object) {\n    console.log('inline', $event);\n  }\n\n\n\n\n  counter(i: number) {\n    return new Array(i);\n  }\n  getNotification() {\n    this.crud.getRequest(`${requestUrl.getNotification}${this.page}&page_size=${this.pageSize}`).then((res: any) => {\n      if (res) {\n        this.notificationList = res.data.results;\n        this.unseenNotiCount = res.data.un_seen_message_count;\n        // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n      }\n    })\n  }\n  redirectTo(data: any) {\n    if (data.type == 'file_submission_completed')\n      this.router.navigateByUrl(`/file-service/file-services`)\n    else if (data.type == 'ticket_create_notification_customer')\n      // this.router.navigateByUrl(`/support/view-ticket/${data?.id}/${data?.id.slice(2, 5)}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.id)}/${this.xorEncryption.xorEncryptDecrypt(data.id.slice(2, 5))}`);\n    else if (data.ticket) {\n      // this.router.navigateByUrl(`/support/view-ticket/${data.ticket.ids}/${data.ticket.id}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.ticket.ids)}/${this.xorEncryption.xorEncryptDecrypt(data.ticket.id)}`);\n    }\n  }\n  readNotification() {\n    this.crud.postRequest(requestUrl.readNotification, {}).then((res: any) => {\n      if (res)\n        this.unseenNotiCount = 0;\n      // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n    })\n  }\n\n  @ViewChild('usedByKey') usedByKey!:LineGraphComponent;\n  getCharts(edit?: boolean, dateRange?: any) {\n    var url;\n    if (this.usedKeysMonthRange == -1) {\n      url = `dashboard/sub-dealer/dashboard/used_keys/month?range=${this.usedKeysMonthRange}&start_date=${dateRange.startDate}&end_date=${dateRange.endDate}`;\n    }\n    else {\n      url = `dashboard/sub-dealer/dashboard/used_keys/month?range=${this.usedKeysMonthRange}`\n    }\n    \n    this.crud.getRequest(url).then((res: any) => {\n      const originalData = res.data.credit_used_by_month\n      const months = originalData.map((item: any) => item.month);\n      const fileCredits = originalData.map((item: any) => item.credit.file_credit);\n      const evcCredits = originalData.map((item: any) => item.credit.evc_credit);\n      const functionCredits = originalData.map((item: any) => item.credit.function_credit);\n\n      const chartData = {\n        labels: months,\n        datasets: [\n          {\n            name: 'File Credit',\n            backgroundColor: '#002060',\n            data: fileCredits,\n          },\n          {\n            name: 'EVC Credit',\n            backgroundColor: 'rgb(59,130,246)',\n            data: evcCredits,\n          },\n          {\n            name: 'Function Credit',\n            backgroundColor: 'rgb(255,0,0)',\n            data: functionCredits,\n          },\n        ],\n      };\n      const series = chartData.datasets;\n      this.usedByKey.reDraw(series, months)\n\n    })\n  }\n\n  @ViewChild('creditBalanceChart') creditBalanceChart!:LineGraphComponent;\n  getCreditChart(edit?: boolean) {\n    const labels = [\n      {\n        label: 'File Key Credits',\n        color: '#89CFF0'\n      },\n      {\n        label: 'Function Credits',\n        color: '#fff060'\n      },\n      {\n        label: 'EVC Credits',\n        color: '#FF5733'\n      }\n    ]\n    const allCredits = this.getCreditChartData.reduce((accumulator, item) => {\n      accumulator.push(item.file_key_credit, item.function_credit, item.evc_credit,);\n      return accumulator;\n    }, []);\n    this.creditBalanceChart.reDraw([{name:\"\",data:allCredits}], labels.map(label => label.label))\n  }\n\n  @ViewChild('myFilesSubmitted') myFilesSubmitted!:LineGraphComponent;\n  getMyFileSubmittedData(dateRange?: any) {\n    var url: string;\n    if (this.fileSubmitedMonthRange == -1) {\n      url = `dashboard/sub-dealer/dashboard/file_request/month?start_date=${dateRange.startDate}&end_date=${dateRange.endDate}&range=-1`;\n    }\n    else {\n      url = 'dashboard/sub-dealer/dashboard/file_request/month?range=' + this.fileSubmitedMonthRange;\n    }\n\n    \n    this.crud.getRequest(url).then((response: any) => {\n      if (response && response.data) {\n        const FileSubmittedData = response.data;\n        const labels = FileSubmittedData.map((entry: { month: any; }) => entry?.month);\n        const data = FileSubmittedData.map((entry: { count: any; }) => entry?.count);\n        this.myFilesSubmitted.reDraw([{name:\"\",data}], labels)\n      }\n    })\n  }\n\n  @ViewChild('myToolUsage') myToolUsage!:LineGraphComponent;\n  getMyToolUsage(dateRange?: any) {\n    var url;\n    if (dateRange) {\n      url = `dashboard/sub-dealer/dashboard/file_request/tool?filter_type=date&from_date=${dateRange.startDate}&to_date=${dateRange.endDate}`;\n    }\n    else {\n      url = 'dashboard/sub-dealer/dashboard/file_request/tool?month=' + this.toolUsageMonth + '&year=' + this.toolUsageYear;\n    }\n    this.crud.getRequest(url).then((response: any) => {\n      if (response && response.data) {\n        const getMyTools = response.data;\n        const labels = getMyTools.map((entry: { tuning_tool_used: any; }) => entry.tuning_tool_used);\n        const data = getMyTools.map((entry: { count: any; }) => entry.count);\n        this.myToolUsage.reDraw([{name:\"\",data}], labels)\n      }\n    })\n  }\n  \n  @ViewChild('ticketByStatus') ticketByStatus!:LineGraphComponent;\n  getMySupportsTicket(dateRange?: any) {\n    var url;\n    if (dateRange) {\n      url = `dashboard/sub-dealer/dashboard/ticket/status?filter_type=date&from_date=${dateRange.startDate}&to_date=${dateRange.endDate}`;\n    }\n    else {\n      url = 'dashboard/sub-dealer/dashboard/ticket/status?month=' + this.ticketStatusMonth + '&year=' + this.ticketStatusYear;\n    }\n    this.crud.getRequest(url).then((response: any) => {\n      if (response && response.data) {\n        let keys = Object.keys(response.data);\n        let keysArray = keys.map((r: any) => r.replace(/_/g, ' '));\n        keysArray = keysArray.map((r: any) => {\n          return r = r.split(' ').map((a: any) => {\n            const firstChar = a[0].toUpperCase(); // Get the first character and convert it to uppercase\n            const restOfStr = a.slice(1); // Get the rest of the string\n            return firstChar + restOfStr;\n          }).join(' ')\n        })\n        for (let i = 0; i < keysArray.length; i++) {\n          if (keysArray[i] == 'Inprogress')\n            keysArray[i] = 'In Progress';\n        }\n        const valuesArray: any = Object.values(response.data);\n        this.ticketByStatus.reDraw([{name:\"Tickets\",data:valuesArray}], keysArray)\n      }\n    })\n  }\n\n  getCardsCount() {\n    this.CustomerBusinessService.getCounts().subscribe((response: any) => {\n      if (response && response.data) {\n        this.getCharts()\n        this.getCountData = response?.data;\n        this.getCreditChartData = response?.data?.available_credit_balance;\n        this.getCreditChart()\n      }\n    })\n  }\n}\n","<section class=\"add-user\" *ngIf=\"customerRoles.role === 'INDIVIDUAL_CUSTOMER'\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Dashboard</a></li>\n  </ul>\n  <div class=\"add-user-inne\">\n    <div class=\"dash-card\">\n      <div class=\"card-inner\">\n        <div [routerLink]=\"['/credit/credit-transaction']\" [queryParams]=\"{ type: 'spentHistory' }\">\n          <p>Credits Spent History</p>\n          <h5>{{getCountData?.credit_spent_current_month || 0}}</h5>\n        </div>\n      </div>\n      <div class=\"card-inner\">\n        <img src=\"../../../assets/images/icon/credit-p.png\" />\n        <div [routerLink]=\"['/credit/credit-transaction']\" [queryParams]=\"{ type: 'purchaseHistory' }\">\n          <p>Credit Purchased</p>\n          <h5>{{getCountData?.credit_purchased || 0}}</h5>\n        </div>\n      </div>\n      <div class=\"card-inner\">\n        <img src=\"../../../assets/images/icon/notification.png\" />\n        <div>\n          <p class=\"pointer\" data-bs-toggle=\"dropdown\">My Notification</p>\n          <h5 class=\"pointer\" data-bs-toggle=\"dropdown\">{{notificationCount || 0}}</h5>\n          <ul class=\"dropdown-menu\" style=\"min-width:350px; width: 450px; height: 300px; overflow-y: scroll;\">\n            <li *ngIf=\"notificationList?.length==0\" style=\"text-align: center;\">No Notification...</li>\n            <li style=\"padding-left: 5px;\" *ngFor=\"let noti of notificationList\">\n              <div class=\"profile mb-2\">\n                <img [src]=\"noti.sender?.image ? noti.sender?.image: 'assets/images/icon/customer-profile.png'\"\n                  alt=\"profile\" />\n                <div class=\"notification-inner\" (click)=\"redirectTo(noti)\">\n                  <div>\n                    <h6 class=\"mb-0\">{{noti.title}}</h6>\n                    <p>{{noti.message}} </p>\n                  </div>\n                  <p>{{notification.formatDate(noti.created_at)}}</p>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"upper-chart-wrapper \">\n      <div class=\"barchrt w-100\">\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-3\"></div>\n          <div class=\"col-6\">\n            <p style=\"margin-bottom: 0px;\">My Support Tickets by Status\n              &nbsp; <span class=\"chartDateSize\">{{selectedRangeCalendarCenter == -1 ? (mySTBSdateRange?.startDate + ' - ' + mySTBSdateRange?.endDate) : (currentMonthName)}}</span></p>\n          </div>\n          <div class=\"col-3 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\" \n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeCalendarCenter\" [drops]=\"dropsDown\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'mySupportTicketsByStatus')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"d-flex justify-content-center align-items-center\">\n          <select style=\"width: 15%; margin-right: 10px;\" class=\"form-select\" [(ngModel)]=\"statusMonth\"\n            (change)=\"getMySupportsTicket(true)\">\n            <option *ngFor=\"let month of monthList\" [value]=\"month?.value\">{{month?.name}}</option>\n          </select>\n          <select style=\"width: 15%;\" class=\"form-select\" [(ngModel)]=\"statusYear\" (change)=\"getMySupportsTicket(true)\">\n            <option *ngFor='let in of counter(yearCount) ;let i = index' [value]=\"year-i\">{{year-i}}\n            </option>\n          </select>\n        </div> -->\n        <canvas id=\"ticketByStatus\" height=\"150\">{{ chart }}</canvas>\n      </div>\n    </div>\n    <div class=\"bottomChart\">\n      <div class=\"leftSide\">\n        <div class=\"d-flex row align-items-center mb-1\">\n          <div class=\"col-2\"></div>\n          <div class=\"col-7\">\n            <p style=\"margin-bottom: 0px;\">My Files Submitted\n              &nbsp; <span class=\"chartDateSize\">{{fileSubmitedMonthRange == -1 ? (myFSdateRange?.startDate + ' - ' + myFSdateRange?.endDate) : (fileSubmitedMonthRange == 1 ?fileSubmitedMonthRange +' Year':fileSubmitedMonthRange +' Month' )}}</span></p>\n          </div>\n          <div class=\"col-3 d-flex justify-content-end align-items-center\">\n            <div class=\"dateRange\">\n              <div class=\"calIcon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </div>\n              <input type=\"text\" id=\"rangeCalendarCenter\" class=\"form-control dateRangeInput\" \n              ngxDaterangepickerBootstrap [(ngModel)]=\"selectedRangeFileSubmitted\" [drops]=\"dropsDown\"\n              [opens]=\"opensLeft\" [locale]=\"locale\" [ranges]=\"ranges\" [showCustomRangeLabel]=\"true\" [showCancel]=\"true\"\n              [linkedCalendars]=\"true\" [alwaysShowCalendars]=\"false\" [showRangeLabelOnInput]=\"false\"\n              [keepCalendarOpeningWithRange]=\"false\" [isCustomDate]=\"isCustomDate\" [isInvalidDate]=\"isInvalidDate\"\n              (datesUpdated)=\"datesUpdatedRange($event,'myFilesSubmitted')\" aria-describedby=\"rangeCalendarCenterDesc\" />\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"d-flex justify-content-center align-items-center\">\n          <select style=\"width: 25%; margin-right: 10px;\" class=\"form-select\" [(ngModel)]=\"fileSubmitedMonthRange\"\n            (change)=\"getMyFileSubmittedData('range',true)\">\n            <option value=\"3\">3 Month</option>\n            <option value=\"6\">6 Month</option>\n            <option value=\"1\">1 Year</option>\n          </select>\n          <select style=\"width: 25%; margin-right: 10px;\" class=\"form-select\" [(ngModel)]=\"fileSubmitedMonth\"\n            (change)=\"getMyFileSubmittedData('month',true)\">\n            <option *ngFor=\"let month of monthList\" [value]=\"month?.value\">{{month?.name}}</option>\n          </select>\n          <select style=\"width: 25%;\" class=\"form-select\" [(ngModel)]=\"fileSubmitedYear\"\n            (change)=\"getMyFileSubmittedData('month',true)\">\n            <option *ngFor='let in of counter(yearCount) ;let i = index' [value]=\"year-i\">{{year-i}}\n            </option>\n          </select>\n        </div> -->\n        <canvas id=\"myFilesSubmitted\" height=\"200\">{{ chart1 }}</canvas>\n      </div>\n      <div class=\"rightSide\">\n        <p>My Available Credits by Type Credit Balance</p>\n        <canvas id=\"creditBalanceChart\" height=\"200\">{{ chart2 }}</canvas>\n      </div>\n    </div>\n  </div>\n</section>\n<ng-container *ngIf=\"customerRoles.role === 'BUSINESS_CUSTOMER'\">\n  <app-business-dashboard [unseenNotifications]=\"notificationCount\"></app-business-dashboard>\n</ng-container>\n\n<ng-container *ngIf=\"customerRoles.role === 'RESELLER'\">\n  <app-reseller-dashboard [unseenNotifications]=\"notificationCount\"></app-reseller-dashboard>\n</ng-container>\n<ng-container *ngIf=\"customerRoles.role === 'DEALER'\">\n  <app-sub-dealer-dashboard [unseenNotifications]=\"notificationCount\"></app-sub-dealer-dashboard>\n</ng-container>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Chart, registerables } from 'chart.js';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { apiResponse } from 'src/app/models/apiResponse';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { TicketService } from '../../services/ticket.service';\nimport { CustomerIndividualService } from '../../customer-individual.service';\nimport { URLS, chartColors, monthList } from 'src/app/global-files/global.const';\nimport { Router } from '@angular/router';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { NgxDaterangepickerBootstrapDirective } from 'ngx-daterangepicker-bootstrap';\nimport { XorEncryptionService } from 'src/app/services/xor-encryption.service';\nChart.register(...registerables);\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  fileT: any = 'submission';\n  fileR: any = 'submission';\n  // activeTickets: any;\n  // totalCustomer: any;\n  // newCustomer: any;\n  // recentActiveTicketList: any;\n  // recentActiveCustomerList: any;\n  // filedata: any;\n  // ticketData: any;\n  getCountData: any;\n  notificationCount: any;\n  getCreditChartData: Array<any> = [];\n  customerRoles: any = {};\n  userdata: any = {\n    labels: ['Active Users', 'Users'],\n    datasets: [\n      {\n\n        data: ['467', '100'],\n        backgroundColor: [\"#FFBC55\", \"#269B87\"],\n        borderWidth: 0,\n        hoverBackgroundColor: [\"#FFBC55\", \"#269B87\"]\n      }\n\n\n\n    ]\n  };\n  isdashboardChart: boolean = true;\n\n  userChart: any = {\n    labels: ['Jan', 'Feb', 'March', 'April',\n      'May', 'June'],\n    datasets: [\n      {\n        label: \"Open\",\n        data: ['467', '576', '572', '79', '546', '90'],\n        backgroundColor: '#3DCAB1',\n      },\n      {\n        label: \"Close\",\n        data: ['542', '542', '536', '327', '340', '560'],\n        backgroundColor: '#FE7375',\n      },\n      {\n        label: \"In progress\",\n        data: ['542', '542', '536', '327', '50', '100'],\n        backgroundColor: '#FFA500',\n      },\n      {\n        label: \"On hold\",\n        data: ['542', '542', '536', '327', '70', '150', '467', '576', '572', '79', '546', '90'],\n        backgroundColor: '#7B8196',\n      },\n    ]\n  };\n  customertype: any = 'bar';\n  public chart!: Chart;\n  public chart1!: Chart;\n  public chart2!: Chart;\n\n  // Date range picker code start from here\n  dropsDown = 'down';\n  dropsUp = 'up';\n  opensRight = 'right';\n  opensCenter = 'center';\n  opensLeft = 'left';\n  selectedRangeCalendarCenter: any;\n  selectedRangeFileSubmitted: any\n  maxDate?: Dayjs;\n  minDate?: Dayjs;\n  invalidDates: Dayjs[] = [];\n  ranges: any = {\n    '3 Month': [\n      dayjs().subtract(89, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '6 Month': [\n      dayjs().subtract(179, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n    '1 Year': [\n      dayjs().subtract(364, 'days').startOf('day'),\n      dayjs().endOf('day'),\n    ],\n  };\n  localeTime = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'DD.MM.YYYY HH:mm:ss',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n  };\n  locale = {\n    firstDay: 1,\n    startDate: dayjs().startOf('day'),\n    endDate: dayjs().endOf('day'),\n    format: 'YYYY-MM-DD',\n    applyLabel: 'Apply',\n    cancelLabel: 'Cancel',\n    fromLabel: 'From',\n    toLabel: 'To',\n    displayFormat: 'YYYY-MM-DD',\n  };\n  tooltips = [\n    { date: dayjs(), text: 'Today is just unselectable' },\n    { date: dayjs().add(2, 'days'), text: 'Yeeeees!!!' },\n  ];\n  @ViewChild(NgxDaterangepickerBootstrapDirective, { static: false }) pickerDirective!: NgxDaterangepickerBootstrapDirective;\n  // Date range picker code end from here&&&&&&&&&&&&&&&&&&&&&\n\n  constructor(\n    private crud: CrudService, private router: Router,\n    private _titleservice: Title,\n    private ticketService: TicketService,\n    private individualService: CustomerIndividualService,\n    public notification: NotificationsService,\n    private xorEncryption:XorEncryptionService,\n  ) {\n    this._titleservice.setTitle('Dashboard');\n  }\n  canvasP: any = document.getElementById(\"ticketByStatus\");\n  statusMonth: any;\n  statusYear: any;\n  monthList: any = monthList\n  fileSubmitedMonth: any = 1;\n  fileSubmitedYear: any;\n  fileSubmitedMonthRange: any = 6;\n  notificationList: any;\n  unseenNotiCount: any;\n  page = 1;\n  pageSize = 10;\n  yearCount: number = 0;\n  year: number = 0;\n  currentMonthName: any;\n  ngOnInit(): void {\n    // const d = new Date();\n    // this.statusMonth = d.getMonth();\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const currentDate = new Date();\n    const currentMonthNumber = currentDate.getMonth() + 1;\n    this.currentMonthName = monthNames[currentDate.getMonth()];\n    this.year = currentDate.getFullYear();\n    this.yearCount = this.year - 2022;\n    this.statusMonth = currentMonthNumber;\n    this.statusYear = this.year;\n    this.fileSubmitedYear = this.year;\n    this.notification.onMessageUser.subscribe((res: any) => {\n      if (res && res.type === 'ticket_create_notification_customer') {\n        this.unseenNotiCount = 1;\n        let body = {\n          message: res.message,\n          type: res.type,\n          id: res.ids\n        }\n        this.notificationList.unshift(body)\n      }\n    });\n    const user: any | null = localStorage.getItem('userdetails')\n    this.customerRoles = JSON.parse(user);\n\n    if (this.customerRoles.role === 'INDIVIDUAL_CUSTOMER')\n      this.getNotification();\n    // this.crud.getRequest(requestUrl.getAdminDasboardData).then((res: any) => {\n    //   if (res) {\n    //     this.activeTickets = res?.data?.active_ticket;\n    //     this.totalCustomer = res?.data?.total_customers_count;\n    //     this.newCustomer = res?.data?.last_week_customers_count;\n    //     this.ticketData = res?.data?.tickets_graph;\n    //     this.filedata = res?.data?.files_graph;\n    //     this.recentActiveTicketList = res?.data?.recent_active_five_ticket;\n    //     this.recentActiveCustomerList = res?.data?.recent_five_customers;\n    //   }\n    // })\n    this.individualService.notificationCount$.subscribe((data) => {\n      this.notificationCount = data;\n    })\n    if (this.customerRoles.role !== \"RESELLER\" && this.customerRoles.role != 'BUSINESS_CUSTOMER') {\n      this.getCardsCount();\n      this.getMyFileSubmittedData('range');\n      this.getMySupportsTicket();\n    }\n\n  }\n\n\n  isInvalidDate = (m: Dayjs) => {\n    return this.invalidDates.some((d) => d.isSame(m, 'day'));\n  };\n\n  isCustomDate = (date: Dayjs) => {\n    return date.month() === 0 || date.month() === 6 ? 'mycustomdate' : false;\n  };\n\n  isTooltipDate = (m: Dayjs) => {\n    const tooltip = this.tooltips.find((tt) => tt.date.isSame(m, 'day'));\n    return tooltip ? tooltip.text : false;\n  };\n  dateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  mySTBSdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n  myFSdateRange: any = {\n    startDate: '',\n    endDate: ''\n  }\n\n\n  datesUpdatedRange($event: any, type: string) {\n    console.log('range', $event);\n\n    // start_date=2023-11-01&end_date=2023-11-30\n    this.dateRange.startDate = $event.startDate.$y + '-' + ($event.startDate.$M + 1) + '-' + $event.startDate.$D\n    this.dateRange.endDate = $event.endDate.$y + '-' + ($event.endDate.$M + 1) + '-' + $event.endDate.$D\n    if ($event.label) {\n      if (type == 'mySupportTicketsByStatus') {\n        this.selectedRangeCalendarCenter =  -1\n        this.mySTBSdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.mySTBSdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMySupportsTicket(true, this.dateRange)\n      }\n      else if (type == 'myFilesSubmitted') {\n        this.fileSubmitedMonthRange = $event.label == '3 Month' ? 3 : ($event.label == '6 Month' ? 6 : ($event.label == '1 Year' ? 1 : -1))\n        this.myFSdateRange.startDate = $event.startDate.$y + '/' + ($event.startDate.$M + 1) + '/' + $event.startDate.$D\n        this.myFSdateRange.endDate = $event.endDate.$y + '/' + ($event.endDate.$M + 1) + '/' + $event.endDate.$D;\n        this.getMyFileSubmittedData('range', true, this.dateRange)\n      }\n    }\n  }\n\n  datesUpdatedSingle($event: any) {\n    console.log('single', $event);\n  }\n\n  datesUpdatedInline($event: Object) {\n    console.log('inline', $event);\n  }\n\n\n\n\n\n  counter(i: number) {\n    return new Array(i);\n  }\n  getNotification() {\n    this.crud.getRequest(`${requestUrl.getNotification}${this.page}&page_size=${this.pageSize}`).then((res: any) => {\n      if (res) {\n        this.notificationList = res.data.results;\n        this.unseenNotiCount = res.data.un_seen_message_count;\n        // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n      }\n    })\n  }\n  redirectTo(data: any) {\n    if (data.type == 'file_submission_completed')\n      this.router.navigateByUrl(`/file-service/file-services`)\n    else if (data.type == 'ticket_create_notification_customer')\n      // this.router.navigateByUrl(`/support/view-ticket/${data?.id}/${data?.id.slice(2, 5)}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.id)}/${this.xorEncryption.xorEncryptDecrypt(data.id.slice(2, 5))}`);\n    else if (data.ticket) {\n      // this.router.navigateByUrl(`/support/view-ticket/${data.ticket.ids}/${data.ticket.id}`)\n      this.router.navigateByUrl(`/support/view-ticket/${this.xorEncryption.xorEncryptDecrypt(data.ticket.ids)}/${this.xorEncryption.xorEncryptDecrypt(data.ticket.id)}`);\n    }\n  }\n  readNotification() {\n    this.crud.postRequest(requestUrl.readNotification, {}).then((res: any) => {\n      if (res)\n        this.unseenNotiCount = 0;\n      // this.customerBservice.broadCastNotification(this.unseenNotiCount)\n    })\n  }\n\n  getCreditChart() {\n    const labels = [\n      {\n        label: 'File Key Credits',\n        color: '#89CFF0'\n      },\n      {\n        label: 'Function Credits',\n        color: '#fff060'\n      },\n      {\n        label: 'EVC Credits',\n        color: '#FF5733'\n      }\n    ]\n    const color = ['#89CFF0', '#fff060', '#FF5733']\n    const allCredits = this.getCreditChartData.reduce((accumulator, item) => {\n      accumulator.push(item?.file_key_credit, item?.function_credit, item?.evc_credit,);\n      return accumulator;\n    }, []);\n\n    this.chart2 = new Chart(\"creditBalanceChart\", {\n      type: \"bar\",\n      data: {\n        labels: labels.map(label => label?.label),\n        datasets: [\n          {\n            label: '',\n            data: allCredits,\n            backgroundColor: color,\n            borderWidth: 1,\n            borderRadius: 3\n          },\n\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: true,\n            labels: {\n              generateLabels: (chart) => {\n                const data = chart?.data;\n                const firstDataset = data?.datasets[0];\n                if (data?.datasets?.length > 0) {\n                  return labels.map((label, i) => {\n                    return {\n                      text: label?.label,\n                      fillStyle: label?.color,\n                      strokeStyle: label?.color,\n                      hidden: false\n                    };\n                  });\n                }\n                return [];\n              }\n            },\n            title: {\n              display: true,\n            }\n          },\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Number of credit available',\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Credit types',\n            }\n          }\n        },\n      }\n    })\n  }\n  getMyFileSubmittedData(type: string, edit?: boolean, dateRange?: any) {\n    var url;\n    if (type == 'month')\n      url = `filter_by=month&month_number=${this.fileSubmitedMonth}&year=${this.year}`;\n    else {\n      if (this.fileSubmitedMonthRange == -1)\n        url = `filter_by=date&start_date=${dateRange?.startDate}&end_date=${dateRange?.endDate}`;\n      else\n        url = `filter_by=range&range=${this.fileSubmitedMonthRange}`;\n    }\n    this.crud.get(`${URLS.getFileSubmittedIndividualFilter}${url}`).subscribe((response: any) => {\n      if (response) {\n        const FileSubmittedData = response.data;\n        const labels = FileSubmittedData.map((entry: { month: any; }) => entry.month);\n        const data = FileSubmittedData.map((entry: { count: any; }) => entry.count);\n        if (edit == true)\n          this.chart1.destroy();\n        this.chart1 = new Chart(\"myFilesSubmitted\", {\n          type: \"bar\",\n          data: {\n            labels: labels,\n            datasets: [\n              {\n                label: '',\n                data: data,\n                backgroundColor: '#90EE90',\n                borderWidth: 1,\n                borderRadius: 3\n              },\n\n            ]\n          },\n          options: {\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: 'Credit usage in month',\n                },\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: 'Numbers of credit used',\n                },\n              }\n            },\n            plugins: {\n              legend: {\n                display: false,\n                labels: {\n                },\n                title: {\n                  display: true,\n                  text: \"My Files Submitted\"\n                }\n              },\n            }\n          }\n        })\n        // const FileSubmittedData = response?.data?.vehicle_tuned;\n        // const labels = FileSubmittedData?.map((entry: { month: any; }) => entry?.month);\n        // const data = FileSubmittedData?.map((entry: { count: any; }) => entry?.count);\n        // if (edit)\n        //   this.chart.destroy();\n        // this.chart = new Chart(\"myFilesSubmitted\", {\n        //   type: \"bar\",\n        //   data: {\n        //     labels: labels,\n        //     datasets: [\n        //       {\n        //         label: '',\n        //         data: data,\n        //         backgroundColor: '#90EE90',\n        //         borderWidth: 1,\n        //         borderRadius: 3\n        //       },\n\n        //     ]\n        //   },\n        //   options: {\n        //     plugins: {\n        //       legend: {\n        //         display: false,\n        //         labels: {\n        //         },\n        //         title: {\n        //           display: true,\n        //           text: \"My Files Submitted\"\n        //         }\n        //       },\n        //     },\n        //     scales: {\n        //       x: {\n        //         title: {\n        //           display: true,\n        //           text: 'Credit usage in month',\n        //         }\n        //       },\n        //       y: {\n        //         title: {\n        //           display: true,\n        //           text: 'Numbers of credit used',\n        //         }\n        //       }\n        //     },\n        //   }\n        // })\n\n      }\n    })\n  }\n  generateColors(numColors: number) {\n    const colors = [];\n    for (let i = 0; i < numColors; i++) {\n      const hue = (i * 137.5) % 360;\n      const color = 'hsla(' + hue + ', 70%, 50%, 1)';\n      colors.push(color);\n    }\n    return colors;\n  }\n\n  getMySupportsTicket(edit?: boolean, dateRange?: any) {\n    var url;\n    if (dateRange)\n      url = `dashboard/individual/file_requests/status?filter_type=date&from_date=${dateRange.startDate}&to_date=${dateRange.endDate}`;\n    else {\n      url = `${URLS.getSupportTicketIndividualfilter}${this.statusMonth}&year=${this.year}&filter_type=month`\n    }\n    this.crud.get(url).subscribe((response: any) => {\n      if (response && response.data) {\n        let keys = Object.keys(response.data);\n        let keysArray = keys.map((r: any) => r.replace(/_/g, ' '));\n        keysArray = keysArray.map((r: any) => {\n          return r = r.split(' ').map((a: any) => {\n            const firstChar = a[0].toUpperCase(); // Get the first character and convert it to uppercase\n            const restOfStr = a.slice(1); // Get the rest of the string\n            return firstChar + restOfStr;\n          }).join(' ')\n        })\n        for (let i = 0; i < keysArray?.length; i++) {\n          if (keysArray[i] == 'Inprogress')\n            keysArray[i] = 'In Progress';\n        }\n        const valuesArray: any = Object.values(response.data);\n        if (edit)\n          this.chart.destroy();\n        this.chart = new Chart(\"ticketByStatus\", {\n          type: \"bar\",\n          data: {\n            labels: keysArray,\n            datasets: [\n              {\n                label: '',\n                data: valuesArray,\n                backgroundColor: chartColors,\n                borderWidth: 1,\n                borderRadius: 3\n              },\n\n            ]\n          },\n          options: {\n            scales: {\n              x: {\n                ticks: {\n                  stepSize: 1,\n                  precision: 0\n                },\n                title: {\n                  display: true,\n                  text: 'Ticket status',\n                }\n              },\n              y: {\n                ticks: {\n                  stepSize: 1,\n                  precision: 0\n                },\n                title: {\n                  display: true,\n                  text: 'Number of tickets',\n                }\n              }\n            },\n            plugins: {\n              legend: {\n                display: true,\n                labels: {\n                  generateLabels: (chart) => {\n                    const data = chart?.data;\n                    if (data?.datasets?.length > 0) {\n                      const firstDataset = data?.datasets[0];\n                      return keysArray?.map((label: any, i: any) => {\n                        return {\n                          text: label,\n                          hidden: false\n                        };\n                      });\n                    }\n                    return [];\n                  }\n                },\n                title: {\n                  display: true,\n                }\n              },\n            }\n\n          }\n        })\n      }\n    })\n\n  }\n\n  getCardsCount() {\n    this.individualService.getCounts().subscribe((response: apiResponse) => {\n      if (response && response.data) {\n        this.getCountData = response?.data;\n        this.getCreditChartData = response?.data?.available_credit_balance;\n        this.getCreditChart()\n      }\n    })\n  }\n}\n","<section class=\"admin-profile\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/customer\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/customer/credit/buy-credit\" routerLinkActive=\"active\">My credit\n            </a></li>\n    </ul>\n\n    <div class=\"profile-inner\">\n        <ul>\n            <li class=\"tactive\">\n                <a>Credit Spent History</a>\n            </li>\n        </ul>\n        <div>\n            <div class=\"responsive-tbl\">\n                <table>\n                    <thead>\n                        <th>Request Id</th>\n                        <th>Date</th>\n                        <th>Credit</th>\n                        <th>Credit Type</th>\n                    </thead>\n                    <tr\n                        *ngFor=\"let debit of spendhistory; let i = index\">\n                        <td>{{debit?.file_request_id}}</td>\n                        <td>{{notification.formatDate(debit?.created_at)}}</td>\n                        <td>{{debit.credit}}</td>\n                        <td>{{debit.credit_type == 1 ? 'File key credit': (debit.credit_type == 3?'Fuction key\n                            Credit':'EVC Credit')}}</td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</section>","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { NotificationsService } from 'src/services/notifications.service';\n\n@Component({\n  selector: 'app-view-sub-dealer-credit',\n  templateUrl: './view-sub-dealer-credit.component.html',\n  styleUrls: ['./view-sub-dealer-credit.component.scss']\n})\nexport class ViewSubDealerCreditComponent {\n  spendhistory: any;\n  usersdetail: any;\n  checkoutDetail: any;\n  total_tax: any;\n  totalValue: any;\n  TotalItem: any;\n  type: any = this.ar.queryParams;\n  uuid: any\n  // usersdetail = JSON.parse(localStorage.getItem('userdetails') || '');\n  constructor(private crud: CrudService, private toastr: ToastrService, private _titleservice: Title,\n    public notification: NotificationsService, private ar: ActivatedRoute) {\n    this._titleservice.setTitle('Transactions');\n    this.uuid = this.type['_value'].uuid\n  }\n  ngOnInit() {\n    this.usersdetail = JSON.parse(localStorage.getItem('userdetails') || '');\n    this.getSpentHistoryByDashboard();\n  }\n  getSpentHistoryByDashboard() {\n    this.crud.getRequest(`dashboard/reseller/dealer/spent?uuid=${this.uuid}`).then((res: any) => {\n      if (res) {\n        this.spendhistory = res.data;\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {  CanActivate, CanActivateChild, Router } from '@angular/router';\nimport { AuthService } from '../auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerRootGuard implements CanActivateChild {\n\n  constructor( private router:Router,private authservice:AuthService){}\n\n  canActivateChild()\n  {\n    \n    if(this.authservice.loggedIn())\n    {\n      let users = this.authservice.getLoggedInDetail();\n      if(users.user_type == 3 || users.user_type == 4 || users.user_type == 6 || users.user_type == 7)\n      {\n        return true;\n      }\n      else\n      {\n        this.router.navigate(['/landing']);\n        return false;\n      }\n    }\n    else\n    {\n        this.router.navigate(['/landing']);\n        return false;\n    }\n\n\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { DashboardComponent } from './Dashboard/dashboard/dashboard.component';\nimport { ResellerDashboardComponent } from './Dashboard/reseller-dashboard/reseller-dashboard.component';\nimport { ViewSubDealerCreditComponent } from './Dashboard/view-sub-dealer-credit/view-sub-dealer-credit.component';\nimport { CustomerGuard } from '../guards/customer.guard';\nimport { CustomerRootGuard } from '../guards/customerRoot.guard';\n\nconst routes: Routes = [\n  {path:'',component:CustomerComponent},\n  {path:'dashboard',canActivate:[CustomerGuard],component:DashboardComponent},\n  {path:'reseller-dashboard',canActivate:[CustomerGuard], component:ResellerDashboardComponent},\n  {path:'my-profile',canActivate:[CustomerGuard], component:MyProfileComponent},\n  {path:'subDealer-credit-spent', canActivate:[CustomerGuard], component:ViewSubDealerCreditComponent},\n  { path: 'credit', canActivateChild:[CustomerRootGuard], loadChildren: () => import('./my-credit/my-credit.module').then(m => m.MyCreditModule) },\n  { path: 'file-service', canActivateChild:[CustomerRootGuard], loadChildren: () => import('./my-file-service/my-file-service.module').then(m => m.MyFileServiceModule) },\n  { path: 'support', canActivateChild:[CustomerRootGuard], loadChildren: () => import('./support/support.module').then(m => m.SupportModule) },\n  { path: 'knowledgebase', canActivateChild:[CustomerRootGuard], loadChildren: () => import('./knowledge-base/knowledge-base.module').then(m => m.KnowledgeBaseModule) },\n  { path: 'evc', canActivateChild:[CustomerRootGuard], loadChildren: () => import('./evc/evc.module').then(m => m.EvcModule) },\n  { path: 'sub-dealer', canActivateChild:[CustomerRootGuard], loadChildren: () => import('./sub-dealer/sub-dealer.module').then(m => m.SubDealerModule) },\n  { path: 'report-log', canActivateChild:[CustomerRootGuard], loadChildren: () => import('./report-log/report-log.module').then(m => m.ReportLogModule) },\n \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { CustomerComponent } from './customer.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { ChartsModule } from \"../charts/charts.module\";\nimport { DashboardComponent } from './Dashboard/dashboard/dashboard.component';\nimport { ResellerDashboardComponent } from './Dashboard/reseller-dashboard/reseller-dashboard.component';\nimport { BusinessDashboardComponent } from './Dashboard/business-dashboard/business-dashboard.component';\nimport { SubDealerDashboardComponent } from './Dashboard/sub-dealer-dashboard/sub-dealer-dashboard.component';\nimport { NgxDaterangepickerBootstrapModule } from 'ngx-daterangepicker-bootstrap';\nimport { ViewSubDealerCreditComponent } from './Dashboard/view-sub-dealer-credit/view-sub-dealer-credit.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SharedPipeModule } from '../pipe/shared-pipe.module';\nimport { SharedModule } from \"../shared/shared.module\";\n\n\n@NgModule({\n    declarations: [\n        CustomerComponent,\n        DashboardComponent,\n        MyProfileComponent,\n        ResellerDashboardComponent,\n        BusinessDashboardComponent,\n        SubDealerDashboardComponent,\n        ViewSubDealerCreditComponent,\n    ],\n    imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2TelInputModule,\n    ChartsModule,\n    NgxDaterangepickerBootstrapModule.forRoot(),\n    NgxPaginationModule,\n    SharedPipeModule,\n    SharedModule\n]\n})\nexport class CustomerModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketService {\n\n  baseUrl = environment.baseUrl;\n  constructor(private _http:HttpClient)\n  {\n\n  }\n\n  getTicket(params:any,searchFilters:string = '')\n  {\n    return this._http.get(this.baseUrl+`/api/v1/customer/ticket/${searchFilters}`, { params });\n  }\n  getTicketOnFilter(params:any)\n  {\n    return this._http.get(this.baseUrl+\"/api/v1/admin/ticket/filter_ticket\", { params });\n  }\n  createTicket(data:any)\n  {\n    return this._http.post(this.baseUrl+'/api/v1/customer/ticket/',data);\n  }\n\n\n  getTicketForFileRequest(id:string) {\n    return this._http.get(`${this.baseUrl}/api/v1/file/service/request/ticket/${id}`);\n  }\n\n\n  updateTicketFromCustomer(data:any,id:any) {\n    return this._http.put(`${this.baseUrl}/api/v1/customer/ticket/update/${id}/`,data);\n  }\n\n\n  updateTicket(data:any,id:any) {\n    return this._http.put(`${this.baseUrl}/api/v1/customer/ticket/${id}/`,data);\n  }\n\n  deleteTicket(id:any)\n  {\n    return this._http.delete(`${this.baseUrl}/api/v1/customer/ticket/${id}/`);\n  }\n\n  getAllTicketCategory()\n  {\n    return this._http.get(this.baseUrl+\"/api/v1/admin/ticket-category/\");\n  }\n\n  getConversation(id:any)\n  {\n    return this._http.get(`${this.baseUrl}/api/v1/customer/conversation/${id}?page=${1}&page_size=${500}`);\n  }\n\n  getAttachments(ids:any)\n  {\n    return this._http.get(`${this.baseUrl}/api/v1/customer/conversation/attachment/${ids}`)\n  }\n\n  saveAttachments(ids:any,file:any)\n  {\n    return this._http.post(`${this.baseUrl}/api/v1/customer/conversation/attachment/${ids}`,file);\n  }\n\n\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"x_google_ignoreList":[18]}