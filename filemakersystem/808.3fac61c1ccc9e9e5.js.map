{"version":3,"file":"808.3fac61c1ccc9e9e5.js","mappings":"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","names":["i0","CreatePermissionComponent","constructor","fb","_titleservice","_rolepermissionservice","toastr","router","_permissionArrService","this","setTitle","permissionArr","permissionForm","group","name","Validators","ngOnInit","permissionFormSubmit","createRolePermission","value","permissions","subscribe","res","success","message","timeOut","navigate","err","error","detail","changePermission","event","key","data","target","permission","split","obj","access","resetPermissionForm","forEach","element","static","core","selectors","ctx","$event","PermissionListComponent","_permissionservice","getPermissions","userdetails","JSON","parse","localStorage","getItem","hasDeleteAccess","roles","id","retrieveRolePermission","getRequestParams","searchTitle","page","pageSize","params","search","page_size","title","getRolePermission","rolepermissions","results","sort","totalrolepermission","count","array","a","b","nameA","toUpperCase","nameB","handlePageChange","deleteRole","selectedRoleID","routes","path","component","PermissionComponent","children","UpdatePermissionComponent","route","permission_id","snapshot","paramMap","get","getRolePermissionId","role_name","arr2","merged","i","length","push","find","itmInner","patchValue","updateRolePermission","PermissionRoutingModule","RouterModule","PermissionModule","CommonModule","FormsModule","ReactiveFormsModule","NgxPaginationModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/permission/create-permission/create-permission.component.html","./src/app/admin/permission/create-permission/create-permission.component.ts","./src/app/admin/permission/permission-list/permission-list.component.html","./src/app/admin/permission/permission-list/permission-list.component.ts","./src/app/admin/permission/update-permission/update-permission.component.html","./src/app/admin/permission/permission-routing.module.ts","./src/app/admin/permission/permission.component.ts","./src/app/admin/permission/permission.component.html","./src/app/admin/permission/update-permission/update-permission.component.ts","./src/app/admin/permission/permission.module.ts"],"sourcesContent":["<section class=\"add-user\">\n    <ul class=\"breadcrumb\"> \n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/permission\"> Permission Management</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/permission\" routerLinkActive=\"active\"> Create New\n                Permission</a></li>\n    </ul>\n\n    <div class=\"add-user-inner\">\n        <h2> Create New Permission</h2>\n\n        <div class=\"formFields\">\n            <form [formGroup]=\"permissionForm\" (ngSubmit)=\"permissionFormSubmit()\">\n                <div>\n                    <label for=\"first_name\" class=\"form-label\">Role Name</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Role Name\">\n                    <small class=\"text-danger mt-4\" *ngIf=\"permissionForm.controls['name'].dirty && permissionForm.controls['name'].hasError('required')\">\n                        Please enter role name.\n                    </small>\n                </div>\n\n                <div class=\"submitReset\">\n                    <table width=\"100%\">\n                \n                        <tr *ngFor=\"let perm of permissionArr;let i = index\">\n                            <td *ngIf=\"perm.permission!='dashboard'\"> {{perm.permission.replace('_', ' ') | titlecase}} </td>\n                            <td *ngIf=\"perm.permission!='dashboard'\"> \n                                \n                                <input type=\"radio\"   \n                                    value=\"{{perm.permission}},Full access\"\n                                    name=\"{{perm.permission}}\" \n                                    (click)=\"changePermission($event,i)\"\n                                   checked=\"{{perm.access == 'Full access' ? true : ''}}\"\n                                   >Full access    \n                            </td>\n                            <td *ngIf=\"perm.permission!='dashboard'\"> \n                                \n                                <input type=\"radio\" \n                                  value=\"{{perm.permission}},View only access\" \n                                  name=\"{{perm.permission}}\"\n                                  (click)=\"changePermission($event,i)\"\n                                 checked=\"{{perm.access == 'View only access' ? true : ''}}\" \n                                 >View only access \n                            </td>\n                            <td *ngIf=\"perm.permission!='dashboard'\"> \n                                \n                                <input type=\"radio\"   \n                                value=\"{{perm.permission}},No Access\" \n                                name=\"{{perm.permission}}\"\n                                (click)=\"changePermission($event,i)\"\n                                checked=\"{{perm.access == 'No Access' ? true : ''}}\"\n                                > No Access \n                            </td>\n                        </tr>\n                       \n                       \n                    </table>\n                </div>\n\n                <div class=\"submitReset\">\n\n                    <button type=\"button\" routerLink=\"/admin/permission\" class=\"ressetBtn\">Cancel</button>\n                    <button type=\"button\" (click)=\"resetPermissionForm()\" class=\"ressetBtn\">Reset</button>\n                    <button type=\"submit\" [disabled]=\"permissionForm.invalid\">Submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissionsArrService } from '../../services/permissions-arr.service';\nimport { RolepermissionService } from '../../services/rolepermission.service';\n\n@Component({\n  selector: 'app-create-permission',\n  templateUrl: './create-permission.component.html',\n  styleUrls: ['./create-permission.component.scss']\n})\nexport class CreatePermissionComponent implements OnInit {\n\n  permissionForm: FormGroup;\n  changeRole: any = '';\n  permissionArr: any = [];\n\n  constructor(\n    private fb: FormBuilder, private _titleservice: Title,\n    private _rolepermissionservice: RolepermissionService,\n    private toastr: ToastrService, private router: Router,\n    private _permissionArrService: PermissionsArrService ) {\n    this._titleservice.setTitle('Create Permission');\n    this.permissionArr = this._permissionArrService.permissionArr();\n    this.permissionForm = this.fb.group({\n      name: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void { }\n\n  permissionFormSubmit() {\n    let data1 = {\n      \"name\": this.permissionForm.value.name,\n      \"permissions\": this.permissionArr\n    };\n    this._rolepermissionservice.createRolePermission(data1).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.router.navigate(['admin/permission']);\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n  changePermission(event: any, key: any) {\n    let data = event.target.value;\n    let permission = data.split(',')[0];\n    let access = data.split(',')[1]\n    let obj = {\n      'access': access,\n      'permission': permission\n    };\n    this.permissionArr[key] = obj\n  }\n\n  resetPermissionForm() {\n    this.permissionArr.forEach((element:any) => {\n      element['access'] = 'No Access';\n  });\n    // this.permissionForm.patchValue({ \"name\": '' });\n  }\n}","<div class=\"permissions\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/Permission\" routerLinkActive=\"active\"> Manage Permission</a></li>\n  </ul>\n  <div class=\"permission-inner\">\n    <div class=\"permission-head\">\n      <h2>Manage Permission</h2>\n      <a *ngIf=\"permissions.permission == 'Full access'\" routerLink=\"/admin/permission/create\"\n        class=\"btn btn-primary btn-sm\">\n        <img src=\"assets/images/icon/addIcon.png\" style=\"width:20px;\" alt=\"create permission\" />Create Permission\n      </a>\n    </div>\n    <hr />\n    <div class=\"accordion\" id=\"accordionContainer\">\n      <div class=\"accordion\" id=\"accordionContainer\">\n        <div class=\"accordion-item\"\n          *ngFor=\"let roleperm of rolepermissions | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalrolepermission};let i = index\">\n          <h2 class=\"accordion-header\" [id]=\"'heading' + i\" style=\"position:relative;\">\n            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\n              [attr.data-bs-target]=\"'#collapse' + i\" aria-expanded=\"true\" [attr.aria-controls]=\"'collapse' + i\">\n              {{roleperm.name | titlecase}}\n              <div class=\"edit\">\n                <a *ngIf=\"permissions.permission == 'Full access'\"\n                  [routerLink]=\"['/admin/permission/update', roleperm.id]\">\n                  <i class=\"fa fa-edit\" title=\"Edit\"></i>\n                </a>\n                <a *ngIf=\"hasDeleteAccess\">\n                  <i class=\"fa fa-trash-o\" title=\"Delete\" data-bs-toggle=\"modal\" data-bs-target=\"#delTemplateModal\" (click)=\"$event.stopPropagation();selectedRoleID = roleperm.id\"></i>\n                </a>\n              </div>\n            </button>\n            <div [id]=\"'collapse' + i\" class=\"accordion-collapse collapse {{i==0 ? 'show' : ''}} \"\n              [attr.aria-labelledby]=\"'heading' + i\" data-bs-parent=\"#accordionContainer\">\n              <div class=\"accounting-childrens commontodiv accordion_body\">\n                <div class=\"dashboard-holders\" *ngFor=\"let permissions of roleperm.permissions\">\n                  <div *ngIf=\"permissions.permission!='dashboard'\" class=\"dashboard \">\n                    <p> {{permissions.permission.replace('_', ' ') | titlecase}} </p>\n                  </div>\n                  <div *ngIf=\"permissions.permission!='dashboard'\" class=\"dashboard-permissions\">\n                    <div class=\"form-check\">\n                      <input type=\"radio\" class=\"form-check-input\" name=\"{{roleperm.name}}{{permissions.permission}}\"\n                        [disabled]=\"true\" checked=\"{{permissions.access == 'Full access' ? 'checked' : ''}}\"\n                        value=\"Full access\">Full access\n                      <label class=\"form-check-label\" for=\"radio1\"></label>\n                    </div>\n                    <div class=\"form-check\">\n                      <input type=\"radio\" class=\"form-check-input\" name=\"{{roleperm.name}}{{permissions.permission}}\"\n                        [disabled]=\"true\" checked=\"{{permissions.access == 'View only access' ? 'checked' : ''}}\"\n                        value=\"View only access\">View only access\n                      <label class=\"form-check-label\" for=\"radio1\"></label>\n                    </div>\n                    <div class=\"form-check\">\n                      <input type=\"radio\" class=\"form-check-input\" name=\"{{roleperm.name}}{{permissions.permission}}\"\n                        [disabled]=\"true\" checked=\"{{permissions.access == 'No Access' ? 'checked' : ''}}\"\n                        value=\"No Access\">No Access\n                      <label class=\"form-check-label\" for=\"radio1\"></label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </h2>\n        </div>\n        <!-- <pagination-controls class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n          (pageChange)=\"handlePageChange($event)\"></pagination-controls> -->\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Delete Modal -->\n<div class=\"modal\" id=\"delTemplateModal\">\n    <div class=\"v-align\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content deleteModal\">\n              \n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Delete Role</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                \n                <div class=\"modal-body\">\n                  <p>Are you sure you want to delete this role?</p>\n                </div>\n                \n                <div class=\"modal-footer\">\n                    <div class=\"flexDiv\">\n                        <button class=\"btn cancel\" data-bs-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn delete\" (click)=\"deleteRole()\"\n                            data-bs-dismiss=\"modal\">Confirm</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissionsService } from '../../services/permissions.service';\nimport { RolepermissionService } from '../../services/rolepermission.service';\n\n@Component({\n  selector: 'app-permission-list',\n  templateUrl: './permission-list.component.html',\n  styleUrls: ['./permission-list.component.scss']\n})\nexport class PermissionListComponent implements OnInit {\n  cateories:any[]=[\n    'Super Administrator',\n    'Technical Manager',\n    'Dealer Account Manager',\n    'Sales Admin'\n  ]\n  permissions:any;\n  selectedPermission:any;\n  hasDeleteAccess:boolean;\n  selectedRoleID:number = 0;\n  constructor(\n    private _rolepermissionservice:RolepermissionService,\n    private toastr: ToastrService,\n    private _titleservice:Title,\n    private _permissionservice:PermissionsService\n  )\n  {\n\n    this._titleservice.setTitle('Permissions')\n    this.permissions = this._permissionservice.getPermissions();\n\n    const userdetails = JSON.parse(localStorage.getItem('userdetails') || '');\n    this.hasDeleteAccess = (userdetails?.roles.id == 1 || userdetails?.roles.id == 11);\n  }\n\n  ngOnInit(): void {\n\n    this.retrieveRolePermission();\n    \n  }\n\n  //below for get role and permission pagination\n  rolepermissions: any = [];\n  params:any;\n  page = 1;\n  pageSize = 50;\n  title = '';\n  totalrolepermission:any;\n  getRequestParams(searchTitle: string,page: number, pageSize: number): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveRolePermission(): void {\n    const params = this.getRequestParams(this.title,this.page, this.pageSize);\n    this._rolepermissionservice.getRolePermission(params).subscribe((res:any)=>{\n       this.rolepermissions = res.data.results;\n       this.rolepermissions = this.sort(this.rolepermissions, 'name')\n      \n       this.totalrolepermission = res.data.count;\n     },\n     (err:any)=>{\n     })\n\n  }\n  sort(array: any, key: any) {\n    return array.sort((a: any, b: any) => {\n      var nameA = a[key].toUpperCase();\n      var nameB = b[key].toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveRolePermission();\n  }\n\n  deleteRole() {\n    this._rolepermissionservice.deleteRole(this.selectedRoleID)\n    .subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveRolePermission();\n    },\n    (err: any) => {\n      this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n    })\n  }\n\n\n  // deletePermission() {\n  //   console.log(this.selectedPermission);\n    \n  //   this._rolepermissionservice.deletePermission(this.selectedPermission.id).subscribe((res: any) => {\n  //     this.toastr.success(res.message, '', { timeOut: 4000 });\n  //     this.retrieveRolePermission();\n  //   },\n  //     (err: any) => {\n  //       this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n  //     })\n  // }\n\n}\n","<section class=\"add-user\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/permission\"> Permission Management</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/permission\" routerLinkActive=\"active\"> Update Permission</a></li>\n    </ul>\n\n    <div class=\"add-user-inner\">\n        <h2> Update Permission</h2>\n\n        <div class=\"formFields\">\n            <form [formGroup]=\"permissionForm\" (ngSubmit)=\"permissionFormSubmit()\">\n                <div>\n                    <label for=\"first_name\" class=\"form-label\">Role Name</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Role Name\">\n                    <small class=\"text-danger mt-4\" *ngIf=\"permissionForm.controls['name'].dirty && permissionForm.controls['name'].hasError('required')\">\n                        Please enter role name.\n                    </small>\n                </div>\n\n                <div class=\"submitReset\">\n                    <table width=\"100%\">\n            \n                        <tr *ngFor=\"let perm of permissions;let i = index\">\n                            <td *ngIf=\"perm.permission!='dashboard'\"> {{perm.permission.replace('_', ' ') | titlecase}} </td>\n                            <td *ngIf=\"perm.permission!='dashboard'\"> \n                                \n                                <input type=\"radio\"   \n                                    value=\"{{perm.permission}},Full access\"\n                                    name=\"{{perm.permission}}\" \n                                    (click)=\"changePermission($event,i)\"\n                                   checked=\"{{perm.access == 'Full access' ? true : ''}}\"\n                                   >Full access    \n                            </td>\n                            <td *ngIf=\"perm.permission!='dashboard'\"> \n                                \n                                <input type=\"radio\" \n                                  value=\"{{perm.permission}},View only access\" \n                                  name=\"{{perm.permission}}\"\n                                  (click)=\"changePermission($event,i)\"\n                                 checked=\"{{perm.access == 'View only access' ? true : ''}}\" \n                                 >View only access \n                            </td>\n                            <td *ngIf=\"perm.permission!='dashboard'\"> \n                                \n                                <input type=\"radio\"   \n                                value=\"{{perm.permission}},No Access\" \n                                name=\"{{perm.permission}}\"\n                                (click)=\"changePermission($event,i)\"\n                                checked=\"{{perm.access == 'No Access' ? true : ''}}\"\n                                > No Access \n                            </td>\n                        </tr>\n                       \n                       \n                    </table>\n                </div>\n\n                <div class=\"submitReset\">\n                    <button type=\"button\" routerLink=\"/admin/permission\" class=\"ressetBtn\">Cancel</button>\n                    <button type=\"button\" (click)=\"resetPermissionForm()\" class=\"ressetBtn\">Reset</button>\n                    <button type=\"submit\" [disabled]=\"permissionForm.invalid\">Submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreatePermissionComponent } from './create-permission/create-permission.component';\nimport { PermissionListComponent } from './permission-list/permission-list.component';\nimport { PermissionComponent } from './permission.component';\nimport { UpdatePermissionComponent } from './update-permission/update-permission.component';\n\nconst routes: Routes = [\n  {path:'',component:PermissionComponent,children:[\n    {path:'',component:PermissionListComponent},\n    {path:'create',component:CreatePermissionComponent},\n    {path:'update/:id',component:UpdatePermissionComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PermissionRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-permission',\n  templateUrl: './permission.component.html',\n  styleUrls: ['./permission.component.scss']\n})\nexport class PermissionComponent {\n\n}\n","\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissionsArrService } from '../../services/permissions-arr.service';\nimport { RolepermissionService } from '../../services/rolepermission.service';\n\n@Component({\n  selector: 'app-update-permission',\n  templateUrl: './update-permission.component.html',\n  styleUrls: ['./update-permission.component.scss']\n})\nexport class UpdatePermissionComponent implements OnInit {\n\n  permissions: any = [];\n\n  permission_id: any;\n  role_name: any;\n  permissionForm: FormGroup;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private _rolepermissionservice: RolepermissionService,\n    private toastr: ToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private _titleservice: Title,\n    private _permissionArrService: PermissionsArrService\n  ) {\n\n    this._titleservice.setTitle('Update Permission');\n\n    this.permissionForm = this.fb.group({\n      name: ['', Validators.required],\n    });\n\n\n\n  }\n\n  ngOnInit(): void {\n\n    this.permission_id = this.route.snapshot.paramMap.get('id');\n\n    this._rolepermissionservice.getRolePermissionId(this.permission_id).subscribe((res: any) => {\n      this.role_name = res.data.name;\n      this.permissions = res.data.permissions;\n\n      let arr2 = this._permissionArrService.permissionArr();\n      let merged = [];\n\n      for (let i = 0; i < arr2.length; i++) {\n        merged.push({\n          ...arr2[i],\n          ...(this.permissions.find((itmInner: any) => itmInner.permission === arr2[i].permission))\n        }\n        );\n      }\n      this.permissions = merged;\n      this.permissionForm.patchValue({ 'name': this.role_name });\n    },\n      (err: any) => {\n      })\n  }\n\n  changePermission(event: any, key: any) {\n    let data = event.target.value;\n    let permission = data.split(',')[0];\n    let access = data.split(',')[1]\n    let obj = {\n      'access': access,\n      'permission': permission\n    };\n    this.permissions[key] = obj\n  }\n\n  permissionFormSubmit() {\n    let data = {\n      \"name\": this.permissionForm.value.name,\n      \"permissions\": this.permissions\n    };\n\n    this._rolepermissionservice.updateRolePermission(data, this.permission_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.router.navigate(['admin/permission']);\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n  resetPermissionForm() {\n    this.permissions.forEach((element: any) => {\n      element['access'] = 'No Access';\n    });\n\n    // this.permissionForm.patchValue({'name':this.role_name});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PermissionRoutingModule } from './permission-routing.module';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PermissionComponent } from './permission.component';\nimport { CreatePermissionComponent } from './create-permission/create-permission.component';\nimport { UpdatePermissionComponent } from './update-permission/update-permission.component';\nimport { PermissionListComponent } from './permission-list/permission-list.component';\n\n\n@NgModule({\n  declarations: [\n    PermissionComponent,\n    CreatePermissionComponent,\n    UpdatePermissionComponent,\n    PermissionListComponent\n  ],\n  imports: [\n    CommonModule,\n    PermissionRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ]\n})\nexport class PermissionModule { }\n"],"x_google_ignoreList":[]}