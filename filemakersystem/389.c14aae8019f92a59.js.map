{"version":3,"file":"389.c14aae8019f92a59.js","mappings":"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","names":["VehicleManagementComponent","constructor","_titleservice","this","setTitle","static","core","selectors","i0","VehicleCreditComponent","crud","formBuilder","toastr","_permissions","vehicleInformation","group","vehicle_type","vehicle_brand","lineItemsForm","FormGroup","infants","FormArray","permissions","getPermissions","ngOnInit","getRequest","cusRequestUrl","then","res","vehicleTypes","createItem","element","model_name","file_key_credit","id","addInfant","get","push","getControls","controlname","controls","getVehicleBrands","value","vehicleBrandList","getBrandModel","i","length","removeAt","modelList","forEach","applyAll","applyAllKey","patchValue","test","putRequest","requestUrl","data","success","message","ctx","VehicleManageComponent","model","createECUVer","ecu_version_name","Validators","percentage","brand","getECUBrandList","getEcuVersion","ecuBrandListNew","getEcuVersionList","event","target","ecuVersionListNew","toFixed","createVehicleModal","postRequest","vehicle_brand_id","vehicle_model_name","setValue","ecuVersionList","showEcuVersionList","pagination","type","pageNo","disableNext","paginationBrand","pageNoBrand","showEcuBrandList","ecuBrandList","disableNextBrand","update","createEcuVersion","valid","formReset","VehicleListComponent","customer","JSON","parse","localStorage","getItem","brand_name","other_model_name","ecu_brand","other_ecu_brand","ecu_version","other_ecu_version","fuel_type","other_fuel_type","vehicleEditInformation","getVehicleList","getVehicleTypeList","getFileFormData","subscribe","vehicleDetails","filter","item","sortEle","onSync","next","error","err","onKeywordUpdate","e","page","field","order","param","searchKeywords","pageSize","sortField","sortOrder","updateVehicleListResponse","vehicleList","results","totalVehicle","count","showError","sort","addnew","reverse","moveCountryOnTop","getVehicleControlList","arr","name","index","findIndex","country","removedObject","splice","unshift","newArr","ecu_brands_list","newArrVersion","versions_list","setFuelModel","isEdit","a","b","toLowerCase","localeCompare","array","key","nameA","toUpperCase","nameB","addVehicle","finalSubmit","markAllControlsAsTouched","body","undefined","document","getElementById","click","editVehicle","vehicle","vehicle_model","editVehicleId","submitEditVehicle","formGroup","Object","values","control","markAsTouched","reset","handlePageChange","routes","path","component","children","UploadVehicleCsvComponent","router","_Activatedroute","onFileChange","$event","isFile","files","file","reader","FileReader","onload","wb","read","result","sheets","SheetNames","rows","utils","Sheets","jsonData","filename","readAsArrayBuffer","goToImportFile","navigate","stringify","ImportVehicleCsvComponent","snapshot","paramMap","tableHeader","headTag","vehicle_type_error","vehicle_type_msg","ecu_type","ecu_type_error","ecu_type_msg","Brand","brand_name_error","brand_name_msg","Model","model_name_error","model_name_msg","Fuel","fuel_type_error","fuel_type_msg","ecu_brand_error","ecu_brand_msg","ecu_version_error","ecu_version_msg","isUploadDisable","customerArr","uploadCsvFile","csvPostRequest","navigateByUrl","VehicleManagementRoutingModule","RouterModule","VehicleManagementModule","CommonModule","ReactiveFormsModule","FormsModule","NgxPaginationModule","SharedComponentsModule","TitleCasePipe","imports","SharedPipeModule","SortButtonComponent","EventEmitter"],"sourceRoot":"webpack:///","sources":["./src/app/admin/vehicle-management/vehicle-management.component.ts","./src/app/admin/vehicle-management/vehicle-management.component.html","./src/app/admin/vehicle-management/vehicle-credit/vehicle-credit.component.html","./src/app/admin/vehicle-management/vehicle-credit/vehicle-credit.component.ts","./src/app/admin/vehicle-management/vehicle-manage/vehicle-manage.component.html","./src/app/admin/vehicle-management/vehicle-manage/vehicle-manage.component.ts","./src/app/admin/vehicle-management/vehicle-list/vehicle-list.component.html","./src/app/admin/vehicle-management/vehicle-list/vehicle-list.component.ts","./src/app/admin/vehicle-management/upload-vehicle-csv/upload-vehicle-csv.component.html","./src/app/admin/vehicle-management/import-vehicle-csv/import-vehicle-csv.component.html","./src/app/admin/vehicle-management/vehicle-management-routing.module.ts","./src/app/admin/vehicle-management/upload-vehicle-csv/upload-vehicle-csv.component.ts","./src/app/admin/vehicle-management/import-vehicle-csv/import-vehicle-csv.component.ts","./src/app/admin/vehicle-management/vehicle-management.module.ts","./src/app/shared-components/shared-components.module.ts","./src/app/shared-components/sort-button/sort-button.component.ts","./src/app/shared-components/sort-button/sort-button.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-vehicle-management',\n  templateUrl: './vehicle-management.component.html',\n  styleUrls: ['./vehicle-management.component.scss']\n})\nexport class VehicleManagementComponent {\n  constructor( private _titleservice:Title ) {\n    this._titleservice.setTitle('Vehicle Management');\n  }\n}\n","<router-outlet></router-outlet>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/credit\" routerLinkActive=\"active\">Credit </a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Credit</h2>\n        </div>\n        <div class=\"dropDown\">\n            <form [formGroup]=\"vehicleInformation\">\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Select Vehicle Type</label>\n                    <select class=\"form-select\" formControlName=\"vehicle_type\" (change)=\"getVehicleBrands()\">\n                        <option disabled>Select Vehicle Type</option>\n                        <option *ngFor=\"let vehicleType of vehicleTypes\" [value]=\"vehicleType.id\"> {{vehicleType.name}}\n                        </option>\n                    </select>\n                </div>\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Select Brand</label>\n                    <select class=\"form-select\" formControlName=\"vehicle_brand\" (change)=\"getBrandModel()\">\n                        <option disabled>Select Brand</option>\n                        <option *ngFor=\"let brand of vehicleBrandList\" [value]=\"brand.id\">{{brand.brand_name}}</option>\n                    </select>\n                </div>\n            </form>\n        </div>\n        <div class=\"applyAll\">\n            <input type=\"number\" [(ngModel)]=\"applyAllKey\" (keyup)=\"applyAll()\" placeholder=\"Apply credit to all\">\n        </div>\n        <form [formGroup]=\"lineItemsForm\">\n            <div class=\"Model\">\n                <div class=\"ModalHead\">\n                    <div>\n                        <p>#</p>\n                    </div>\n                    <div>\n                        <p>Model</p>\n                    </div>\n                    <div>\n                        <p>File key credit</p>\n                    </div>\n                </div>\n                <div class=\"ModalBody\" formArrayName=\"infants\"\n                    *ngFor=\"let infants of getControls('infants'); let i = index;\">\n                    <div [formGroupName]=\"i\">\n                        <div>\n                            <p>{{i+1}}</p>\n                        </div>\n                        <div>\n                            <input type=\"text\" formControlName=\"model_name\" readonly>\n                        </div>\n                        <div>\n                            <input type=\"text\" formControlName=\"file_key_credit\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"ModalFoot\">\n                    <button *ngIf=\"lineItemsForm.value.infants.length>0 && permissions.vehicle_management == 'Full access'\" class=\"btn save\" (click)=\"test()\">Save</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</section>","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-vehicle-credit',\n  templateUrl: './vehicle-credit.component.html',\n  styleUrls: ['./vehicle-credit.component.scss']\n})\nexport class VehicleCreditComponent {\n  vehicleTypes: any;\n  vehicleBrandList: any;\n  vehicleInformation!: FormGroup;\n  modelList: any;\n  applyAllKey: any;\n  lineItemsForm: FormGroup;\n  infants!: FormArray;\n  infantCount: any = 0;\n  permissions: any;\n  constructor(private crud: CrudService, private formBuilder: FormBuilder,\n    private toastr: ToastrService, private _permissions: PermissionsService) {\n    this.vehicleInformation = this.formBuilder.group({\n      vehicle_type: ['Select Vehicle Type'],\n      vehicle_brand: ['Select Brand']\n    });\n    this.lineItemsForm = new FormGroup({\n      infants: new FormArray([]),\n    });\n    this.permissions = this._permissions.getPermissions();\n\n  }\n  ngOnInit() {\n    this.crud.getRequest(cusRequestUrl.getVehicleTypeList).then((res: any) => {\n      if (res)\n        this.vehicleTypes = res;\n    })\n  }\n  createItem(element: any): FormGroup {\n    return this.formBuilder.group({\n      model_name: [element.model_name],\n      file_key_credit: [element.file_key_credit],\n      id: [element.id]\n    });\n  }\n  addInfant(element: any): void {\n    this.infants = this.lineItemsForm.get('infants') as FormArray;\n    this.infants.push(this.createItem(element));\n  }\n  getControls(controlname: any) {\n    return (this.lineItemsForm.get(controlname) as FormArray).controls;\n  }\n  getVehicleBrands() {\n    this.crud.getRequest(`${cusRequestUrl.getVehicleBrandList}${this.vehicleInformation.value.vehicle_type}`).then((res: any) => {\n      this.vehicleBrandList = res;\n    })\n  }\n  getBrandModel() {\n    if (this.infants?.value) {\n      for (let i = 0; i < this.infants.value.length;) {\n        this.infants.removeAt(i);\n      }\n    }\n    this.crud.getRequest(`${cusRequestUrl.getBrandModal}${this.vehicleInformation.controls['vehicle_brand'].value}`).then((res: any) => {\n      if (res)\n        this.modelList = res;\n      this.modelList.forEach((element: any) => {\n        this.addInfant(element);\n      });\n    })\n  }\n  applyAll() {\n    if (this.applyAllKey) {\n      for (let i = 0; i < this.infants.value.length; i++) {\n        this.infants.controls[i].patchValue({ file_key_credit: this.applyAllKey })\n      }\n    }\n    else\n      this.getBrandModel();\n  }\n  test() {\n    let body = {\n      data: this.lineItemsForm.value.infants\n    }\n    this.crud.putRequest(requestUrl.updateFileCredit, body).then((res: any) => {\n      this.toastr.success(res.message);\n\n    })\n\n  }\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/credit\" routerLinkActive=\"active\">Credit </a></li>\n    </ul>\n    <!-- Card 1 @Manage Vehicle -->\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Manage Vehicle</h2>\n        </div>\n        <div class=\"dropDown\">\n            <form [formGroup]=\"vehicleInformation\">\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Select Vehicle Type</label>\n                    <select class=\"form-select\" formControlName=\"vehicle_type\" (change)=\"getVehicleBrands()\">\n                        <option disabled>Select Vehicle Type</option>\n                        <option *ngFor=\"let vehicleType of vehicleTypes\" [value]=\"vehicleType.id\"> {{vehicleType.name}}\n                        </option>\n                    </select>\n                </div>\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Select Brand</label>\n                    <select class=\"form-select\" formControlName=\"vehicle_brand\">\n                        <option disabled>Select Brand</option>\n                        <option *ngFor=\"let brand of vehicleBrandList\" [value]=\"brand.id\">{{brand.brand_name}}</option>\n                    </select>\n                </div>\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Model</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Model\" formControlName=\"model\">\n                </div>\n                <div class=\"btnDiv\" *ngIf=\"permissions.vehicle_management == 'Full access'\">\n                    <button class=\"btn submitBtn\" (click)=\"createVehicleModal()\"> Submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Card 2 Manage ECU -->\n    <div class=\"ulist-div\" style=\"margin-top: 20px;\">\n        <div class=\"u-add \">\n            <div>\n                <h2>Manage ECU</h2>\n            </div>\n            <div class=\"card2\">\n                <select class=\"form-select\" (change)=\"getEcuVersionList($event)\">\n                    <option selected disabled>Select ECU Brand</option>\n                    <option *ngFor=\"let brand of ecuBrandListNew\" [value]=\"brand.id\">{{brand.brand_name}}</option>\n                </select>\n                <div class=\"btnDiv\" *ngIf=\"permissions.vehicle_management == 'Full access'\">\n                    <button class=\"btn submitBtn\" data-bs-toggle=\"modal\" data-bs-target=\"#createEcuVersion\">\n                        Create</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"dropDown\">\n            <form [formGroup]=\"lineItemsForm\">\n                <div class=\"Model\">\n                    <div class=\"ModalHead\">\n                        <div>\n                            <p>#</p>\n                        </div>\n                        <div>\n                            <p>ECU Version</p>\n                        </div>\n                        <div>\n                            <p>Percentage Match</p>\n                        </div>\n                    </div>\n                    <div *ngIf=\"lineItemsForm.value.infants.length==0\" style=\"width: 100%; text-align: center;\">No Data\n                        Available</div>\n                    <div class=\"ModalBody\" formArrayName=\"infants\"\n                        *ngFor=\"let infants of getControls('infants'); let i = index;\">\n                        <div [formGroupName]=\"i\">\n                            <div>\n                                <p>{{i+1}}</p>\n                            </div>\n                            <div>\n                                <input type=\"text\" formControlName=\"ecu_version_name\" readonly>\n                            </div>\n                            <div>\n                                <input type=\"number\" appRestrictEnumber formControlName=\"percentage\">\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"lineItemsForm.value.infants.length>0\" class=\"ModalFoot\">\n                        <button class=\"btn save\" (click)=\"update()\">Update</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Create Ecu Version Modal -->\n    <div class=\"modal\" id=\"createEcuVersion\">\n        <div class=\"v-align\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Create ECU Version</h4>\n                        <button type=\"button\" class=\"btn-close\" (click)=\"formReset()\" data-bs-dismiss=\"modal\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <div>\n                            <form [formGroup]=\"createECUVer\" class=\"createECUVer\">\n                                <div>\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">ECU Brand</label>\n                                        <select class=\"form-select\" formControlName=\"brand\">\n                                            <option selected disabled>Select ECU Brand</option>\n                                            <option *ngFor=\"let brand of ecuBrandListNew\" [value]=\"brand.id\">\n                                                {{brand.brand_name}}</option>\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">ECU Version</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"ecu_version_name\"\n                                            placeholder=\"Enter ECU Vesion Name\">\n                                    </div>\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">Percentage Match</label>\n                                        <input type=\"number\" class=\"form-control\" formControlName=\"percentage\"\n                                            placeholder=\"Enter Percentage\">\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <div class=\"flexDiv\">\n                            <button type=\"button\" class=\"btn cancel\" data-bs-dismiss=\"modal\"\n                                (click)=\"formReset()\">Cancel</button>\n                            <button *ngIf=\"permissions.vehicle_management == 'Full access'\" type=\"button\" class=\"btn confirmbtn\" data-bs-dismiss=\"modal\"\n                                [disabled]=\"createECUVer.invalid || (createECUVer.value.brand == 'Select ECU Brand')\"\n                                (click)=\"createEcuVersion()\">Create</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-vehicle-manage',\n  templateUrl: './vehicle-manage.component.html',\n  styleUrls: ['./vehicle-manage.component.scss']\n})\nexport class VehicleManageComponent {\n\n  vehicleTypes: any;\n  vehicleBrandList: any;\n  vehicleInformation!: FormGroup;\n  createECUVer!: FormGroup;\n  ecuVersionKey: any;\n  ecuVersionList: any;\n  pageNo: number = 1;\n  pageNoBrand: number = 1;\n  showEcuVersionList: any[] = [];\n  disableNext: boolean = false;\n  disableNextBrand: boolean = false;\n  ecuBrandList: any;\n  showEcuBrandList: any[] = [];\n  ecuBrandListNew: any;\n  ecuVersionListNew: any;\n\n  lineItemsForm: FormGroup;\n  infants!: FormArray;\n  infantCount: any = 0;\n  permissions: any;\n  constructor(private formBuilder: FormBuilder, private crud: CrudService,\n    private toastr: ToastrService, private _permissions : PermissionsService) {\n    this.vehicleInformation = this.formBuilder.group({\n      vehicle_type: ['Select Vehicle Type'],\n      vehicle_brand: ['Select Brand'],\n      model: [''],\n    });\n    this.createECUVer = this.formBuilder.group({\n      ecu_version_name: ['', Validators.required],\n      percentage: ['', Validators.required],\n      brand: ['Select ECU Brand'],\n    });\n    this.lineItemsForm = new FormGroup({\n      infants: new FormArray([]),\n    });\n    this.permissions = this._permissions.getPermissions();\n  }\n  ngOnInit() {\n    this.crud.getRequest(cusRequestUrl.getVehicleTypeList).then((res: any) => {\n      if (res)\n        this.vehicleTypes = res;\n    })\n    this.getECUBrandList();\n    this.getEcuVersion();\n  }\n  getECUBrandList() {\n    this.crud.getRequest(requestUrl.getEcuBrandList).then((res: any) => {\n      if (res) {\n        this.ecuBrandListNew = res;\n      }\n    })\n  }\n  getEcuVersionList(event: any) {\n    if (this.infants?.value) {\n      for (let i = 0; i < this.infants.value.length;) {\n        this.infants.removeAt(i);\n      }\n    }\n    this.crud.getRequest(`${requestUrl.getEcuVersionList}${event.target.value}`).then((res: any) => {\n      if (res) {\n        this.ecuVersionListNew = res;\n        this.ecuVersionListNew.forEach((element: any) => {\n          this.addInfant(element);\n        });\n      }\n    })\n  }\n  createItem(element: any): FormGroup {\n    return this.formBuilder.group({\n      ecu_version_name: [element.ecu_version_name],\n      percentage: [element.percentage.toFixed(2)],\n      id: [element.id]\n    });\n  }\n  addInfant(element: any): void {\n    this.infants = this.lineItemsForm.get('infants') as FormArray;\n    this.infants.push(this.createItem(element));\n  }\n  getControls(controlname: any) {\n    return (this.lineItemsForm.get(controlname) as FormArray).controls;\n  }\n  getVehicleBrands() {\n    this.crud.getRequest(`${cusRequestUrl.getVehicleBrandList}${this.vehicleInformation.value.vehicle_type}`).then((res: any) => {\n      this.vehicleBrandList = res;\n    })\n  }\n  createVehicleModal() {\n    let body = {\n      \"vehicle_brand_id\": this.vehicleInformation.value.vehicle_brand,\n      \"vehicle_model_name\": this.vehicleInformation.value.model\n    }\n    this.crud.postRequest(`${requestUrl.createVehicleModel}`, body).then((res: any) => {\n      if (res) {\n        this.toastr.success(res.message);\n        this.vehicleInformation.controls['model'].setValue('');\n      }\n    })\n  }\n  getEcuVersion() {\n    this.crud.getRequest(`${requestUrl.ecuVersion}`).then((res: any) => {\n      if (res) {\n        this.ecuVersionList = res.data;\n        for (let i = 0; i < 10; i++) {\n          this.showEcuVersionList.push(this.ecuVersionList[i])\n        }\n\n      }\n    })\n  }\n  pagination(type: string) {\n    this.pageNo = type == 'next' ? this.pageNo + 1 : this.pageNo - 1\n    this.showEcuVersionList = [];\n    for (let i = ((this.pageNo * 10) - 10); i < this.pageNo * 10; i++) {\n      if (this.ecuVersionList[i])\n        this.showEcuVersionList.push(this.ecuVersionList[i])\n      this.disableNext = !this.ecuVersionList[i] ? true : false;\n    }\n\n  }\n  paginationBrand(type: string) {\n    this.pageNoBrand = type == 'next' ? this.pageNoBrand + 1 : this.pageNoBrand - 1\n    this.showEcuBrandList = [];\n    for (let i = ((this.pageNoBrand * 10) - 10); i < this.pageNoBrand * 10; i++) {\n      if (this.ecuBrandList[i])\n        this.showEcuBrandList.push(this.ecuBrandList[i])\n      this.disableNextBrand = !this.ecuBrandList[i] ? true : false;\n    }\n\n  }\n  data: any = [];\n\n  update() {\n    this.data = [];\n    this.lineItemsForm.value.infants.forEach((element: any) => {\n      let a = {\n        \"id\": element.id,\n        \"percentage\": element.percentage\n      }\n      this.data.push(a);\n    });\n\n    let body = {\n      data: this.data\n    }\n    this.crud.putRequest(requestUrl.ecuVersionUpdate, body).then((res: any) => {\n      this.toastr.success(res.message);\n\n    })\n\n  }\n  createEcuVersion() {\n    if (this.createECUVer.valid) {\n      this.crud.postRequest(requestUrl.createEcuVersion, this.createECUVer.value).then((res: any) => {\n        if (res) {\n          this.formReset();\n          this.toastr.success(res.message);\n        }\n      })\n    }\n  }\n  formReset() {\n    this.createECUVer.controls['brand'].setValue('Select ECU Brand');\n    this.createECUVer.controls['percentage'].setValue('');\n    this.createECUVer.controls['ecu_version_name'].setValue('');\n  }\n}\n","<section class=\"user-list\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/tickets\" routerLinkActive=\"active\">Ticket </a></li>\n  </ul>\n  <div class=\"ulist-div\">\n    <div class=\"u-add after-seperator\">\n      <div class=\"d-flex\">\n        <h2 class=\"main-title nowrap\">Vehicle List</h2>\n        <div *ngIf=\"userDetail?.roles?.name == 'Super Admin'\" class=\"sync-btn\">\n          <button (click)=\"onSync()\" class=\"addCus\">Sync</button>\n        </div>\n      </div>\n      <div class=\"u-add-right\">\n        <input type=\"text\" #yourInput style=\"width: 35ch;\" [(ngModel)]=\"searchKeywords\" (keyup)=\"onKeywordUpdate(yourInput.value)\"\n          placeholder=\"Search by Brand, ECU Vesion, Model\" />\n        <div>\n          <div class=\"dropdown\">\n            <button class=\"btn-primary nowrap\" data-bs-toggle=\"dropdown\">\n              <svg viewBox=\"0 0 24.00 24.00\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\">\n                <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\n                <g id=\"SVGRepo_iconCarrier\"> <title></title> \n                  <g id=\"Complete\"> <g data-name=\"add\" id=\"add-2\"> \n                    <g> \n                      <line fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"12\" x2=\"12\" y1=\"19\" y2=\"5\"></line>\n                      <line fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\"></line> \n                    </g> \n                </g> \n                </g> \n                </g>\n              </svg>\n              Add Vehicle\n            </button>\n            <ul class=\"dropdown-menu\">\n              <li class=\"d-flex align-items-center\">\n                <img _ngcontent-xsx-c95=\"\" src=\"assets/images/icon/add-customer.svg\"><a data-bs-toggle=\"modal\"\n                  data-bs-target=\"#chngeEmailModal\" style=\"cursor: pointer;\">\n                  Add Vehicle\n                </a>\n              </li>\n              <li class=\"d-flex align-items-center\">\n                <img src=\"assets/images/icon/exportCsv.png\">\n                <a routerLink=\"/admin/vehicle-management/upload-vehicle-csv\" class=\"exlexp nowrap\">Import Vehicle File</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n    <div class=\"responsive-tbl mt-4\">\n      <table>\n        <thead>\n          <th>\n            <div class=\"d-flex align-items-center justify-content-center\">\n              <p class=\"mb-0\">Vehicle Type</p>\n              <sort-button (onSort)=\"getVehicleList('vehicle_model__vehicle_brand__vehicle_type__name','dec')\"></sort-button>\n            </div>\n          </th>\n          <th>\n            <div class=\"d-flex align-items-center justify-content-center\">\n              <p class=\"mb-0\">Brand</p>\n              <sort-button (onSort)=\"getVehicleList('vehicle_model__vehicle_brand__brand_name','dec')\"></sort-button>\n            </div>\n          </th>\n          <th>\n            <div class=\"d-flex align-items-center justify-content-center\">\n              <p class=\"mb-0\">Model</p>\n              <sort-button (onSort)=\"getVehicleList('vehicle_model__model_name','dec')\"></sort-button>\n            </div>\n          </th>\n          <th>Fuel</th>\n          <th>\n            <div class=\"d-flex align-items-center justify-content-center\">\n              <p class=\"mb-0\">Ecu Brand</p>\n              <sort-button (onSort)=\"getVehicleList('ecu_brand','dec')\"></sort-button>\n            </div>\n          </th>\n          <th>\n            <div class=\"d-flex align-items-center justify-content-center\">\n              <p class=\"mb-0\">Ecu Version</p>\n              <sort-button (onSort)=\"getVehicleList('ecu_version','dec')\"></sort-button>\n            </div>\n          </th>\n          <th class=\"tableHeadAction\"> Action </th>\n        </thead>\n        <tbody>\n          <tr\n            *ngFor=\"let vehicle of vehicleList | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalVehicle};let i = index\">\n            <td> {{vehicle?.vehicle_type || 'NA'}} </td>\n            <td>{{vehicle?.vehicle_brand || 'NA'}}</td>\n            <td> {{vehicle?.vehicle_model || 'NA'}} </td>\n            <td> {{vehicle?.fuel_type || 'NA'}} </td>\n            <td> {{vehicle?.ecu_brand || 'NA'}} </td>\n            <td> {{vehicle?.ecu_version || 'NA'}}</td>\n            <td class=\"tableBodyAction\">\n              <div class=\"actiontd\">\n                <a class=\"eyeIcon\" (click)=\"editVehicle(vehicle)\" data-bs-toggle=\"modal\"\n                  data-bs-target=\"#chngeEmailModal2\"><i class=\"fa fa-pencil\" title=\"Edit\"></i></a>\n              </div>\n            </td>\n          </tr>\n          <tr *ngIf=\"showError\">\n            <td colspan=\"12\" align=\"center\" class=\"text-danger\"> Records not found </td>\n          </tr>\n      </table>\n    </div>\n    <pagination-controls *ngIf=\"vehicleList.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n      (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n  </div>\n  <!-- Add New Vehicle Modal -->\n  <div class=\"modal\" id=\"chngeEmailModal\">\n    <div class=\"v-align\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header downloadFile\">\n            <h4 class=\"modal-title\">Add Vehicle</h4>\n            <button type=\"button\" id=\"closecreatemodal\" (click)=\"formReset();\" class=\"btn-close\"\n              data-bs-dismiss=\"modal\"></button>\n          </div>\n          <div class=\"modal-body addVehicle\">\n            <form [formGroup]=\"vehicleInformation\">\n              <div>\n                <label for=\"vehicle\" class=\"form-label\">Vehicle Type</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"vehicle_type\" (change)=\"getVehicleBrands('save')\">\n                    <option disabled>Select Vehicle Type</option>\n                    <option *ngFor=\"let vehicleType of vehicleTypes\" [value]=\"vehicleType.id\"> {{vehicleType.name}}\n                    </option>\n                  </select>\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['vehicle_type'].touched && vehicleInformation.value.vehicle_type == 'Select Vehicle Type'\">\n                    Please select vehicle type.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>Vehicle Brand</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"brand_name\" (change)=\"getBrandModel()\">\n                    <option disabled>Select Vehicle Brand</option>\n                    <option *ngFor=\"let brand of vehicleBrandList\" [value]=\"brand.id\">{{brand.brand_name}}</option>\n                  </select>\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['brand_name'].touched && vehicleInformation.value.brand_name == 'Select Vehicle Brand'\">\n                    Please select vehicle brand.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>Vehicle Model</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"model_name\" (change)=\"getVehicleControlList();\">\n                    <option disabled>Select Vehicle Model</option>\n                    <option *ngFor=\"let model of modelList\" [value]=\"model.id\">{{model.model_name}}</option>\n                  </select>\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['model_name'].touched && vehicleInformation.value.model_name == 'Select Vehicle Model'\">\n                    Please select vehicle model.\n                  </small>\n                </div>\n                <div class=\"mt-3\" *ngIf=\"vehicleInformation.value.model_name == 0\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Enter model name\"\n                    formControlName=\"other_model_name\">\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['other_model_name'].touched && vehicleInformation.value.other_model_name==''\">\n                    Please enter vehicle model.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>Fuel Type</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"fuel_type\">\n                    <option disabled>Select Fuel Type</option>\n                    <option *ngFor=\"let fuelType of vehicleDetails?.fuel_type\" [value]=\"fuelType\"> {{fuelType}}</option>\n                  </select>\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['fuel_type'].touched && vehicleInformation.value.fuel_type == 'Select Fuel Type'\">\n                    Please select fuel type.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>ECU Brand</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"ecu_brand\" (click)=\"setFuelModel();\">\n                    <option disabled>Select ECU Brand</option>\n                    <option *ngFor=\"let ecu of ecuBrandList?.ecu_brands_list\" [value]=\"ecu.ecu_brand\">{{ecu.ecu_brand}}\n                    </option>\n                  </select>\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['ecu_brand'].touched && vehicleInformation.value.ecu_brand == 'Select ECU Brand'\">\n                    Please select ecu brand.\n                  </small>\n                </div>\n                <div class=\"mt-3\" *ngIf=\"vehicleInformation.value.ecu_brand == 'Add New'\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"ECU Brand\" formControlName=\"other_ecu_brand\">\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['other_ecu_brand'].touched && vehicleInformation.value.other_ecu_brand == ''\">\n                    Please enter ECU Brand.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>ECU Version</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"ecu_version\">\n                    <option disabled>Select ECU Version</option>\n                    <option *ngFor=\"let ecu of ecuBrandList?.versions_list\" [value]=\"ecu.ecu_version\">\n                      {{ecu.ecu_version}}\n                    </option>\n                  </select>\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['ecu_version'].touched && vehicleInformation.value.ecu_version == 'Select ECU Version'\">\n                    Please select ecu version.\n                  </small>\n                </div>\n                <div class=\"mt-3\" *ngIf=\"vehicleInformation.value.ecu_version == 'Add New'\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Ecu Version\" formControlName=\"other_ecu_version\">\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleInformation.controls['other_ecu_version'].touched && vehicleInformation.value.other_ecu_version == ''\">\n                    Please enter ECU Version.\n                  </small>\n                </div>\n              </div>\n              <div class=\"btnBox d-flex justify-content-center\">\n                <button class=\"reset\" (click)=\"formReset()\">Reset</button>\n                <button class=\"addVeh\" (click)=\"addVehicle()\">Add Vehicle</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Edit Vehicle Modal -->\n  <div class=\"modal\" id=\"chngeEmailModal2\">\n    <div class=\"v-align\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header downloadFile\">\n            <h4 class=\"modal-title\">Edit Vehicle</h4>\n            <button type=\"button\" id=\"closeEditmodal\" (click)=\"formReset();\" class=\"btn-close\"\n              data-bs-dismiss=\"modal\"></button>\n          </div>\n          <div class=\"modal-body addVehicle\">\n            <form [formGroup]=\"vehicleEditInformation\">\n              <div>\n                <label for=\"vehicle\" class=\"form-label\">Vehicle Type</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"vehicle_type\" (change)=\"getVehicleBrands('edit')\">\n                    <option disabled>Select Vehicle Type</option>\n                    <option *ngFor=\"let vehicleType of vehicleTypes\" [value]=\"vehicleType.id\"> {{vehicleType.name}}\n                    </option>\n                  </select>\n                </div>\n              </div>\n              <div>\n                <label>Vehicle Brand</label>\n                <div>\n                  <select class=\"form-select\" formControlName=\"brand_name\">\n                    <option disabled>Select Vehicle Brand</option>\n                    <option *ngFor=\"let brand of vehicleBrandList\" [value]=\"brand.id\">{{brand.brand_name}}</option>\n                  </select>\n                </div>\n              </div>\n              <div>\n                <label>Vehicle Model</label>\n                <div>\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Enter model name\" formControlName=\"model_name\">\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleEditInformation.controls['model_name'].touched && vehicleEditInformation.controls['model_name'].hasError('required')\">\n                    Please enter vehicle model.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>Fuel Type</label>\n                <div>\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Enter fuel type\" formControlName=\"fuel_type\">\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleEditInformation.controls['fuel_type'].touched && vehicleEditInformation.controls['fuel_type'].hasError('required')\">\n                    Please enter fuel type.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>ECU Brand</label>\n                <div>\n                  <input type=\"text\" class=\"form-control\" placeholder=\"ECU Brand\" formControlName=\"ecu_brand\">\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleEditInformation.controls['ecu_brand'].touched && vehicleEditInformation.controls['ecu_brand'].hasError('required')\">\n                    Please enter ECU Brand.\n                  </small>\n                </div>\n              </div>\n              <div>\n                <label>ECU Version</label>\n                <div>\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Ecu Version\" formControlName=\"ecu_version\">\n                  <small class=\"text-danger\"\n                    *ngIf=\"vehicleEditInformation.controls['ecu_version'].touched && vehicleEditInformation.controls['ecu_version'].hasError('required')\">\n                    Please enter ECU Version.\n                  </small>\n                </div>\n              </div>\n              <div class=\"btnBox d-flex justify-content-center\">\n                <button class=\"addVeh\" (click)=\"submitEditVehicle()\">Edit Vehicle</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { CustomerService } from '../../services/customer.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\n\n@Component({\n  selector: 'app-vehicle-list',\n  templateUrl: './vehicle-list.component.html',\n  styleUrls: ['./vehicle-list.component.scss']\n})\nexport class VehicleListComponent {\n\n  vehicleList: any = [];\n  showError: boolean = false;\n  vehicleTypes: any;\n  modelList: any;\n  vehicleInformation!: FormGroup;\n  vehicleEditInformation!: FormGroup;\n  ecuBrandList: any;\n  uniqueECUBrand: any = [];\n  unique: any = [];\n  vehicleBrandList: any;\n  page = 1;\n  pageSize = 10;\n  totalVehicle: any;\n  vehicleDetails: any;\n  newECU_versionList: any = [];\n  ecuBrandListNew: any = [];\n  searchKeywords = '';\n\n  sortField:any;\n  sortOrder:any;\n\n  userDetail: any = JSON.parse(localStorage.getItem('userdetails') || '{}')\n\n  constructor(private crud: CrudService, private formBuilder: FormBuilder, private toastr: ToastrService,\n    private customer: CustomerService) {\n    this.vehicleInformation = this.formBuilder.group({\n      vehicle_type: ['Select Vehicle Type', Validators.required],\n      brand_name: ['Select Vehicle Brand', Validators.required],\n      model_name: ['Select Vehicle Model', Validators.required],\n      other_model_name: [''],\n      ecu_brand: ['Select ECU Brand', Validators.required],\n      other_ecu_brand: [''],\n      ecu_version: ['Select ECU Version', Validators.required],\n      other_ecu_version: [''],\n      fuel_type: ['Select Fuel Type', Validators.required],\n      other_fuel_type: [''],\n    });\n    this.vehicleEditInformation = this.formBuilder.group({\n      vehicle_type: ['Select Vehicle Type', Validators.required],\n      brand_name: ['Select Vehicle Brand', Validators.required],\n      model_name: ['', Validators.required],\n      ecu_brand: ['', Validators.required],\n      ecu_version: ['', Validators.required],\n      fuel_type: ['', Validators.required],\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.getVehicleList();\n    this.getVehicleTypeList();\n    this.customer.getFileFormData().subscribe((res: any) => {\n      this.vehicleDetails = res.data;\n      this.vehicleDetails.fuel_type = this.vehicleDetails.fuel_type.filter((item: any) => {\n        if (item !== 'Other')\n          return item;\n      })\n      this.sortEle(this.vehicleDetails.fuel_type);\n    })\n  }\n\n  onSync() {\n    this.crud.get(requestUrl.syncVehicleData)\n    .subscribe({\n      next:(res) => this.toastr.success(res?.message),\n      error:err => this.toastr.error(err?.error?.error || err?.err || \"Something went Wrong\")\n    })\n  }\n\n  onKeywordUpdate(e:any) {\n    this.page = 1;\n    this.getVehicleList();\n  }\n\n  getVehicleList(field?:string,order?:string) {\n    let param = '';\n    if (this.searchKeywords)\n      param += `search=${this.searchKeywords}&`;\n    \n    param += `page=${this.page}&page_size=${this.pageSize}`;\n\n    if(field) {\n      this.sortField = field;\n      this.sortOrder = order;\n    }\n    if(this.sortField) {\n      param +=`&field=${this.sortField}&order_in=${this.sortOrder}`;\n    }\n\n    this.crud.getRequest(`${cusRequestUrl.getVehicleList}?${param}`).then((res: any) => {\n      if (res) {\n        this.updateVehicleListResponse(res);\n      }\n    })\n\n  }\n  updateVehicleListResponse(res:any){\n    this.vehicleList = res.data.results;\n    this.totalVehicle = res.data.count;\n    this.showError = this.vehicleList?.length > 0 ? false : true;\n  }\n  // getVehicleListBySort(field?: any, order?: any) {\n  //   if(field) {\n  //     this.sortField = field;\n  //     this.sortOrder = order;\n  //   }\n  //   let param = ''; \n  //   if(this.sortField) {\n  //     param =`field=${this.sortField}&order_in=${this.sortOrder}`;\n  //   }\n  //   this.getVehicleList(this.searchKeywords,param);\n  // }\n\n  // first step get vehicle type value\n  getVehicleTypeList() {\n    this.crud.getRequest(cusRequestUrl.getVehicleTypeList).then((res: any) => {\n      this.vehicleTypes = res;\n      this.sort(this.vehicleTypes, 'name');\n    })\n  }\n  // Second step get vehicle brand name\n  getVehicleBrands(type: any) {\n    let id = type == 'save' ? this.vehicleInformation.controls['vehicle_type'].value : this.vehicleEditInformation.controls['vehicle_type'].value;\n    this.crud.getRequest(`${cusRequestUrl.getVehicleBrandList}${id}`).then((res: any) => {\n      if (res) {\n        this.vehicleBrandList = res;\n        this.sort(this.vehicleBrandList, 'brand_name');\n        this.vehicleInformation.controls['brand_name'].setValue(this.vehicleBrandList[0].id)\n        this.getBrandModel();\n      }\n    })\n  }\n  // Third step get vehicle model name\n  getBrandModel() {\n    this.crud.getRequest(`${cusRequestUrl.getBrandModal}${this.vehicleInformation.controls['brand_name'].value}`).then((res: any) => {\n      if (res) {\n        this.modelList = res;\n        let addnew = {\n          \"id\": 0,\n          \"model_name\": \"Add New\",\n        }\n        this.modelList.push(addnew);\n        this.modelList = this.modelList.reverse();\n        this.modelList = this.sort(this.modelList, 'model_name')\n        this.moveCountryOnTop(this.modelList, addnew.model_name);\n        this.vehicleInformation.controls['model_name'].setValue(this.modelList[1].id)\n        this.getVehicleControlList();\n      }\n    })\n  }\n  moveCountryOnTop(arr: any, name: string) {\n    const index = arr.findIndex((item: any) => item.country === name);\n    if (index !== -1) {\n      const removedObject = arr.splice(index, 1)[0];\n      arr.unshift(removedObject);\n    }\n  }\n  // foruth step get ecu brand list\n  getVehicleControlList() {\n    this.crud.getRequest(`${cusRequestUrl.getEcuModelAndVersion}${this.vehicleInformation.controls['model_name'].value}`).then((res: any) => {\n      if (res) {\n        this.ecuBrandList = res.data;\n        let newArr = {\n          \"ecu_brand\": \"Add New\",\n        }\n        this.ecuBrandList.ecu_brands_list.push(newArr);\n        this.sort(this.ecuBrandList.ecu_brands_list,'ecu_brand')\n        this.moveCountryOnTop(this.ecuBrandList.ecu_brands_list, newArr.ecu_brand);\n        \n        // this.ecuBrandList.ecu_brands_list = this.ecuBrandList.ecu_brands_list.reverse();\n        let newArrVersion = {\n          \"ecu_version\": \"Add New\",\n        }\n        this.ecuBrandList.versions_list.push(newArrVersion);\n        // this.ecuBrandList.versions_list = this.ecuBrandList.versions_list.reverse();\n        this.sort(this.ecuBrandList.versions_list,'ecu_version')\n        this.moveCountryOnTop(this.ecuBrandList.versions_list, newArrVersion.ecu_version);\n      }\n    });\n  }\n  setFuelModel(isEdit?: boolean) {\n  }\n\n  sortEle(arr: any) {\n    return arr.sort((a: any, b: any) => {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n  }\n  sort(array: any, key: any) {\n    return array.sort((a: any, b: any) => {\n      var nameA = a[key].toUpperCase();\n      var nameB = b[key].toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  addVehicle() {\n    if (\n      this.vehicleInformation.value.vehicle_type != 'Select Vehicle Type' &&\n      this.vehicleInformation.value.brand_name != 'Select Vehicle Brand' &&\n      this.vehicleInformation.value.model_name != 'Select Vehicle Model' &&\n      this.vehicleInformation.value.ecu_brand != 'Select ECU Brand' &&\n      this.vehicleInformation.value.ecu_version != 'Select ECU Version' &&\n      this.vehicleInformation.value.fuel_type != 'Select Fuel Type') {\n      this.finalSubmit();\n\n    } else\n      this.markAllControlsAsTouched(this.vehicleInformation);\n  }\n  finalSubmit() {\n    let body = {\n      vehicle_type: '',\n      brand_name: this.vehicleInformation.value.brand_name,\n      model_name: this.vehicleInformation.value.model_name,\n      ecu_brand: this.vehicleInformation.value.ecu_brand,\n      ecu_version: this.vehicleInformation.value.ecu_version != 'Add New' ? this.vehicleInformation.value.ecu_version : this.vehicleInformation.value.other_ecu_version,\n      fuel_type: this.vehicleInformation.value.fuel_type,\n    }\n    this.vehicleTypes.forEach((element: any) => {\n      if (element.id == this.vehicleInformation.value.vehicle_type)\n        body.vehicle_type = element.name;\n    });\n    this.vehicleBrandList.forEach((element: any) => {\n      if (element.id == this.vehicleInformation.value.brand_name)\n        body.brand_name = element.brand_name;\n    });\n    // model name case\n    if (body.model_name != 0) {\n      this.modelList.forEach((element: any) => {\n        if (element.id == this.vehicleInformation.value.model_name)\n          body.model_name = element.model_name;\n      });\n    } else if (body.model_name == 0) {\n      body.model_name = this.vehicleInformation.value.other_model_name;\n    }\n    // ECU brand case\n    if (body.ecu_brand == 'Add New') {\n      body.ecu_brand = this.vehicleInformation.value.other_ecu_brand;\n\n    }\n\n    if ((body.model_name != '' && body.model_name != null && body.model_name != undefined) &&\n      (body.ecu_brand != '' && body.ecu_brand != null && body.ecu_brand != undefined) &&\n      body.ecu_version != '' && body.ecu_version != null && body.ecu_version != undefined) {\n      this.crud.postRequest(`${cusRequestUrl.addNewVehicle}`, body).then((res: any) => {\n        this.getVehicleList();\n        this.formReset();\n        document.getElementById('closecreatemodal')?.click();\n        this.toastr.success(res.message);\n      })\n    }\n    else {\n      this.markAllControlsAsTouched(this.vehicleInformation);\n    }\n  }\n  editVehicleId: any;\n  editVehicle(vehicle: any) {\n    this.vehicleTypes.forEach((element: any) => {\n      if (element.name == vehicle.vehicle_type) {\n        this.vehicleEditInformation.controls['vehicle_type'].setValue(element.id);\n        this.crud.getRequest(`${cusRequestUrl.getVehicleBrandList}${element.id}`).then((res: any) => {\n          if (res) {\n            this.vehicleBrandList = res;\n            this.vehicleBrandList.forEach((element: any) => {\n              if (element.brand_name == vehicle.vehicle_brand) {\n                this.vehicleEditInformation.controls['brand_name'].setValue(element.id);\n              }\n            });\n          }\n        })\n      }\n    });\n    this.vehicleEditInformation.controls['model_name'].setValue(vehicle.vehicle_model);\n    this.vehicleEditInformation.controls['fuel_type'].setValue(vehicle.fuel_type);\n    this.vehicleEditInformation.controls['ecu_brand'].setValue(vehicle.ecu_brand);\n    this.vehicleEditInformation.controls['ecu_version'].setValue(vehicle.ecu_version);\n    this.editVehicleId = vehicle.id;\n  }\n  submitEditVehicle() {\n    if (this.vehicleEditInformation.valid) {\n      let body = {\n        vehicle_type: '',\n        brand_name: this.vehicleEditInformation.value.brand_name,\n        model_name: this.vehicleEditInformation.value.model_name,\n        ecu_brand: this.vehicleEditInformation.value.ecu_brand,\n        ecu_version: this.vehicleEditInformation.value.ecu_version,\n        fuel_type: this.vehicleEditInformation.value.fuel_type,\n        id: this.editVehicleId\n      }\n      this.vehicleTypes.forEach((element: any) => {\n        if (element.id == this.vehicleEditInformation.value.vehicle_type)\n          body.vehicle_type = element.name;\n      });\n      this.vehicleBrandList.forEach((element: any) => {\n        if (element.id == this.vehicleEditInformation.value.brand_name)\n          body.brand_name = element.brand_name;\n      });\n      this.crud.putRequest(`${cusRequestUrl.addNewVehicle}`, body).then((res: any) => {\n        this.getVehicleList();\n        document.getElementById('closeEditmodal')?.click();\n        this.toastr.success(res.message);\n      })\n    } else\n      this.markAllControlsAsTouched(this.vehicleEditInformation);\n  }\n\n  markAllControlsAsTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markAllControlsAsTouched(control);\n      }\n    });\n  }\n  formReset() {\n    this.vehicleInformation.reset();\n    this.vehicleInformation.controls['vehicle_type'].setValue('Select Vehicle Type');\n    this.vehicleInformation.controls['brand_name'].setValue('Select Vehicle Brand');\n    this.vehicleInformation.controls['model_name'].setValue('Select Vehicle Model');\n    this.vehicleInformation.controls['ecu_brand'].setValue('Select ECU Brand');\n    this.vehicleInformation.controls['ecu_version'].setValue('Select ECU Version');\n    this.vehicleInformation.controls['fuel_type'].setValue('Select Fuel Type');\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.getVehicleList();\n  }\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Customer</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer/upload-csv\" routerLinkActive=\"active\">Upload CSV</a>\n        </li>\n\n    </ul>\n    <div class=\"ulist-div\">\n        <div>\n            <div class=\"u-add\">\n                <h2> Import Vehicle File</h2>\n            </div>\n            <hr />\n            <p>Import vehicle using  <a\n                    [href]=\"'../../../../assets/csv_sample_files/vehicleListSample.xlsx'\">sample\n                    csv or xlsx file.</a></p>\n            <div class=\"image-upload-wrap\">\n                <input type=\"file\" #takeInput accept=\".xlsx\" class=\"file-upload-input\" (change)=\"onFileChange($event)\">\n                <div class=\"drag-text\">\n                    <img src=\"assets/images/icon/exportCsv.png\" alt=\"upload csv\">\n                    <h4>\n                        <p *ngIf=\"!filename\">Drop or upload your file here</p>\n                        <span *ngIf=\"!filename\"> (.CSV, .XLSX formats supported) </span>\n                        <span *ngIf=\"filename\"> {{filename |titlecase }} File Uploaded </span>\n                    </h4>\n                </div>\n            </div>\n            <div class=\"alert alert-primary\">\n                <i class=\"fa fa-info-circle\"></i><span>\n                    To make sure every record is imported, check if your file has data in\n                    <strong class=\"text-primary\"> these mandatory fields <i class=\"fa fa-info-circle\"\n                            style=\"cursor: pointer;\"></i></strong></span>\n            </div>\n            <div class=\"btnDiv\">\n                <button class=\"sbtn\" routerLink=\"/admin/vehicle-management/vehicle-list\">Cancel</button>\n                <button class=\"fbtn\" [disabled]=\"filename == '' || filename == undefined\" (click)=\"goToImportFile()\">Next</button>\n            </div>\n        </div>\n    </div>\n\n\n</section>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Customer</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer/upload-csv\" routerLinkActive=\"active\">Upload CSV</a>\n        </li>\n    </ul>\n\n    <div class=\"ulist-div\">\n        <div>\n            <div class=\"u-add\">\n                <h2>\n                    <a *ngIf=\"csvUserType == 'business'\" routerLink=\"/admin/vehicle-management/upload-vehicle-csv\"><i\n                            aria-hidden=\"true\" class=\"fa fa-long-arrow-left\"></i>&nbsp;Import CSV</a>\n                </h2>\n            </div>\n            <hr />\n        </div>\n\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th *ngFor=\"let head of tableHeader\"> {{head.headTag}} </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let individual of customerArr; let i=index;\">\n                        <td> {{i+1}} </td>\n                        <td>\n                            <p class=\"m-0\" [ngStyle]=\"{'color': individual.vehicle_type_error==true ? 'red' : ''}\">\n                                {{individual.vehicle_type}} </p>\n                            <span *ngIf=\"individual.vehicle_type_error\" style=\"color:#e55a5a;font-size:14px;\">\n                                {{individual.vehicle_type_msg || ''}} </span>\n                        </td>\n                        <td>\n                            <p class=\"m-0\" [ngStyle]=\"{'color': individual.ecu_type_error==true ? 'red' : ''}\">\n                                {{individual.ecu_type}} </p>\n                            <span *ngIf=\"individual.ecu_type_error\" style=\"color:#e55a5a;font-size:14px;\">\n                                {{individual.ecu_type_msg || ''}} </span>\n                        </td>\n                        <td>\n                            <p class=\"m-0\" [ngStyle]=\"{'color': individual.brand_name_error==true ? 'red' : ''}\">\n                                {{individual.brand_name}} </p>\n                            <span *ngIf=\"individual.brand_name_error\" style=\"color:#e55a5a;font-size:14px;\">\n                                {{individual.brand_name_msg || ''}} </span>\n                        </td>\n                        <td>\n                            <p class=\"m-0\" [ngStyle]=\"{'color': individual.model_name_error==true ? 'red' : ''}\">\n                                {{individual.model_name}} </p>\n                            <span *ngIf=\"individual.model_name_error\" style=\"color:#e55a5a;font-size:14px;\">\n                                {{individual.model_name_msg || ''}} </span>\n                        </td>\n                        <td>\n                            <p class=\"m-0\" [ngStyle]=\"{'color': individual.fuel_type_error==true ? 'red' : ''}\">\n                                {{individual.fuel_type}} </p>\n                            <span *ngIf=\"individual.fuel_type_error\" style=\"color:#e55a5a;font-size:14px;\">\n                                {{individual.fuel_type_msg || ''}} </span>\n                        </td>\n                        <td>\n                            <p class=\"m-0\" [ngStyle]=\"{'color': individual.ecu_brand_error==true ? 'red' : ''}\">\n                                {{individual.ecu_brand}} </p>\n                            <span *ngIf=\"individual.ecu_brand_error\" style=\"color:#e55a5a;font-size:14px;\">\n                                {{individual.ecu_brand_msg || ''}} </span>\n                        </td>\n                        <td>\n                            <p class=\"m-0\" [ngStyle]=\"{'color': individual.ecu_version_error==true ? 'red' : ''}\">\n                                {{individual.ecu_version}} </p>\n                            <span *ngIf=\"individual.ecu_version_error\" style=\"color:#e55a5a;font-size:14px;\">\n                                {{individual.ecu_version_msg || ''}} </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <button class=\"btn btn-primary upload-btn\" [disabled]=\"isUploadDisable\" (click)=\"uploadCsvFile()\">Upload .CSV\n            File</button>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VehicleManagementComponent } from './vehicle-management.component';\nimport { VehicleCreditComponent } from './vehicle-credit/vehicle-credit.component';\nimport { VehicleManageComponent } from './vehicle-manage/vehicle-manage.component';\nimport { VehicleListComponent } from './vehicle-list/vehicle-list.component';\nimport { UploadVehicleCsvComponent } from './upload-vehicle-csv/upload-vehicle-csv.component';\nimport { ImportVehicleCsvComponent } from './import-vehicle-csv/import-vehicle-csv.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: VehicleManagementComponent, children: [\n      { path: 'vehicle-credit', component: VehicleCreditComponent },\n      { path: 'vehicle-manage', component: VehicleManageComponent },\n      { path: 'vehicle-list', component: VehicleListComponent },\n      { path: 'upload-vehicle-csv', component: UploadVehicleCsvComponent },\n      { path: 'import-vehicle-csv/:file', component: ImportVehicleCsvComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VehicleManagementRoutingModule { }\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { read, utils } from 'xlsx';\n\n@Component({\n  selector: 'app-upload-vehicle-csv',\n  templateUrl: './upload-vehicle-csv.component.html',\n  styleUrls: ['./upload-vehicle-csv.component.scss']\n})\nexport class UploadVehicleCsvComponent {\n  jsonData: any;\n  filename: any;\n  isFile: boolean = false;\n  constructor( private router: Router, private _Activatedroute: ActivatedRoute) {\n  }\n  ngOnInit(){ }\n  onFileChange($event: any) {\n    this.isFile = false;\n    const files = $event.target.files;\n    if (files.length) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        const wb = read(event.target.result);\n        const sheets = wb.SheetNames;\n\n        if (sheets.length) {\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n          this.jsonData = rows;\n          this.filename = file.name;\n        }\n      }\n      reader.readAsArrayBuffer(file);\n    }\n  }\n\n  goToImportFile() {\n    if (typeof (this.jsonData) == 'undefined') {\n      this.isFile = true;\n    }\n    else {\n      this.router.navigate(['/admin/vehicle-management/import-vehicle-csv', JSON.stringify(this.jsonData)]);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-import-vehicle-csv',\n  templateUrl: './import-vehicle-csv.component.html',\n  styleUrls: ['./import-vehicle-csv.component.scss']\n})\nexport class ImportVehicleCsvComponent {\n  jsonData: any;\n  customerArr: any = [];\n  isUploadDisable: boolean = false;\n\n  editphoneerror: boolean = true;\n  tableHeader: any;\n  csvUserType: any;\n\n  constructor(private crud: CrudService, private _Activatedroute: ActivatedRoute,\n    private toastr: ToastrService, private router: Router ) {\n    this.jsonData = JSON.parse(this._Activatedroute.snapshot.paramMap.get(\"file\") || '{}');\n  }\n\n  ngOnInit(): void {\n    this.tableHeader = [\n      { headTag: 'Vehicle Type' },\n      { headTag: 'ECU Type' },\n      { headTag: 'Brand' },\n      { headTag: 'Model' },\n      { headTag: 'Fuel' },\n      { headTag: 'Ecu Brand' },\n      { headTag: 'Ecu Version' },\n    ]\n    this.jsonData.forEach((value: any) => {\n      if (value != this.jsonData.length) {\n        \n        let data = {\n          \"vehicle_type\": value['Vehicle Type'],\n          \"vehicle_type_error\": typeof (value['Vehicle Type']) == 'undefined' ? true : false,\n          \"vehicle_type_msg\": 'Required',\n          \"ecu_type\": value['ECU Type'],\n          \"ecu_type_error\": typeof (value['ECU Type']) == 'undefined' ? true : false,\n          \"ecu_type_msg\": 'Required',\n          \"brand_name\": value['Brand'],\n          \"brand_name_error\": typeof (value['Brand']) == 'undefined' ? true : false,\n          \"brand_name_msg\": 'Required',\n          \"model_name\": value['Model'],\n          \"model_name_error\": typeof (value['Model']) == 'undefined' ? true : false,\n          \"model_name_msg\": 'Required',\n          \"fuel_type\": value['Fuel'],\n          \"fuel_type_error\": typeof (value['Fuel']) == 'undefined' ? true : false,\n          \"fuel_type_msg\": 'Required',\n          \"ecu_brand\": value['Ecu Brand'],\n          \"ecu_brand_error\": typeof (value['Ecu Brand']) == 'undefined' ? true : false,\n          \"ecu_brand_msg\": 'Required',\n          \"ecu_version\": value['Ecu Version'],\n          \"ecu_version_error\": typeof (value['Ecu Version']) == 'undefined' ? true : false,\n          \"ecu_version_msg\": 'Required',\n        };\n\n        if (data.vehicle_type_error || data.ecu_type_error || data.brand_name_error || data.ecu_version_error\n          || data.model_name_error || data.fuel_type_error || data.ecu_brand_error) {\n          this.isUploadDisable = true;\n        }\n        this.customerArr.push(data);\n      }\n    });\n\n  }\n\n  uploadCsvFile() {\n    let body = {\n      data: this.customerArr\n    }\n    this.crud.csvPostRequest(requestUrl.addVehicleViaCSV, body).then((res: any) => {\n      if (res.error) {\n        this.customerArr = res.error.data;\n      }\n      else {\n        this.toastr.success(res.message);\n        this.router.navigateByUrl('admin/vehicle-management/vehicle-list');\n      }\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VehicleManagementRoutingModule } from './vehicle-management-routing.module';\nimport { VehicleManagementComponent } from './vehicle-management.component';\nimport { VehicleCreditComponent } from './vehicle-credit/vehicle-credit.component';\nimport { VehicleManageComponent } from './vehicle-manage/vehicle-manage.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { VehicleListComponent } from './vehicle-list/vehicle-list.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { UploadVehicleCsvComponent } from './upload-vehicle-csv/upload-vehicle-csv.component';\nimport { ImportVehicleCsvComponent } from './import-vehicle-csv/import-vehicle-csv.component';\nimport { SharedComponentsModule } from 'src/app/shared-components/shared-components.module';\n\n\n@NgModule({\n  declarations: [\n    VehicleManagementComponent,\n    VehicleCreditComponent,\n    VehicleManageComponent,\n    VehicleListComponent,\n    UploadVehicleCsvComponent,\n    ImportVehicleCsvComponent,\n  ],\n  imports: [\n    CommonModule,\n    VehicleManagementRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxPaginationModule,\n    SharedComponentsModule,\n  ]\n})\nexport class VehicleManagementModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, TitleCasePipe } from '@angular/common';\nimport { SortButtonComponent } from './sort-button/sort-button.component';\nimport { SmartSearchComponent } from './smart-search/smart-search.component';\nimport { LoaderComponent } from './loader/loader.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { SharedPipeModule } from '../pipe/shared-pipe.module';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonComponent } from './button/button.component';\nimport { VehicleDetailsComponent } from './vehicle-details/vehicle-details.component';\n\n\n@NgModule({\n  declarations: [SortButtonComponent, SmartSearchComponent, LoaderComponent, TimelineComponent, VehicleDetailsComponent, ButtonComponent],\n  imports: [\n    CommonModule,\n    SharedPipeModule,\n    CommonModule,\n    FormsModule,\n  ],\n  exports:[SortButtonComponent, SmartSearchComponent, LoaderComponent, TimelineComponent, VehicleDetailsComponent, ButtonComponent],\n  providers:[TitleCasePipe]\n})\nexport class SharedComponentsModule { }\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'sort-button',\n  templateUrl: './sort-button.component.html',\n  styleUrls: ['./sort-button.component.scss']\n})\nexport class SortButtonComponent {\n@Output() onSort = new EventEmitter<string>();\n\n\n}\n","<div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n    <i class=\"fa fa-chevron-up pointer\" (click)=\"onSort.emit('desc')\"\n        aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down pointer\"\n        (click)=\"onSort.emit('asc')\" aria-hidden=\"true\"></i>\n</div>"],"x_google_ignoreList":[]}