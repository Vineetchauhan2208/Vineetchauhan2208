{"version":3,"file":"650.e14180a7d62527c2.js","mappings":"+NAOO,IAAMA,EAAc,MAArB,MAAOA,EAGXC,YAAoBC,gBADpBC,aAAUC,WAIV,CAGAC,YAAYC,GAEV,OAAOH,KAAKD,MAAMK,IAAIJ,KAAKK,QAAQ,wBAAyB,CAAEF,UAChE,CAEAG,cAAcC,GAEZ,OAAOP,KAAKD,MAAMS,KAAKR,KAAKK,QAAQ,yBAAyBE,EAC/D,CAEAE,cAAcF,EAASG,GAErB,OAAOV,KAAKD,MAAMY,IAAI,GAAGX,KAAKK,gCAAgCK,KAAMH,EACtE,CAEAK,cAAcF,GAEZ,OAAOV,KAAKD,MAAMc,OAAO,GAAGb,KAAKK,gCAAgCK,KACnE,CAACI,kDA3BUjB,GAAckB,oDAAdlB,EAAcmB,QAAdnB,EAAc,qBAFb,gBAEDA,CAAc,yFCmBXoB,cAA8I,QACrIA,SAAwBA,QAC7BA,cAAI,WAAJA,CAAI,UAGyEA,qEAASA,sBAAoB,GAAGA,gBAAwCA,QAC7IA,gBAAgFA,qEAASA,sBAAoB,GAAEA,gBAA4CA,aAAI,6BALlKA,0DASTA,cAAoC,OAC7BA,6BAAiBA,mDAIhCA,kCACAA,+DAAcA,4BAAwB,GAAEA,+BAoBxBA,oBACIA,yCACJA,+BA4BAA,oBACIA,yCACJA,oFClFjB,IAAMC,EAAiB,MAAxB,MAAOA,EAQXpB,YACUqB,EACAC,EACAC,EACAC,EACAC,GAJAvB,uBACAA,4BACAA,qBACAA,UACAA,cAoEVA,kBAAoB,GACpBA,UAAO,EACPA,cAAW,GACXA,WAAQ,GAnENA,KAAKqB,cAAcG,SAAS,qBAE5BxB,KAAKyB,kBAAoBzB,KAAKsB,GAAGI,MAAM,CACrCC,KAAK,CAAC,GAAG,CAACC,kBAGZ5B,KAAK6B,kBAAoB7B,KAAKsB,GAAGI,MAAM,CACrCC,KAAK,CAAC,GAAG,CAACC,iBAId,CAEAE,WAEE9B,KAAK+B,sBAEP,CAGAC,0BAEGhC,KAAKoB,qBAAqBa,mBAAmBjC,KAAKyB,kBAAkBS,OAAOC,UAAWC,IACrFpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAQ,GAAI,CAAEC,QAAS,MAC/CvC,KAAK+B,uBACL/B,KAAKyB,kBAAkBe,QACvBC,SAASC,eAAe,qBAAqBC,OAAK,EAElDC,IACA5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAO,GAAI,CAAEP,QAAS,KAAM,EAE5D,CAGAQ,WAAWC,GAEThD,KAAKiD,WAAaD,EAAQtC,GAC1BV,KAAK6B,kBAAkBqB,WAAW,CAACvB,KAAOqB,EAAQrB,MACpD,CAEAf,gBAEEZ,KAAKoB,qBAAqB+B,mBAAmBnD,KAAKiD,YAAYd,UAAWC,IACvEpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAQ,GAAI,CAAEC,QAAS,MAC/CvC,KAAK+B,uBACLU,SAASC,eAAe,qBAAqBC,OAAK,EAGtD,CAEAS,0BAEKpD,KAAKoB,qBAAqBiC,mBAAmBrD,KAAK6B,kBAAkBK,MAAMlC,KAAKiD,YAAYd,UAAWC,IACrGpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAQ,GAAI,CAAEC,QAAS,MAC/CvC,KAAK+B,uBACL/B,KAAK6B,kBAAkBW,QACvBC,SAASC,eAAe,eAAeC,OAAK,EAE5CC,IACA5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAO,GAAI,CAAEP,QAAS,KAAM,EAE9D,CAQAe,iBAAiBC,EAAoBC,EAAcC,GACjD,IAAItD,EAAc,GAClB,OAAIoD,IACFpD,EAAOuD,OAAYH,GAEjBC,IACFrD,EAAOqD,KAAUA,GAEfC,IACFtD,EAAOwD,UAAeF,GAEjBtD,CACT,CAEA4B,uBACE,MAAM5B,EAASH,KAAKsD,iBAAiBtD,KAAK4D,MAAM5D,KAAKwD,KAAMxD,KAAKyD,UAChEzD,KAAKoB,qBAAqByC,gBAAgB1D,GAAQgC,UAAWC,IAC1DpC,KAAK8D,aAAe1B,EAAI7B,KAAKwD,QAC7B/D,KAAKgE,kBAAoB5B,EAAI7B,KAAK0D,OAGnCrB,IACA5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAO,GAAI,CAAEP,QAAS,KAAM,EAG5D,CAEA2B,iBAAiBC,GACfnE,KAAKwD,KAAOW,EACZnE,KAAK+B,sBACP,CAEAqC,QAAQC,GACNrE,KAAK4D,MAAOS,EACZrE,KAAKwD,KAAO,EACZxD,KAAK+B,sBACP,CAACjB,kDA1HUI,GAAiBH,8FAAjBG,EAAiBoD,g6DDZ9BrD,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAA8BA,6BAAiBA,UAC3EA,gBAA4B,SAAwDA,gCAAmBA,YAE3GA,kBAAuB,WAAvBA,CAAuB,SAEXA,8BAAiBA,QACrBA,kBAAyB,SAAzBA,CAAyB,iBAEaA,2DAASA,yBAAwB,GAA/DA,UAEJA,gBAAK,WAC4EA,mBACjBA,oBAAOA,cAI/EA,eACAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAGZA,qBAAQA,QACZA,eAAIA,oBAAOA,UAEfA,6CAUAA,wBAGJA,UAEJA,yCAEJA,UAIJA,mBAA6C,YAA7CA,CAA6C,YAA7CA,CAA6C,cAGMA,mCAAYsD,2BAAyB,GACxEtD,mBAA0B,YACEA,qCAAwBA,QAChDA,sBACJA,QACDA,eACCA,mBAAwB,YAAxBA,CAAwB,eAEyBA,sBAASA,QAClDA,qBAGAA,2BAGJA,UAEJA,mBAA0B,gBACqEA,mBAAMA,QACjGA,sBAAqFA,mBAAMA,kBAQ/GA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,cAGEA,mCAAYsD,2BAAyB,GACxEtD,mBAA0B,YACEA,mCAAsBA,QAC9CA,sBACJA,QACDA,eACCA,mBAAwB,YAAxBA,CAAwB,eAEyBA,qBAAQA,QACjDA,qBAGAA,2BAGJA,UAEJA,mBAA0B,gBAC+CA,mBAAMA,QAC3EA,sBAAqFA,iBAAIA,kBAQ7GA,mBAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAIFA,2DAA+CA,QACvEA,sBACFA,QACAA,mBAA0B,gBACmEA,mBAAMA,QACjGA,sBAAyCA,gCAASsD,iBAAe,GAAGtD,mBAAMA,eAAS,OA1FpDA,yGAUpBA,gDAKSA,gDASZA,gDAUMA,mHAEiCA,uHAOSA,uDAWhDA,gDAUMA,mHAEiCA,uHAOSA,s/TCvFrDC,CAAiB,mDCGVD,gBAA+GA,kBACxFA,mBAAOA,iDAiBtBA,gBACIA,6EAASA,4BAA0B,GAAEA,gBAAuCA,iDAChFA,gBACIA,+GAAwCA,gBAA4CA,kCARpGA,cAA6D,QACpDA,8BAAmDA,QACxDA,cAAKA,SAA0BA,QAC/BA,cAAI,YAEIA,sBAEAA,sBAEJA,gDARCA,iFACAA,qCAGOA,sEAEAA,6FAOpBA,gBAA6DA,8BAAiBA,kCAiB1DA,qBACIA,8BACYA,kCAF2BA,4BACvCA,uFAGRA,oBAEIA,yCACJA,iDAcIA,qBAA0DA,yEAASA,wBAAe,GAAEA,gBAElCA,kCAT1DA,kBACgC,WADhCA,CACgC,YAGpBA,oBAEJA,QACAA,2BAGJA,gCAR0BA,kCAKbA,qDA+CTA,qBACIA,8BAAgDA,kCADTA,4BACvCA,uFAERA,oBAEIA,oCACJA,iDAcIA,qBAA0DA,yEAASA,kBAAS,GAAEA,gBAE5BA,kCAT1DA,kBAC0B,WAD1BA,CAC0B,YAGdA,oBAEJA,QACAA,2BAGJA,gCAR0BA,kCAKbA,4BCxIlC,IAAMuD,EAAqB,MAA5B,MAAOA,EA6BX1E,YACUwB,EACAmD,EACAC,EAA2BrD,GAF3BrB,UACAA,oBACAA,YAA2BA,qBA/BrCA,mBAAqB,CACnB,CACE2E,OAAU,YACVC,WAAc,WACdC,KAAQ,YAEV,CACEF,OAAU,YACVC,WAAc,aACdC,KAAQ,eAEV,CACEF,OAAU,YACVC,WAAc,SACdC,KAAQ,WAIZ7E,sBAAmBA,KAAKsB,GAAGI,MAAM,CAC/BoD,UAAW,CAAC,GAAI,CAAClD,gBACjBiD,KAAM,CAAC,IACPE,MAAO/E,KAAKsB,GAAG0D,MAAM,MAGvBhF,UAAO,EACPA,cAAW,GACXA,WAAQ,GA8BRA,4BAAyBA,KAAKsB,GAAGI,MAAM,CACrCuD,OAAQ,CAAC,GAAI,CAACrD,gBACdiD,KAAM,CAAC,IACPK,YAAalF,KAAKsB,GAAG0D,MAAM,MA3B3BhF,KAAKqB,cAAcG,SAAS,iBAC5BxB,KAAKmF,YAAcnF,KAAKyE,aAAaW,gBACvC,CAEAtD,WACE9B,KAAKqF,iBACP,CACIC,4BACF,OAAOtF,KAAKuF,iBAAiBnF,IAAI,QACnC,CACA2E,QACE,OAAO/E,KAAKsB,GAAGI,MAAM,CACnB8D,OAAQxF,KAAKsB,GAAGmE,QAAQ,KAE5B,CACAC,aACE1F,KAAKsF,sBAAsBK,KAAK3F,KAAK+E,QACvC,CACAa,OAAOC,GACL7F,KAAKsF,sBAAsBQ,SAASD,EACtC,CASIE,6BACF,OAAO/F,KAAKgG,uBAAuB5F,IAAI,cACzC,CACA6F,cACE,OAAOjG,KAAKsB,GAAGI,MAAM,CACnB8D,OAAQxF,KAAKsB,GAAGmE,QAAQ,KAE5B,CACAS,mBACElG,KAAK+F,uBAAuBJ,KAAK3F,KAAK+E,QACxC,CACAoB,aAAaN,GACX7F,KAAK+F,uBAAuBD,SAASD,EACvC,CAEAR,kBACE,MAAMlF,EAASH,KAAKsD,iBAAiBtD,KAAK4D,MAAO5D,KAAKwD,KAAMxD,KAAKyD,UACjEzD,KAAK0E,KAAKW,gBAAgBlF,GAAQgC,UAAWC,IAC3CpC,KAAKoG,iBAAmBhE,EAAI7B,KAAKwD,SAErC,CACAT,iBAAiBC,EAAqBC,EAAcC,GAClD,IAAItD,EAAc,GAClB,OAAIoD,IACFpD,EAAOuD,OAAYH,GAEjBC,IACFrD,EAAOqD,KAAUA,GAEfC,IACFtD,EAAOwD,UAAeF,GAEjBtD,CACT,CACAkG,iBAAiB9F,GACf,IAAI0D,EAAQ,EAEZjE,KAAKsG,qBAAuB/F,EAC5B,IAAIgG,EAAWvG,KAAKsG,qBAAqBd,OAAOgB,MAAM,KACtDxG,KAAKuF,iBAAiBkB,SAAS3B,UAAU4B,SAAS1G,KAAKsG,qBAAqBrB,QAC5EsB,EAASI,QAASC,IAChB5G,KAAK0F,YAAU,GAEjB1F,KAAKuF,iBAAiBkB,SAAS1B,MAAM0B,SAASE,QAASC,IACrDA,EAAIH,SAASjB,OAAOkB,SAASH,EAAStC,IACtCA,KAIJ,CACA4C,iBAAiBC,GAEf,GAAa,SAATA,EAAiB,CACnB,IAAIC,EAAO,CACT9B,OAAUjF,KAAKuF,iBAAiBrD,MAAM4C,UACtCU,OAAU,GACVX,KAAQ,IAEV7E,KAAKuF,iBAAiBrD,MAAM6C,OAAO4B,QAASK,IAC1CD,EAAKvB,OAASuB,EAAKvB,OAAOyB,cAAgBD,EAAKxB,OAAS,MAE1DuB,EAAKvB,OAASuB,EAAKvB,OAAO0B,UAAU,EAAGH,EAAKvB,OAAO2B,OAAS,GAC5DnH,KAAKoH,cAAcT,QAASC,IACtBA,EAAIhC,aAAemC,EAAK9B,SAC1B8B,EAAKlC,KAAO+B,EAAI/B,QAEpB7E,KAAK0E,KAAK2B,iBAAiBrG,KAAKsG,qBAAqB5F,GAAIqG,GAAM5E,UAAWC,IACxEpC,KAAKqF,kBACLrF,KAAKuF,iBAAiB/C,OAAK,EAC5B,SAEe,WAATsE,EAAmB,CAC1B,IAAIC,EAAO,CACT9B,OAAUjF,KAAKgG,uBAAuB9D,MAAM+C,OAC5CO,OAAU,GACVX,KAAQ7E,KAAKgG,uBAAuB9D,MAAM2C,MAE5C7E,KAAKgG,uBAAuB9D,MAAMgD,aAAayB,QAASK,IACtDD,EAAKvB,OAASuB,EAAKvB,OAAOyB,cAAgBD,EAAKxB,OAAS,MAE1DuB,EAAKvB,OAASuB,EAAKvB,OAAO0B,UAAU,EAAGH,EAAKvB,OAAO2B,OAAS,GAC5DnH,KAAKoH,cAAcT,QAASC,IACtBA,EAAIhC,aAAemC,EAAK9B,SAC1B8B,EAAKlC,KAAO+B,EAAI/B,QAEpB7E,KAAK0E,KAAK2C,mBAAmBN,GAAM5E,UAAWC,IAC5CpC,KAAKgG,uBAAuBxD,QAC5BxC,KAAKqF,iBAAe,EACrB,KAGe,WAATyB,GACP9G,KAAK0E,KAAK4C,mBAAmBtH,KAAKsG,qBAAqB5F,IAAIyB,UAAWC,IACpEpC,KAAKqF,iBAAe,EAG1B,CACAjB,QAAQC,GACNrE,KAAK4D,MAAQS,EACbrE,KAAKwD,KAAO,EACZxD,KAAKqF,iBACP,CAACvE,kDAnKU0D,GAAqBzD,oFAArByD,EAAqBF,qyFDXlCrD,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAA8BA,6BAAiBA,UAC3EA,gBAA4B,SAAsEA,0BACnFA,YAEnBA,kBAAuB,WAAvBA,CAAuB,SAEXA,8BAAiBA,QACrBA,kBAAyB,SAAzBA,CAAyB,iBAEaA,2DAASA,yBAAwB,GAA/DA,UAEJA,gBACIA,uBAEJA,YAGRA,eACAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAGZA,mBAAMA,QACVA,eAAIA,sBAASA,QACbA,eAAIA,mBAAMA,UAEdA,yBAaJA,QACAA,uBACJA,UAGJA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAITA,iCAAoBA,QAC5CA,sBACJA,QACAA,mBAAwB,aAAxBA,CAAwB,YAAxBA,CAAwB,eAG4BA,wBAAWA,QACnDA,sBAEIA,4BAGJA,QACAA,2BAIJA,QACAA,mBAAuB,SACfA,qBAAQA,QACZA,sBAAQA,gCAASsD,oBAAkB,GAAEtD,mBACjBA,gBAAGA,UAE3BA,yBAYJA,UAEJA,mBAA0B,gBAC+CA,mBAAMA,QAC3EA,sBACIA,gCAASsD,mBAAiB,SAAS,GAA8CtD,iBAAIA,gBAMzGA,mBAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAIIA,2DAA8CA,QACtEA,sBACJA,QACAA,mBAA0B,gBAEMA,mBAAMA,QAClCA,sBACIA,gCAASsD,mBAAiB,SAAS,GAAEtD,mBAAMA,gBAO/DA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAITA,+BAAkBA,QAC1CA,sBACJA,QACAA,mBAAwB,aAAxBA,CAAwB,YAAxBA,CAAwB,eAG4BA,wBAAWA,QACnDA,sBAEIA,4BAEJA,QACAA,2BAIJA,QACAA,mBAAuB,SACfA,qBAAQA,QACZA,sBAAQA,gCAASsD,cAAY,GAAEtD,mBACXA,gBAAGA,UAE3BA,yBAYJA,UAEJA,mBAA0B,gBAC+CA,mBAAMA,QAC3EA,sBAA8CA,gCAASsD,mBAAiB,OAAO,GAAEtD,iBAAIA,iBAAS,OA7I1FA,uEAaiBA,8CAczBA,oFAYkCA,qDAIlBA,gIACyBA,0CAKxBA,qIASgBA,4DAiBYA,4DAgCnCA,gDAIMA,0HACyBA,0CAIxBA,+HASgBA,gwWCjIpCuD,CAAqB,2BCGdvD,gBAAoIA,kBACxEA,mBAAOA,iDAkB3DA,gBACIA,6EAASA,sBAAoB,GAAEA,gBAAuCA,iDAC1EA,gBACIA,6EAASA,sBAAoB,GAAEA,gBAA4CA,kCAT3FA,cAC8I,QACrIA,SAAwBA,QAC7BA,cAAI,YAGIA,sBAEAA,sBAEJA,gDARCA,mCAIOA,sEAEAA,6FAKhBA,iBACIA,+BACJA,iDAGRA,kCACqBA,+DAAcA,4BAAwB,GAAEA,+BAoB7CA,oBAEIA,yCACJA,+BA2BAA,oBAEIA,yCACJA,qFCtFjB,IAAMsG,GAAoB,MAA3B,MAAOA,EAOXzH,YAAoBqB,EAAyCsD,EACnDrD,EAAuDC,EACvDC,EAAyBC,GAFfvB,uBAAyCA,oBACnDA,4BAAuDA,qBACvDA,UAAyBA,cANnCA,gBAAqB,EA8DrBA,kBAAoB,GACpBA,UAAO,EACPA,cAAW,GACXA,WAAQ,GA1DNA,KAAKqB,cAAcG,SAAS,gBAC5BxB,KAAKyB,kBAAoBzB,KAAKsB,GAAGI,MAAM,CACrCC,KAAM,CAAC,GAAI,CAACC,kBAEd5B,KAAK6B,kBAAoB7B,KAAKsB,GAAGI,MAAM,CACrCC,KAAM,CAAC,GAAI,CAACC,kBAEd5B,KAAKmF,YAAcnF,KAAKyE,aAAaW,gBACvC,CAEAtD,WACE9B,KAAK+B,sBACP,CAGAC,0BACEhC,KAAKoB,qBAAqBa,mBAAmBjC,KAAKyB,kBAAkBS,OAAOC,UAAWC,IACpFpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+B,uBACL/B,KAAKyB,kBAAkBe,QACvBC,SAASC,eAAe,qBAAqBC,OAAK,EAEjDC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAGAQ,WAAWC,GACThD,KAAKiD,WAAaD,EAAQtC,GAC1BV,KAAK6B,kBAAkBqB,WAAW,CAAEvB,KAAQqB,EAAQrB,MACtD,CAEAf,gBACEZ,KAAKoB,qBAAqB+B,mBAAmBnD,KAAKiD,YAAYd,UAAWC,IACvEpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+B,uBACLU,SAASC,eAAe,qBAAqBC,OAAK,EAGtD,CAEAS,0BACEpD,KAAKoB,qBAAqBiC,mBAAmBrD,KAAK6B,kBAAkBK,MAAOlC,KAAKiD,YAAYd,UAAWC,IACrGpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+B,uBACL/B,KAAK6B,kBAAkBW,QACvBC,SAASC,eAAe,eAAeC,OAAK,EAE3CC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAQAe,iBAAiBC,EAAqBC,EAAcC,GAClD,IAAItD,EAAc,GAClB,OAAIoD,IACFpD,EAAOuD,OAAYH,GAEjBC,IACFrD,EAAOqD,KAAUA,GAEfC,IACFtD,EAAOwD,UAAeF,GAEjBtD,CACT,CAEA4B,uBACE,MAAM5B,EAASH,KAAKsD,iBAAiBtD,KAAK4D,MAAO5D,KAAKwD,KAAMxD,KAAKyD,UACjEzD,KAAKoB,qBAAqByC,gBAAgB1D,GAAQgC,UAAWC,IAC3DpC,KAAK8D,aAAe1B,EAAI7B,KAAKwD,QAC7B/D,KAAKwH,UAAwC,GAA5BxH,KAAK8D,aAAaqD,OACnCnH,KAAKgE,kBAAoB5B,EAAI7B,KAAK0D,OAGjCrB,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAG/D,CAEA2B,iBAAiBC,GACfnE,KAAKwD,KAAOW,EACZnE,KAAK+B,sBACP,CAEAqC,QAAQC,GACNrE,KAAK4D,MAAQS,EACbrE,KAAKwD,KAAO,EACZxD,KAAK+B,sBACP,CAACjB,kDA3GUyG,GAAoBxG,yGAApBwG,EAAoBjD,0uEDbjCrD,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAA8BA,6BAAiBA,UAC3EA,gBAA4B,SAAyDA,0BAAYA,YAErGA,kBAAuB,WAAvBA,CAAuB,SAEXA,yBAAYA,QAChBA,kBAAyB,SAAzBA,CAAyB,iBAEaA,2DAASA,yBAAwB,GAA/DA,UAEJA,gBACIA,uBAEJA,YAGRA,eACAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAGZA,yBAAYA,QAChBA,eAAIA,oBAAOA,UAGfA,6CAaAA,wBAGJA,UAEJA,yCAEJA,UAIJA,mBAA6C,YAA7CA,CAA6C,YAA7CA,CAA6C,cAGKA,mCAAYsD,2BAAyB,GACvEtD,mBAA0B,YACEA,gCAAmBA,QAC3CA,sBACJA,QACAA,eACAA,mBAAwB,YAAxBA,CAAwB,eAEwBA,yBAAYA,QACpDA,qBAGAA,2BAIJA,UAEJA,mBAA0B,gBAEMA,mBAAMA,QAClCA,sBAAqFA,mBAAMA,kBAO/GA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,cAGCA,mCAAYsD,2BAAyB,GACvEtD,mBAA0B,YACEA,yBAAYA,QACpCA,sBACJA,QACAA,mBAAwB,YAAxBA,CAAwB,eAEwBA,oBAAOA,QAC/CA,qBAGAA,2BAIJA,UAEJA,mBAA0B,gBAC+CA,mBAAMA,QAC3EA,sBAAqFA,mBAAMA,kBAQ/GA,mBAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAIIA,2DAA8CA,QACtEA,sBACJA,QACAA,mBAA0B,gBAEMA,mBAAMA,QAClCA,sBAAyCA,gCAASsD,iBAAe,GAAEtD,mBAAMA,eAAS,OA5G1EA,uEAciBA,yGAYLA,mCAKNA,gDASZA,gDAUUA,mHAGCA,uHAQqCA,uDAUhDA,gDASUA,kHAGCA,uHAOqCA,ilVC3FrDsG,CAAoB,wCCA1B,IAAME,GAAmB,MAA1B,MAAOA,EAEX3H,YAAoBuB,EAA8BC,EAAyBoG,EACjEnG,GADUvB,qBAA8BA,UAAyBA,YACjEA,cACRA,KAAKqB,cAAcG,SAAS,qBAC5BxB,KAAK2H,eAAiB3H,KAAKsB,GAAGI,MAAM,CAClCkG,KAAM,CAAC,IACPC,UAAW,CAAC,IACZC,cAAe,CAAC,KAEpB,CAEAhG,WAAmB,CACnBiG,uBACE,IAAIhB,EAAO,CACTa,QAAMI,KAAWhI,KAAK2H,eAAezF,MAAM0F,MAC3CC,aAAWG,KAAWhI,KAAK2H,eAAezF,MAAM2F,WAChDC,iBAAeE,KAAWhI,KAAK2H,eAAezF,MAAM4F,gBAEtD9H,KAAK0H,KAAKO,YAAY,GAAGC,2BAAmCnB,GAAMoB,KAAM/F,IAClEA,GACFpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAO,EAIrC,CACA8F,uBACEpI,KAAK0H,KAAKW,WAAW,GAAGH,4BAAmCC,KAAM/F,IAC3DA,GACFpC,KAAKuB,OAAOc,QAAQD,EAAI7B,KAAI,EAGlC,CACA+H,qBACEtI,KAAK0H,KAAKW,WAAW,GAAGH,0BAAiCC,KAAM/F,IACzDA,GACFpC,KAAKuB,OAAOc,QAAQD,EAAI7B,KAAI,EAGlC,CAACO,kDAvCU2G,GAAmB1G,sFAAnB0G,EAAmBnD,+fCbhCrD,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAAwDA,6BAAiBA,YAEzGA,iBAAuB,UACUA,yBAAYA,QACzCA,kBAA0B,WAA1BA,CAA0B,SAWdA,8BAAiBA,QACrBA,kBAA0B,QACnBA,mEAAsDA,UAE7DA,mBAAsB,WAC0BA,kBAAKA,cAI7DA,iBAA6BA,4BAAeA,QAC5CA,kBAA0B,WAA1BA,CAA0B,SAEdA,kCAAqBA,QACzBA,kBAA0B,QACnBA,mEAAsDA,UAE7DA,mBAAsB,WAC0BA,kBAAKA,YAGzDA,kBAAyB,SACjBA,6BAAgBA,QACpBA,kBAA0B,QACnBA,wFAA2EA,UAElFA,mBAAsB,WAC4BA,kBAAKA,cAI/DA,iBAA6BA,6BAAgBA,QAC7CA,kBAA0B,WAA1BA,CAA0B,SAEdA,oBAAOA,QACXA,kBAA0B,QACnBA,sEAAyDA,UAEhEA,mBAAsB,WACoBA,kBAAKA,u6FD3ClDwG,CAAmB,KELnBc,GAAyB,MAAhC,MAAOA,EAEXzI,YACUuB,wBAIRrB,KAAKqB,cAAcG,SAAS,oBAE9B,CAEAM,WAEA,CAAChB,kDAbUyH,GAAyBxH,kDAAzBwH,EAAyBjE,iFCRtCrD,uDDQasH,CAAyB,4BEMlBtH,gBAAoIA,kBACzEA,mBAAOA,kDAgB1DA,gBACkCA,6EAASA,sBAAmB,GAAEA,gBACpDA,kDACZA,gBACkCA,6EAASA,sBAAmB,GAAEA,gBACdA,mCAV9DA,cACoI,QAC3HA,SAA+BA,QACpCA,cAAI,YAEIA,uBAGAA,uBAGJA,gDATCA,2CAGOA,sEAGAA,8FAMhBA,iBAAqCA,6BAAiBA,kDAG9DA,kCACIA,+DAAcA,4BAAwB,GAAEA,gCAoB5BA,oBAEIA,wCACJA,gCA4BAA,oBAEIA,wCACJA,qFCtFjB,IAAMuH,GAAgB,MAAvB,MAAOA,EAQX1I,YAAqBqB,EAAyCE,EACpDC,EAAyBC,EAA+BkD,GAD7CzE,uBAAyCA,qBACpDA,UAAyBA,cAA+BA,oBAHlEA,gBAAoB,EA6DpBA,cAAgB,GAChBA,UAAO,EACPA,cAAW,GACXA,WAAQ,GA5DNA,KAAKqB,cAAcG,SAAS,YAC5BxB,KAAKyB,kBAAoBzB,KAAKsB,GAAGI,MAAM,CACrC+G,aAAc,CAAC,GAAI,CAAC7G,kBAEtB5B,KAAK6B,kBAAoB7B,KAAKsB,GAAGI,MAAM,CACrC+G,aAAc,CAAC,GAAI,CAAC7G,kBAEtB5B,KAAKmF,YAAcnF,KAAKyE,aAAaW,gBACvC,CAEAtD,WAEE9B,KAAK0I,kBAEP,CAGA1G,0BACEhC,KAAKmB,gBAAgBb,cAAcN,KAAKyB,kBAAkBS,OAAOC,UAAWC,IAC1EpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK0I,mBACL1I,KAAKyB,kBAAkBe,QACvBC,SAASC,eAAe,qBAAqBC,OAAK,EAEjDC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAGAQ,WAAWC,GACThD,KAAKiD,WAAaD,EAAQtC,GAC1BV,KAAK6B,kBAAkBqB,WAAW,CAAEuF,aAAgBzF,EAAQyF,cAC9D,CAEA7H,gBACEZ,KAAKmB,gBAAgBP,cAAcZ,KAAKiD,YAAYd,UAAWC,IAC7DpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK0I,mBACLjG,SAASC,eAAe,qBAAqBC,OAAK,EAGtD,CAEAS,0BACEpD,KAAKmB,gBAAgBV,cAAcT,KAAK6B,kBAAkBK,MAAOlC,KAAKiD,YAAYd,UAAWC,IAC3FpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK0I,mBACL1I,KAAK6B,kBAAkBW,QACvBC,SAASC,eAAe,eAAeC,OAAK,EAE3CC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAQAe,iBAAiBC,EAAqBC,EAAcC,GAClD,IAAItD,EAAc,GAClB,OAAIoD,IACFpD,EAAOuD,OAAYH,GAEjBC,IACFrD,EAAOqD,KAAUA,GAEfC,IACFtD,EAAOwD,UAAeF,GAEjBtD,CACT,CAEAuI,mBACE,MAAMvI,EAASH,KAAKsD,iBAAiBtD,KAAK4D,MAAO5D,KAAKwD,KAAMxD,KAAKyD,UACjEzD,KAAKmB,gBAAgBjB,YAAYC,GAAQgC,UAAWC,IAClDpC,KAAK2I,SAAWvG,EAAI7B,KAAKwD,QACzB/D,KAAKwH,UAAoC,GAAxBxH,KAAK2I,SAASxB,OAC/BnH,KAAK4I,aAAexG,EAAI7B,KAAK0D,OAE5BrB,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAEA2B,iBAAiBC,GACfnE,KAAKwD,KAAOW,EACZnE,KAAK0I,kBACP,CAEAtE,QAAQC,GACNrE,KAAK4D,MAAQS,EACbrE,KAAKwD,KAAO,EACZxD,KAAK0I,kBACP,CAAC5H,kDA3GU0H,GAAgBzH,8FAAhByH,EAAgBlE,otEDZ7BrD,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAA8BA,6BAAiBA,UAC3EA,gBAA4B,SAAwDA,qBAAQA,YAEhGA,kBAAuB,WAAvBA,CAAuB,SAEXA,oBAAOA,QACXA,kBAAyB,SAAzBA,CAAyB,iBAEaA,2DAASA,yBAAwB,GAA/DA,UAEJA,gBACIA,wBAEJA,YAGRA,eACAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAGZA,yBAAYA,QAChBA,eAAIA,oBAAOA,UAEfA,8CAcAA,yBACJA,UAEJA,0CAEJA,UAIJA,mBAA6C,YAA7CA,CAA6C,YAA7CA,CAA6C,cAGKA,mCAAYsD,2BAAyB,GACvEtD,mBAA0B,YACEA,2BAAcA,QACtCA,sBACJA,QACAA,eACAA,mBAAwB,SAAxBA,CAAwB,eAEwBA,oBAAOA,QAC/CA,qBAGAA,4BAIJA,UAEJA,mBAA0B,gBAEMA,mBAAMA,QAClCA,sBAAqFA,mBAAMA,kBAO/GA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,cAGCA,mCAAYsD,2BAAyB,GACvEtD,mBAA0B,YACEA,2BAAcA,QACtCA,eAAM,gBAEVA,QACAA,mBAAwB,YAAxBA,CAAwB,eAEwBA,oBAAOA,QAC/CA,qBAGAA,4BAIJA,UAEJA,mBAA0B,gBAC+CA,mBAAMA,QAC3EA,sBAAqFA,mBAAMA,kBAO/GA,mBAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAIIA,0DAA6CA,QACrEA,sBACJA,QACAA,eACAA,mBAA0B,gBAEMA,mBAAMA,QAClCA,sBAAyCA,gCAASsD,iBAAe,GAAEtD,mBAAMA,eAAS,OA3G1EA,uEAagBA,gGAaJA,mCAGNA,4CASZA,gDAUUA,mIAGCA,uIAQqCA,uDAUhDA,gDAUUA,mIAGCA,uIAOqCA,ojUC3FrDuH,CAAgB,KCLhBK,GAAqB,MAA5B,MAAOA,EAGX/I,YAAoBC,gBADpBC,aAAUC,WAIV,CAEA6I,qBAEE,OAAO9I,KAAKD,MAAMK,IAAIJ,KAAKK,QAAQ,iCACrC,CAEAwD,gBAAgB1D,GAEd,OAAOH,KAAKD,MAAMK,IAAIJ,KAAKK,QAAQ,iCAAkC,CAAEF,UACzE,CAEA8B,mBAAmB1B,GAEjB,OAAOP,KAAKD,MAAMS,KAAKR,KAAKK,QAAQ,iCAAiCE,EACvE,CAEA8C,mBAAmB9C,EAASG,GAE1B,OAAOV,KAAKD,MAAMY,IAAI,GAAGX,KAAKK,wCAAwCK,KAAMH,EAC9E,CAEA4C,mBAAmBzC,GAEjB,OAAOV,KAAKD,MAAMc,OAAO,GAAGb,KAAKK,wCAAwCK,KAC3E,CAACI,kDA/BU+H,GAAqB9H,oDAArB8H,EAAqB7H,QAArB6H,EAAqB,qBAFpB,gBAEDA,CAAqB,4BCQd5H,gBAAoIA,kBACxEA,mBAAOA,kDAgB3DA,gBAA4HA,6EAASA,sBAAoB,GAAGA,gBAAwCA,kDACpMA,gBAAuIA,6EAASA,sBAAoB,GAAEA,gBAA4CA,mCAN9NA,cAA8I,QACrIA,SAAwBA,QAC7BA,cAAI,YAGIA,uBACAA,uBACJA,gDANCA,mCAIOA,sEACAA,8FAKpBA,gBAAyCA,6BAAiBA,kDAG9DA,kCACAA,+DAAcA,4BAAwB,GAAEA,gCAoBxBA,gBACIA,yCACJA,gCA2BAA,gBACIA,yCACJA,qFChFjB,IAAM8H,GAAuB,MAA9B,MAAOA,EAQXjJ,YAAoBqB,EAAyC6H,EACnD3H,EAA8BC,EAAyBC,EACvDkD,GAFUzE,uBAAyCA,8BACnDA,qBAA8BA,UAAyBA,cACvDA,oBANVA,gBAAqB,EAiErBA,kBAAoB,GACpBA,UAAO,EACPA,cAAW,GACXA,WAAQ,GA5DNA,KAAKqB,cAAcG,SAAS,mBAC5BxB,KAAKyB,kBAAoBzB,KAAKsB,GAAGI,MAAM,CACrCC,KAAM,CAAC,GAAI,CAACC,kBAEd5B,KAAK6B,kBAAoB7B,KAAKsB,GAAGI,MAAM,CACrCC,KAAM,CAAC,GAAI,CAACC,kBAEd5B,KAAKmF,YAAcnF,KAAKyE,aAAaW,gBACvC,CAEAtD,WAEE9B,KAAK+B,sBAEP,CAGAC,0BACEhC,KAAKgJ,uBAAuB/G,mBAAmBjC,KAAKyB,kBAAkBS,OAAOC,UAAWC,IACtFpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+B,uBACL/B,KAAKyB,kBAAkBe,QACvBC,SAASC,eAAe,qBAAqBC,OAAK,EAEjDC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAGAQ,WAAWC,GACThD,KAAKiD,WAAaD,EAAQtC,GAC1BV,KAAK6B,kBAAkBqB,WAAW,CAAEvB,KAAQqB,EAAQrB,MACtD,CAEAf,gBACEZ,KAAKgJ,uBAAuB7F,mBAAmBnD,KAAKiD,YAAYd,UAAWC,IACzEpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+B,uBACLU,SAASC,eAAe,qBAAqBC,OAAK,EAGtD,CAEAS,0BACEpD,KAAKgJ,uBAAuB3F,mBAAmBrD,KAAK6B,kBAAkBK,MAAOlC,KAAKiD,YAAYd,UAAWC,IACvGpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+B,uBACL/B,KAAK6B,kBAAkBW,QACvBC,SAASC,eAAe,eAAeC,OAAK,EAE3CC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAQAe,iBAAiBC,EAAqBC,EAAcC,GAClD,IAAItD,EAAc,GAClB,OAAIoD,IACFpD,EAAOuD,OAAYH,GAEjBC,IACFrD,EAAOqD,KAAUA,GAEfC,IACFtD,EAAOwD,UAAeF,GAEjBtD,CACT,CAEA4B,uBACE,MAAM5B,EAASH,KAAKsD,iBAAiBtD,KAAK4D,MAAO5D,KAAKwD,KAAMxD,KAAKyD,UACjEzD,KAAKgJ,uBAAuBnF,gBAAgB1D,GAAQgC,UAAWC,IAC7DpC,KAAK8D,aAAe1B,EAAI7B,KAAKwD,QAC7B/D,KAAKwH,UAAwC,GAA5BxH,KAAK8D,aAAaqD,OACnCnH,KAAKgE,kBAAoB5B,EAAI7B,KAAK0D,OAGjCrB,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAG/D,CAEA2B,iBAAiBC,GACfnE,KAAKwD,KAAOW,EACZnE,KAAK+B,sBACP,CAEAqC,QAAQC,GACNrE,KAAK4D,MAAQS,EACbrE,KAAKwD,KAAO,EACZxD,KAAK+B,sBACP,CAACjB,kDA/GUiI,GAAuBhI,wGAAvBgI,EAAuBzE,04EDbpCrD,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAA8BA,6BAAiBA,UAC3EA,gBAA4B,SAAwDA,8BAAiBA,YAGzGA,kBAAuB,WAAvBA,CAAuB,SAEXA,4BAAeA,QACnBA,kBAAyB,SAAzBA,CAAyB,iBAEaA,2DAASA,yBAAwB,GAA/DA,UAEJA,gBACIA,wBAEJA,YAGRA,eACAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAGZA,qBAAQA,QACZA,eAAIA,oBAAOA,UAEfA,8CAUJA,QACAA,wBAEJA,QACAA,0CAEJA,UAIJA,mBAA6C,YAA7CA,CAA6C,YAA7CA,CAA6C,cAGMA,mCAAYsD,2BAAyB,GACxEtD,mBAA0B,YACEA,mCAAsBA,QAC9CA,sBACJA,QACDA,eACCA,mBAAwB,YAAxBA,CAAwB,eAEyBA,sBAASA,QAClDA,qBAGAA,wBAGJA,UAEJA,mBAA0B,gBACqEA,mBAAMA,QACjGA,sBAAqFA,mBAAMA,kBAO/GA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,cAGEA,mCAAYsD,2BAAyB,GACxEtD,mBAA0B,YACEA,iCAAoBA,QAC5CA,sBACJA,QACDA,eACCA,mBAAwB,YAAxBA,CAAwB,eAEyBA,qBAAQA,QACjDA,qBAGAA,wBAGJA,UAEJA,mBAA0B,gBAC+CA,mBAAMA,QAC3EA,sBAAqFA,iBAAIA,kBAQ7GA,mBAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAIFA,2DAA+CA,QACvEA,sBACFA,QACAA,mBAA0B,gBACmEA,mBAAMA,QACjGA,sBAAyCA,gCAASsD,iBAAe,GAAGtD,mBAAMA,eAAS,OApGrEA,uEAYiBA,yGAWLA,mCAGNA,gDASZA,gDAUMA,mHAEmEA,uHAOzBA,uDAUhDA,gDAUMA,mHAEiEA,uHAOvBA,g2TCrFrD8H,CAAuB,KCNvBE,GAAmB,MAA1B,MAAOA,EAGXnJ,YAAoBC,gBADpBC,aAAUC,WAIV,CAEAiJ,UAAU/I,GAER,OAAOH,KAAKD,MAAMK,IAAIJ,KAAKK,QAAQ,+BAAgC,CAAEF,UACvE,CAEAgJ,mBAAmB5I,GAEjB,OAAOP,KAAKD,MAAMS,KAAKR,KAAKK,QAAQ,+BAA+BE,EACrE,CAEA6I,aAAa7I,EAASG,GAEpB,OAAOV,KAAKD,MAAMY,IAAI,GAAGX,KAAKK,sCAAsCK,KAAMH,EAC5E,CAEA8I,aAAa3I,GAEX,OAAOV,KAAKD,MAAMc,OAAO,GAAGb,KAAKK,sCAAsCK,KACzE,CAACI,kDA1BUmI,GAAmBlI,oDAAnBkI,EAAmBjI,QAAnBiI,EAAmB,qBAFlB,gBAEDA,CAAmB,4BCkBZhI,gBAEIA,kBACAA,oBACJA,kDAkBQA,gBACIA,6EAASA,2BAAuB,GAAEA,gBAAuCA,kDAC7EA,gBACIA,6EAASA,2BAAuB,GAAEA,gBAA4CA,mCAT9FA,cACiI,QACxHA,SAA6BA,QAClCA,cAAKA,SAAqCA,QAC1CA,cAAI,YAEIA,uBAEAA,uBAEJA,gDARCA,0CACAA,kDAGOA,+DAEAA,uFAKhBA,iBACIA,+BACJA,kDAGRA,kCACIA,+DAAcA,4BAAwB,GAAEA,gCAkBxBA,gBAEIA,2CACJA,mCAuBRA,qBAC0CA,gBAAIA,8BAA1CA,uFAgBJA,qBAAyFA,yDAASA,uBAAc,GAAEA,kBAAMA,gCAoBhHA,oBAEIA,2CACJA,mCAuBRA,qBAC0CA,kBAAMA,8BAA5CA,0HC7JlBqI,GAAiB,CACrB,CAACzE,KAAK,GAAG0E,UAAUhB,GAA0BiB,SAAS,CACpD,CAAC3E,KAAK,GAAG0E,UAAU9B,IACnB,CAAC5C,KAAK,UAAU0E,UAAUf,IAC1B,CAAC3D,KAAK,WAAW0E,UAAUrI,GAC3B,CAAC2D,KAAK,eAAe0E,UAAUhC,IAC/B,CAAC1C,KAAK,gBAAgB0E,UAAU/E,GAChC,CAACK,KAAK,gBAAgB0E,UCNQ,MAA5B,MAAOE,EAOX3J,YACUuB,EAA8BqI,EAC9BnI,EAA+BkD,EAA0CnD,GADzEtB,qBAA8BA,4BAC9BA,cAA+BA,oBAA0CA,UALnFA,gBAAqB,EAqErBA,aAAe,GACfA,UAAO,EACPA,cAAW,GACXA,WAAQ,GAlENA,KAAKqB,cAAcG,SAAS,yBAC5BxB,KAAK2J,iBAAmB3J,KAAKsB,GAAGI,MAAM,CACpCkI,YAAa,CAAC,GAAI,CAAChI,gBACnBiI,YAAa,CAAC,IAAK,CAACjI,kBAGtB5B,KAAK8J,iBAAmB9J,KAAKsB,GAAGI,MAAM,CACpCkI,YAAa,CAAC,GAAI,CAAChI,gBACnBiI,YAAa,CAAC,IAAK,CAACjI,kBAEtB5B,KAAKmF,YAAcnF,KAAKyE,aAAaW,gBAEvC,CAEAtD,WAEE9B,KAAK+J,sBAGP,CAEAC,wBACEhK,KAAK2J,iBAAiBnH,OACxB,CAEAyH,yBACEjK,KAAK0J,qBAAqBP,mBAAmBnJ,KAAK2J,iBAAiBzH,OAAOC,UAAWC,IACnFpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+J,uBACL/J,KAAK2J,iBAAiBnH,QACtBC,SAASC,eAAe,qBAAqBC,OAAK,EAEjDC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAGA2H,yBACElK,KAAK0J,qBAAqBN,aAAapJ,KAAK8J,iBAAiB5H,MAAOlC,KAAKmK,WAAWhI,UAAWC,IAC7FpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+J,uBACLtH,SAASC,eAAe,qBAAqBC,OAAK,EAEjDC,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAE/D,CAEA6H,gBAAgBC,GACdrK,KAAKmK,UAAYE,EAAO3J,GACxBV,KAAK8J,iBAAiB5G,WAAW,CAAE0G,YAAeS,EAAOT,YAAaC,YAAeQ,EAAOR,aAC9F,CAEAR,eACErJ,KAAK0J,qBAAqBL,aAAarJ,KAAKmK,WAAWhI,UAAWC,IAChEpC,KAAKuB,OAAOc,QAAQD,EAAIE,QAAS,GAAI,CAAEC,QAAS,MAChDvC,KAAK+J,uBACLtH,SAASC,eAAe,qBAAqBC,OAAK,EAEtD,CAQAW,iBAAiBC,EAAqBC,EAAcC,GAClD,IAAItD,EAAc,GAClB,OAAIoD,IACFpD,EAAOuD,OAAYH,GAEjBC,IACFrD,EAAOqD,KAAUA,GAEfC,IACFtD,EAAOwD,UAAeF,GAEjBtD,CACT,CAEA4J,uBAEK/J,KAAK4D,OAAS5D,KAAK4D,MAAMuD,OAAS,GAAK,YAAYmD,SAAStK,KAAK4D,MAAMqD,iBACxEjH,KAAK4D,MAAQ,aAEZ5D,KAAK4D,OAAS5D,KAAK4D,MAAMuD,OAAS,GAAK,iBAAiBmD,SAAStK,KAAK4D,MAAMqD,iBAC7EjH,KAAK4D,MAAQ,kBAEf,MAAMzD,EAASH,KAAKsD,iBAAiBtD,KAAK4D,MAAO5D,KAAKwD,KAAMxD,KAAKyD,UACjEzD,KAAK0J,qBAAqBR,UAAU/I,GAAQgC,UAAWC,IACrDpC,KAAKuK,QAAUnI,EAAI7B,KAAKwD,QACxB/D,KAAKwH,UAAmC,GAAvBxH,KAAKuK,QAAQpD,OAC9BnH,KAAKwK,YAAcpI,EAAI7B,KAAK0D,OAG3BrB,IACC5C,KAAKuB,OAAOsB,MAAMD,EAAIC,MAAMC,OAAQ,GAAI,CAAEP,QAAS,KAAM,EAG/D,CAEA2B,iBAAiBC,GACfnE,KAAKwD,KAAOW,EACZnE,KAAK+J,sBACP,CAEA3F,QAAQC,GACNrE,KAAK4D,MAAQS,EACbrE,KAAKwD,KAAO,EACZxD,KAAK+J,sBACP,CAACjJ,kDA1HU2I,GAAqB1I,+FAArB0I,EAAqBnF,2tGFZlCrD,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAGQA,gBAAIA,UAE/BA,gBAA4B,SACMA,6BAAiBA,UAEnDA,gBAA4B,SAC8CA,kCAAqBA,YAGnGA,kBAAuB,WAAvBA,CAAuB,SAEXA,kCAAqBA,QACzBA,kBAAyB,SAAzBA,CAAyB,iBAKbA,2DAASA,yBAAwB,GAHrCA,UAOJA,gBACIA,wBAKJA,YAGRA,eACAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAGZA,4BAAeA,QACnBA,eAAIA,6BAAgBA,QACpBA,eAAIA,mBAAMA,UAEdA,8CAaAA,yBAGJA,UAEJA,0CAEJA,QAEAA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAITA,iCAAoBA,QAC5CA,sBAAwDA,gCAASsD,yBAAuB,GAC5DtD,UAEhCA,mBAAwB,cACyCA,mCAAYsD,0BAAwB,GAC7FtD,mBAAc,eACkCA,6BAAgBA,QAC5DA,qBAGAA,wBAIJA,QACAA,mBAAkB,eAC2BA,8BAAgBA,QACzDA,sBAA0D,gBAC7BA,qCAAuBA,QAChDA,sBAAmBA,sBAAQA,QAC3BA,sBAAmBA,sBAAQA,QAC3BA,sBAAmBA,qBAAOA,QAC1BA,sBAAmBA,yBAAWA,QAC9BA,sBAAmBA,kBAAIA,QACvBA,sBAAmBA,4BAAcA,QACjCA,sBAAmBA,6BAAeA,QAClCA,sBAAmBA,wBAAUA,QAC7BA,sBAAmBA,gCAAkBA,QACrCA,sBAAoBA,4BAAcA,gBAKlDA,mBAA0B,gBAElBA,gCAASsD,yBAAuB,GAAEtD,mBAAMA,QAC5CA,6BAEJA,cAKZA,mBAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAIIA,kDAAqCA,eAAKA,qCAAuBA,QACzFA,sBACJA,QACAA,mBAA0B,gBAEMA,mBAAMA,QAClCA,6BACJA,cAKZA,mBAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAAjDA,CAAiD,YAITA,+BAAkBA,QAC1CA,sBACJA,QACAA,mBAAwB,eACyCA,mCAAYsD,0BAAwB,GAC7FtD,oBAAc,gBACkCA,8BAAgBA,QAC5DA,sBAGAA,6BAIJA,QACAA,oBAAkB,gBAC2BA,+BAAgBA,QACzDA,uBAA0D,iBAC7BA,sCAAuBA,QAChDA,uBAAmBA,uBAAQA,QAC3BA,uBAAmBA,uBAAQA,QAC3BA,uBAAmBA,sBAAOA,QAC1BA,uBAAmBA,2BAAYA,QAC/BA,uBAAmBA,mBAAIA,QACvBA,uBAAmBA,6BAAcA,QACjCA,uBAAmBA,8BAAeA,QAClCA,uBAAmBA,yBAAUA,QAC7BA,uBAAmBA,iCAAkBA,QACrCA,uBAAoBA,6BAAcA,gBAKlDA,oBAA0B,iBAEMA,oBAAMA,QAClCA,8BAEJA,eAAM,OAhJEA,uEAiBeA,+FAYHA,mCAKNA,2CAaoBA,+CAIlBA,8HAGCA,mIAyBJA,gEAiBAA,gEAcqBA,+CAIlBA,8HAGCA,mIAyBJA,+0TE3JhBwI,CAAqB,MDO9B,CAAC5E,KAAK,kBAAkB0E,UAAUR,OAQ/B,IAAM0B,GAA6B,MAApC,MAAOA,EAA6B3J,kDAA7B2J,EAA6B,sCAA7BA,IAA6B3J,wCAH9B4J,cAAsBpB,IACtBoB,eAECD,CAA6B,KEO7BE,GAAsB,MAA7B,MAAOA,EAAsB7J,kDAAtB6J,EAAsB,sCAAtBA,IAAsB7J,wCAP/B8J,KACAH,GACAI,KACAC,KACAC,eAGSJ,CAAsB","names":["ProductService","constructor","_http","this","environment","getProducts","params","get","baseUrl","createProduct","data","post","updateProduct","id","put","deleteProduct","delete","static","core","factory","i0","CategoryComponent","_productservice","_tempcategoryservice","_titleservice","fb","toastr","setTitle","productCreateForm","group","name","Validators","productUpdateForm","ngOnInit","retrieveTempCategory","productCreateFormSubmit","createTempCategory","value","subscribe","res","success","message","timeOut","reset","document","getElementById","click","err","error","detail","getProduct","product","product_id","patchValue","deleteTempCategory","productUpdateFormSubmit","updateTempCategory","getRequestParams","searchTitle","page","pageSize","search","page_size","title","getTempCategory","tempCategory","results","totalTempCategory","count","handlePageChange","event","onKeyUp","x","selectors","ctx","EmailSettingComponent","_permissions","auth","access","permission","path","logModule","email","array","module","emailCreate","permissions","getPermissions","getEmailSetting","emailFieldAsFormArray","emailSettingform","emails","control","addControl","push","remove","i","removeAt","createemailAsFormArray","createemailSettingform","createemail","createaddControl","createremove","emailSettingList","editEmailSetting","selectedEmailSetting","emailArr","split","controls","setValue","forEach","key","saveEmailSetting","type","body","item","toLowerCase","substring","length","permissionarr","createEmailSetting","deleteEmailSetting","LogCategoryComponent","showError","MasterListComponent","crud","updateZohoForm","code","client_id","client_secret","updateZohoCredential","encryption","postRequest","requestUrl","then","updateZohoCategories","getRequest","updateZohoArticles","MasterManagementComponent","ProductComponent","product_name","retrieveProducts","products","totalProduct","TicketCategoryService","getAllTempCategory","TicketCategoryComponent","_ticketcategoryservice","TicketStatusService","getTicket","createTicketStatus","updateTicket","deleteTicket","routes","component","children","TicketStatusComponent","_ticketstatusservice","ticketCreateForm","team_status","user_status","ticketUpdateForm","retrieveTicketStatus","ticketCreateFormReset","ticketCreateFormSubmit","ticketUpdateFormSubmit","ticket_id","getTicketDetail","ticket","includes","tickets","totalTicket","MasterManagementRoutingModule","RouterModule","MasterManagementModule","CommonModule","NgxPaginationModule","FormsModule","ReactiveFormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/services/product.service.ts","./src/app/admin/master-management/category/category.component.html","./src/app/admin/master-management/category/category.component.ts","./src/app/admin/master-management/email-setting/email-setting.component.html","./src/app/admin/master-management/email-setting/email-setting.component.ts","./src/app/admin/master-management/log-category/log-category.component.html","./src/app/admin/master-management/log-category/log-category.component.ts","./src/app/admin/master-management/master-list/master-list.component.ts","./src/app/admin/master-management/master-list/master-list.component.html","./src/app/admin/master-management/master-management.component.ts","./src/app/admin/master-management/master-management.component.html","./src/app/admin/master-management/product/product.component.html","./src/app/admin/master-management/product/product.component.ts","./src/app/admin/services/ticket-category.service.ts","./src/app/admin/master-management/ticket-category/ticket-category.component.html","./src/app/admin/master-management/ticket-category/ticket-category.component.ts","./src/app/admin/services/ticket-status.service.ts","./src/app/admin/master-management/ticket-status/ticket-status.component.html","./src/app/admin/master-management/master-management-routing.module.ts","./src/app/admin/master-management/ticket-status/ticket-status.component.ts","./src/app/admin/master-management/master-management.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  baseUrl = environment.baseUrl;\n  constructor(private _http:HttpClient) \n  {\n\n  }\n\n\n  getProducts(params:any)\n  {\n    return this._http.get(this.baseUrl+\"/api/v1/admin/product\", { params });\n  }\n\n  createProduct(data:any)\n  {\n    return this._http.post(this.baseUrl+'/api/v1/admin/product/',data);\n  }\n\n  updateProduct(data:any,id:any)\n  {\n    return this._http.put(`${this.baseUrl}/api/v1/admin/product/${id}/`,data);\n  }\n\n  deleteProduct(id:any)\n  {\n    return this._http.delete(`${this.baseUrl}/api/v1/admin/product/${id}/`);\n  }\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\">Master Management</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\" routerLinkActive=\"active\">Template Categories</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Template Category</h2>\n            <div class=\"u-add-right\">\n                <div>\n                    <input type=\"text\" #yourInput (keyup)=\"onKeyUp(yourInput.value)\"  placeholder=\"Search by name\"/>\n                </div>\n                <div>\n                    <a href=\"javascript:void()\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\"><img\n                            src=\"assets/images/icon/addIcon.png\" alt=\"create\" />Create </a>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>Category</th>\n                    <th>Action </th>\n                </thead>\n                <tr *ngFor=\"let category of tempCategory | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalTempCategory};let i = index\">\n                    <td> {{category.name || ''}} </td>\n                    <td>\n                        <div class=\"actiontd\">\n\n                            <a class=\"edit\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\" (click)=\"getProduct(category)\" ><i class=\"fa fa-edit\" title=\"Edit\" ></i></a>\n                            <a class=\"eyeIcon delIcon\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteModal\" (click)=\"getProduct(category)\"><i class=\"fa fa-trash-o\" title=\"Delete\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n                <tr *ngIf=\"tempCategory.length ==0\">\n                    <p>Records not found</p>\n                 </tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"tempCategory.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n        (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>\n\n<!-- Create Product Modal start here -->\n<div class=\"modal productModal\" id=\"myModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productCreateForm\"  (ngSubmit)=\"productCreateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Create Template Category</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n               <hr/>\n                <div class=\"modal-body\">\n                    <div class=\"mb-3 \">\n                        <label for=\"product\" class=\"form-label\" >Category </label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                        [class.is-invalid]=\"productCreateForm.controls['name'].invalid && productCreateForm.controls['name'].touched\"\n                        placeholder=\"Enter Category Name\">\n                        <small class=\"text-danger mt-4\" *ngIf=\"productCreateForm.controls['name'].dirty && productCreateForm.controls['name'].hasError('required')\">\n                            Please enter category name.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closecreatemodal\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productCreateForm.invalid\">Create</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- Update Product Modal start here -->\n<div class=\"modal productModal\" id=\"updateModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productUpdateForm\"  (ngSubmit)=\"productUpdateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Edit Template Category</h4>\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" data-bs-dismiss=\"modal\"></button>\n                </div>\n               <hr/>\n                <div class=\"modal-body\">\n                    <div class=\"\">\n                        <label for=\"product\" class=\"form-label\" >Category</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                        [class.is-invalid]=\"productCreateForm.controls['name'].invalid && productCreateForm.controls['name'].touched\"\n                        placeholder=\"Enter Category Name\">\n                        <small class=\"text-danger mt-4\" *ngIf=\"productCreateForm.controls['name'].dirty && productCreateForm.controls['name'].hasError('required')\">\n                            Please enter category name.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productUpdateForm.invalid\">Save</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- Delete Product Modal start here -->\n<div class=\"modal\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Are you sure you want to delete this  category?</h4>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-danger\" id=\"closedeletemodal\" data-bs-dismiss=\"modal\">Cancel</button>\n          <button type=\"button\" class=\"btn delbtn\" (click)=\"deleteProduct()\" >Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../services/product.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TemplateCategoryService } from '../../services/template-category.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n  productCreateForm!: FormGroup;\n  productUpdateForm!: FormGroup;\n\n  product_id:any;\n\n\n  constructor(\n    private _productservice:ProductService,\n    private _tempcategoryservice:TemplateCategoryService,\n    private _titleservice:Title,\n    private fb:FormBuilder,\n    private toastr: ToastrService\n  )\n  {\n\n    this._titleservice.setTitle('Template Category');\n\n    this.productCreateForm = this.fb.group({\n      name:['',[Validators.required]]\n    });\n\n    this.productUpdateForm = this.fb.group({\n      name:['',[Validators.required]]\n    });\n\n\n  }\n\n  ngOnInit(): void {\n\n    this.retrieveTempCategory();\n    \n  }\n\n\n  productCreateFormSubmit()\n  {\n     this._tempcategoryservice.createTempCategory(this.productCreateForm.value).subscribe((res:any)=>{\n      this.toastr.success(res.message,'', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      this.productCreateForm.reset();\n      document.getElementById('closecreatemodal')?.click();\n     },\n     (err:any)=>{\n      this.toastr.error(err.error.detail,'', { timeOut: 4000 });\n     })\n  }\n\n\n  getProduct(product:any)\n  {\n    this.product_id = product.id;\n    this.productUpdateForm.patchValue({'name':product.name});\n  }\n\n  deleteProduct()\n  {\n    this._tempcategoryservice.deleteTempCategory(this.product_id).subscribe((res:any)=>{\n      this.toastr.success(res.message,'', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      document.getElementById('closedeletemodal')?.click();\n    });\n\n  }\n\n  productUpdateFormSubmit()\n  {\n       this._tempcategoryservice.updateTempCategory(this.productUpdateForm.value,this.product_id).subscribe((res:any)=>{\n        this.toastr.success(res.message,'', { timeOut: 4000 });\n        this.retrieveTempCategory();\n        this.productUpdateForm.reset();\n        document.getElementById('closemodal')?.click();\n       },\n       (err:any)=>{\n        this.toastr.error(err.error.detail,'', { timeOut: 4000 });\n       });\n  }\n\n\n  tempCategory: any = [];\n  page = 1;\n  pageSize = 10;\n  title = '';\n  totalTempCategory:any;\n  getRequestParams(searchTitle: string,page: number, pageSize: number): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveTempCategory(): void {\n    const params = this.getRequestParams(this.title,this.page, this.pageSize);\n    this._tempcategoryservice.getTempCategory(params).subscribe((res:any)=>{\n       this.tempCategory = res.data.results;\n       this.totalTempCategory = res.data.count;\n       \n     },\n     (err:any)=>{\n      this.toastr.error(err.error.detail,'', { timeOut: 4000 });\n     })\n\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveTempCategory();\n  }\n\n  onKeyUp(x:any) { \n    this.title= x;\n    this.page = 1;\n    this.retrieveTempCategory();\n  }\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\">Master Management</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master/email-setting\" routerLinkActive=\"active\">Email\n                Setting</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Log Email Setting</h2>\n            <div class=\"u-add-right\">\n                <div>\n                    <input type=\"text\" #yourInput (keyup)=\"onKeyUp(yourInput.value)\" placeholder=\"Search by module\" />\n                </div>\n                <div>\n                    <a *ngIf=\"permissions.master_management == 'Full access'\" data-bs-toggle=\"modal\" data-bs-target=\"#createModal\"><img src=\"assets/images/icon/addIcon.png\"\n                            alt=\"create\" />Create </a>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>Module</th>\n                    <th>Email To </th>\n                    <th>Action</th>\n                </thead>\n                <tr *ngFor=\"let category of emailSettingList ;let i = index\">\n                    <td> {{category.module?.replace(\"_\",\" \") | titlecase }} </td>\n                    <td> {{category.emails || ''}} </td>\n                    <td>\n                        <div class=\"actiontd\">\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"edit\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\"\n                                (click)=\"editEmailSetting(category)\"><i class=\"fa fa-edit\" title=\"Edit\"></i></a>\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"eyeIcon delIcon\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteModal\"\n                                (click)=\"selectedEmailSetting=category\"><i class=\"fa fa-trash-o\" title=\"Delete\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n\n            </table>\n            <p *ngIf=\"emailSettingList?.length ==0\" class=\"text-danger\"> Records not found</p>\n        </div>\n    </div>\n    <!-- Create Email Setting  start here -->\n    <div class=\"modal productModal\" id=\"createModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Create Email Setting</h4>\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <form class=\"createEmailForm\" [formGroup]=\"createemailSettingform\">\n                        <div class=\"\">\n                            <label for=\"product\" class=\"form-label\">Log Module </label>\n                            <select class=\"form-select\" formControlName=\"module\"\n                                [class.is-invalid]=\"createemailSettingform.controls['module'].invalid && createemailSettingform.controls['module'].touched\">\n                                <option *ngFor=\"let item of permissionarr\" [value]=\"item.permission\">\n                                    {{item.permission.replace(\"_\",\" \") |\n                                    titlecase }}</option>\n                            </select>\n                            <small class=\"text-danger mt-4\"\n                                *ngIf=\"createemailSettingform.controls['module'].dirty && createemailSettingform.controls['module'].hasError('required')\">\n                                Please enter category name.\n                            </small>\n                        </div>\n                        <div class=\"add-email\">\n                            <h2>Email To</h2>\n                            <button (click)=\"createaddControl()\"><img src=\"assets/images/icon/plusBlue.png\"\n                                    alt=\"add\" />Add</button>\n                        </div>\n                        <div *ngFor=\"let control of  createemailAsFormArray.controls ;let i = index;\"\n                            formArrayName='emailCreate'>\n                            <div class=\"emaildynamic\" [formGroupName]=\"i\">\n                                <div class=\"input-field\">\n                                    <input matInput type=\"text\" class=\"form-control\" placeholder=\"Enter Email Tool\"\n                                        formControlName=\"emails\">\n                                </div>\n                                <button *ngIf=\"i>0\" class=\"eyeIcon delIcon\" type=\"button\" (click)=\"createremove(i)\"><i\n                                        class=\"fa fa-trash-o\" title=\"Delete\"\n                                        style=\"font-size:12px; color:#FA0000\"></i></button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" data-bs-dismiss=\"modal\" class=\"btn btn-primary\"\n                        (click)=\"saveEmailSetting('create')\" [disabled]=\"createemailSettingform.invalid\">Save</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Delete Product Modal start here -->\n    <div class=\"modal\" id=\"deleteModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Are you sure you want to delete this category?</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closedeletemodal\"\n                        data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"button\" class=\"btn delbtn\" data-bs-dismiss=\"modal\"\n                        (click)=\"saveEmailSetting('delete')\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Update Product Modal start here -->\n    <div class=\"modal productModal\" id=\"updateModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Edit Email Setting</h4>\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <form [formGroup]=\"emailSettingform\">\n                        <div class=\"\">\n                            <label for=\"product\" class=\"form-label\">Log Module </label>\n                            <select class=\"form-select\" formControlName=\"logModule\"\n                                [class.is-invalid]=\"emailSettingform.controls['logModule'].invalid && emailSettingform.controls['logModule'].touched\">\n                                <option *ngFor=\"let item of permissionarr\" [value]=\"item.permission\">\n                                    {{item.permission.replace(\"_\",\" \") | titlecase}}</option>\n                            </select>\n                            <small class=\"text-danger mt-4\"\n                                *ngIf=\"emailSettingform.controls['logModule'].dirty && emailSettingform.controls['logModule'].hasError('required')\">\n                                Please select Catgeory\n                            </small>\n                        </div>\n                        <div class=\"add-email\">\n                            <h2>Email To</h2>\n                            <button (click)=\"addControl()\"><img src=\"assets/images/icon/plusBlue.png\"\n                                    alt=\"add\" />Add</button>\n                        </div>\n                        <div *ngFor=\"let control of  emailFieldAsFormArray.controls ;let i = index;\"\n                            formArrayName='email'>\n                            <div class=\"emaildynamic\" [formGroupName]=\"i\">\n                                <div class=\"input-field\">\n                                    <input matInput type=\"text\" class=\"form-control\" placeholder=\"Email\"\n                                        formControlName=\"emails\">\n                                </div>\n                                <button *ngIf=\"i>0\" class=\"eyeIcon delIcon\" type=\"button\" (click)=\"remove(i)\"><i\n                                        class=\"fa fa-trash-o\" title=\"Delete\"\n                                        style=\"font-size:12px; color:#FA0000\"></i></button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveEmailSetting('edit')\">Save</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-email-setting',\n  templateUrl: './email-setting.component.html',\n  styleUrls: ['./email-setting.component.scss']\n})\nexport class EmailSettingComponent {\n  permissionarr: any = [\n    {\n      \"access\": \"No Access\",\n      \"permission\": \"customer\",\n      \"path\": 'customer'\n    },\n    {\n      \"access\": \"No Access\",\n      \"permission\": \"permission\",\n      \"path\": 'permissions'\n    },\n    {\n      \"access\": \"No Access\",\n      \"permission\": \"ticket\",\n      \"path\": 'ticket'\n    }\n  ];\n  emailSettingList: any;\n  emailSettingform = this.fb.group({\n    logModule: ['', [Validators.required]],\n    path: [''],\n    email: this.fb.array([]),\n  });\n  selectedEmailSetting: any;\n  page = 1;\n  pageSize = 10;\n  title = '';\n  permissions:any;\n  constructor(\n    private fb: FormBuilder,\n    private _permissions: PermissionsService,\n    private auth: AuthService, private _titleservice: Title ) {\n    this._titleservice.setTitle('Email Setting');\n    this.permissions = this._permissions.getPermissions();\n  }\n\n  ngOnInit() {\n    this.getEmailSetting();\n  }\n  get emailFieldAsFormArray(): any {\n    return this.emailSettingform.get('email') as FormArray;\n  }\n  email(): any {\n    return this.fb.group({\n      emails: this.fb.control(''),\n    });\n  }\n  addControl(): void {\n    this.emailFieldAsFormArray.push(this.email());\n  }\n  remove(i: number): void {\n    this.emailFieldAsFormArray.removeAt(i);\n  }\n\n  /*create email setting*/\n\n  createemailSettingform = this.fb.group({\n    module: ['', [Validators.required]],\n    path: ['',],\n    emailCreate: this.fb.array([]),\n  });\n  get createemailAsFormArray(): any {\n    return this.createemailSettingform.get('emailCreate') as FormArray;\n  }\n  createemail(): any {\n    return this.fb.group({\n      emails: this.fb.control(''),\n    });\n  }\n  createaddControl(): void {\n    this.createemailAsFormArray.push(this.email());\n  }\n  createremove(i: number): void {\n    this.createemailAsFormArray.removeAt(i);\n  }\n  /*edit email ends here*/\n  getEmailSetting() {\n    const params = this.getRequestParams(this.title, this.page, this.pageSize);\n    this.auth.getEmailSetting(params).subscribe((res: any) => {\n      this.emailSettingList = res.data.results;\n    })\n  }\n  getRequestParams(searchTitle: string, page: number, pageSize: number): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n  editEmailSetting(data: any) {\n    var count = 0\n\n    this.selectedEmailSetting = data;\n    var emailArr = this.selectedEmailSetting.emails.split(',')\n    this.emailSettingform.controls.logModule.setValue(this.selectedEmailSetting.module)\n    emailArr.forEach((key: any) => {\n      this.addControl();\n    })\n    this.emailSettingform.controls.email.controls.forEach((key: any) => {\n      key.controls.emails.setValue(emailArr[count])\n      count++\n\n    })\n\n  }\n  saveEmailSetting(type: string) {\n\n    if (type === 'edit') {\n      let body = {\n        \"module\": this.emailSettingform.value.logModule,\n        \"emails\": \"\",\n        \"path\": \"\"\n      }\n      this.emailSettingform.value.email?.forEach((item: any) => {\n        body.emails = body.emails.toLowerCase() + item.emails + ',';\n      })\n      body.emails = body.emails.substring(0, body.emails.length - 1);\n      this.permissionarr.forEach((key: any) => {\n        if (key.permission === body.module)\n          body.path = key.path\n      })\n      this.auth.editEmailSetting(this.selectedEmailSetting.id, body).subscribe((res: any) => {\n        this.getEmailSetting();\n        this.emailSettingform.reset();\n      })\n    }\n    else if (type === 'create') {\n      let body = {\n        \"module\": this.createemailSettingform.value.module,\n        \"emails\": \"\",\n        \"path\": this.createemailSettingform.value.path\n      }\n      this.createemailSettingform.value.emailCreate?.forEach((item: any) => {\n        body.emails = body.emails.toLowerCase() + item.emails + ',';\n      })\n      body.emails = body.emails.substring(0, body.emails.length - 1);\n      this.permissionarr.forEach((key: any) => {\n        if (key.permission === body.module)\n          body.path = key.path\n      })\n      this.auth.createEmailSetting(body).subscribe((res: any) => {\n        this.createemailSettingform.reset();\n        this.getEmailSetting();\n      })\n\n    }\n    else if (type === 'delete') {\n      this.auth.deleteEmailSetting(this.selectedEmailSetting.id).subscribe((res: any) => {\n        this.getEmailSetting();\n      })\n    }\n  }\n  onKeyUp(x: any) {\n    this.title = x;\n    this.page = 1;\n    this.getEmailSetting();\n  }\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\">Master Management</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\" routerLinkActive=\"active\"> Log Category</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Log Category</h2>\n            <div class=\"u-add-right\">\n                <div>\n                    <input type=\"text\" #yourInput (keyup)=\"onKeyUp(yourInput.value)\" placeholder=\"Search by log category\" />\n                </div>\n                <div>\n                    <a *ngIf=\"permissions.master_management == 'Full access'\" href=\"javascript:void()\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\"><img\n                            src=\"assets/images/icon/addIcon.png\" alt=\"create\" />Create </a>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>Log Category</th>\n                    <th>Action </th>\n\n                </thead>\n                <tr\n                    *ngFor=\"let category of tempCategory | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalTempCategory};let i = index\">\n                    <td> {{category.name || ''}} </td>\n                    <td>\n                        <div class=\"actiontd\">\n\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"edit\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\"\n                                (click)=\"getProduct(category)\"><i class=\"fa fa-edit\" title=\"Edit\"></i></a>\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"eyeIcon delIcon\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteModal\"\n                                (click)=\"getProduct(category)\"><i class=\"fa fa-trash-o\" title=\"Delete\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n                <tr class=\"errcls\" *ngIf=\"showError\">\n                    Records not found\n                </tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"tempCategory.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\"\n            nextLabel=\"Next\" (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>\n\n<!-- Create Product Modal start here -->\n<div class=\"modal productModal\" id=\"myModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productCreateForm\" (ngSubmit)=\"productCreateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Create Log Category</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <hr />\n                <div class=\"modal-body\">\n                    <div class=\"mb-3\">\n                        <label for=\"product\" class=\"form-label\">Log Category</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                            [class.is-invalid]=\"productCreateForm.controls['name'].invalid && productCreateForm.controls['name'].touched\"\n                            placeholder=\"Enter Category Name\">\n                        <small class=\"text-danger mt-4\"\n                            *ngIf=\"productCreateForm.controls['name'].dirty && productCreateForm.controls['name'].hasError('required')\">\n                            Please enter category name.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closecreatemodal\"\n                        data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productCreateForm.invalid\">Create</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<!-- Update Product Modal start here -->\n<div class=\"modal productModal\" id=\"updateModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productUpdateForm\" (ngSubmit)=\"productUpdateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Edit Product</h4>\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"\">\n                        <label for=\"product\" class=\"form-label\">Product</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                            [class.is-invalid]=\"productCreateForm.controls['name'].invalid && productCreateForm.controls['name'].touched\"\n                            placeholder=\"Enter Category Name\">\n                        <small class=\"text-danger mt-4\"\n                            *ngIf=\"productCreateForm.controls['name'].dirty && productCreateForm.controls['name'].hasError('required')\">\n                            Please enter category name.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productUpdateForm.invalid\">Update</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- Delete Product Modal start here -->\n<div class=\"modal\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Are you sure you want to delete this category?</h4>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" id=\"closedeletemodal\"\n                    data-bs-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn delbtn\" (click)=\"deleteProduct()\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProductService } from '../../services/product.service';\nimport { TemplateCategoryService } from '../../services/template-category.service';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-log-category',\n  templateUrl: './log-category.component.html',\n  styleUrls: ['./log-category.component.scss']\n})\nexport class LogCategoryComponent {\n  productCreateForm!: FormGroup;\n  productUpdateForm!: FormGroup;\n  showError: boolean = false;\n  product_id: any;\n  permissions: any;\n\n  constructor(private _productservice: ProductService, private _permissions: PermissionsService,\n    private _tempcategoryservice: TemplateCategoryService, private _titleservice: Title,\n    private fb: FormBuilder, private toastr: ToastrService) {\n    this._titleservice.setTitle('Log Category');\n    this.productCreateForm = this.fb.group({\n      name: ['', [Validators.required]]\n    });\n    this.productUpdateForm = this.fb.group({\n      name: ['', [Validators.required]]\n    });\n    this.permissions = this._permissions.getPermissions();\n  }\n\n  ngOnInit(): void {\n    this.retrieveTempCategory();\n  }\n\n\n  productCreateFormSubmit() {\n    this._tempcategoryservice.createTempCategory(this.productCreateForm.value).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      this.productCreateForm.reset();\n      document.getElementById('closecreatemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n\n  getProduct(product: any) {\n    this.product_id = product.id;\n    this.productUpdateForm.patchValue({ 'name': product.name });\n  }\n\n  deleteProduct() {\n    this._tempcategoryservice.deleteTempCategory(this.product_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      document.getElementById('closedeletemodal')?.click();\n    });\n\n  }\n\n  productUpdateFormSubmit() {\n    this._tempcategoryservice.updateTempCategory(this.productUpdateForm.value, this.product_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      this.productUpdateForm.reset();\n      document.getElementById('closemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      });\n  }\n\n\n  tempCategory: any = [];\n  page = 1;\n  pageSize = 10;\n  title = '';\n  totalTempCategory: any;\n  getRequestParams(searchTitle: string, page: number, pageSize: number): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveTempCategory(): void {\n    const params = this.getRequestParams(this.title, this.page, this.pageSize);\n    this._tempcategoryservice.getTempCategory(params).subscribe((res: any) => {\n      this.tempCategory = res.data.results;\n      this.showError = this.tempCategory.length == 0 ? true : false;\n      this.totalTempCategory = res.data.count;\n\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveTempCategory();\n  }\n\n  onKeyUp(x: any) {\n    this.title = x;\n    this.page = 1;\n    this.retrieveTempCategory();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { encryption } from 'src/app/encryption';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-master-list',\n  templateUrl: './master-list.component.html',\n  styleUrls: ['./master-list.component.scss']\n})\nexport class MasterListComponent implements OnInit {\n  updateZohoForm: FormGroup\n  constructor(private _titleservice: Title, private fb: FormBuilder, private crud: CrudService,\n    private toastr: ToastrService) {\n    this._titleservice.setTitle('Master Management');\n    this.updateZohoForm = this.fb.group({\n      code: [''],\n      client_id: [''],\n      client_secret: ['']\n    });\n  }\n\n  ngOnInit(): void { }\n  updateZohoCredential() {\n    let body = {\n      code: encryption(this.updateZohoForm.value.code),\n      client_id: encryption(this.updateZohoForm.value.client_id),\n      client_secret: encryption(this.updateZohoForm.value.client_secret)\n    }\n    this.crud.postRequest(`${requestUrl.updateZohoCredential}`, body).then((res: any) => {\n      if (res) {\n        this.toastr.success(res.message);\n        \n      }\n    })\n  }\n  updateZohoCategories() {\n    this.crud.getRequest(`${requestUrl.updateZohoCategories}`).then((res: any) => {\n      if (res) {\n        this.toastr.success(res.data);\n      }\n    })\n  }\n  updateZohoArticles() {\n    this.crud.getRequest(`${requestUrl.updateZohoArticles}`).then((res: any) => {\n      if (res) {\n        this.toastr.success(res.data);\n      }\n    })\n  }\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\" routerLinkActive=\"active\">Master Management</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <h4 style=\"text-align:left;\">Log settings</h4>\n        <div class=\"mcard-holder\">\n            <!-- <div class=\"master-card\">\n                <h2>Log Category</h2>\n                <div class=\"card-content\">\n                    <p>Create log category to get logs for events.Exa: Wallet.</p>\n                </div>\n                <div class=\"card-nav\">\n                    <a routerLink=\"/admin/master/log-category\">View </a>\n                </div>\n            </div> -->\n            <div class=\"master-card\">\n                <h2>Log Email Setting</h2>\n                <div class=\"card-content\">\n                    <p>Send log email to user for events.Exa: xyz@gmail.com .</p>\n                </div>\n                <div class=\"card-nav\">\n                    <a routerLink=\"/admin/master/email-setting\">View </a>\n                </div>\n            </div>\n        </div>\n        <h4 style=\"text-align:left;\">Ticket settings</h4>\n        <div class=\"mcard-holder\">\n            <div class=\"master-card\">\n                <h2>Ticket Custom Status </h2>\n                <div class=\"card-content\">\n                    <p>Create and customize custom ticket status for tickets.</p>\n                </div>\n                <div class=\"card-nav\">\n                    <a routerLink=\"/admin/master/ticket-status\">View </a>\n                </div>\n            </div>\n            <div class=\"master-card\">\n                <h2>Ticket Category </h2>\n                <div class=\"card-content\">\n                    <p>Create custom ticket categories for tickets.Example: Sales,Support,Finance.</p>\n                </div>\n                <div class=\"card-nav\">\n                    <a routerLink=\"/admin/master/ticket-category\">View </a>\n                </div>\n            </div>\n        </div>\n        <h4 style=\"text-align:left;\">Product settings</h4>\n        <div class=\"mcard-holder\">\n            <div class=\"master-card\">\n                <h2>Product</h2>\n                <div class=\"card-content\">\n                    <p>Create Products to show on registration page.Exa: KESS3 .</p>\n                </div>\n                <div class=\"card-nav\">\n                    <a routerLink=\"/admin/master/product\">View </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-master-management',\n  templateUrl: './master-management.component.html',\n  styleUrls: ['./master-management.component.scss']\n})\nexport class MasterManagementComponent implements OnInit {\n\n  constructor(\n    private _titleservice:Title\n  )\n  {\n    \n    this._titleservice.setTitle('Master Management');\n\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<router-outlet></router-outlet>\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\">Master Management</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\" routerLinkActive=\"active\">Products</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Product</h2>\n            <div class=\"u-add-right\">\n                <div>\n                    <input type=\"text\" #yourInput (keyup)=\"onKeyUp(yourInput.value)\" placeholder=\"Search by name\" />\n                </div>\n                <div>\n                    <a *ngIf=\"permissions.master_management == 'Full access'\" href=\"javascript:void()\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\"><img\n                            src=\"assets/images/icon/addIcon.png\" alt=\"create\"/>Create </a>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>Product Name</th>\n                    <th>Action </th>\n                </thead>\n                <tr\n                    *ngFor=\"let product of products | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalProduct};let i = index\">\n                    <td> {{product.product_name || ''}} </td>\n                    <td>\n                        <div class=\"actiontd\">\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"edit\" data-bs-toggle=\"modal\"\n                                data-bs-target=\"#updateModal\" (click)=\"getProduct(product)\"><i class=\"fa fa-edit\" title=\"Edit\"\n                                   ></i></a>\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"eyeIcon delIcon\" data-bs-toggle=\"modal\"\n                                data-bs-target=\"#deleteModal\" (click)=\"getProduct(product)\"><i\n                                     class=\"fa fa-trash-o\" title=\"Delete\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n                <tr class=\"errcls\" *ngIf=\"showError\">Records not found</tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"products.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n            (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>\n\n<!-- Create Product Modal start here -->\n<div class=\"modal productModal\" id=\"myModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productCreateForm\" (ngSubmit)=\"productCreateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Create Product</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <hr />\n                <div class=\"modal-body\">\n                    <div>\n                        <label for=\"product\" class=\"form-label\">Product</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"product_name\"\n                            [class.is-invalid]=\"productCreateForm.controls['product_name'].invalid && productCreateForm.controls['product_name'].touched\"\n                            placeholder=\"Enter Product\">\n                        <small class=\"text-danger mt-4\"\n                            *ngIf=\"productCreateForm.controls['product_name'].dirty && productCreateForm.controls['product_name'].hasError('required')\">\n                            Please enter product name.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closecreatemodal\"\n                        data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productCreateForm.invalid\">Create</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<!-- Update Product Modal start here -->\n<div class=\"modal productModal\" id=\"updateModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productUpdateForm\" (ngSubmit)=\"productUpdateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Update Product</h4>\n                    <hr />\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"\">\n                        <label for=\"product\" class=\"form-label\">Product</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"product_name\"\n                            [class.is-invalid]=\"productCreateForm.controls['product_name'].invalid && productCreateForm.controls['product_name'].touched\"\n                            placeholder=\"Enter Product\">\n                        <small class=\"text-danger mt-4\"\n                            *ngIf=\"productCreateForm.controls['product_name'].dirty && productCreateForm.controls['product_name'].hasError('required')\">\n                            Please enter product name.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productUpdateForm.invalid\">Update</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<!-- Delete Product Modal start here -->\n<div class=\"modal\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Are you sure you want to delete this Product?</h4>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n            </div>\n            <hr/>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" id=\"closedeletemodal\"\n                    data-bs-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn delbtn\" (click)=\"deleteProduct()\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../services/product.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  productCreateForm!: FormGroup;\n  productUpdateForm!: FormGroup;\n\n  product_id: any;\n  showError:boolean = false;\n  permissions:any;\n  constructor( private _productservice: ProductService, private _titleservice: Title,\n    private fb: FormBuilder, private toastr: ToastrService, private _permissions: PermissionsService ) {\n    this._titleservice.setTitle('Products');\n    this.productCreateForm = this.fb.group({\n      product_name: ['', [Validators.required]]\n    });\n    this.productUpdateForm = this.fb.group({\n      product_name: ['', [Validators.required]]\n    });\n    this.permissions = this._permissions.getPermissions();\n  }\n\n  ngOnInit(): void {\n\n    this.retrieveProducts();\n\n  }\n\n\n  productCreateFormSubmit() {\n    this._productservice.createProduct(this.productCreateForm.value).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveProducts();\n      this.productCreateForm.reset();\n      document.getElementById('closecreatemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n\n  getProduct(product: any) {\n    this.product_id = product.id;\n    this.productUpdateForm.patchValue({ 'product_name': product.product_name });\n  }\n\n  deleteProduct() {\n    this._productservice.deleteProduct(this.product_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveProducts();\n      document.getElementById('closedeletemodal')?.click();\n    });\n\n  }\n\n  productUpdateFormSubmit() {\n    this._productservice.updateProduct(this.productUpdateForm.value, this.product_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveProducts();\n      this.productUpdateForm.reset();\n      document.getElementById('closemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      });\n  }\n\n\n  products: any = [];\n  page = 1;\n  pageSize = 10;\n  title = '';\n  totalProduct: any;\n  getRequestParams(searchTitle: string, page: number, pageSize: number): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveProducts(): void {\n    const params = this.getRequestParams(this.title, this.page, this.pageSize);\n    this._productservice.getProducts(params).subscribe((res: any) => {\n      this.products = res.data.results;\n      this.showError = this.products.length == 0 ? true : false;\n      this.totalProduct = res.data.count;\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveProducts();\n  }\n\n  onKeyUp(x: any) {\n    this.title = x;\n    this.page = 1;\n    this.retrieveProducts();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketCategoryService {\n\n  baseUrl = environment.baseUrl;\n  constructor(private _http:HttpClient) \n  {\n\n  }\n\n  getAllTempCategory()\n  {\n    return this._http.get(this.baseUrl+\"/api/v1/admin/ticket-category/\");\n  }\n\n  getTempCategory(params:any)\n  {\n    return this._http.get(this.baseUrl+\"/api/v1/admin/ticket-category/\", { params });\n  }\n\n  createTempCategory(data:any)\n  {\n    return this._http.post(this.baseUrl+'/api/v1/admin/ticket-category/',data);\n  }\n\n  updateTempCategory(data:any,id:any)\n  {\n    return this._http.put(`${this.baseUrl}/api/v1/admin/ticket-category/${id}/`,data);\n  }\n\n  deleteTempCategory(id:any)\n  {\n    return this._http.delete(`${this.baseUrl}/api/v1/admin/ticket-category/${id}/`);\n  }\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\">Master Management</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/master\" routerLinkActive=\"active\">Ticket Categories</a></li>\n    </ul>\n\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Ticket Category</h2>\n            <div class=\"u-add-right\">\n                <div>\n                    <input type=\"text\" #yourInput (keyup)=\"onKeyUp(yourInput.value)\"  placeholder=\"Search by category\"/>\n                </div>\n                <div>\n                    <a *ngIf=\"permissions.master_management == 'Full access'\" href=\"javascript:void()\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\"><img\n                            src=\"assets/images/icon/addIcon.png\" alt=\"create\" />Create </a>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>Category</th>\n                    <th>Action </th>\n                </thead>\n                <tr *ngFor=\"let category of tempCategory | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalTempCategory};let i = index\">\n                    <td> {{category.name || ''}} </td>\n                    <td>\n                        <div class=\"actiontd\">\n\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"edit\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\" (click)=\"getProduct(category)\" ><i class=\"fa fa-edit\" title=\"Edit\" ></i></a>\n                            <a *ngIf=\"permissions.master_management == 'Full access'\" class=\"eyeIcon delIcon\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteModal\" (click)=\"getProduct(category)\"><i class=\"fa fa-trash-o\" title=\"Delete\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <p class=\"text-danger\" *ngIf=\"showError\">Records not found</p>\n\n        </div>\n        <pagination-controls *ngIf=\"tempCategory.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n        (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>\n\n<!-- Create Product Modal start here -->\n<div class=\"modal productModal\" id=\"myModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productCreateForm\"  (ngSubmit)=\"productCreateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Create Ticket Category</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n               <hr/>\n                <div class=\"modal-body\">\n                    <div class=\"mb-3 \">\n                        <label for=\"product\" class=\"form-label\" >Category </label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                        [class.is-invalid]=\"productCreateForm.controls['name'].invalid && productCreateForm.controls['name'].touched\"\n                        placeholder=\"Enter Category Name\">\n                        <p class=\"text-danger\" style=\"text-align: left;padding-top:5px;;\" *ngIf=\"productCreateForm.controls['name'].dirty && productCreateForm.controls['name'].hasError('required')\">\n                            Please enter category name.\n                        </p>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closecreatemodal\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productCreateForm.invalid\">Create</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<!-- Update Product Modal start here -->\n<div class=\"modal productModal\" id=\"updateModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"productUpdateForm\"  (ngSubmit)=\"productUpdateFormSubmit()\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Edit Ticket Category</h4>\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" data-bs-dismiss=\"modal\"></button>\n                </div>\n               <hr/>\n                <div class=\"modal-body\">\n                    <div class=\"\">\n                        <label for=\"product\" class=\"form-label\" >Category</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                        [class.is-invalid]=\"productCreateForm.controls['name'].invalid && productCreateForm.controls['name'].touched\"\n                        placeholder=\"Enter Category Name\">\n                        <p class=\"text-danger\" style=\"text-align:left;padding-top:5px;\" *ngIf=\"productCreateForm.controls['name'].dirty && productCreateForm.controls['name'].hasError('required')\">\n                            Please enter category name.\n                        </p>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productUpdateForm.invalid\">Save</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- Delete Product Modal start here -->\n<div class=\"modal\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Are you sure you want to delete this  category?</h4>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-danger\" id=\"closedeletemodal\" data-bs-dismiss=\"modal\">Cancel</button>\n          <button type=\"button\" class=\"btn delbtn\" (click)=\"deleteProduct()\" >Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../services/product.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TicketCategoryService } from '../../services/ticket-category.service';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-ticket-category',\n  templateUrl: './ticket-category.component.html',\n  styleUrls: ['./ticket-category.component.scss']\n})\nexport class TicketCategoryComponent implements OnInit {\n\n  productCreateForm!: FormGroup;\n  productUpdateForm!: FormGroup;\n  showError: boolean = false;\n  product_id: any;\n  permissions:any;\n\n  constructor(private _productservice: ProductService, private _ticketcategoryservice: TicketCategoryService,\n    private _titleservice: Title, private fb: FormBuilder, private toastr: ToastrService,\n    private _permissions: PermissionsService\n  ) {\n    this._titleservice.setTitle('Ticket Category');\n    this.productCreateForm = this.fb.group({\n      name: ['', [Validators.required]]\n    });\n    this.productUpdateForm = this.fb.group({\n      name: ['', [Validators.required]]\n    });\n    this.permissions = this._permissions.getPermissions();\n  }\n\n  ngOnInit(): void {\n\n    this.retrieveTempCategory();\n\n  }\n\n\n  productCreateFormSubmit() {\n    this._ticketcategoryservice.createTempCategory(this.productCreateForm.value).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      this.productCreateForm.reset();\n      document.getElementById('closecreatemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n\n  getProduct(product: any) {\n    this.product_id = product.id;\n    this.productUpdateForm.patchValue({ 'name': product.name });\n  }\n\n  deleteProduct() {\n    this._ticketcategoryservice.deleteTempCategory(this.product_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      document.getElementById('closedeletemodal')?.click();\n    });\n\n  }\n\n  productUpdateFormSubmit() {\n    this._ticketcategoryservice.updateTempCategory(this.productUpdateForm.value, this.product_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTempCategory();\n      this.productUpdateForm.reset();\n      document.getElementById('closemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      });\n  }\n\n\n  tempCategory: any = [];\n  page = 1;\n  pageSize = 10;\n  title = '';\n  totalTempCategory: any;\n  getRequestParams(searchTitle: string, page: number, pageSize: number): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveTempCategory(): void {\n    const params = this.getRequestParams(this.title, this.page, this.pageSize);\n    this._ticketcategoryservice.getTempCategory(params).subscribe((res: any) => {\n      this.tempCategory = res.data.results;\n      this.showError = this.tempCategory.length == 0 ? true : false;\n      this.totalTempCategory = res.data.count;\n\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveTempCategory();\n  }\n\n  onKeyUp(x: any) {\n    this.title = x;\n    this.page = 1;\n    this.retrieveTempCategory();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketStatusService {\n\n  baseUrl = environment.baseUrl;\n  constructor(private _http:HttpClient) \n  {\n\n  }\n\n  getTicket(params:any)\n  {\n    return this._http.get(this.baseUrl+\"/api/v1/admin/ticket-status/\", { params });\n  }\n\n  createTicketStatus(data:any)\n  {\n    return this._http.post(this.baseUrl+'/api/v1/admin/ticket-status/',data);\n  }\n\n  updateTicket(data:any,id:any)\n  {\n    return this._http.put(`${this.baseUrl}/api/v1/admin/ticket-status/${id}/`,data);\n  }\n\n  deleteTicket(id:any)\n  {\n    return this._http.delete(`${this.baseUrl}/api/v1/admin/ticket-status/${id}/`);\n  }\n\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\">\n            <a routerLink=\"/admin\">Home</a>\n        </li>\n        <li class=\"breadcrumb-item\">\n            <a routerLink=\"/admin/master\">Master Management</a>\n        </li>\n        <li class=\"breadcrumb-item\">\n            <a routerLink=\"/admin/master/ticket-status\" routerLinkActive=\"active\">Ticket Status Setting</a>\n        </li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Ticket Status Setting</h2>\n            <div class=\"u-add-right\">\n                <div>\n                    <input \n                        #yourInput \n                        type=\"text\" \n                        (keyup)=\"onKeyUp(yourInput.value)\"\n                        placeholder=\"Search by internal status\" \n                    />\n                </div>\n                <div>\n                    <a *ngIf=\"permissions.master_management == 'Full access'\" \n                        data-bs-toggle=\"modal\" data-bs-target=\"#createModal\">\n                        <img src=\"assets/images/icon/addIcon.png\"alt=\"create\" />\n                        Create \n                    </a>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>Internal Status</th>\n                    <th>Customer Status </th>\n                    <th>Action</th>\n                </thead>\n                <tr\n                    *ngFor=\"let ticket of tickets | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalTicket};let i = index\">\n                    <td> {{ticket.team_status || ''}} </td>\n                    <td> {{ticket.display_user_status || ''}} </td>\n                    <td>\n                        <div class=\"actiontd\">\n                            <a *ngIf=\"permissions.permission == 'Full access'\" class=\"edit\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\"\n                                (click)=\"getTicketDetail(ticket)\"><i class=\"fa fa-edit\" title=\"Edit\"></i></a>\n                            <a *ngIf=\"permissions.permission == 'Full access'\" class=\"eyeIcon delIcon\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteModal\"\n                                (click)=\"getTicketDetail(ticket)\"><i class=\"fa fa-trash-o\" title=\"Delete\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n                <tr class=\"errcls\" *ngIf=\"showError\">\n                    Records not found\n                </tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"tickets.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n            (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n    <!-- Create Email Setting  start here -->\n    <div class=\"modal productModal\" id=\"createModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Create Ticket Status</h4>\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" (click)=\"ticketCreateFormReset()\"\n                        data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <form id=\"ticketCreateFormid\" [formGroup]=\"ticketCreateForm\" (ngSubmit)=\"ticketCreateFormSubmit()\">\n                        <div class=\"\">\n                            <label for=\"team_status\" class=\"form-label\">Internal Status </label>\n                            <input class=\"form-control mt-3\" type=\"text\" formControlName=\"team_status\"\n                                [class.is-invalid]=\"ticketCreateForm.controls['team_status'].invalid && ticketCreateForm.controls['team_status'].touched\"\n                                placeholder=\"Enter internal status\" />\n                            <p class=\"text-danger\" style=\"text-align: left;padding-top:5px;\"\n                                *ngIf=\"ticketCreateForm.controls['team_status'].dirty && ticketCreateForm.controls['team_status'].hasError('required')\">\n                                Please enter internal status.\n                            </p>\n                        </div>\n                        <div class=\"mt-4\">\n                            <label for=\"product\" class=\"form-label\"> Customer Status </label>\n                            <select class=\"form-select\" formControlName=\"user_status\">\n                                <option disabled='true'> Select customer status </option>\n                                <option value=\"1\"> Pending </option>\n                                <option value=\"2\"> On Hold </option>\n                                <option value=\"3\"> Closed </option>\n                                <option value=\"4\"> Inprogress </option>\n                                <option value=\"5\"> New </option>\n                                <option value=\"6\"> Pending reply </option>\n                                <option value=\"7\"> In Development </option>\n                                <option value=\"8\"> Escalated </option>\n                                <option value=\"9\"> Awaiting feedback </option>\n                                <option value=\"10\"> ECU Booked in </option>\n                            </select>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closecreatemodal\" data-bs-dismiss=\"modal\"\n                        (click)=\"ticketCreateFormReset()\">Cancel</button>\n                    <button *ngIf=\"permissions.permission == 'Full access'\" type=\"submit\" form=\"ticketCreateFormid\" class=\"btn btn-primary\"\n                        [disabled]=\"ticketCreateForm.invalid\">Save</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Delete Product Modal start here -->\n    <div class=\"modal\" id=\"deleteModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Are you sure you want to delete this <br> ticket status setting ?</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closedeletemodal\"\n                        data-bs-dismiss=\"modal\">Cancel</button>\n                    <button *ngIf=\"permissions.permission == 'Full access'\" type=\"button\" class=\"btn delbtn\" (click)=\"deleteTicket()\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Update Product Modal start here -->\n    <div class=\"modal productModal\" id=\"updateModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Edit Ticket Status</h4>\n                    <button type=\"button\" class=\"btn-close\" id=\"closemodal\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <form id=\"ticketUpdateFormid\" [formGroup]=\"ticketUpdateForm\" (ngSubmit)=\"ticketUpdateFormSubmit()\">\n                        <div class=\"\">\n                            <label for=\"team_status\" class=\"form-label\">Internal Status </label>\n                            <input class=\"form-control mt-3\" type=\"text\" formControlName=\"team_status\"\n                                [class.is-invalid]=\"ticketUpdateForm.controls['team_status'].invalid && ticketUpdateForm.controls['team_status'].touched\"\n                                placeholder=\"Enter internal status\" />\n                            <small class=\"text-danger\" style=\"text-align:center;padding-top:5px;\"\n                                *ngIf=\"ticketUpdateForm.controls['team_status'].dirty && ticketUpdateForm.controls['team_status'].hasError('required')\">\n                                Please enter internal status.\n                            </small>\n                        </div>\n                        <div class=\"mt-4\">\n                            <label for=\"product\" class=\"form-label\"> Customer Status </label>\n                            <select class=\"form-select\" formControlName=\"user_status\">\n                                <option disabled='true'> Select customer status </option>\n                                <option value=\"1\"> Pending </option>\n                                <option value=\"2\"> On Hold </option>\n                                <option value=\"3\"> Closed </option>\n                                <option value=\"4\"> In Progress </option>\n                                <option value=\"5\"> New </option>\n                                <option value=\"6\"> Pending reply </option>\n                                <option value=\"7\"> In Development </option>\n                                <option value=\"8\"> Escalated </option>\n                                <option value=\"9\"> Awaiting feedback </option>\n                                <option value=\"10\"> ECU Booked in </option>\n                            </select>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"closeUpdatemodal\"\n                        data-bs-dismiss=\"modal\">Cancel</button>\n                    <button *ngIf=\"permissions.permission == 'Full access'\" type=\"submit\" form=\"ticketUpdateFormid\" class=\"btn btn-primary\"\n                        [disabled]=\"ticketUpdateForm.invalid\">Update</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoryComponent } from './category/category.component';\nimport { EmailSettingComponent } from './email-setting/email-setting.component';\nimport { LogCategoryComponent } from './log-category/log-category.component';\nimport { MasterListComponent } from './master-list/master-list.component';\nimport { MasterManagementComponent } from './master-management.component';\nimport { ProductComponent } from './product/product.component';\nimport { TicketCategoryComponent } from './ticket-category/ticket-category.component';\nimport { TicketStatusComponent } from './ticket-status/ticket-status.component';\n\nconst routes: Routes = [\n  {path:'',component:MasterManagementComponent,children:[\n    {path:'',component:MasterListComponent},\n    {path:'product',component:ProductComponent},\n    {path:'category',component:CategoryComponent},\n    {path:'log-category',component:LogCategoryComponent},\n    {path:'email-setting',component:EmailSettingComponent},\n    {path:'ticket-status',component:TicketStatusComponent},\n    {path:'ticket-category',component:TicketCategoryComponent},\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MasterManagementRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { TicketStatusService } from '../../services/ticket-status.service';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-ticket-status',\n  templateUrl: './ticket-status.component.html',\n  styleUrls: ['./ticket-status.component.scss']\n})\nexport class TicketStatusComponent implements OnInit {\n\n  ticketCreateForm!: FormGroup;\n  ticketUpdateForm!: FormGroup;\n  showError: boolean = false;\n  ticket_id: any;\n  permissions: any;\n  constructor(\n    private _titleservice: Title, private _ticketstatusservice: TicketStatusService,\n    private toastr: ToastrService, private _permissions: PermissionsService, private fb: FormBuilder) {\n    this._titleservice.setTitle('Ticket Status Setting');\n    this.ticketCreateForm = this.fb.group({\n      team_status: ['', [Validators.required]],\n      user_status: ['1', [Validators.required]]\n    });\n\n    this.ticketUpdateForm = this.fb.group({\n      team_status: ['', [Validators.required]],\n      user_status: ['1', [Validators.required]]\n    });\n    this.permissions = this._permissions.getPermissions();\n\n  }\n\n  ngOnInit(): void {\n\n    this.retrieveTicketStatus();\n\n\n  }\n\n  ticketCreateFormReset() {\n    this.ticketCreateForm.reset();\n  }\n\n  ticketCreateFormSubmit() {\n    this._ticketstatusservice.createTicketStatus(this.ticketCreateForm.value).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTicketStatus();\n      this.ticketCreateForm.reset();\n      document.getElementById('closecreatemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n\n  ticketUpdateFormSubmit() {\n    this._ticketstatusservice.updateTicket(this.ticketUpdateForm.value, this.ticket_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTicketStatus();\n      document.getElementById('closeUpdatemodal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      });\n  }\n\n  getTicketDetail(ticket: any) {\n    this.ticket_id = ticket.id;\n    this.ticketUpdateForm.patchValue({ \"team_status\": ticket.team_status, \"user_status\": ticket.user_status });\n  }\n\n  deleteTicket() {\n    this._ticketstatusservice.deleteTicket(this.ticket_id).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.retrieveTicketStatus();\n      document.getElementById('closedeletemodal')?.click();\n    });\n  }\n\n\n  tickets: any = [];\n  page = 1;\n  pageSize = 10;\n  title = '';\n  totalTicket: any;\n  getRequestParams(searchTitle: string, page: number, pageSize: number): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveTicketStatus(): void {\n    \n    if(this.title && this.title.length > 2 && \"escalated\".includes(this.title.toLowerCase())) {\n      this.title = \"Escalated\";\n    }\n    if(this.title && this.title.length > 2 && \"in development\".includes(this.title.toLowerCase())) {\n      this.title = \"In Development\";\n    }\n    const params = this.getRequestParams(this.title, this.page, this.pageSize);\n    this._ticketstatusservice.getTicket(params).subscribe((res: any) => {\n      this.tickets = res.data.results;\n      this.showError = this.tickets.length == 0 ? true : false;\n      this.totalTicket = res.data.count;\n\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveTicketStatus();\n  }\n\n  onKeyUp(x: any) {\n    this.title = x;\n    this.page = 1;\n    this.retrieveTicketStatus();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MasterManagementRoutingModule } from './master-management-routing.module';\nimport { MasterManagementComponent } from './master-management.component';\nimport { CategoryComponent } from './category/category.component';\nimport { ProductComponent } from './product/product.component';\nimport { LogCategoryComponent } from './log-category/log-category.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MasterListComponent } from './master-list/master-list.component';\nimport { EmailSettingComponent } from './email-setting/email-setting.component';\nimport { TicketStatusComponent } from './ticket-status/ticket-status.component';\nimport { TicketCategoryComponent } from './ticket-category/ticket-category.component';\n\n@NgModule({\n  declarations: [\n    MasterManagementComponent,\n    CategoryComponent,\n    ProductComponent,\n    LogCategoryComponent,\n    MasterListComponent,\n    EmailSettingComponent,\n    TicketStatusComponent,\n    TicketCategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    MasterManagementRoutingModule,\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class MasterManagementModule { }\n"],"x_google_ignoreList":[]}