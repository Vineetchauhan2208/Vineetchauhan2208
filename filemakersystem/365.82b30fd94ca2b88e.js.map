{"version":3,"file":"365.82b30fd94ca2b88e.js","mappings":"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","names":["ManualHandleComponent","constructor","_titleservice","this","setTitle","static","core","selectors","i0","EncodeComponent","formBuilder","crud","notification","FormData","vehicleInformation","group","select_tool","ngOnInit","onMessageAdmin","subscribe","res","type","getEncodeList","getRequest","requestUrl","pageNo","pageSize","then","encodeFileData","data","results","totalRequest","count","handlePageChange","event","createVehicleModal","formData","append","value","forEach","key","onFileChange","target","files","file","FileReader","readAsDataURL","downloadKtagDecodeFile","postRequest","url","decode_obj","result","encodedFileURL","base64ToBlob","name","b64Data","contentType","sliceSize","replace","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","saveAs","Blob","ids","decode_r11","DecodeComponent","toastr","_permissions","router","pageService","id","readFileUrl","decodeFileUrl","idFileUrl","filterTicketForm","tool_used","status","permissions","getPermissions","checkPage","getPageDetail","getDecodeFileData","savePageDetail","window","location","href","field","order","param","sortField","sortOrder","decodeList","element","showEcodedFile","encode_result","EEPROM","Micro","Flash","MapFile","display_tool_type_status","async_response","components","item","bootBenchComponents","filterlist","uploadFile","success","message","fileInput","nativeElement","error","viewDecodeFiles","navigateByUrl","localStorage","setItem","JSON","stringify","decode_response","decode","fileType","decodedFileURL","selectedDecode","readFileURL","idFileURL","obdDecodedFileURL","tdControl","show_EEPROM","show_Micro","show_flash","show_mapFile","navigateON","navigate","queryParams","eId","ctx","$event","item_r40","routes","path","component","children","DecodeFileViewComponent","guid","duration","slotGUID","userInfo","hasFailed","startedOn","callbackURL","completedOn","isCompleted","isSuccessful","additionalInfo","asyncOperationType","clientApplicationGUID","recommendedPollingInterval","decodeFileDataList","parse","getItem","information","EncodeViewComponent","ar","kess3_type","ktag_type","encodeFileForm","kessv2_file_guid","modified_file_guid","original_file_guid","cvn_needed","_value","getEncode","response","modified_guid","file_type","disableCheck","selectedDecodeFile","kess3Mode","showAsync","Object","keys","kess3EncodeFileData","body","kess3_mode","will_correct_cvn","console","log","micro_file_guid","flash_file_guid","eeprom_file_guid","mapfile_file_guid","is_correct_cvn","parent","create","listType","encodeKtag","micro_guid","flash_guid","eeprom_guid","map_file_guid","EncodeCreateComponent","slot_guid","Validators","controls","setValue","display_type_status","encodeId","decodeSecondList","encodeFileResponse","showProcessingError","showEncodeTabBtn","ViewDownloadFileComponent","snapshot","paramMap","get","directoryFiles","ManualHandleRoutingModule","RouterModule","ManualHandleModule","CommonModule","ReactiveFormsModule","FormsModule","NgxJsonViewerModule","NgxPaginationModule","SharedComponentsModule","__WEBPACK_AMD_DEFINE_FACTORY__","c","a","b","d","XMLHttpRequest","open","responseType","onload","g","onerror","send","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","test","userAgent","HTMLAnchorElement","prototype","h","URL","webkitURL","j","createElement","download","rel","origin","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","autoBom","warn","title","innerText","HTMLElement","safari","k","onloadend","l","m","module","exports"],"sourceRoot":"webpack:///","sources":["./src/app/admin/manual-handle/manual-handle.component.ts","./src/app/admin/manual-handle/manual-handle.component.html","./src/app/admin/manual-handle/encode/encode.component.html","./src/app/admin/manual-handle/encode/encode.component.ts","./src/app/admin/manual-handle/decode/decode.component.html","./src/app/admin/manual-handle/decode/decode.component.ts","./src/app/admin/manual-handle/decode-file-view/decode-file-view.component.html","./src/app/admin/manual-handle/encode-view/encode-view.component.html","./src/app/admin/manual-handle/encode-create/encode-create.component.html","./src/app/admin/manual-handle/view-download-file/view-download-file.component.html","./src/app/admin/manual-handle/manual-handle-routing.module.ts","./src/app/admin/manual-handle/decode-file-view/decode-file-view.component.ts","./src/app/admin/manual-handle/encode-view/encode-view.component.ts","./src/app/admin/manual-handle/encode-create/encode-create.component.ts","./src/app/admin/manual-handle/view-download-file/view-download-file.component.ts","./src/app/admin/manual-handle/manual-handle.module.ts","./node_modules/file-saver/dist/FileSaver.min.js"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-manual-handle',\n  templateUrl: './manual-handle.component.html',\n  styleUrls: ['./manual-handle.component.scss']\n})\nexport class ManualHandleComponent {\n\n  constructor(private _titleservice: Title){\n    this._titleservice.setTitle('Manual Coding');\n  }\n}\n","<router-outlet></router-outlet>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/manual-handle/encode\" routerLinkActive=\"active\">Encode\n   </a></li></ul>\n            <!-- Card 1 @Manage Vehicle -->\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Encode File</h2>\n            <button [routerLink]=\"['/admin/manual-handle/encode-create']\" class=\"btn submitBtn\"> Create</button>\n\n        </div>\n        <div class=\"dropDown\">\n\n            <!-- <form [formGroup]=\"vehicleInformation\">\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Select Tool</label>\n                    <select class=\"form-select\" formControlName=\"select_tool\">\n                        <option disabled>Select Tool</option>\n                        <option value=\"KESSv2\"> KESSv2 </option>\n                    </select>\n                </div>\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Submit File</label>\n                    <input type=\"file\">\n                </div>\n                <div class=\"btnDiv\">\n                    <button class=\"btn submitBtn\" (click)=\"createVehicleModal()\"> Submit</button>\n                </div>\n            </form> -->\n        </div>\n    </div>\n    <!-- Card 2 Manage ECU -->\n    <div class=\"ulist-div\" style=\"margin-top: 20px;\">\n        <div class=\"u-add \">\n        </div>\n        <div class=\"dropDown\">\n            <div class=\"responsive-tbl \">\n                <table>\n                    <thead>\n                        <th>Encode Id </th>\n                        <th>Tool Used</th>\n                         <th>Created On</th>\n                        <th> Encoded File </th> \n                        <th> Status </th>\n                        <th> Action </th>\n                    </thead>\n                    <tr *ngFor=\"let list of encodeFileData | paginate : {itemsPerPage: pageSize,currentPage: pageNo,totalItems: totalRequest};let i = index\">\n                        <td> {{list?.ids}} </td>\n                        <td> {{list?.decode?.display_tool_type_status}} </td>\n                        <td> {{notification.formatDate(list?.created_at)}} </td>\n                        <td>\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!list?.decode_obj?.result?.encodedFileURL\">\n                                N/A</p><a *ngIf=\"list?.decode_obj?.result?.encodedFileURL\" (click)=\"downloadKtagDecodeFile(list)\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                                    </td>\n                        <td><span\n                            [ngClass]=\"list?.final_status == 'Success'?'success':'failed'\">{{list?.final_status}}</span>\n                    </td>\n                        <td>\n                            <div class=\"actiontd\">\n                                <a class=\"eyeIcon\" [routerLink]=\"['/admin/manual-handle/encode-view']\"[queryParams]=\"{id: list.ids}\"><i class=\"fa fa-eye\" title=\"View\"></i></a>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n                <pagination-controls *ngIf=\"encodeFileData?.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\"\n                nextLabel=\"Next\" (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n            </div>\n        </div>\n    </div>","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-encode',\n  templateUrl: './encode.component.html',\n  styleUrls: ['./encode.component.scss']\n})\nexport class EncodeComponent {\n  vehicleInformation!: FormGroup;\n  formData: any = new FormData();\n  encodeFileData:any;\n  pageNo: number = 1;\n  pageSize: number = 10;\n  totalRequest: number = 0;\n  constructor(private formBuilder: FormBuilder, private crud: CrudService,\n    public notification: NotificationsService) {\n    this.vehicleInformation = this.formBuilder.group({\n      select_tool: [''],\n    });\n  }\n  ngOnInit() {\n    this.notification.onMessageAdmin.subscribe((res: any) => {\n      if (res && res.type === 'admin_file_encode') {\n       this.getEncodeList(); \n      }\n    });\n    this.getEncodeList();\n  }\n  getEncodeList(){\n    this.crud.getRequest(`${requestUrl.getEncodeModified}?page=${this.pageNo}&page_size=${this.pageSize}`).then((res: any) => {\n      if (res)\n        this.encodeFileData = res.data.results;\n        this.totalRequest = res.data.count;\n    })\n  }\n  handlePageChange(event: any): void {\n    this.pageNo = event;\n    this.getEncodeList();\n  }\n\n  createVehicleModal() {\n    this.formData.append('a', this.vehicleInformation.value.select_tool);\n    this.formData.forEach((key: any) => {\n    })\n\n    // this.crud.postRequest(`${requestUrl.createVehicleModel}`, body).then((res: any) => {\n    //   if (res) {\n    //     this.toastr.success(res.message);\n    //     this.vehicleInformation.controls['model'].setValue('');\n    //   }\n    // })\n  }\n  onFileChange(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      // reader.onload = e => this.image = reader.result;\n      reader.readAsDataURL(file);\n      this.formData.append(\"image\", file);\n    }\n  }\n  downloadKtagDecodeFile(file: any) {\n    let body =\n    {\n      \"url\": file?.decode_obj?.result?.encodedFileURL\n    }\n\n    this.crud.postRequest(`${requestUrl.downloadAnyFile}`, body).then((res: any) => {\n      if (res) {\n        this.base64ToBlob(res.data.data, res.data.name, file);\n      }\n    })\n  }\n  base64ToBlob(b64Data: any, name: string, file:any, contentType = 'octet/stream', sliceSize = 512) {\n    b64Data = b64Data.replace(/\\s/g, ''); //IE compatibility...\n    let byteCharacters = atob(b64Data);\n    let byteArrays = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      let slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      let byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      let byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n      saveAs(new Blob(byteArrays, { type: contentType }), file.ids + '_encode_' + name);\n  }\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/manual-handle/decode\" routerLinkActive=\"active\">Decode\n            </a></li>\n    </ul>\n    <!-- Card 1 @Manage Vehicle -->\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Decode</h2>\n        </div>\n        <div class=\"dropDown\">\n            <form [formGroup]=\"vehicleInformation\">\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Select Tool</label>\n                    <select class=\"form-select\" formControlName=\"type\">\n                        <option disabled>Select Tool</option>\n                        <option value=\"1\"> KESSv2 </option>\n                        <option value=\"2\"> kess3 </option>\n                        <option value=\"3\"> KTag </option>\n                        <!-- <option value=\"4\"> Magic Flex </option> -->\n                    </select>\n                </div>\n                <div>\n                    <label for=\"vehicle\" class=\"form-label\">Submit File</label>\n                    <input type=\"file\" #fileInput (change)=\"onFileChange($event)\">\n                </div>\n                <div class=\"btnDiv justify-content-end\" *ngIf=\"permissions.manual_coding == 'Full access'\">\n                    <button class=\"btn-primary\" (click)=\"createVehicleModal()\"> Submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Card 2 Manage ECU -->\n    <div class=\"ulist-div\" style=\"margin-top: 20px;\">\n        <div class=\"u-add \">\n            <div>\n                <h2>Decode</h2>\n            </div>\n            <div class=\"card2\">\n                <div class=\"sideBar\">\n                    <div>\n                        <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\"\n                            data-bs-target=\"#filter\">\n                            <img src=\"assets/images/icon/filterIcon.png\" alt=\"filter\" /> Filter\n                        </button>\n                    </div>\n                </div>\n                <!-- <div>\n                    <p style=\"cursor: pointer;\" (click)=\"showFilter = !showFilter\" ><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                            class=\"bi bi-filter\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z\" />\n                        </svg></p>\n\n\n                    <ul *ngIf=\"showFilter\" class=\"dropDownList\" style=\"position: absolute; inset: 0px 0px auto auto;\n                    margin: 0px; transform: translate(-41px, 395px);\">\n                        <li>\n                            <input type=\"checkbox\" [checked]=\"show_EEPROM\" (click)=\"tdControl('EEPROM')\">\n                            <label for=\"\">EEPROM File</label>\n                        </li>\n                        <li>\n                            <input type=\"checkbox\" [checked]=\"show_Micro\" (click)=\"tdControl('micro')\">\n                            <label for=\"\">Micro File</label>\n                        </li>\n                        <li>\n                            <input type=\"checkbox\" [checked]=\"show_flash\" (click)=\"tdControl('flash')\">\n                            <label for=\"\">Flash File</label>\n                        </li>\n                        <li>\n                            <input type=\"checkbox\" [checked]=\"show_mapFile\" (click)=\"tdControl('map')\">\n                            <label for=\"\">Map File</label>\n                        </li>\n                    </ul>\n                </div> -->\n\n            </div>\n        </div>\n        <div class=\"dropDown\">\n            <div class=\"responsive-tbl \">\n                <table>\n                    <thead>\n                        <th>\n                            <div class=\"d-flex align-items-center justify-content-center\">\n                                <p class=\"mb-0\">Id</p>\n                                <sort-button (onSort)=\"getDecodeFileData('ids',$event)\"></sort-button>\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"d-flex align-items-center justify-content-center\">\n                                <p class=\"mb-0\">User</p>\n                                <sort-button (onSort)=\"getDecodeFileData('user__first_name',$event)\"></sort-button>\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"d-flex align-items-center\">\n                                <p class=\"mb-0\">File Name</p>\n                                <sort-button (onSort)=\"getDecodeFileData('file',$event)\"></sort-button>\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"d-flex align-items-center\">\n                                <p class=\"mb-0\">Tool Used</p>\n                                <sort-button (onSort)=\"getDecodeFileData('tool_type',$event)\"></sort-button>\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"d-flex align-items-center\">\n                                <p class=\"mb-0\">Date | Time</p>\n                                <sort-button (onSort)=\"getDecodeFileData('created_at',$event)\"></sort-button>\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"d-flex align-items-center\">\n                                <p class=\"mb-0\">Completion</p>\n                                <sort-button (onSort)=\"getDecodeFileData('is_completed',$event)\"></sort-button>\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"d-flex align-items-center\">\n                                <p class=\"mb-0\">Status</p>\n                                <sort-button (onSort)=\"getDecodeFileData('status',$event)\"></sort-button>\n                            </div>\n                        </th>\n                        <th>Decoded File</th>\n                        <!-- <th>Read File</th> -->\n                        <th>Id File</th>\n                        <th *ngIf=\"show_EEPROM\">EEPROM File</th>\n                        <th *ngIf=\"show_Micro\">Micro File</th>\n                        <th *ngIf=\"show_flash\">Flash</th>\n                        <th *ngIf=\"show_mapFile\">Map File</th>\n                        <th>Encoded File</th>\n                        <th class=\"tableHeadAction\">Action</th>\n                    </thead>\n                    <tr\n                        *ngFor=\"let decode of decodeList | paginate : {itemsPerPage: pageSize,currentPage: pageNo,totalItems: totalRequest};let i = index \">\n                        <td>{{decode?.ids || 'NA'}}</td>\n\n                        <td>\n                            <div class=\"tdholder\">\n                                <img \n                                    class=\"userImg\" \n                                    [src]=\"decode?.user?.image || 'assets/images/icon/avtarIcon.jpeg'\"\n                                    onerror=\"this.src = 'assets/images/icon/avtarIcon.jpeg'\"\n                                    alt=\"user\" />\n                                <div class=\"tdinner\">\n                                    <span> {{decode?.user?.first_name}} {{decode?.user?.last_name}}</span>\n                                    <p> {{decode?.user?.email}}</p>\n                                </div>\n                            </div>\n                        </td>\n                        <td>\n                            <div class=\"d-flex\">\n                                <span title=\"{{ (decode?.file?.split('/')[decode?.file?.split('/').length-1]).split('.')[0] }}\" style=\"display: inline-block;max-width: 20ch;overflow: hidden;text-overflow: ellipsis;\">\n                                    {{ (decode?.file?.split('/')[decode?.file?.split('/').length-1]).split('.')[0] }}\n                                </span>\n                                <a\n                                    *ngIf=\"decode?.file\" [href]=\"decode.file\" target=\"_blank\"\n                                    style=\"cursor: pointer; padding-left: 10px;\">\n                                    <i class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i>\n                                </a>\n                            </div>\n                        </td>\n                        <td>{{decode?.display_tool_type_status || 'NA'}}</td>\n                        <td>{{decode?.decode_response?.startedOn | date:\"dd MMM y\" }}</td>\n                        <td>{{decode?.is_completed?'Yes':'No'}}</td>\n                        <td><span\n                                [ngClass]=\"decode?.display_status_status == 'Success'?'success':'failed'\">{{decode?.display_status_status}}</span>\n                        </td>\n                        <!-- ?.async_response?.slotGUID -->\n                        <!-- <td> <p style=\"margin-bottom: 0px;\" *ngIf=\"decode.display_tool_type_status=='ktag' || decode.display_tool_type_status=='kess3'\">N/A</p><a *ngIf=\"decode?.is_success && decode.display_tool_type_status!='ktag' &&  decode.display_tool_type_status!='kess3' \" (click)=\"downloadDecodeFile(decode)\" style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i></a></td>\n                        <td> <p style=\"margin-bottom: 0px;\" *ngIf=\"decode.display_tool_type_status!='ktag' && decode.display_tool_type_status!='kess3'\">N/A</p><a *ngIf=\"decode.display_tool_type_status=='ktag' || decode.display_tool_type_status=='kess3' \" (click)=\"downloadKtagDecodeFile('EEPROM',decode)\" style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i></a></td>\n                        <td> <p style=\"margin-bottom: 0px;\" *ngIf=\"decode.display_tool_type_status!='ktag' && decode.display_tool_type_status!='kess3'\">N/A</p><a *ngIf=\"decode.display_tool_type_status=='ktag' || decode.display_tool_type_status=='kess3' \" (click)=\"downloadKtagDecodeFile('Micro',decode)\" style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i></a></td>\n                        <td> <p style=\"margin-bottom: 0px;\" *ngIf=\"decode.display_tool_type_status!='ktag' && decode.display_tool_type_status!='kess3'\">N/A</p><a *ngIf=\"decode.display_tool_type_status=='ktag' || decode.display_tool_type_status=='kess3' \" (click)=\"downloadKtagDecodeFile('Flash',decode)\" style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i></a></td>\n                        <td> <p style=\"margin-bottom: 0px;\" *ngIf=\"decode.display_tool_type_status!='ktag' && decode.display_tool_type_status!='kess3'\">N/A</p><a *ngIf=\"decode.display_tool_type_status=='ktag' || decode.display_tool_type_status=='kess3'\" (click)=\"downloadKtagDecodeFile('MapFile',decode)\" style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i></a></td> -->\n                        <td *ngIf=\" decode.display_tool_type_status =='kessv2'\">\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode?.async_response?.result?.decodedFileURL\">\n                                N/A</p><a\n                                *ngIf=\"decode?.display_status_status == 'Success' && decode?.async_response?.result?.decodedFileURL \"\n                                (click)=\"downloadKtagDecodeFile('other',decode,'decodeFile')\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td *ngIf=\" decode.display_tool_type_status =='kess3'\">\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode?.async_response?.result?.obdDecodedFileURL\">\n                                N/A</p><a\n                                *ngIf=\"decode?.display_status_status == 'Success' && decode?.async_response?.result?.obdDecodedFileURL \"\n                                (click)=\"downloadKtagDecodeFile('other',decode,'decodeFile')\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td *ngIf=\" decode.display_tool_type_status =='ktag'\">\n                            <p style=\"margin-bottom: 0px;\"> N/A</p>\n                        </td>\n                        <!-- <td>\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode?.async_response?.result?.readFileURL\">\n                                N/A</p><a\n                                *ngIf=\"decode?.display_status_status == 'Success' && decode?.async_response?.result?.readFileURL\"\n                                (click)=\"downloadKtagDecodeFile('other',decode,'readFile')\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td> -->\n                        <td>\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode?.async_response?.result?.idFileURL\"> N/A</p><a\n                                *ngIf=\"decode?.display_status_status == 'Success' && decode?.async_response?.result?.idFileURL\"\n                                (click)=\"downloadKtagDecodeFile('other',decode,'idFile')\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td *ngIf=\"show_EEPROM\">\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode.EEPROM\">N/A</p><a *ngIf=\"decode.EEPROM \"\n                                (click)=\"downloadKtagDecodeFile('EEPROM',decode)\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td *ngIf=\"show_Micro\">\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode.Micro\">N/A</p><a *ngIf=\"decode.Micro \"\n                                (click)=\"downloadKtagDecodeFile('Micro',decode)\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td *ngIf=\"show_flash\">\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode.Flash\">N/A</p><a *ngIf=\"decode.Flash \"\n                                (click)=\"downloadKtagDecodeFile('Flash',decode)\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td *ngIf=\"show_mapFile\">\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode.MapFile\">N/A</p><a *ngIf=\"decode.MapFile\"\n                                (click)=\"downloadKtagDecodeFile('MapFile',decode)\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td>\n                            <p style=\"margin-bottom: 0px;\" *ngIf=\"!decode.showEcodedFile\">N/A</p><a\n                                *ngIf=\"decode.showEcodedFile\" (click)=\"downloadKtagDecodeFile('EncodedFile',decode)\"\n                                style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                    aria-hidden=\"true\"></i></a>\n                        </td>\n                        <td class=\"tableBodyAction\">\n                            <div class=\"actiontd\" style=\"display: flex;\">\n                                <!-- [routerLink]=\"['/admin/manual-handle/fileView',decode?.directory_path]\" -->\n                                <a class=\"eyeIcon pointer\" title=\"Decode\" (click)=\"viewDecodeFiles(i)\"><i\n                                        class=\"fa fa-eye\" title=\"View\"></i></a>\n                                <a title=\"Encode\" class=\"eyeIcon pointer\">\n                                    <img src=\"assets/images/icon/encode 1 1.svg\" (click)=\"navigateON(decode)\"\n                                        alt=\"products\" /></a>\n                                <a class=\"eyeIcon\" (click)=\"savePageDetail();\"\n                                    [routerLink]=\"['/admin/manual-handle/view-files',decode?.ids]\"><i\n                                        class=\"fa fa-download\"></i></a>\n                                <!-- [routerLink]=\"['/admin/manual-handle/encode-create']\"[queryParams]=\"{id: decode?.ids, eId: decode?.decode[0].id}\" -->\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"decodeList.length == 0\">\n                        <td style=\"text-align: center;\" colspan=\"12\">No Data Found</td>\n                    </tr>\n                </table>\n            </div>\n            <pagination-controls *ngIf=\"decodeList?.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\"\n                nextLabel=\"Next\" (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n\n        </div>\n    </div>\n\n\n    <!-- side bar code -->\n    <div class=\"offcanvas offcanvas-end\" id=\"filter\">\n        <div class=\"offcanvas-header\">\n            <h1 class=\"offcanvas-title\">Filter</h1>\n            <button type=\"button\" id=\"closefilterconvas\" (click)=\"getDecodeFileData()\" class=\"btn-close\"\n                data-bs-dismiss=\"offcanvas\"></button>\n        </div>\n        <hr />\n        <div class=\"offcanvas-body\">\n            <form [formGroup]=\"filterTicketForm\" (ngSubmit)=\"filterlist()\">\n                <div>\n                    <label>Tool Used</label>\n                    <select class=\"form-select\" formControlName=\"tool_used\">\n                        <option disabled selected>Select Tool Used</option>\n                        <option value=\"\">All </option>\n                        <option value=\"1\">KESSV2 </option>\n                        <option value=\"2\">KESS3 </option>\n                        <option value=\"3\">KTag </option>\n                    </select>\n                </div>\n                <div>\n                    <label>Status</label>\n                    <select class=\"form-select\" formControlName=\"status\">\n                        <option disabled selected>Select Status</option>\n                        <option value=\"\">All </option>\n                        <option value=\"1\">Pending </option>\n                        <option value=\"2\">Success </option>\n                        <option value=\"3\">Failed </option>\n                    </select>\n                </div>\n\n                <div class=\"cancel-apply\">\n                    <button class=\"btn\" type=\"button\" (click)=\"getDecodeFileData()\"\n                        data-bs-dismiss=\"offcanvas\">Cancel</button>\n                    <button class=\"btn btn-secondary\" data-bs-dismiss=\"offcanvas\" type=\"submit\">Apply Filters</button>\n                </div>\n            </form>\n        </div>\n    </div>","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { saveAs } from 'file-saver';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { UploadFileService } from 'src/app/services/upload-file.service';\nimport { PermissionsService } from '../../services/permissions.service';\n@Component({\n  selector: 'app-decode',\n  templateUrl: './decode.component.html',\n  styleUrls: ['./decode.component.scss']\n})\nexport class DecodeComponent {\n  type: string = 'other';\n  selectedDecode: any;\n  decodeList: any = [\n    { id: 1, readFileUrl: 'Read File Url', decodeFileUrl: 'Decode File URL', idFileUrl: 'ID File URL' },\n    { id: 1, readFileUrl: 'Read File Url', decodeFileUrl: 'Decode File URL', idFileUrl: 'ID File URL' },\n    { id: 1, readFileUrl: 'Read File Url', decodeFileUrl: 'Decode File URL', idFileUrl: 'ID File URL' },\n    { id: 1, readFileUrl: 'Read File Url', decodeFileUrl: 'Decode File URL', idFileUrl: 'ID File URL' },\n    { id: 1, readFileUrl: 'Read File Url', decodeFileUrl: 'Decode File URL', idFileUrl: 'ID File URL' },\n  ]\n  vehicleInformation!: FormGroup;\n  formData: any = new FormData();\n  show_EEPROM: boolean = true;\n  show_Micro: boolean = true;\n  show_flash: boolean = true;\n  show_mapFile: boolean = true;\n  showFilter: boolean = false;\n  uploadFile: boolean = false;\n  pageNo: number = 1;\n  pageSize: number = 10;\n  totalRequest: number = 0;\n  @ViewChild('fileInput')\n  public fileInput!: ElementRef;\n  filterTicketForm: FormGroup;\n  permissions:any;\n  sortField: any;\n  sortOrder: any;\n  constructor(private formBuilder: FormBuilder, private crud: CrudService, private toastr: ToastrService,\n    private _permissions:PermissionsService,\n    private router: Router, private notification: NotificationsService, private pageService: UploadFileService) {\n    this.vehicleInformation = this.formBuilder.group({\n      type: [1],\n    });\n    this.filterTicketForm = this.formBuilder.group({\n      tool_used: ['Select Tool Used'],\n      status: ['Select Status']\n    });\n    this.permissions = this._permissions.getPermissions();\n  }\n  ngOnInit() {\n    var checkPage = this.pageService.getPageDetail();\n    if (checkPage)\n      this.pageNo = checkPage;\n    this.notification.onMessageAdmin.subscribe((res: any) => {\n      if (res && res.type === 'admin_file_decode') {\n        this.getDecodeFileData();\n      }\n    });\n    this.getDecodeFileData();\n  }\n  savePageDetail() {\n    this.pageService.savePageDetail(window.location.href, this.pageNo);\n  }\n  getDecodeFileData(field?: any, order?: any) {\n    let param;\n    param = `page=${this.pageNo}&page_size=${this.pageSize}`;\n    \n    if (field) {\n      this.sortField = field;\n      this.sortOrder = order;\n    }\n\n    if(this.sortField) {\n      param += `&field=${this.sortField}&order_in=${this.sortOrder}`;\n    }\n    this.crud.getRequest(`${requestUrl.decodeFile}?${param}`).then((res: any) => {\n      this.decodeList = res.data.results;\n      this.totalRequest = res.data.count;\n      // this.decodeList.forEach((element: any) => {\n      // if (Object.keys(element.async_response).length == 0)\n      //   element['showAsync'] = false;\n      // else\n\n      this.decodeList.forEach((element: any) => {\n        if (element?.encode_result?.result?.encodedFileURL)\n          element['showEcodedFile'] = true;\n        else {\n          element['showEcodedFile'] = false;\n        }\n        element['EEPROM'] = false;\n        element['Micro'] = false;\n        element['Flash'] = false;\n        element['MapFile'] = false;\n        if (element.display_tool_type_status == \"ktag\" && element?.async_response?.result) {\n          element.async_response.result.components.forEach((item: any) => {\n            if (item.type == 'EEPROM')\n              element['EEPROM'] = true;\n            else if (item.type == 'Micro')\n              element['Micro'] = true;\n            else if (item.type == 'Flash')\n              element['Flash'] = true;\n            else if (item.type == 'MapFile')\n              element['MapFile'] = true;\n          });\n        }\n        else if (element.display_tool_type_status == \"kess3\" && element?.async_response?.result) {\n          element.async_response.result.bootBenchComponents.forEach((item: any) => {\n            if (item.type == 'EEPROM')\n              element['EEPROM'] = true;\n            else if (item.type == 'Micro')\n              element['Micro'] = true;\n            else if (item.type == 'Flash')\n              element['Flash'] = true;\n            else if (item.type == 'MapFile')\n              element['MapFile'] = true;\n          });\n        }\n      });\n    })\n  }\n  // gequestFileOnFilter(field: any, type: any) {\n  //   this.crud.getRequest(`${requestUrl.getRequestList}?field=${field}&order_in=${type}`).then((res: any) => {\n  //     this.decodeList = res.data.results;\n  //     this.totalRequest = res.data.count;\n  //     this.decodeList.forEach((element: any) => {\n  //       if (element?.encode_result?.result?.encodedFileURL)\n  //         element['showEcodedFile'] = true;\n  //       else {\n  //         element['showEcodedFile'] = false;\n  //       }\n  //       element['EEPROM'] = false;\n  //       element['Micro'] = false;\n  //       element['Flash'] = false;\n  //       element['MapFile'] = false;\n  //       if (element.display_tool_type_status == \"ktag\" && element?.async_response?.result) {\n  //         element.async_response.result.components.forEach((item: any) => {\n  //           if (item.type == 'EEPROM')\n  //             element['EEPROM'] = true;\n  //           else if (item.type == 'Micro')\n  //             element['Micro'] = true;\n  //           else if (item.type == 'Flash')\n  //             element['Flash'] = true;\n  //           else if (item.type == 'MapFile')\n  //             element['MapFile'] = true;\n  //         });\n  //       }\n  //       else if (element.display_tool_type_status == \"kess3\" && element?.async_response?.result) {\n  //         element.async_response.result.bootBenchComponents.forEach((item: any) => {\n  //           if (item.type == 'EEPROM')\n  //             element['EEPROM'] = true;\n  //           else if (item.type == 'Micro')\n  //             element['Micro'] = true;\n  //           else if (item.type == 'Flash')\n  //             element['Flash'] = true;\n  //           else if (item.type == 'MapFile')\n  //             element['MapFile'] = true;\n  //         });\n  //       }\n  //     });\n  //   })\n  // }etRequestFileOnFilter(field: any, type: any) {\n  //   this.crud.getRequest(`${requestUrl.getRequestList}?field=${field}&order_in=${type}`).then((res: any) => {\n  //     this.decodeList = res.data.results;\n  //     this.totalRequest = res.data.count;\n  //     this.decodeList.forEach((element: any) => {\n  //       if (element?.encode_result?.result?.encodedFileURL)\n  //         element['showEcodedFile'] = true;\n  //       else {\n  //         element['showEcodedFile'] = false;\n  //       }\n  //       element['EEPROM'] = false;\n  //       element['Micro'] = false;\n  //       element['Flash'] = false;\n  //       element['MapFile'] = false;\n  //       if (element.display_tool_type_status == \"ktag\" && element?.async_response?.result) {\n  //         element.async_response.result.components.forEach((item: any) => {\n  //           if (item.type == 'EEPROM')\n  //             element['EEPROM'] = true;\n  //           else if (item.type == 'Micro')\n  //             element['Micro'] = true;\n  //           else if (item.type == 'Flash')\n  //             element['Flash'] = true;\n  //           else if (item.type == 'MapFile')\n  //             element['MapFile'] = true;\n  //         });\n  //       }\n  //       else if (element.display_tool_type_status == \"kess3\" && element?.async_response?.result) {\n  //         element.async_response.result.bootBenchComponents.forEach((item: any) => {\n  //           if (item.type == 'EEPROM')\n  //             element['EEPROM'] = true;\n  //           else if (item.type == 'Micro')\n  //             element['Micro'] = true;\n  //           else if (item.type == 'Flash')\n  //             element['Flash'] = true;\n  //           else if (item.type == 'MapFile')\n  //             element['MapFile'] = true;\n  //         });\n  //       }\n  //     });\n  //   })\n  // }\n  filterlist() {\n    let url;\n    if (this.filterTicketForm.value.tool_used != 'Select Tool Used')\n      url = `tool_type=${this.filterTicketForm.value.tool_used || ''}`\n    if (this.filterTicketForm.value.status != 'Select Status')\n      url = `tool_type=${this.filterTicketForm.value.status || ''}`\n\n    if ((this.filterTicketForm.value.tool_used != 'Select Tool Used')\n      && (this.filterTicketForm.value.status != 'Select Status'))\n      url = `tool_type=${this.filterTicketForm.value.tool_used}&status=${this.filterTicketForm.value?.status || ''}`\n    this.crud.getRequest(`${requestUrl.decodeFile}?page=${this.pageNo}&page_size=${this.pageSize}${url ? '&' + url : ''}`).then((res: any) => {\n      this.decodeList = res.data.results;\n      this.totalRequest = res.data.count;\n      this.decodeList.forEach((element: any) => {\n        element['EEPROM'] = false;\n        element['Micro'] = false;\n        element['Flash'] = false;\n        element['MapFile'] = false;\n        if (element.display_tool_type_status == \"ktag\" && element?.async_response?.result) {\n          element.async_response.result.components.forEach((item: any) => {\n            if (item.type == 'EEPROM')\n              element['EEPROM'] = true;\n            else if (item.type == 'Micro')\n              element['Micro'] = true;\n            else if (item.type == 'Flash')\n              element['Flash'] = true;\n            else if (item.type == 'MapFile')\n              element['MapFile'] = true;\n          });\n        }\n        else if (element.display_tool_type_status == \"kess3\" && element?.async_response?.result) {\n          element.async_response.result.bootBenchComponents.forEach((item: any) => {\n            if (item.type == 'EEPROM')\n              element['EEPROM'] = true;\n            else if (item.type == 'Micro')\n              element['Micro'] = true;\n            else if (item.type == 'Flash')\n              element['Flash'] = true;\n            else if (item.type == 'MapFile')\n              element['MapFile'] = true;\n          });\n        }\n      });\n    })\n\n  }\n  handlePageChange(event: any): void {\n    this.pageNo = event;\n    this.filterlist();\n  }\n  createVehicleModal() {\n    if (this.uploadFile) {\n      this.formData.append('tool_type', this.vehicleInformation.value.type);\n      this.crud.postRequest(`${requestUrl.decodeFile}`, this.formData).then((res: any) => {\n        if (res) {\n          this.toastr.success(res.message);\n          this.uploadFile = true;\n          this.getDecodeFileData();\n          this.formData = new FormData();\n          this.fileInput.nativeElement.value = \"\";\n        }\n      })\n    } else\n      this.toastr.error('Please upload file.')\n  }\n\n  \n  onFileChange(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      // reader.onload = e => this.image = reader.result;\n      reader.readAsDataURL(file);\n      this.formData.append('readfile', file);\n      this.uploadFile = true;\n    }\n  }\n\n\n  viewDecodeFiles(i: any) {\n    // [routerLink]=\"['',decode?.id]\"\n    this.savePageDetail();\n    this.router.navigateByUrl('/admin/manual-handle/fileView');\n    let body = {\n      decode_response: this.decodeList[i].decode_response,\n      async_response: this.decodeList[i].async_response,\n    }\n    localStorage.setItem('manual_handle', JSON.stringify(body));\n\n  }\n  downloadKtagDecodeFile(type: string, decode: any, fileType?: any) {\n    this.type = type;\n    this.selectedDecode = decode;\n    var decodedFileURL;\n\n    if (type == 'EncodedFile') {\n      decodedFileURL = decode?.encode_result?.result?.encodedFileURL;\n    }\n    else if (decode.display_tool_type_status == 'ktag') {\n      if (fileType == 'readFile')\n        decodedFileURL = decode.async_response.result.readFileURL;\n      else if (fileType == 'idFile')\n        decodedFileURL = decode.async_response.result.idFileURL;\n      else {\n        decode.async_response.result.components.forEach((element: any) => {\n          if (element.type == type) {\n            decodedFileURL = element.decodedFileURL;\n          }\n        });\n      }\n    }\n    else if (decode.display_tool_type_status == 'kess3') {\n      if (fileType == 'readFile')\n        decodedFileURL = decode.async_response.result.readFileURL;\n      else if (fileType == 'idFile')\n        decodedFileURL = decode.async_response.result.idFileURL;\n      else {\n        if (decode?.async_response?.result?.obdDecodedFileURL)\n          decodedFileURL = decode.async_response.result.obdDecodedFileURL;\n        else {\n          decode.async_response.result.bootBenchComponents.forEach((element: any) => {\n            if (element.type == type) {\n              decodedFileURL = element.decodedFileURL;\n            }\n          });\n        }\n      }\n    }\n    else if (decode.display_tool_type_status == 'kessv2') {\n      if (fileType == 'decodeFile')\n        decodedFileURL = decode.async_response.result.decodedFileURL;\n      else if (fileType == 'readFile')\n        decodedFileURL = decode.async_response.result.readFileURL;\n      else if (fileType == 'idFile')\n        decodedFileURL = decode.async_response.result.idFileURL;\n    }\n    let body =\n    {\n      \"url\": decodedFileURL\n    }\n\n    this.crud.postRequest(`${requestUrl.downloadAnyFile}`, body).then((res: any) => {\n      if (res) {\n        this.base64ToBlob(res.data.data, res.data.name);\n      }\n    })\n  }\n  base64ToBlob(b64Data: any, name: string, contentType = 'octet/stream', sliceSize = 512) {\n    b64Data = b64Data.replace(/\\s/g, ''); //IE compatibility...\n    let byteCharacters = atob(b64Data);\n    let byteArrays = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      let slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      let byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      let byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n    if (this.type == 'other')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_' + name);\n    else if (this.type == 'EEPROM')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_EEPROM_' + name);\n    else if (this.type == 'Flash')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_flash_' + name);\n    else if (this.type == 'MapFile')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_mapFile_' + name);\n    else if (this.type == 'EncodedFile')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_encodedFile_' + name);\n    else//decodeid_micro_filename\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_micro_' + name);\n\n    // return new Blob(byteArrays, {type: contentType});\n\n    // let filename = 'decode_'+name;\n    // let filename = res.headers.get('content-disposition').split(';')[1].split('=')[1].replace(/\\\"/g, '');\n    // let data = res.headers.get('content-disposition');\n    // let dataType = 'application/binary';\n    // let binaryData = [];\n    // binaryData.push(b64Data);\n    // let downloadLink = document.createElement('a');\n    // downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n    // if (filename)\n    //     downloadLink.setAttribute('download', filename);\n    // document.body.appendChild(downloadLink);\n    // downloadLink.click();\n  }\n  // downloadTestingVersionFile(){\n  //   this.uploadservice.downloadVersionFile().subscribe((res:any)=>{\n  //     this.isLoad = true;\n  //     let filename = res.filename;\n  //     // let filename = res.headers.get('content-disposition').split(';')[1].split('=')[1].replace(/\\\"/g, '');\n  //     // let data = res.headers.get('content-disposition');\n  //     let dataType = 'application/binary';\n  //     let binaryData = [];\n  //     binaryData.push(res);\n  //     let downloadLink = document.createElement('a');\n  //     downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n  //     if (filename)\n  //         downloadLink.setAttribute('download', filename);\n  //     document.body.appendChild(downloadLink);\n  //     downloadLink.click();\n  //     this.isLoad = false;\n  //   },\n  //   (err:any)=>{\n  //     this.toastr.error(err.error);\n  //   })\n  // }\n  tdControl(type: string) {\n    if (type == 'EEPROM')\n      this.show_EEPROM = !this.show_EEPROM;\n    else if (type == 'micro')\n      this.show_Micro = !this.show_Micro;\n    else if (type == 'flash')\n      this.show_flash = !this.show_flash;\n    else if (type == 'map')\n      this.show_mapFile = !this.show_mapFile;\n  }\n  navigateON(decode: any) {\n    this.savePageDetail();\n    // this.router.navigate([`/admin/manual-handle/encode-create`], { queryParams: { 'id': decode?.ids, 'eId': (decode?.decode[0]?.ids) ? decode?.decode[0]?.ids : '' } })\n    this.router.navigate([`/admin/manual-handle/encode-create`], { queryParams: { 'id': decode?.ids, 'eId': (decode?.decode[decode?.decode?.length-1]?.ids) ? decode?.decode[decode?.decode?.length-1]?.ids : '' } })\n  }\n  // decode?.decode[0]?.ids\n  // decode?.decode[decode?.decode?.length-1]?.ids\n}\n","<section class=\"user-list\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/manual-handle/fileView\" routerLinkActive=\"active\">Decode\n        File View\n      </a></li>\n  </ul>\n\n  <ul *ngIf=\"decodeFileDataList?.async_response?.error?.errorName\" class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a style=\"color: red; font-weight: 500; font-size: 15px;\">Error at decoding:\n        {{decodeFileDataList?.async_response?.error?.errorName}}</a></li>\n  </ul>\n  <!-- <div style=\"background: black; text-align: left;\">\n    <ngx-json-viewer [json]=\"data\" [expanded]=\"true\"></ngx-json-viewer>\n</div> -->\n  <!-- <div *ngFor=\"let list of decodeFileDataList\"> -->\n  <!-- <div >\n  <div class=\"responsive-tbl \">\n    <table>\n      <thead>\n        <th>HW </th>\n        <th>SN</th>\n        <th>SW</th>\n        <th>PRT</th>\n        <th>VIN</th>\n        <th>Spare</th>\n        <th>Engine</th>\n        <th>Family</th>\n        <th>SW upd</th>\n        <th>Impianto</th>\n      </thead>\n      <tr>\n        <td>{{information?.HW || 'NA'}}</td>\n        <td>{{information?.SN || 'NA'}}</td>\n        <td>{{information?.SW || 'NA'}}</td>\n        <td>{{information?.PRT || 'NA'}}</td>\n        <td>{{information?.VIN || 'NA'}}</td>\n        <td>{{information?.Spare || 'NA'}}</td>\n        <td>{{information?.Engine || 'NA'}}</td>\n        <td>{{information?.FAMILY || 'NA'}}</td>\n        <td>{{information?.SW_upd || 'NA'}}</td>\n        <td>{{information?.Impianto || 'NA'}}</td>\n      </tr>\n    </table>\n\n  </div>\n</div> -->\n  <div *ngIf=\"information\" class=\"accordion accordion-flush\" id=\"accordionFlushExample\" style=\"margin-top: 20px;\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n          data-bs-target=\"#flush-collapse\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n          File Information\n        </button>\n      </h2>\n      <div id=\"flush-collapse\" class=\"accordion-collapse collapse show \" aria-labelledby=\"flush-headingOne\"\n        data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">\n          <div class=\"responsive-tbl \">\n            <table>\n              <thead>\n                <th>HW </th>\n                <th>SN</th>\n                <th>SW</th>\n                <th>PRT</th>\n                <th>VIN</th>\n                <th>Spare</th>\n                <th>Engine</th>\n                <th>Family</th>\n                <th>SW upd</th>\n                <th>Impianto</th>\n              </thead>\n              <tr>\n                <td>{{information?.HW || 'NA'}}</td>\n                <td>{{information?.SN || 'NA'}}</td>\n                <td>{{information?.SW || 'NA'}}</td>\n                <td>{{information?.PRT || 'NA'}}</td>\n                <td>{{information?.VIN || 'NA'}}</td>\n                <td>{{information?.Spare || 'NA'}}</td>\n                <td>{{information?.Engine || 'NA'}}</td>\n                <td>{{information?.FAMILY || 'NA'}}</td>\n                <td>{{information?.SW_upd || 'NA'}}</td>\n                <td>{{information?.Impianto || 'NA'}}</td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\" style=\"margin-top: 20px;\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n          data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n          Decode Initial Request\n        </button>\n      </h2>\n      <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\"\n        data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">\n          <div style=\"text-align: left;\">\n            <ngx-json-viewer [json]=\"decodeFileDataList?.decode_response\" [expanded]=\"true\"></ngx-json-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\" style=\"margin-top: 20px;\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n          data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n          File Decode Response\n        </button>\n      </h2>\n      <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\"\n        data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">\n          <div style=\"text-align: left;\">\n            <ngx-json-viewer [json]=\"decodeFileDataList?.async_response\" [expanded]=\"true\"></ngx-json-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- <div class=\"ulist-div\" style=\"text-align: left;\">\n        <label for=\"data\" class=\"form-label\">Decode Initial Request</label>\n        <div style=\"background: black;\">\n            <ngx-json-viewer [json]=\"decodeFileDataList?.decode_response\" [expanded]=\"true\"></ngx-json-viewer>\n        </div>\n    </div>\n    <div class=\"ulist-div\" style=\" text-align: left; margin-top: 10px;\">\n        <label for=\"data\" class=\"form-label\">File Decode Response</label>\n        <div style=\"background: black;\">\n            <ngx-json-viewer [json]=\"decodeFileDataList?.async_response\" [expanded]=\"true\"></ngx-json-viewer>\n        </div>\n    </div> -->\n  <!-- </div> -->\n</section>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/manual-handle/encode-view\" routerLinkActive=\"active\">Encode View\n            </a></li>\n    </ul>\n    <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n        <!--kess3 encode file upload code  -->\n        <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'kess3' && decodeList?.length < decodeList[0]?.decode.async_response?.result?.bootBenchComponents?.length && decodeList[decodeList?.length-1]?.file_type != 'Encode'\"\n            class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n                    Upload Modified Form\n                </button>\n            </h2>\n            <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\"\n                data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n                        <div class=\"u-add\">\n                            <h2>Encode</h2>\n                        </div>\n                        <div class=\"dropDown\">\n                            <form [formGroup]=\"vehicleInformation\">\n                                <div class=\"decode\">\n                                    <!-- If kess3Mose !OBD -->\n                                    <div\n                                        *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'kess3' && decodeList[0]?.decode?.async_response?.result?.kess3Mode != 'OBD'\">\n                                        <!-- <div *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'kess3' && selectedDecodeFile?.async_response?.result?.kess3Mode != 'OBD'\"> -->\n                                        <div\n                                            *ngFor=\"let list of decodeList[0]?.decode?.async_response.result.bootBenchComponents; let i= index\">\n                                            <div>{{list.type}}</div>\n                                            <div>\n                                                <input\n                                                    [disabled]=\"'BootBenchModified'+list.type == decodeList[0]?.file_type\"\n                                                    type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button\n                                                    [disabled]=\"'BootBenchModified'+list.type == decodeList[0]?.file_type\"\n                                                    class=\"btn submitBtn\" (click)=\"create(list.type)\"> Submit</button>\n                                            </div>\n                                        </div>\n                                        <!-- </div> -->\n                                    </div>\n                                    <!-- If kess3 mode OBD -->\n                                    <div\n                                        *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'kess3' && decodeList[0]?.decode?.async_response?.result?.kess3Mode == 'OBD'\">\n                                        <div>\n                                            <div>OBD Modified</div>\n                                            <div>\n                                                <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button class=\"btn submitBtn\" (click)=\"create('OBDModified')\">\n                                                    Submit</button>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"decodeList[0]?.decode?.async_response?.result.isOriginalFileNeeded\">\n                                            <div>OBD Original</div>\n                                            <div>\n                                                <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button class=\"btn submitBtn\" (click)=\"create('OBDOriginal')\">\n                                                    Submit</button>\n                                            </div>\n                                        </div>\n                                        <!-- <label for=\"vehicle\" class=\"form-label\">Select File Type</label>\n                                    <select formControlName=\"kess3_type\" class=\"form-select\">\n                                        <option disabled>Select File Type</option>\n                                        <option value=\"OBD Modified\">OBD Modified</option>\n                                        <option\n                                            *ngIf=\"decodeList[0]?.decode?.async_response?.result.isOriginalFileNeeded\"\n                                            value=\"OBD Original\">OBD Original</option>\n                                    </select> -->\n                                    </div>\n                                    <!-- <div>\n                                    <label for=\"vehicle\" class=\"form-label\">Modified File</label>\n                                    <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                </div>\n                                <div></div>\n                                <div class=\"btnDiv\">\n                                    <button class=\"btn submitBtn\" (click)=\"create()\"> Submit</button>\n                                </div> -->\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        <!-- Ktag encode file upload -->\n        <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'ktag' && decodeList?.length < decodeList[0]?.decode.async_response?.result?.components?.length && decodeList[decodeList?.length-1]?.file_type != 'Encode'\"\n            class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n                    Upload Modified Form\n                </button>\n            </h2>\n            <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\"\n                data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n                        <div class=\"u-add\">\n                            <h2>Encode</h2>\n                        </div>\n                        <div class=\"dropDown\">\n                            <form [formGroup]=\"vehicleInformation\">\n                                <div class=\"decode\">\n                                    <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'ktag'\">\n                                        <div\n                                            *ngFor=\"let list of decodeList[0]?.decode?.async_response.result.components; let i= index\">\n                                            <div>{{list.type}}</div>\n                                            <div>\n                                                <input [disabled]=\"disableCheck[list.type]\" type=\"file\"\n                                                    class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button class=\"btn submitBtn\" [disabled]=\"disableCheck[list.type]\"\n                                                    (click)=\"create(list.type)\"> Submit</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'ktag'\">\n                                    <label for=\"vehicle\" class=\"form-label\">Select Component Type</label>\n                                    <select formControlName=\"ktag_type\" class=\"form-select\">\n                                        <option *ngFor=\"let list of decodeList[0]?.decode.async_response.result.components; let i= index\" [value]=\"list.type\">{{list.type}}\n                                        </option>\n                                    </select>\n                                </div>\n                                <div>\n                                    <label for=\"vehicle\" class=\"form-label\">Modified File</label>\n                                    <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                </div>\n                                <div></div>\n                                <div class=\"btnDiv\">\n                                    <button class=\"btn submitBtn\" (click)=\"create()\"> Submit</button>\n                                </div> -->\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        <!-- Kessv2 encode file upload -->\n        <!-- <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'kessv2' && (decodeList[decodeList?.length-1]?.display_status_status != 'Success' || decodeList[decodeList?.length-1]?.file_type != 'Encode')\" class=\"accordion-item\"> -->\n        <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'kessv2' && decodeList[decodeList?.length-1]?.file_type != 'Encode'\"\n            class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n                    Encode file\n                </button>\n            </h2>\n            <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\"\n                data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n\n                        <div class=\"dropDown\">\n                            <form [formGroup]=\"encodeFileForm\">\n                                <div class=\"decode1\">\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">KESSV2 File Flot GUID</label>\n                                        <p>{{decodeList[0]?.decode?.slot_guid}}</p>\n                                    </div>\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">Modified File GUID</label>\n                                        <p>{{decodeList[0]?.guid}}</p>\n                                    </div>\n                                    <!-- <div>\n                                    <label for=\"vehicle\" class=\"form-label\">Original File GUID</label>\n                                    <p>{{decodeList[0]?.original_guid || 'N/A'}}</p>\n                                </div> -->\n                                    <div>\n                                        <label for=\"\" class=\"form-label\"></label>\n                                        <input type=\"checkbox\" style=\"margin-right: 10px;\" formControlName=\"cvn_needed\">\n                                        <label for=\"vehicle\" class=\"form-label\">Correct CVN Needed</label>\n                                    </div>\n                                    <!-- <div></div> -->\n                                    <div class=\"btnDiv\">\n                                        <button class=\"btn submitBtn\" (click)=\"encodeFileData()\"> Encode</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- kess3 encode file final submit -->\n        <!-- <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'kess3' && (decodeList[decodeList?.length-1]?.display_status_status != 'Success' || decodeList[decodeList?.length-1]?.file_type != 'Encode')\" class=\"accordion-item\"> -->\n        <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'kess3' && (decodeList[decodeList?.length-1]?.file_type != 'Encode')\"\n            class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#flush-collapsefour\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n                    Encode {{decodeList[0]?.decode?.async_response?.result?.kess3Mode}} file\n                </button>\n            </h2>\n            <div id=\"flush-collapsefour\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\"\n                data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n\n                        <div class=\"dropDown\">\n                            <form [formGroup]=\"encodeFileForm\">\n                                <div *ngIf=\"decodeList[0]?.decode?.async_response?.result?.kess3Mode == 'OBD'\"\n                                    class=\"decode1\">\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">KESS3 File Slot Guid</label>\n                                        <p>{{decodeList[0]?.decode?.slot_guid}}</p>\n                                    </div>\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">Modified File GUID</label>\n                                        <p>{{decodeList[0]?.guid}}</p>\n                                    </div>\n                                    <div>\n                                        <label for=\"\" class=\"form-label\"></label>\n                                        <input type=\"checkbox\" style=\"margin-right: 10px;\" formControlName=\"cvn_needed\">\n                                        <label for=\"vehicle\" class=\"form-label\">Correct CVN Needed</label>\n                                    </div>\n                                    <div class=\"btnDiv\">\n                                        <button class=\"btn submitBtn\" (click)=\"kess3EncodeFileData()\"> Encode</button>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"decodeList[0]?.decode?.async_response?.result?.kess3Mode == 'BootBench'\"\n                                    class=\"decode\">\n                                    <div *ngFor=\"let item of decodeList;let i= index\">\n                                        <label for=\"vehicle\" class=\"form-label\">{{item.file_type}} Guid</label>\n                                        <p style=\"margin-bottom: 0px;\">{{item.guid}}</p>\n                                    </div>\n                                    <div></div>\n                                    <!-- <div *ngIf=\"decodeList?.length >= decodeList[0]?.decode?.async_response?.result?.bootBenchComponents?.length \" -->\n                                    <div *ngIf=\"decodeList?.length >= 1\" class=\"btnDiv\">\n                                        <button class=\"btn submitBtn\" (click)=\"kess3EncodeFileData()\"> Encode</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div *ngFor=\"let item of decodeList;let i= index\" class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n                <button *ngIf=\"item?.decode?.display_tool_type_status != 'kessv2'\" class=\"accordion-button collapsed\"\n                    type=\"button\" data-bs-toggle=\"collapse\" [attr.data-bs-target]=\"'#flush-collapseOne_'+i\"\n                    aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n                    {{item.file_type}} Modified File Response\n                    <!-- {{i==0 ?'Modified File Response': 'Encode File Response'}} -->\n                </button>\n                <button *ngIf=\"item?.decode?.display_tool_type_status == 'kessv2'\" class=\"accordion-button collapsed\"\n                    type=\"button\" data-bs-toggle=\"collapse\" [attr.data-bs-target]=\"'#flush-collapseOne_'+i\"\n                    aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n                    {{i==0 ?'Modified File Response': 'Encode File Response'}}\n                </button>\n            </h2>\n            <div [id]=\"'flush-collapseOne_'+i\" class=\"accordion-collapse collapse\" [ngClass]=\"i==0?'show':''\"\n                aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n                        <div class=\"u-add\">\n                            <h2>Decode</h2>\n                        </div>\n                        <div class=\"dropDown\">\n                            <div class=\"decode1\">\n                                <div>\n                                    <label for=\"vehicle\" class=\"form-label\">Decode Id</label>\n                                    <p>{{item?.decode?.ids}}</p>\n                                </div>\n                                <div>\n                                    <label for=\"vehicle\" class=\"form-label\">Tool used</label>\n                                    <p>{{item?.decode?.display_tool_type_status}}</p>\n                                </div>\n                                <div *ngIf=\"item?.slot_guid\">\n                                    <label for=\"vehicle\" class=\"form-label\">Slot GUID</label>\n                                    <p>{{item?.slot_guid}}</p>\n                                </div>\n                                <div>\n                                    <label for=\"vehicle\" class=\"form-label\">GUID</label>\n                                    <p>{{item?.guid}}</p>\n                                </div>\n                                <div\n                                    *ngIf=\"item?.decode?.display_tool_type_status == 'ktag' && item.file_type == 'Encode'\">\n                                    <label for=\"vehicle\" class=\"form-label\">Modified File</label>\n                                    <p style=\"margin-bottom: 0px;\">{{item?.async_response?.result?.name}} <a\n                                         (click)=\"downloadKtagDecodeFile('ktag',item)\"\n                                            style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                                aria-hidden=\"true\"></i></a></p>\n                                </div>\n                                <div\n                                    *ngIf=\"item?.decode?.display_tool_type_status == 'ktag' && item.file_type != 'Encode'\">\n                                    <label for=\"vehicle\" class=\"form-label\">Modified File</label>\n                                    <p>{{ (item?.file?.split('/')[item?.file?.split('/').length-1]).split('.')[0] }}<a\n                                            *ngIf=\"item?.file\" [href]=\"item.file\" target=\"_blank\"\n                                            style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                                aria-hidden=\"true\"></i></a></p>\n                                </div>\n                                <div *ngIf=\"item?.decode?.display_tool_type_status == 'kessv2'\">\n                                    <label for=\"vehicle\" class=\"form-label\">{{i==0?'Modified File':'Encoded\n                                        File'}}</label>\n                                    <p style=\"margin-bottom: 0px;\">\n                                        {{i==0?(item.file.split('/')[item?.file?.split('/').length-1]).split('.')[0]:item?.async_response?.result?.name}}\n                                        <a (click)=\"downloadKtagDecodeFile('kessv2',item)\"\n                                            style=\"cursor: pointer; padding-left: 10px;\"><i class=\"fa fa-download\" title=\"Download\"\n                                                aria-hidden=\"true\"></i></a>\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"item?.showAsync\" class=\"response\">\n                                <label for=\"\">Response</label>\n                                <div style=\"text-align: left;\">\n                                    <ngx-json-viewer [json]=\"item.async_response\" [expanded]=\"true\"></ngx-json-viewer>\n                                </div>\n                            </div>\n                            <!-- <div class=\"response\">\n                                <label for=\"\">Response</label>\n                                <div style=\"text-align: left;\">\n                                    <ngx-json-viewer [json]=\"response\" [expanded]=\"true\"></ngx-json-viewer>\n                                  </div>\n                            </div> -->\n                            <!-- </form> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- ktag encode now code -->\n        <!-- <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'ktag' && decodeList?.length >= decodeList[0]?.decode?.async_response?.result?.components?.length && (decodeList[decodeList?.length-1]?.display_status_status != 'Success' || decodeList[decodeList?.length-1]?.file_type != 'Encode')\" class=\"accordion-item\"> -->\n        <div *ngIf=\"decodeList[0]?.decode?.display_tool_type_status == 'ktag' && decodeList?.length >= 1 && decodeList[decodeList?.length-1]?.file_type != 'Encode'\"\n            class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#flush-collapseSix\" aria-expanded=\"false\" aria-controls=\"flush-collapseSix\">\n                    Encode\n                </button>\n            </h2>\n            <div id=\"flush-collapseSix\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\"\n                data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n                        <!-- <div class=\"u-add\">\n                        <h2>Encode</h2>\n                    </div> -->\n                        <div class=\"dropDown\">\n                            <form [formGroup]=\"vehicleInformation\">\n                                <div class=\"decode\">\n\n                                    <div *ngFor=\"let item of decodeList;let i= index\">\n                                        <label for=\"vehicle\" class=\"form-label\">{{item.file_type}} Guid</label>\n                                        <p style=\"margin-bottom: 0px;\">{{item.guid}}</p>\n                                    </div>\n                                    <div></div>\n                                    <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                        <button class=\"btn submitBtn\" (click)=\"encodeKtag()\"> Encode Now</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/manual-handle/encode-create\" routerLinkActive=\"active\">Encode\n                Create\n            </a></li>\n    </ul>\n    <ul *ngIf=\"!showEncodeTabBtn && encodeFileResponse?.error?.errorName\" class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a style=\"color: red; font-weight: 500; font-size: 15px;\">Error at encoding: {{encodeFileResponse?.error?.errorName}}</a></li>\n    </ul>\n    <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n        <div class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n                    Upload Modified File\n                </button>\n            </h2>\n            <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"flush-headingOne\"\n                data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n                        <div class=\"u-add\">\n                            <h2>Encode</h2>\n                        </div>\n                        <div class=\"dropDown\">\n                            <form [formGroup]=\"vehicleInformation\">\n                                <div class=\"decode\">\n                                    <!-- First Table -->\n                                    <div *ngIf=\"selectedDecodeFile\" style=\"width: 100%;\">\n                                        <div class=\"responsive-tbl \" style=\"width: 100%;\">\n                                            <table>\n                                                <thead>\n                                                    <th>Decode Id </th>\n                                                    <th>File Name</th>\n                                                    <th>Tool Used</th>\n                                                    <th *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'kess3'\">\n                                                        Kess3 Mode\n                                                    </th>\n                                                    <th>Slot Guid</th>\n                                                    <th>Date | Time</th>\n                                                    <th>Completion</th>\n                                                    <th>Status</th>\n                                                </thead>\n                                                <tr>\n                                                    <td>{{selectedDecodeFile?.ids || 'NA'}}</td>\n                                                    <td>{{\n                                                        (selectedDecodeFile?.file?.split('/')[selectedDecodeFile?.file?.split('/').length-1]).split('.')[0]\n                                                        }}<a *ngIf=\"selectedDecodeFile?.file\"\n                                                            [href]=\"selectedDecodeFile.file\" target=\"_blank\"\n                                                            style=\"cursor: pointer; padding-left: 10px;\"><i\n                                                                class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i></a>\n                                                    </td>\n                                                    <td>{{selectedDecodeFile?.display_tool_type_status || 'N/A'}}</td>\n                                                    <td *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'kess3'\">\n                                                        {{selectedDecodeFile?.async_response?.result?.kess3Mode ||\n                                                        'N/A'}}\n                                                    </td>\n                                                    <td>{{selectedDecodeFile?.async_response?.guid || 'N/A'}}</td>\n                                                    <td>{{selectedDecodeFile?.async_response?.completedOn |\n                                                        date:'medium'}}</td>\n                                                    <td>{{selectedDecodeFile?.is_completed?'Yes':'No'}}</td>\n                                                    <td>\n                                                        <span\n                                                            [ngClass]=\"selectedDecodeFile?.display_status_status == 'Success'?'success':'failed'\">{{selectedDecodeFile?.display_status_status}}</span>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <!-- Second Table -->\n                                    <div *ngIf=\"selectedDecodeFile\" style=\"width: 100%;\">\n                                        <div class=\"responsive-tbl \" style=\"width: 100%;\">\n                                            <table>\n                                                <thead>\n                                                </thead>\n                                                <tr> </tr>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <!-- If Kess3 Mode !OBD -->\n                                    <div\n                                        *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'kess3' && selectedDecodeFile?.async_response?.result?.kess3Mode != 'OBD'\">\n                                        <div\n                                            *ngFor=\"let list of selectedDecodeFile?.async_response?.result?.bootBenchComponents; let i= index\">\n                                            <div>{{list.type}}</div>\n                                            <div>\n                                                <input type=\"file\" [disabled]=\"disableCheck[list.type] || selectedDecodeFile?.decode[(selectedDecodeFile?.decode?.length)-1]?.file_type == 'Encode'\"\n                                                    class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button [disabled]=\"disableCheck[list.type] || selectedDecodeFile?.decode[(selectedDecodeFile?.decode?.length)-1]?.file_type == 'Encode'\" class=\"btn submitBtn\"\n                                                    (click)=\"create(list.type)\"> Submit</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- <div *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'kess3' && selectedDecodeFile?.async_response?.result?.kess3Mode != 'OBD'\">\n                                    <label for=\"vehicle\" class=\"form-label\">Select File Type</label>\n                                    <select formControlName=\"kess3_type\" class=\"form-select\">\n                                        <option disabled>Select File Type</option>\n                                        <option\n                                            *ngFor=\"let list of selectedDecodeFile?.async_response.result.bootBenchComponents; let i= index\"\n                                            [value]=\"list.type\">{{list.type}}\n                                        </option>\n                                    </select>\n                                </div> -->\n                                    <!-- If kess3 mode == OBD -->\n                                    <div\n                                        *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'kess3' && selectedDecodeFile?.async_response?.result?.kess3Mode == 'OBD'\">\n                                        <div>\n                                            <div>OBD Modified</div>\n                                            <div>\n                                                <input [disabled]=\"selectedDecodeFile?.decode[(selectedDecodeFile?.decode?.length)-1]?.file_type == 'Encode'\" type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button [disabled]=\"selectedDecodeFile?.decode[(selectedDecodeFile?.decode?.length)-1]?.file_type == 'Encode'\" class=\"btn submitBtn\" (click)=\"create('OBDModified')\">\n                                                    Submit</button>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"selectedDecodeFile?.async_response?.result?.isOriginalFileNeeded\">\n                                            <div>OBD Original</div>\n                                            <div>\n                                                <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button class=\"btn submitBtn\" (click)=\"create('OBDOriginal')\">\n                                                    Submit</button>\n                                            </div>\n                                        </div>\n                                        <!-- <label for=\"vehicle\" class=\"form-label\">Select File Type</label>\n                                    <select formControlName=\"kess3_type\" class=\"form-select\">\n                                        <option disabled>Select File Type</option>\n                                        <option value=\"OBDModified\"></option>\n                                        <option *ngIf=\"selectedDecodeFile?.async_response?.result.isOriginalFileNeeded\"\n                                            value=\"OBDOriginal\">OBD Original</option>\n                                    </select> -->\n                                    </div>\n                                    <!-- for ktag -->\n                                    <div *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'ktag'\">\n                                        <div\n                                            *ngFor=\"let list of selectedDecodeFile?.async_response?.result?.components; let i= index\">\n                                            <div>{{list.type}}</div>\n                                            <div>\n                                                <input [disabled]=\"disableCheck[list.type] || selectedDecodeFile?.decode[(selectedDecodeFile?.decode?.length)-1]?.file_type == 'Encode'\" type=\"file\"\n                                                    class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button [disabled]=\"disableCheck[list.type] || selectedDecodeFile?.decode[(selectedDecodeFile?.decode?.length)-1]?.file_type == 'Encode'\" class=\"btn submitBtn\"\n                                                    (click)=\"create(list.type)\"> Submit</button>\n                                            </div>\n                                        </div>\n                                        <!-- <div >\n                                        <label for=\"vehicle\" class=\"form-label\">Select Component Type</label>\n                                        <select formControlName=\"ktag_type\" class=\"form-select\">\n                                            <option disabled>Select Component Type</option>\n                                            <option\n                                                [value]=\"list.type\">{{list.type}}\n                                            </option>\n                                        </select>\n                                    </div> -->\n                                        <!-- <div>\n                                        <label for=\"vehicle\" class=\"form-label\">Modified File</label>\n                                        <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\">\n                                    </div> -->\n                                        <!-- <div class=\"btnDiv\">\n                                        <button class=\"btn submitBtn\" (click)=\"create()\"> Submit</button>\n                                    </div> -->\n                                    </div>\n                                    <!-- for kessv2 -->\n                                    <div *ngIf=\"selectedDecodeFile?.display_tool_type_status == 'kessv2'\">\n                                        <div>\n                                            <div>Modified</div>\n                                            <div>\n                                                <input [disabled]=\"selectedDecodeFile?.decode?.length > 0\" type=\"file\"\n                                                    class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button [disabled]=\"selectedDecodeFile?.decode?.length > 0\"\n                                                    class=\"btn submitBtn\" (click)=\"create('Modified')\"> Submit</button>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"selectedDecodeFile?.async_response?.result?.isOriginalFileNeeded\">\n                                            <div>Original</div>\n                                            <div>\n                                                <input [disabled]=\"selectedDecodeFile?.decode?.length > 1\" type=\"file\"\n                                                    class=\"form-control\" (change)=\"onFileChange($event)\">\n                                            </div>\n                                            <div class=\"btnDiv\" style=\"justify-content: end;\">\n                                                <button [disabled]=\"selectedDecodeFile?.decode?.length > 1\"\n                                                    class=\"btn submitBtn\" (click)=\"create('Original')\"> Submit</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"decodeSecondList\" class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n                    Encode file\n                </button>\n            </h2>\n            <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\"\n                data-bs-parent=\"#accordionFlushExample\">\n                <div class=\"accordion-body\">\n                    <div class=\"ulist-div\">\n\n                        <!-- <div *ngIf=\"selectedDecodeFile.display_tool_type_status!= 'kess3'\" class=\"dropDown\">\n                            <form [formGroup]=\"encodeFileForm\">\n                                <div class=\"decode\">\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">KESSV2 File Flot GUID</label>\n                                        <p>{{decodeSecondList?.decode?.async_response.slotGUID}}</p>\n                                    </div>\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">Modified File GUID</label>\n                                        <p>{{decodeSecondList?.modified_guid}}</p>\n                                    </div>\n                                    <div>\n                                        <label for=\"vehicle\" class=\"form-label\">Original File GUID</label>\n                                        <p>{{decodeSecondList?.original_guid || 'N/A'}}</p>\n                                    </div>\n                                    <div *ngIf=\"showEncodeTabBtn\">\n                                        <label for=\"\" class=\"form-label\"></label>\n                                        <input type=\"checkbox\" style=\"margin-right: 10px;\" formControlName=\"cvn_needed\">\n                                        <label for=\"vehicle\" class=\"form-label\">Correct CVN Needed</label>\n                                    </div>\n                                    <div></div>\n                                    <div *ngIf=\"showEncodeTabBtn\" class=\"btnDiv\">\n                                        <button class=\"btn submitBtn\" (click)=\"encodeFileData()\"> Submit</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div> -->\n                        <div *ngIf=\"showProcessingError\">\n                            <p class=\"errcls\" style=\"justify-content: center !important;\">\n                                <span>File in under processing.</span>\n                              </p>\n                        </div>\n                        <div *ngIf=\"!showEncodeTabBtn\" class=\"response\">\n                            <label for=\"\">Response</label>\n                            <div style=\"text-align: left;\">\n                                <ngx-json-viewer [json]=\"encodeFileResponse\" [expanded]=\"true\"></ngx-json-viewer>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n                Upload Original File (Optional)\n            </button>\n        </h2>\n        <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\"\n            data-bs-parent=\"#accordionFlushExample\">\n            <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the\n                <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being\n                filled with some actual content.\n            </div>\n        </div>\n    </div> -->\n        <!-- <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n                Encode file\n            </button>\n        </h2>\n        <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\"\n            data-bs-parent=\"#accordionFlushExample\">\n            <div class=\"accordion-body\">\n                <div class=\"ulist-div\">\n                    \n                    <div class=\"dropDown\">\n                        <form [formGroup]=\"encodeFileForm\">\n                            <div class=\"decode\">\n                                <div>\n                                    <label for=\"vehicle\" class=\"form-label\">KESSV2 File Flot GUID</label>\n                                    <p>{{decodeList?.decode?.async_response.slotGUID}}</p>\n                                </div>\n                                <div>\n                                    <label for=\"vehicle\" class=\"form-label\">Modified File GUID</label>\n                                    <p>{{decodeList?.modified_guid}}</p>\n                                </div>\n                                <div>\n                                    <label for=\"vehicle\" class=\"form-label\">Original File GUID</label>\n                                    <p>{{decodeList?.original_guid || 'N/A'}}</p>\n                                </div>\n                                <div *ngIf=\"encodeFileResponse == undefined || encodeFileResponse == null\">\n                                    <label for=\"\" class=\"form-label\"></label>\n                                    <input type=\"checkbox\" formControlName=\"cvn_needed\">\n                                    <label for=\"vehicle\" class=\"form-label\">Correct CVN Needed</label>\n                                </div>\n                                <div></div>\n                                <div *ngIf=\"encodeFileResponse == undefined || encodeFileResponse == null\" class=\"btnDiv\">\n                                    <button class=\"btn submitBtn\" (click)=\"encodeFileData()\"> Submit</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"response\">\n                        <label for=\"\">Response</label>\n                        <div style=\"text-align: left;\">\n                            <ngx-json-viewer [json]=\"encodeFileResponse\" [expanded]=\"true\"></ngx-json-viewer>\n                          </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div> -->\n    </div>\n</section>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/directory\">Directory</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/directory/view-directory\" routerLinkActive=\"active\">View Directory</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2>Directory</h2>\n            <div class=\"u-add-right\">\n            </div>\n        </div>\n        <hr />\n        <div class=\"directory-inner\">\n            <div class=\"responsive-tbl \">\n                <table>\n                  <thead>\n                    <th>File Name </th>\n                    <th>Action</th>\n                  </thead>\n                  <tr *ngFor=\"let list of directoryFiles\">\n                    <td> {{list?.file_name}} </td>\n                    <td><span><a style=\"cursor: pointer;\" [href]=\"list?.file_url\" target=\"_blank\"><i class=\"fa fa-download\" title=\"Download\" aria-hidden=\"true\"></i></a></span></td>\n                  </tr>\n                </table>\n              </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ManualHandleComponent } from './manual-handle.component';\nimport { EncodeComponent } from './encode/encode.component';\nimport { DecodeComponent } from './decode/decode.component';\nimport { DecodeFileViewComponent } from './decode-file-view/decode-file-view.component';\nimport { EncodeViewComponent } from './encode-view/encode-view.component';\nimport { EncodeCreateComponent } from './encode-create/encode-create.component';\nimport { ViewDownloadFileComponent } from './view-download-file/view-download-file.component';\n\nconst routes: Routes = [{\n  path: '', component: ManualHandleComponent, children: [\n    { path: 'encode', component: EncodeComponent },\n    { path: 'decode', component: DecodeComponent },\n    { path: 'fileView', component: DecodeFileViewComponent },\n    { path: 'encode-view', component: EncodeViewComponent },\n    { path: 'encode-create', component: EncodeCreateComponent },\n    { path: 'view-files/:id', component: ViewDownloadFileComponent },\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManualHandleRoutingModule { }\n","import { Component } from '@angular/core';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-decode-file-view',\n  templateUrl: './decode-file-view.component.html',\n  styleUrls: ['./decode-file-view.component.scss']\n})\nexport class DecodeFileViewComponent {\n  data: any = { \"guid\": \"80ef751b-6dc3-47e1-8e6e-db8540e541cc\", \"error\": null, \"result\": null, \"status\": 0, \"duration\": \"00:00:00.0028838\", \"slotGUID\": \"98b5ab2e-b7cb-44f4-aa76-be5527bed008\", \"userInfo\": null, \"hasFailed\": false, \"startedOn\": \"2023-05-12T07:39:09.5989916Z\", \"callbackURL\": null, \"completedOn\": null, \"isCompleted\": false, \"isSuccessful\": false, \"additionalInfo\": {}, \"asyncOperationType\": 1, \"clientApplicationGUID\": \"31b4f3d2-382a-4f7e-a22b-1eefb38f2162\", \"recommendedPollingInterval\": 5 };\n  decodeFileDataList: any;\n  jsonObject: any;\n  information: any;\n  constructor(private crud: CrudService) {\n    this.getDecodeFileData();\n  }\n  getDecodeFileData() {\n    this.decodeFileDataList = JSON.parse(localStorage.getItem('manual_handle') || '');\n    this.information = this.decodeFileDataList?.async_response?.result?.information\n    \n  //   this.crud.getRequest(`${requestUrl.decodeFile}`).then((res: any) => {\n  //     this.decodeFileDataList = res.data.results;\n  //     // this.decodeFileDataList.forEach((element:any) => {\n  //     //   element['async_response'] = JSON.parse(element.async_response)\n  //     // });\n  //     // this.decodeFileDataList[0].async_response = JSON.parse(this.decodeFileDataList[0].async_response);\n  // })\n}\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { saveAs } from 'file-saver';\nimport { NotificationsService } from 'src/services/notifications.service';\n\n@Component({\n  selector: 'app-encode-view',\n  templateUrl: './encode-view.component.html',\n  styleUrls: ['./encode-view.component.scss']\n})\nexport class EncodeViewComponent {\n  decodeList: any;\n  selectedDecodeFile: any;\n  encodeFileForm!: FormGroup;\n  vehicleInformation!: FormGroup;\n  formData: any = new FormData();\n  type: any = this.ar.queryParams;\n  response: any;\n  data: any = {\n    EEPROM: '',\n    Micro: '',\n    Flash: '',\n    MapFile: ''\n  }\n\n\n  constructor(private crud: CrudService, private formBuilder: FormBuilder,\n    private toastr: ToastrService, private ar: ActivatedRoute, private notification: NotificationsService) {\n    this.vehicleInformation = this.formBuilder.group({\n      kess3_type: ['NA'],\n      ktag_type: ['NA']\n    });\n    this.encodeFileForm = this.formBuilder.group({\n      kessv2_file_guid: ['NA'],\n      modified_file_guid: ['NA'],\n      original_file_guid: ['NA'],\n      cvn_needed: [false]\n    });\n  }\n  ngOnInit() {\n    this.notification.onMessageAdmin.subscribe((res: any) => {\n      if (res && res.type === 'admin_file_encode' && res.ids == this.type['_value'].id) {\n        this.toastr.success('Encoding has been done.');\n        this.getEncode();\n      }\n    });\n    this.getEncode();\n  }\n  disableCheck: any = {\n    EEPROM: false,\n    Flash: false,\n    Micro: false,\n  }\n  getEncode() {\n    this.crud.getRequest(`${requestUrl.getEncodeModified}${this.type['_value'].id}`).then((res: any) => {\n      this.decodeList = res.data;\n      this.response = {\n        guid: this.decodeList.modified_guid\n      }\n      if (this.decodeList[0]?.decode?.display_tool_type_status == 'ktag') {\n        this.decodeList[0]?.decode?.async_response.result.components.forEach((element: any) => {\n          this.decodeList.forEach((res: any) => {\n            if (element.type == res.file_type)\n              this.disableCheck[element.type] = true;\n          })\n        });\n      }\n      else if (this.decodeList[0]?.decode?.display_tool_type_status == 'kess3' && this.selectedDecodeFile?.async_response?.result?.kess3Mode != 'OBD') {\n        this.decodeList[0]?.decode?.async_response.result.bootBenchComponents.forEach((element: any) => {\n          this.decodeList.forEach((res: any) => {\n            if ('BootBenchModified' + element.type == res.file_type)\n              this.disableCheck[element.type] = true;\n          })\n        });\n      }\n\n      this.decodeList.forEach((element: any) => {\n        if (Object.keys(element.async_response).length == 0)\n          element['showAsync'] = false;\n        else\n          element['showAsync'] = true;\n        if (element.file_type == 'EEPROM')\n          this.data['EEPROM'] = element.guid\n        else if (element.file_type == 'Micro')\n          this.data['Micro'] = element.guid\n        else if (element.file_type == 'Flash')\n          this.data['Flash'] = element.guid\n        else if (element.file_type == 'MapFile')\n          this.data['MapFile'] = element.guid\n      });\n\n    })\n  }\n  body: any;\n  kess3EncodeFileData() {\n    if (this.decodeList[0]?.decode?.async_response?.result?.kess3Mode == 'OBD') {\n      this.body = {\n        kess3_mode: this.decodeList[0]?.decode?.async_response?.result?.kess3Mode,\n        modified_file_guid: this.decodeList[0]?.guid,\n        original_file_guid: this.decodeList[0]?.file_type == 'OBDOriginal' ? 'this.decodeList[0]?.guid' : '',\n        ids: this.type['_value'].id,\n        will_correct_cvn: this.encodeFileForm.value.cvn_needed\n      }\n      console.log('kess3EncodeFIleData (kess3mode == obd)',this.body);\n      \n    }\n    else if (this.decodeList[0]?.decode?.async_response?.result?.kess3Mode == 'BootBench') {\n      this.body = {\n        kess3_mode: this.decodeList[0]?.decode?.async_response?.result?.kess3Mode,\n        ids: this.type['_value'].id,\n        micro_file_guid: '',\n        flash_file_guid: '',\n        eeprom_file_guid: '',\n        mapfile_file_guid: '',\n      }\n      this.decodeList.forEach((element: any) => {\n        if (element.file_type == 'BootBenchModifiedEEPROM')\n          this.body.eeprom_file_guid = element.guid;\n        else if (element.file_type == 'BootBenchModifiedMicro')\n          this.body.micro_file_guid = element.guid;\n        else if (element.file_type == 'BootBenchModifiedFlash')\n          this.body.flash_file_guid = element.guid;\n        else if (element.file_type == 'BootBenchModifiedMapFile')\n          this.body.mapfile_file_guid = element.guid;\n      })\n      console.log('kess3EncodeFIleData (kess3mode == BootBench)',this.body);\n    }\n    this.crud.postRequest(`${requestUrl.kess3EncodeNow}`, this.body).then((res: any) => {\n      if (res)\n        this.getEncode();\n    })\n\n  }\n  encodeFileData() {\n    let body = {\n      ids: this.type['_value'].id,\n      is_correct_cvn: this.encodeFileForm.value.cvn_needed,\n      parent: this.type['_value'].id,\n    }\n    console.log('encode view comp, encodeFileData()',body);\n    \n    this.crud.postRequest(`${requestUrl.getEncodeFileDetail}`, body).then((res: any) => {\n      if (res) {\n        this.getEncode();\n      }\n    })\n  }\n  selectedDecode: any;\n  downloadKtagDecodeFile(type: string, decode: any) {\n    this.type = type;\n    this.selectedDecode = decode;\n    var decodedFileURL;\n    if (decode.decode?.display_tool_type_status == 'ktag') {\n      decodedFileURL = decode.async_response.result.encodedFileURL;\n    }\n    else if (decode.decode?.display_tool_type_status == 'kess3') {\n      decode.async_response.result.bootBenchComponents.forEach((element: any) => {\n        if (element.type == type) {\n          decodedFileURL = element.decodedFileURL;\n        }\n      });\n    }\n    else if (decode.decode?.display_tool_type_status == 'kessv2') {\n      decodedFileURL = decode.async_response.result.encodedFileURL;\n    }\n    let body =\n    {\n      \"url\": decodedFileURL\n    }\n\n    this.crud.postRequest(`${requestUrl.downloadAnyFile}`, body).then((res: any) => {\n      if (res) {\n        this.base64ToBlob(res.data.data, res.data.name);\n      }\n    })\n  }\n  base64ToBlob(b64Data: any, name: string, contentType = 'octet/stream', sliceSize = 512) {\n    b64Data = b64Data.replace(/\\s/g, ''); //IE compatibility...\n    let byteCharacters = atob(b64Data);\n    let byteArrays = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      let slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      let byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      let byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n    if (this.type == 'kessv2')\n      saveAs(new Blob(byteArrays, { type: contentType }), 'Encode' + '_' + name);\n    else if (this.type == 'EEPROM')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_EEPROM_' + name);\n    else if (this.type == 'Flash')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_flash_' + name);\n    else if (this.type == 'MapFile')\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_mapFile_' + name);\n    else//decodeid_micro_filename\n      saveAs(new Blob(byteArrays, { type: contentType }), this.selectedDecode.ids + '_micro_' + name);\n  }\n\n  \n  onFileChange(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      this.formData.append('readfile', file);\n    }\n  }\n\n\n  create(listType?: any) {\n    this.formData.append('decode_ids', this.decodeList[0]?.decode.ids);\n    if (this.decodeList[0]?.decode?.display_tool_type_status == 'ktag') {\n      // this.formData.append('type', this.vehicleInformation.value.ktag_type);\n      this.formData.append('type', listType);\n      this.formData.append('parent', this.type['_value'].id);\n    }\n    else if (this.decodeList[0]?.decode?.display_tool_type_status == 'kess3') {\n      if (this.decodeList[0]?.decode?.async_response?.result?.kess3Mode == 'OBD')\n        this.formData.append('type', listType);//this.vehicleInformation.value.kess3_type\n      else\n        this.formData.append('type', 'BootBenchModified' + listType);//this.vehicleInformation.value.kess3_type\n      this.formData.append('parent', this.type['_value'].id);\n    }\n    this.crud.postRequest(`${requestUrl.getEncodeModified}`, this.formData).then((res: any) => {\n      if (res) {\n        this.getEncode();\n        this.toastr.success(res.message);\n      }\n    })\n  }\n\n\n  encodeKtag() {\n    let body = {\n      ids: this.type['_value'].id,\n      micro_guid: this.data.Micro,\n      flash_guid: this.data.Flash,\n      eeprom_guid: this.data['EEPROM'],\n      map_file_guid: this.data.MapFile\n    }\n    this.crud.postRequest(`${requestUrl.encodeKtagFile}`, body).then((res: any) => {\n      if (res) {\n        this.getEncode();\n      }\n    })\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-encode-create',\n  templateUrl: './encode-create.component.html',\n  styleUrls: ['./encode-create.component.scss'],\n})\nexport class EncodeCreateComponent {\n  decodeList: any = [{}, {}];\n  selectedDecodeFile: any;\n  encodeFileForm!: FormGroup;\n  vehicleInformation!: FormGroup;\n  formData: any = new FormData();\n  response: any;\n  encodeFileResponse: any;\n  decodeSecondList: any;\n  showEncodeTabBtn: boolean = false;\n  encodeId: any;\n  type: any = this.ar.queryParams;\n  constructor(\n    private crud: CrudService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private router: Router,\n    private ar: ActivatedRoute\n  ) {\n    this.vehicleInformation = this.formBuilder.group({\n      type: ['Select Decode Request'],\n      tool_used: ['NA'],\n      slot_guid: ['NA'],\n      kess3_type: ['Select File Type', [Validators.required]],\n      ktag_type: ['Select Component Type', [Validators.required]],\n    });\n    this.encodeFileForm = this.formBuilder.group({\n      kessv2_file_guid: ['NA'],\n      modified_file_guid: ['NA'],\n      original_file_guid: ['NA'],\n      cvn_needed: [false],\n    });\n  }\n  disableCheck: any = {\n    EEPROM: false,\n    Flash: false,\n    Micro: false,\n  };\n  ngOnInit() {\n    this.crud\n      .getRequest(`${requestUrl.getDetailByDecodeid}${this.type['_value'].id}`)\n      .then((res: any) => {\n        if (res) {\n          this.selectedDecodeFile = res.data;\n          this.vehicleInformation.controls['tool_used'].setValue(\n            this.selectedDecodeFile?.display_type_status\n          );\n          this.vehicleInformation.controls['slot_guid'].setValue(\n            this.selectedDecodeFile?.async_response?.guid\n          );\n          this.vehicleInformation.controls['type'].setValue(\n            this.selectedDecodeFile?.ids\n          );\n          if (this.selectedDecodeFile?.display_tool_type_status == 'ktag') {\n            this.selectedDecodeFile?.async_response.result.components.forEach(\n              (element: any) => {\n                this.selectedDecodeFile.decode.forEach((res: any) => {\n                  if (element.type == res.file_type)\n                    this.disableCheck[element.type] = true;\n                });\n              }\n            );\n          } else if (\n            this.selectedDecodeFile?.display_tool_type_status == 'kess3' &&\n            this.selectedDecodeFile?.async_response?.result?.kess3Mode != 'OBD'\n          ) {\n            this.selectedDecodeFile?.async_response?.result?.bootBenchComponents.forEach(\n              (element: any) => {\n                this.selectedDecodeFile.decode.forEach((res: any) => {\n                  if ('BootBenchModified' + element.type == res.file_type)\n                    this.disableCheck[element.type] = true;\n                });\n              }\n            );\n          }\n        }\n      });\n    this.getEncode(this.type['_value'].eId);\n    // this.crud.getRequest(`${requestUrl.decodeFile}`).then((res: any) => {\n    //   if (res) {\n    //     this.decodeList = res.data.results;\n    //   }\n    // })\n  }\n  // onChange(event: any) {\n  //   this.selectedDecodeFile = this.decodeList[event.target.value];\n\n  //   this.vehicleInformation.controls['tool_used'].setValue(this.selectedDecodeFile?.display_type_status);\n  //   this.vehicleInformation.controls['slot_guid'].setValue(this.selectedDecodeFile?.async_response?.guid);\n  // }\n  onFileChange(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      if (file.name.length <= 150) {\n        const reader = new FileReader();\n        // reader.onload = e => this.image = reader.result;\n        reader.readAsDataURL(file);\n        this.formData.append('readfile', file);\n      } else {\n        this.toastr.error('File name cannot be more than 150 characters.');\n      }\n    }\n  }\n  create(listType: any) {\n    // this.formData = new FormData();\n    console.log('listType => ', listType);\n\n    this.formData.append('decode_ids', this.selectedDecodeFile.ids);\n    if (this.selectedDecodeFile.display_tool_type_status == 'ktag') {\n      // this.formData.append('type', this.vehicleInformation.value.ktag_type);\n      this.formData.append('type', listType);\n    } else if (this.selectedDecodeFile.display_tool_type_status == 'kess3') {\n      if (this.selectedDecodeFile?.async_response?.result?.kess3Mode == 'OBD')\n        this.formData.append(\n          'type',\n          listType\n        ); //this.vehicleInformation.value.kess3_type\n      else this.formData.append('type', 'BootBenchModified' + listType); //this.vehicleInformation.value.kess3_type\n    } else if (this.selectedDecodeFile.display_tool_type_status == 'kessv2') {\n      this.formData.append('type', listType); //this.vehicleInformation.value.kess3_type\n    }\n    // for (var pair of this.formData.entries()) {\n    //   console.log(pair[0] + ', ' + pair[1]);\n    // }\n\n    console.log(this.formData, 'form data');\n\n    this.crud\n      .postRequest(`${requestUrl.getEncodeModified}`, this.formData)\n      .then((res: any) => {\n        if (res) {\n          this.toastr.success(res.message);\n          this.router.navigate([`/admin/manual-handle/encode-view`], {\n            queryParams: { id: res.data.ids },\n          });\n          // this.router.navigateByUrl('/admin/manual-handle/encode-view',{queryParams: {id: list.ids}})\n          // this.getEncode(res.data.ids);\n        }\n        this.formData = new FormData();\n      });\n  }\n  showProcessingError: boolean = false;\n  getEncode(id: any) {\n    this.encodeId = id;\n    this.crud\n      .getRequest(`${requestUrl.getEncodeModified}${id}`)\n      .then((res: any) => {\n        this.decodeSecondList = res.data;\n        console.log(res, 'res');\n\n        this.decodeSecondList =\n          this.decodeSecondList[this.decodeSecondList?.length - 1];\n        this.response = {\n          guid: this.decodeSecondList?.modified_guid,\n        };\n        this.encodeFileResponse = this.decodeSecondList?.async_response;\n        this.showProcessingError =\n          Object.keys(this.encodeFileResponse).length === 0 ? true : false;\n        console.log(this.encodeFileResponse, 'encode file responsse');\n\n        if (Object.keys(this.encodeFileResponse)?.length == 0)\n          this.showEncodeTabBtn = true;\n        else this.showEncodeTabBtn = false;\n      });\n  }\n  encodeFileData() {\n    let body = {\n      guid: this.encodeId,\n      is_correct_cvn: this.encodeFileForm.value.cvn_needed,\n    };\n\n    this.crud\n      .postRequest(`${requestUrl.getEncodeFileDetail}`, body)\n      .then((res: any) => {\n        if (res) {\n          if (!res.data.hasFailed && !res.data.isSuccessful) {\n            this.getEncode(this.encodeId);\n          }\n        }\n      });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-view-download-file',\n  templateUrl: './view-download-file.component.html',\n  styleUrls: ['./view-download-file.component.scss']\n})\nexport class ViewDownloadFileComponent {\n  directoryFiles: any = [ ]\n  id:any;\n  path: any;\n  constructor(private crud: CrudService, private ar: ActivatedRoute, private toastr: ToastrService) { }\n  ngOnInit() {\n    this.id = this.ar.snapshot.paramMap.get('id');\n    this.crud.getRequest(`${requestUrl.decodeFileDownload}${this.id}`).then((res: any) => {\n      this.directoryFiles = res.data\n    })\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManualHandleRoutingModule } from './manual-handle-routing.module';\nimport { ManualHandleComponent } from './manual-handle.component';\nimport { EncodeComponent } from './encode/encode.component';\nimport { DecodeComponent } from './decode/decode.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { DecodeFileViewComponent } from './decode-file-view/decode-file-view.component';\nimport { EncodeViewComponent } from './encode-view/encode-view.component';\nimport { EncodeCreateComponent } from './encode-create/encode-create.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ViewDownloadFileComponent } from './view-download-file/view-download-file.component';\nimport { SharedComponentsModule } from 'src/app/shared-components/shared-components.module';\n\n\n@NgModule({\n  declarations: [\n    ManualHandleComponent,\n    EncodeComponent,\n    DecodeComponent,\n    DecodeFileViewComponent,\n    EncodeViewComponent,\n    EncodeCreateComponent,\n    ViewDownloadFileComponent\n  ],\n  imports: [\n    CommonModule,\n    ManualHandleRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxJsonViewerModule,\n    NgxPaginationModule,\n    SharedComponentsModule,\n  ]\n})\nexport class ManualHandleModule { }\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n"],"x_google_ignoreList":[16]}