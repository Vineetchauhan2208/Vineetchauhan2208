{"version":3,"file":"315.d5f186659f5f1843.js","mappings":"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","names":["i0","ctx_r28","children_r13","ctx_r32","ctx_r35","i_r7","ctx_r39","item_r4","routes","path","component","NewKnowledgeBaseComponent","constructor","crud","sanitizer","ar","toastr","this","queryParams","Subject","getKnowledgeBaseDetailSidebar","onSearch","pipe","debounceTime","takeUntil","destroy$","subscribe","searchKeywords","ngOnInit","Ques","_value","ques","getArticleDetail","showMenuList","getRequest","cusRequestUrl","then","res","menuList","data","getArticleList","id","isFolder","articleAnswerView","articleListSideBar","results","totalArticleSideBar","count","breadCumbList","type","name","selectedList","handlePageChange","event","pageSideBar","pageSize","updated_at","requestUrl","answerDetail","answer","bypassSecurityTrustHtml","window","scrollBy","syncCategories","success","syncArticle","static","core","selectors","NewKnowledgeBaseRoutingModule","RouterModule","NewKnowledgeBaseModule","CommonModule","FormsModule","NgxPaginationModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/new-knowledge-base/new-knowledge-base.component.html","./src/app/admin/new-knowledge-base/new-knowledge-base-routing.module.ts","./src/app/admin/new-knowledge-base/new-knowledge-base.component.ts","./src/app/admin/new-knowledge-base/new-knowledge-base.module.ts"],"sourcesContent":["<div>\n    <ul class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Home</a></li>\n      <li class=\"breadcrumb-item\"><a>Customer</a></li>\n      <li class=\"breadcrumb-item\"><a routerLink=\"/knowledgebase\" routerLinkActive=\"active\">Knowledgebase</a></li>\n    </ul>\n    <div class=\"MainBox\">\n      <div *ngIf=\"showMenuList\" class=\"leftBox\">\n        <div class=\"d-flex justify-content-start\" style=\"padding-left: var(--font-size-14);\">\n          <button (click)=\"syncCategories()\" class=\"btn sync mb-3\">Sync</button>\n        </div>\n        <ul *ngFor=\"let item of menuList\">\n          <li>\n            <h3 \n              style=\"cursor:pointer;\"\n              [ngClass]=\"selectedList == item.name? 'blue':''\"\n              (click)=\"getArticleList(item.id);breadCumbList('children','',item.name);\"\n              >{{item?.name}}\n            </h3>\n            <ul *ngFor=\"let child of item?.children; let i = index\">\n              <li *ngIf=\"child.name != 'KESS3'\">\n                <p [ngClass]=\"selectedList == child.name? 'blue':'black'\"\n                  (click)=\"getArticleList(child.id, child?.children?.length>0); children[i] = !children[i];breadCumbList('children',i,child.name); \">\n                  <i *ngIf=\"child?.children?.length>0\" class=\"fa fa-folder-o\" aria-hidden=\"true\"></i><i\n                    *ngIf=\"child?.children?.length==0\" class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>{{child.name}}</p>\n                <div *ngIf=\"children[i]\">\n                  <ul *ngFor=\"let children of child?.children; let j = index\">\n                    <li>\n                      <p [ngClass]=\"selectedList == children.name? 'blue':'black'\"\n                        (click)=\"getArticleList(children.id, children?.children?.length>0); secChildren[children.id] = !secChildren[children.id];breadCumbList('secChildren',children.id,children.name); \">\n                        <i *ngIf=\"children?.children?.length>0\" class=\"fa fa-folder-o\" aria-hidden=\"true\"></i><i\n                          *ngIf=\"children?.children?.length==0\" class=\"fa fa-arrow-right\"\n                          aria-hidden=\"true\"></i>{{children.name}}</p>\n                      <div *ngIf=\"secChildren[children.id]\">\n                        <ul *ngFor=\"let secChildren of children?.children; let k = index\">\n                          <li>\n                            <p [ngClass]=\"selectedList == secChildren.name? 'blue':'black'\"\n                              (click)=\"getArticleList(secChildren.id, secChildren?.children?.length>0); thirdChildren[children.id] = !thirdChildren[children.id]; breadCumbList('thirdChildren',children.id,secChildren.name); \">\n                              <i *ngIf=\"secChildren?.children?.length>0\" class=\"fa fa-folder-o\" aria-hidden=\"true\"></i><i\n                                *ngIf=\"secChildren?.children?.length==0\" class=\"fa fa-arrow-right\"\n                                aria-hidden=\"true\"></i>{{secChildren.name}}</p>\n                            <div *ngIf=\"thirdChildren[secChildren.id]\">\n                              <ul *ngFor=\"let thirdChildren of secChildren?.children; let l = index\">\n                                <li>\n                                  <p [ngClass]=\"selectedList == thirdChildren.name? 'blue':'black'\" (\n                                    click)=\"getArticleList(thirdChildren.id);breadCumbList('noChildren',i,thirdChildren.name)\">\n                                    {{thirdChildren.name}}</p>\n                                </li>\n                              </ul>\n                            </div>\n                          </li>\n                        </ul>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div [ngStyle]=\"{'width':showMenuList?'67%':'100%'}\" class=\"rightBox\">\n        <div *ngIf=\"!articleAnswerView\">\n          <div class=\"kbase\">\n            <div class=\"d-flex justify-content-between\">\n              <p>\n                Last synchronized at: {{updated_at | date :\"dd MMM yyy, hh:mm\"}}\n              </p>\n              <button (click)=\"syncArticle()\" class=\"btn sync mb-3\">Sync</button>\n            </div>\n            <div class=\"input-text u-add\">\n              <h2>{{selectedList}}</h2>\n              <div>\n                <input class=\"form-control\" type=\"text\" placeholder=\"Search Article\" #searchInput\n                  (keypress)=\"onSearch.next(searchInput.value)\">\n                <button (click)=\"getKnowledgeBaseDetailSidebar(searchInput.value)\">\n                  <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <hr />\n            <div class=\"no-data\" *ngIf=\"articleListSideBar?.length ==0\">No articles available</div>\n            <div class=\"kbase-inner\"\n              *ngFor=\"let article of articleListSideBar | paginate : {itemsPerPage: pageSize,currentPage: pageSideBar,totalItems: totalArticleSideBar};let i = index\">\n              <p>{{i+1}}. {{article?.title}} </p>\n              <span> {{article?.summary}} </span>\n              <span class=\"readmore\" (click)=\"getArticleDetail(article.slug)\">Read More...</span>\n              <hr />\n            </div>\n            <pagination-controls *ngIf=\"totalArticleSideBar >10\" class=\"pagination-crl\" previousLabel=\"Prev\"\n              nextLabel=\"Next\" (pageChange)=\"handlePageChange($event,'SideBar')\"></pagination-controls>\n          </div>\n        </div>\n        <div *ngIf=\"articleAnswerView\" class=\"kbase\">\n          <div class=\"backlink\" (click)=\"articleAnswerView = false\"><i class=\"fa fa-long-arrow-left\"></i>&nbsp;Back</div>\n          <div style=\"text-align: left;\">\n            <span style=\"font-weight: 600;\">{{answerDetail.title}}</span>\n            <p [innerHTML]=\"answerDetail.answer\" #answer></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewKnowledgeBaseComponent } from './new-knowledge-base.component';\n\nconst routes: Routes = [{ path: '', component: NewKnowledgeBaseComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewKnowledgeBaseRoutingModule { }\n","import { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { debounceTime, distinctUntilChanged, Subject, takeUntil } from 'rxjs';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\n\n@Component({\n  selector: 'app-new-knowledge-base',\n  templateUrl: './new-knowledge-base.component.html',\n  styleUrls: ['./new-knowledge-base.component.scss']\n})\nexport class NewKnowledgeBaseComponent {\n  articleAnswerView: boolean = false;\n  articleListSideBar: any;\n  pageSideBar: number = 1;\n  totalArticleSideBar: number = 0;\n  pageSize: number = 10;\n  answerDetail: any;\n  menuList: any;\n  children: any[] = [];\n  secChildren: any[] = [];\n  thirdChildren: any[] = [];\n  Ques: any = this.ar.queryParams;\n  showMenuList: boolean = true;\n  updated_at = \"\";\n  onSearch = new Subject<string>();\n\n  destroy$ = new Subject<null>();\n  constructor(private crud: CrudService, private sanitizer: DomSanitizer, private ar: ActivatedRoute,private toastr:ToastrService \n   ) {\n    this.getKnowledgeBaseDetailSidebar();\n    this.onSearch\n    .pipe(\n      debounceTime(800),\n      takeUntil(this.destroy$)\n    ).subscribe(searchKeywords => this.getKnowledgeBaseDetailSidebar(searchKeywords))\n  }\n\n  ngOnInit() {\n    if (this.Ques['_value'].ques) {\n      this.getArticleDetail(this.Ques['_value'].ques);\n      this.showMenuList = false;\n    }\n    this.crud.getRequest(`${cusRequestUrl.getZohoRootCategories}`).then((res: any) => {\n      if (res) {\n        this.menuList = res.data;\n      }\n    })\n  }\n  getArticleList(id: any, isFolder?:boolean) {\n    if(isFolder) return;\n    this.articleAnswerView = false;\n    this.crud.getRequest(`${cusRequestUrl.getArticleList}/${id}`).then((res: any) => {\n      if (res) {\n        this.articleListSideBar = res.data.results\n        this.totalArticleSideBar = res.data.count\n      }\n    })\n  }\n  a: any;\n  selectedList: string = 'Knowledgebase';\n  breadCumbList(type: string, id: any, name: string) {\n    this.selectedList = name;\n  }\n\n  handlePageChange(event: number, type: string): void {\n    this.pageSideBar = event;\n    this.getKnowledgeBaseDetailSidebar();\n  }\n\n  getKnowledgeBaseDetailSidebar(searchKeywords?:string) {\n    if (searchKeywords) {\n      this.crud.getRequest(`${cusRequestUrl.getArticleList}?search=${searchKeywords}`).then((res: any) => {\n        if (res) {\n          this.articleListSideBar = res.data.results\n          this.totalArticleSideBar = res.data.count\n        }\n      })\n    }\n    else {\n      this.crud.getRequest(`${cusRequestUrl.getArticleList}?page=${this.pageSideBar}&page_size=${this.pageSize}`).then((res: any) => {\n        if (res) {\n          this.articleListSideBar = res.data.results\n          this.totalArticleSideBar = res.data.count\n          this.updated_at = res.updated_at;\n        }\n      })\n    }\n  }\n  getArticleDetail(id: string, type?: string) {\n    this.crud.getRequest(`${requestUrl.getArticleDetail}${id}`).then((res: any) => {\n      this.answerDetail = res;\n      this.answerDetail.answer = this.sanitizer.bypassSecurityTrustHtml(this.answerDetail?.answer);\n      this.articleAnswerView = true;\n      window.scrollBy(0,-10000);\n    })\n  }\n\n  syncCategories() {\n    this.crud.getRequest(`${requestUrl.updateZohoCategories}`).then((res: any) => {\n      if(res) {\n        this.toastr.success(res.data);\n      }\n      // this.getKnowledgeBaseDetailSidebar();\n      // if (this.Ques['_value'].ques) {\n      //   this.getArticleDetail(this.Ques['_value'].ques);\n      //   this.showMenuList = false;\n      // }\n      // this.crud.getRequest(`${cusRequestUrl.getZohoRootCategories}`).then((res: any) => {\n      //   if (res) {\n      //     this.menuList = res.data;\n      //   }\n      // })\n    })\n  }\n\n  syncArticle() {\n    this.crud.getRequest(`${requestUrl.updateZohoArticles}`).then((res: any) => {\n      if(res) {\n        this.toastr.success(res.data);\n      }\n      // this.getKnowledgeBaseDetailSidebar();\n      // if (this.Ques['_value'].ques) {\n      //   this.getArticleDetail(this.Ques['_value'].ques);\n      //   this.showMenuList = false;\n      // }\n      // this.crud.getRequest(`${cusRequestUrl.getZohoRootCategories}`).then((res: any) => {\n      //   if (res) {\n      //     this.menuList = res.data;\n      //   }\n      // })\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NewKnowledgeBaseRoutingModule } from './new-knowledge-base-routing.module';\nimport { NewKnowledgeBaseComponent } from './new-knowledge-base.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\n@NgModule({\n  declarations: [\n    NewKnowledgeBaseComponent\n  ],\n  imports: [\n    CommonModule,\n    NewKnowledgeBaseRoutingModule,\n    FormsModule,\n    NgxPaginationModule\n  ]\n})\nexport class NewKnowledgeBaseModule { }\n"],"x_google_ignoreList":[]}