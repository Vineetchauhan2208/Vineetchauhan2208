{"version":3,"file":"249.2539cdf4b222b99c.js","mappings":"oKAQO,IAAMA,EAAe,MAAtB,MAAOA,EAGXC,YAAoBC,gBADpBC,aAAUC,WAKV,CAEAC,aAAaC,GAEX,OAAOH,KAAKD,MAAMK,IAAIJ,KAAKK,QAAQ,yBAA0B,CAAEF,UACjE,CAEAG,kBAAkBC,GAEhB,OAAOP,KAAKD,MAAMK,IAAI,GAAGJ,KAAKK,iCAAiCE,IACjE,CACAC,yBAAyBC,GACvB,OAAOT,KAAKD,MAAMW,KAAK,GAAGV,KAAKK,sCAAsCI,EACvE,CACAE,kBACE,OAAOX,KAAKD,MAAMK,IAAI,GAAGJ,KAAKK,iDAChC,CAACO,kDAvBUf,GAAegB,oDAAfhB,EAAeiB,QAAfjB,EAAe,qBAFd,gBAEDA,CAAe,8FCDrB,IAAMkB,EAAkB,MAAzB,MAAOA,EAAkBH,kDAAlBG,EAAkB,sCAAlBA,EAAkBC,0ECP/BC,uDDOaF,CAAkB,iFEqEPE,mBAA+DA,kBAAMA,cAA/DA,mDACNA,mBAAoEA,oBAAQA,cAAtEA,oHAhBdA,cACuI,OADvIA,CACuI,YAExGA,kBAEnBA,kBAAqB,UAAOA,SACxBA,QACAA,aAAGA,SAAwBA,cAIvCA,cACIA,gCACJA,QACAA,eACIA,0BACAA,0BACJA,QACAA,eAAI,YAAJA,CAAI,WAEoFA,iBAClCA,wCAjB1CA,yEACwBA,6DAErBA,4BAKXA,iEAG+BA,sCACEA,sCAIVA,uEAQ/BA,gBAAqCA,sBAAUA,+BAG/CA,gBAAMA,4BAAgBA,kCAL1BA,kBAEIA,yBAEAA,2CAINA,yCANaA,mCAAgB,0FC9EhC,IAAMC,EAAsB,MAA7B,MAAOA,EAWXpB,YAAoBqB,EAA8BC,EAA2CC,GAAzErB,qBAA8BA,wBAA2CA,YAT7FA,eAAiB,GAEjBA,UAAO,EACPA,cAAW,GACXA,WAAQ,GACRA,eAAiB,GAGjBA,gBAAY,EAEVA,KAAKmB,cAAcG,SAAS,aAC9B,CAEAC,WACEvB,KAAKwB,MAAQC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IAC/D5B,KAAK6B,eACP,CAEAA,cAAcC,EAAaC,GACzB,IAAIC,EAEFA,EADEF,GAASC,EACH,SAASD,cAAkBC,IAE3B,GACV/B,KAAKiC,WAAY,EACjBjC,KAAKqB,KAAKa,WAAW,GAAGC,oBAA2BnC,KAAKwB,MAAMY,OAAOJ,EAAQ,IAAMA,EAAQ,MAC1FK,KAAMC,IACDA,IACFtC,KAAKuC,UAAYD,EAAI7B,KAAK+B,QAC1BxC,KAAKyC,cAAgBH,EAAI7B,KAAKiC,SAGjCC,QAAQ,IAAM3C,KAAKiC,WAAY,EAElC,CAGAW,QAAQC,GACN7C,KAAK8C,MAAQD,EACb7C,KAAK+C,KAAO,CACd,CAEAC,WAAWC,GACTjD,KAAKkD,UAAYD,EAAME,OAAOC,MAC9BpD,KAAK+C,KAAO,CACd,CAACnC,kDA/CUM,GAAsBmC,wEAAtBnC,EAAsBF,miDDXnCC,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAE2BA,gBAAIA,UAClDA,gBAA4B,SAAsDA,sBAAUA,YAEhGA,iBAAuB,UAAvBA,CAAuB,WAEQA,uBAAUA,QACjCA,qBACIA,0BACIA,iBAA+C,WAE/CA,iBAA6BA,kBACzBA,iBAAiB,UAAjBA,CAAiB,QACTA,oBAAsI,cACpJA,gBAKFA,yBAAMA,2BAAcA,YAG5BA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,QAA5BA,CAA4B,YAA5BA,CAA4B,WAKQA,iBAAIA,QACpBA,mBAA2D,WACnBA,gCAASqC,gBAAc,aAAa,MAAM,GACvDrC,QACvBA,iBAAsCA,gCAASqC,gBAAc,aAAa,MAAM,GACzDrC,cAInCA,eAAI,YAAJA,CAAI,WAEoBA,0BAAaA,QAC7BA,mBAA2D,WACnBA,gCAASqC,gBAAc,YAAY,MAAM,GACtDrC,QACvBA,iBAAsCA,gCAASqC,gBAAc,YAAY,MAAM,GACxDrC,cAInCA,eAAI,YAAJA,CAAI,WAEoBA,mBAAMA,QACtBA,mBAA2D,WACnBA,gCAASqC,gBAAc,UAAU,MAAM,GACpDrC,QACvBA,iBAAsCA,gCAASqC,gBAAc,UAAU,MAAM,GACtDrC,cAInCA,eAAIA,mBAAMA,UAEdA,+CAyBJA,QACAA,yBASJA,mBAlCiCA,gGA0BxBA,8qSC7EJC,CAAsB,+GCIPD,oBAEIA,yCACJA,+BAOAA,oBAEIA,sCACJA,+BASAA,oBAEIA,qCACJA,+BAOAA,oBAEIA,uCACJA,+BACAA,oBAEIA,iCACJA,+BAUAA,oBAEIA,0CACJA,+BAOAA,oBAEIA,0CACJA,+BASAA,oBAEIA,gCACJA,+BAOAA,oBAEIA,iCACJA,kCAMIA,wBACIA,SAAoBA,kBACxBA,kCAF+CA,yBAC3CA,kCAAsCA,0DAY9CA,oBAEIA,0CACJA,+BAWAA,oBAEIA,mCACJA,+BACAA,oBAEIA,wCACJA,+BAiCJA,oBAEIA,8BACJA,6EC/JjB,IAAMsC,EAAqB,MAA5B,MAAOA,EAYXzD,YAAoB0D,EAAyBrC,EACnCsC,EAAwBpC,EACxBqC,EAA+BC,GAFrB3D,UAAyBA,qBACnCA,cAAwBA,YACxBA,cAA+BA,wBAZzCA,eAAY4D,WACZ5D,aAAkBC,sBAElBD,iBAAa6D,KACb7D,SAAW,CACT,CAAE8D,OAAU,KAAMC,KAAQ,iBAC1B,CAAED,OAAU,KAAMC,KAAQ,mBAE7B/D,iBAAkByB,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IAKjE5B,KAAKmB,cAAcG,SAAS,YAC5BtB,KAAKgE,aAAehE,KAAKwD,GAAGS,MAAM,CAChCC,cAAe,CAAC,GAAI,CAACC,gBACrBC,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,IACzBC,WAAY,CAAC,GAAI,CAACJ,gBAClBK,UAAW,CAAC,GAAI,CAACL,gBACjBM,SAAU,CAAC,IACXC,aAAc,CAAC,MACfC,MAAO,CAAC,GAAI,CAACR,cAAqBA,aAClCS,QAAS,CAAC,GAAI,CAACT,gBACfU,UAAW,CAAC,GAAI,CAACV,gBACjBW,QAAS,CAAC,iBAAkB,CAACX,gBAC7BY,MAAO,CAAC,GAAI,CAACZ,gBACba,KAAM,CAAC,GAAI,CAACb,gBACZc,IAAK,CAAC,GAAI,CAACd,gBACXe,iBAAkB,CAAC,GAAI,CAACf,iBAE5B,CAKD5C,WACGvB,KAAKmF,YAAYC,KAAK,CAACC,EAAQC,IAAYD,EAAEP,QAAUQ,EAAER,QAAW,GAAI,GACxE9E,KAAKuF,IAAIC,QAASC,IAChBzF,KAAK0F,iBAAiBD,EAAQ1B,KAAI,EAEtC,CAGA2B,iBAAiB3B,GACf,MAAM4B,EAAQ3F,KAAKmF,YAAYS,UAAWC,GAAcA,EAAKf,UAAYf,GACzE,IAAc,IAAV4B,EAAc,CAChB,MAAMG,EAAgB9F,KAAKmF,YAAYY,OAAOJ,EAAO,GAAG,GACxD3F,KAAKmF,YAAYa,QAAQF,EAAa,CAE1C,CAGAG,yBACE,GAAIjG,KAAKgE,aAAakC,MAAO,CAC3B,IAAIC,EAAenG,KAAKgE,aAAaZ,MACjC3C,EAAO,CACT2F,OAAUpG,KAAKqG,YAAYC,QAC3BC,OAAU,CACRrC,cAAiBiC,EAAajC,cAC9BE,WAAc+B,EAAa/B,WAC3BC,eAAkB8B,EAAa9B,eAC/BC,uBAA0B6B,EAAa7B,wBAEzCM,QAAW,CACTC,UAAasB,EAAavB,QAC1BA,QAAWuB,EAAatB,UACxBC,QAAWqB,EAAarB,QACxBC,MAASoB,EAAapB,MACtBC,KAAQmB,EAAanB,KACrBC,IAAOkB,EAAalB,KAEtBuB,OAAU,CACRjC,WAAc4B,EAAa5B,WAC3BC,UAAa2B,EAAa3B,UAC1BE,aAAgByB,EAAazB,aAC7BD,SAAYzE,KAAKyG,iBACjB9B,MAASwB,EAAaxB,OAExBO,iBAAoBiB,EAAajB,kBAEnClF,KAAKqB,KAAKqF,YAAY,GAAGvE,mBAA0B1B,GAAM4B,KAAMC,IAC1DA,IACDtC,KAAK0D,OAAOiD,QAAQrE,EAAIsE,SACxB5G,KAAKyD,OAAOoD,cAAc,eAAa,EAE1C,MAGD7G,KAAK8G,yBAAyB9G,KAAKgE,aAEvC,CAGA+C,gBAAgB9D,EAAW+D,GACzBA,EAAKC,WAAW,CAAEvC,aAAgBzB,EAAMiE,UAC1C,CAEAC,eAAelE,GACbjD,KAAKgE,aAAaiD,WAAW,CAAEvC,aAAgBzB,EAAMiE,UACvD,CAEAE,eAAeC,EAAcC,GAC3B,IAAIC,EAAS,GAEXA,EADCD,IAAgBD,EAAMG,SAASF,GACvB,IAAIA,IAAcD,IAElBA,EAGXrH,KAAKgE,aAAa5D,IAAI,aAAaqH,SAASF,EAE9C,CAGAd,iBACE,MAAMY,EAAerH,KAAKgE,aAAa0D,SAASjD,SAAYrB,MACtDkE,EAActH,KAAKgE,aAAa0D,SAAShD,aAAgBtB,MAC/D,OAAGkE,GAAeD,EAAMG,SAAS,IAAMF,GAC9BD,EAAMM,QAAQ,IAAML,EAAa,IAEnCD,CACT,CAGAP,yBAAyBc,GACvBC,OAAOC,OAAOF,EAAUF,UAAUlC,QAAQuC,IACxCA,EAAQC,gBACJD,aAAmBE,MACrBjI,KAAK8G,yBAAyBiB,EAAO,EAG3C,CAACnH,kDAvIU2C,GAAqBF,4GAArBE,EAAqBvC,kxEDhBlCC,qBAA4B,UAA5BA,CAA4B,UAE4CA,0BAAcA,UAGlFA,iBAAwB,UAAxBA,CAAwB,UAAxBA,CAAwB,WAAxBA,CAAwB,UAAxBA,CAAwB,QAAxBA,CAAwB,cAM2CA,0BAAaA,QACxDA,oBAGAA,2BAIJA,QACAA,gBAAK,cAC0CA,uBAAUA,QACrDA,qBAGAA,2BAIJA,UAEJA,kBAA4B,SAA5BA,CAA4B,eAEsBA,sBAASA,QACnDA,qBAGAA,2BAIJA,QACAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGAA,2BAIAA,2BAIJA,UAGJA,kBAA4B,SAA5BA,CAA4B,eAEoBA,2BAAcA,QACtDA,wBAGAA,2BAIJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,2BAIJA,UAEJA,kBAA4B,SAA5BA,CAA4B,eAEiBA,iBAAIA,QACzCA,qBAGAA,2BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,2BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,yBAAsE,mBACrCA,gCAAmBA,QAChDA,+BAGAA,YAIZA,kBAA4B,SAA5BA,CAA4B,eAEoBA,2BAAcA,QACtDA,qBAGAA,2BAIJA,QAEAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAKIA,yCAAiBqC,mCAAoC,GALzDrC,QAMAA,2BAIAA,2BAIJA,UAGJA,kBAA4B,SAA5BA,CAA4B,eAEuBA,uBAAUA,QACrDA,qBAGJA,QACAA,gBAAK,eAC8CA,2BAAcA,QAC7DA,qBAGJA,UAGJA,mBAAuB,eACoCA,kCAC7CA,QACVA,qBAGAA,oBACIA,4FACJA,UAEJA,mBACIA,iCAGAA,2BAIJA,QACAA,mBAAoB,gBACcA,gCAASqC,sBAAoB,GAAErC,kBAAKA,QAClEA,sBAA4BA,gCAASqC,0BAAwB,GAAErC,mBAAMA,2BA3KvEA,2CAKUA,0HAGCA,iIAODA,oHAGCA,2HASDA,kHAGCA,yHAODA,0GAGCA,8GAIAA,iHAUDA,8GAGCA,qHAODA,kHAGCA,yHASDA,wGAGCA,+GAODA,0GAGCA,iHAQ8BA,wCAW/BA,sGAGCA,6GAQDA,gHAGAA,wCAGCA,sHAIAA,uHAUDA,oHAMAA,4HASJA,4IAOyBA,oCAIxBA,u0IC7JhBsC,CAAqB,oDCqCdtC,cAA0DA,sBAAUA,kDA2BpEA,iBAAkE,WAAlEA,CAAkE,cAEtDA,4GAD+BA,QAEnCA,gBAAsBA,SAA0BA,QAChDA,gBACJA,SAAM,2DAHEA,yCACkBA,wDAC8BA,oGA5BhEA,cACmI,OADnIA,CACmI,YAEpGA,kBAEnBA,kBAAqB,UAAOA,SAAsCA,QAC9DA,gBAA8BA,SAAcA,cAIxDA,iBAAa,YAAbA,CAAa,eAEDA,qGAD+BA,QAEnCA,iBAAsBA,UAA+BA,YAI7DA,kBAAa,YAAbA,CAAa,eAEDA,yGAD+BA,QAEnCA,iBAAsBA,UAA+BA,YAI7DA,yBAOAA,eAAI,gBAAqBA,iEAASA,gBAAO,GAAEA,mBAAMA,WAAS,iDA3B9CA,4EACwBA,qDACMA,gCAM9BA,0CACkBA,6DAMlBA,8CACkBA,6DAIhBA,yFASlBA,iBACIA,+BACJA,kDAGRA,kCACIA,+DAAcA,4BAAwB,GAAEA,qFClF7C,IAAMiH,GAAqB,MAA5B,MAAOA,EAcXpI,YAAoBqI,EAA4C9G,EACtDqC,GADU1D,oBAA4CA,YACtDA,cAbVA,UAAO,EACPA,cAAW,GACXA,WAAQ,GACRA,eAAiB,GAGjBA,gBAAoB,GACpBA,oBAAwB,GACxBA,eAAmB,GACnBA,kBAAoB,SAEpBA,gBAAqB,CAGrB,CAEAuB,WACEvB,KAAKqG,YAAc5E,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IACrE5B,KAAKoI,qBACP,CAEAC,KAAKC,GACH,MAAMC,EAAY,CAChBnG,KAAMpC,KAAKwI,SAASF,GAAGlG,MAErBpC,KAAKyI,WAAWH,KAClBC,EAAKG,gBAAqB1I,KAAKyI,WAAWH,IACxCtI,KAAK2I,eAAeL,KACtBC,EAAKK,oBAAyB5I,KAAK2I,eAAeL,IAChDtI,KAAK6I,UAAUP,KACjBC,EAAKO,eAAoB9I,KAAK6I,UAAUP,IAC1CtI,KAAKqB,KAAK0H,WAAW,GAAGC,yBAAoCT,GAAMlG,KAAMC,IAClEA,IACEA,EAAIqE,SACN3G,KAAK0D,OAAOiD,QAAQrE,EAAIsE,SACxB5G,KAAKqB,KAAKa,WAAW8G,wBAAkC3G,KAAMC,IAC3DX,aAAasH,QAAQ,cAAexH,KAAKyH,UAAU5G,EAAI7B,OACvDT,KAAKmI,aAAagB,oBAAmB,EAAI,IAI3CnJ,KAAK0D,OAAO0F,MAAM9G,EAAIsE,SACxB5G,KAAKoI,sBAAmB,EAI9B,CAGAA,sBAKEpI,KAAKqB,KAAKa,WAHNlC,KAAK8C,MACD,GAAGkG,0BAAoChJ,KAAKqG,YAAYjE,eAAepC,KAAK8C,QACzE,GAAGkG,0BAAoChJ,KAAKqG,YAAYjE,aAAapC,KAAK+C,kBAAkB/C,KAAKqJ,YAClFhH,KAAMC,IAC9BtC,KAAKsJ,2BAA2BhH,EAAG,EAEvC,CACAgH,2BAA2BhH,GACzBtC,KAAKwI,SAAWlG,EAAI7B,KAAK+B,QACzBxC,KAAKuJ,UAAoC,GAAxBvJ,KAAKwI,SAASgB,OAC/B,QAASlB,EAAI,EAAGA,EAAItI,KAAKwI,SAASgB,OAAQlB,IACxCtI,KAAKyI,WAAWH,GAAK,EACrBtI,KAAK2I,eAAeL,GAAK,EACzBtI,KAAK6I,UAAUP,GAAK,EAEtBtI,KAAKyC,cAAgBH,EAAI7B,KAAKiC,KAChC,CACA+G,0BAA0B3H,EAAaC,GAErC/B,KAAKqB,KAAKa,WADA,GAAG8G,0BAAoChJ,KAAKqG,YAAYjE,cAAcN,cAAkBC,KACxEM,KAAMC,IAC9BtC,KAAKsJ,2BAA2BhH,EAAG,EAEvC,CAEAoH,iBAAiBzG,GACfjD,KAAK+C,KAAOE,EACZjD,KAAKoI,qBACP,CAACxH,kDAhFUsH,GAAqB7E,yEAArB6E,EAAqBlH,uwCDblCC,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAAgCA,oBAAQA,UACpEA,gBAA4B,SAAwEA,mBAAMA,YAG9GA,kBAAuB,WAAvBA,CAAuB,SAEVA,iCAAmBA,QACxBA,kBAAyB,SAAzBA,CAAyB,iBAEaA,qDAAmB,0BAAUqC,uBAAqB,GAAhFrC,cAIZA,eACAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,QAA5BA,CAA4B,YAA5BA,CAA4B,WAKQA,uBAAUA,QAC1BA,mBAA2D,WACnBA,gCAASqC,4BAA0B,aAAa,MAAM,GACnErC,QACvBA,iBAAsCA,gCAASqC,4BAA0B,aAAa,MAAM,GACrErC,cAKnCA,eAAI,YAAJA,CAAI,WAEoBA,4BAAeA,QAC/BA,mBAA2D,WACnBA,gCAASqC,4BAA0B,mCAAmC,MAAM,GACzFrC,QACvBA,iBAAsCA,gCAASqC,4BAA0B,mCAAmC,MAAM,GAC3FrC,cAInCA,eAAI,YAAJA,CAAI,WAEoBA,+BAAkBA,QAClCA,mBAA2D,WACnBA,gCAASqC,4BAA0B,mCAAmC,MAAM,GACzFrC,QACvBA,iBAAsCA,gCAASqC,4BAA0B,mCAAmC,MAAM,GAC3FrC,cAGnCA,yBACAA,eAAIA,mBAAMA,UAEdA,+CAiCAA,yBAGJA,UAEJA,0CAEJA,iBApF8CA,mCAyCzBA,kEAIWA,+FAgCAA,mCAKNA,w7RCjFjBiH,CAAqB,4BCDdjH,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCAcAA,oBAEIA,0CACJA,gCAOAA,oBAEIA,0CACJA,gCAQAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,mCAMIA,wBACIA,SAAoBA,kBACxBA,kCAF+CA,yBAC3CA,kCAAsCA,2DAU9CA,oBAEIA,0CACJA,gCAUAA,oBAGIA,oCACJA,gCACAA,oBAEIA,yCACJA,uHAnHZA,kBAA8E,QAA9EA,CAA8E,aAEvBA,yBAAaA,QACxDA,mBAGAA,0BAIJA,QACAA,eAAK,aAC0CA,sBAAUA,QACrDA,mBAGAA,2BAIJA,QACAA,gBAAK,eACyCA,sBAASA,QACnDA,qBAGAA,2BAIJA,QACAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGJA,QAEAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,2BAIJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,2BAIJA,QAEAA,gBAAK,eACoCA,iBAAIA,QACzCA,qBAGAA,2BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,2BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,yBAA0D,mBACzBA,gCAAmBA,QAChDA,gCAGAA,UAGRA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGAA,2BAIJA,QAEAA,gBAAK,eACsCA,kBAAKA,QAC5CA,qBAIIA,iEAAgBA,sCAAkC,GAJtDA,QAKAA,2BAKAA,2BAIJA,QAEAA,gBAAK,eAC0CA,uBAAUA,QACrDA,qBAGJA,QACAA,gBAAK,eAC8CA,2BAAcA,QAC7DA,qBAGJA,QAEJA,mBAAuB,eACoCA,kCAC7CA,QACVA,qBAGAA,oBACIA,4FACJA,UAGJA,mBAAsD,gBACfA,yDAASA,oBAAW,GAAEA,kBAAKA,QAC9DA,sBACAA,yDAASA,kCAAyB,GAAEA,mBAAMA,WAAS,yBAjJxCA,mCAIHA,4HAGCA,mIAODA,sHAGCA,6HAODA,oHAGCA,2HAODA,4GAOAA,gHAGCA,uHAODA,oHAGCA,2HAQDA,0GAGCA,iHAODA,4GAGCA,mHAQ8BA,wCAS/BA,wGAGCA,+GAQDA,kHAEAA,yCAGCA,wHAKAA,yHAQDA,sHAMAA,8HAQJA,+ICrIpB,MAAM0I,GAAiB,CACrB,CACEC,KAAM,GAAIC,UAAW9I,EAAoB+I,SAAU,CACjD,CAAEF,KAAM,GAAIC,UAAW3I,GACvB,CAAE0I,KAAM,gBAAiBC,UAAWtG,GACpC,CAAEqG,KAAM,qBAAsBC,UCGD,MAA7B,MAAOE,EAWXjK,YAAoB0D,EAAyBC,EAAwBpC,EAC3DqC,EAA+BtC,EAC/B4I,GAFUhK,UAAyBA,cAAwBA,YAC3DA,cAA+BA,wBAC/BA,aAZVA,cAAmB,WAEnBA,eAAY4D,WACZ5D,aAAkBC,sBAElBD,iBAAa6D,KAIb7D,mBAAqB,GAsBrBA,SAAW,CACT,CAAE8D,OAAU,KAAMC,KAAQ,iBAC1B,CAAED,OAAU,KAAMC,KAAQ,mBA8C5B/D,oBAAiB,GAlEfA,KAAKiK,cAAgBjK,KAAKwD,GAAGS,MAAM,CACjCC,cAAe,CAAC,GAAI,CAACC,gBACrBC,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7BC,WAAY,CAAC,GAAI,CAACJ,gBAClBK,UAAW,CAAC,GAAI,CAACL,gBACjBM,SAAU,CAAC,IACXC,aAAc,CAAC,IACfC,MAAO,CAAC,GAAI,CAACR,cAAqBA,aAClCS,QAAS,CAAC,GAAI,CAACT,gBACfU,UAAW,CAAC,GAAI,CAACV,gBACjBW,QAAS,CAAC,iBAAkB,CAACX,gBAC7BY,MAAO,CAAC,GAAI,CAACZ,gBACba,KAAM,CAAC,GAAI,CAACb,gBACZc,IAAK,CAAC,GAAI,CAACd,iBAEf,CAOA5C,WACEvB,KAAKkK,cAAgBlK,KAAKgK,MAAMG,SAASC,SAAShK,IAAI,MACtDJ,KAAKmF,YAAYC,KAAK,CAACC,EAAQC,IAAYD,EAAEP,QAAUQ,EAAER,QAAW,GAAI,GACxE9E,KAAKuF,IAAIC,QAASC,IAChBzF,KAAK0F,iBAAiBD,EAAQ1B,KAAI,GAEpC/D,KAAKqK,mBACP,CAGAA,oBACErK,KAAKoB,iBAAiBd,kBAAkBN,KAAKkK,eAAeI,UAAWhI,IACrEtC,KAAKqG,YAAc/D,EAAI7B,KACvBT,KAAKuK,MAAQjI,EAAI7B,KAAK8J,MACtBvK,KAAKwK,SAAWxK,KAAKqG,aAAanD,UAEb,UAAjBlD,KAAKwK,WACPxK,KAAKiK,cAAcvC,SAASnD,WAAckD,SAASzH,KAAKqG,YAAY9B,YACpEvE,KAAKiK,cAAcvC,SAASlD,UAAaiD,SAASzH,KAAKqG,YAAY7B,WACnExE,KAAKiK,cAAcvC,SAAShD,aAAgB+C,SAASzH,KAAKqG,aAAa3B,cAEvE1E,KAAKoH,eAAepH,KAAKiK,eAEzBjK,KAAKiK,cAAcvC,SAAS/C,MAAS8C,SAASzH,KAAKqG,YAAY1B,OAC/D3E,KAAKiK,cAAcvC,SAAS9C,QAAW6C,SAASzH,KAAKqG,YAAYoE,aAAa7F,SAC9E5E,KAAKiK,cAAcvC,SAAS7C,UAAa4C,SAASzH,KAAKqG,YAAYoE,aAAa5F,WAChF7E,KAAKiK,cAAcvC,SAAS5C,QAAW2C,SAASzH,KAAKqG,YAAYoE,aAAa3F,SAC9E9E,KAAKiK,cAAcvC,SAAS3C,MAAS0C,SAASzH,KAAKqG,YAAYoE,aAAa1F,OAC5E/E,KAAKiK,cAAcvC,SAAS1C,KAAQyC,SAASzH,KAAKqG,YAAYoE,aAAazF,MAC3EhF,KAAKiK,cAAcvC,SAASzC,IAAOwC,SAASzH,KAAKqG,YAAYoE,aAAaxF,KAC1EjF,KAAKiK,cAAcvC,SAASxD,cAAiBuD,SAASzH,KAAKqG,YAAYqE,oBAAoBxG,eAC3FlE,KAAKiK,cAAcvC,SAAStD,WAAcqD,SAASzH,KAAKqG,YAAYqE,oBAAoBtG,YACxFpE,KAAKiK,cAAcvC,SAASrD,eAAkBoD,SAASzH,KAAKqG,YAAYqE,oBAAoBrG,gBAE5FrE,KAAKiK,cAAcvC,SAASpD,uBAA0BmD,SAASzH,KAAKqG,YAAYqE,oBAAoBpG,wBAAsB,EAI3HqG,MAEL,CAGAvD,eAAeJ,GACb,IAAI4D,EAAiB,GAClB5K,KAAKqG,aAAa3B,cACnB1E,KAAK6K,eAAiB7K,KAAKqG,YAAY3B,aACvCkG,EAAiB,IAAI5K,KAAKqG,aAAa3B,eAAe1E,KAAKqG,YAAY5B,YAClEmG,EAAiB5K,KAAKqG,aAAa5B,SAC1CuC,EAAK5G,IAAI,aAAaqH,SAASmD,EACjC,CAIAnE,iBACE,MAAMY,EAAerH,KAAKiK,cAAcvC,SAASjD,SAAYrB,MACvDkE,EAActH,KAAKiK,cAAcvC,SAAShD,aAAgBtB,MAChE,OAAGkE,GAAeD,EAAMG,SAAS,IAAMF,GAC9BD,EAAMM,QAAQ,IAAML,EAAa,IAEnCD,CACT,CAEA3B,iBAAiB3B,GACf,MAAM4B,EAAQ3F,KAAKmF,YAAYS,UAAWC,GAAcA,EAAKf,UAAYf,GACzE,IAAc,IAAV4B,EAAc,CAChB,MAAMG,EAAgB9F,KAAKmF,YAAYY,OAAOJ,EAAO,GAAG,GACxD3F,KAAKmF,YAAYa,QAAQF,EAAa,CAE1C,CAGAgF,0BACE,GAAI9K,KAAKiK,cAAc/D,MAAO,CAC5B,IAAI6E,EAAgB/K,KAAKiK,cAAc7G,MAyBvCpD,KAAKqB,KAAK0H,WAAW,GAAG5G,mBAxBb,CACTC,KAAQpC,KAAKqG,YAAYjE,KACzBmE,OAAU,CACRrC,cAAiB6G,EAAc7G,cAC/BE,WAAc2G,EAAc3G,WAC5BC,eAAkB0G,EAAc1G,eAChCC,uBAA0ByG,EAAczG,wBAE1CM,QAAW,CACTC,UAAakG,EAAcnG,QAC3BA,QAAWmG,EAAclG,UACzBC,QAAWiG,EAAcjG,QACzBC,MAASgG,EAAchG,MACvBC,KAAQ+F,EAAc/F,KACtBC,IAAO8F,EAAc9F,KAEvBuB,OAAU,CACRjC,WAAcwG,EAAcxG,WAC5BC,UAAauG,EAAcvG,UAC3BC,SAAYsG,EAActG,SAC1BC,aAAgBqG,EAAcrG,aAC9BC,MAASoG,EAAcpG,SAG6BtC,KAAMC,IACzDA,IACDtC,KAAK0D,OAAOiD,QAAQrE,EAAIsE,SACxB5G,KAAKyD,OAAOoD,cAAc,eAAa,EAE1C,MAGD7G,KAAK8G,yBAAyB9G,KAAKiK,cAEvC,CACAnD,yBAAyBc,GACvBC,OAAOC,OAAOF,EAAUF,UAAUlC,QAAQuC,IACxCA,EAAQC,gBACJD,aAAmBE,MACrBjI,KAAK8G,yBAAyBiB,EAAO,EAG3C,CAEAiD,2BAA2B/H,GACzBjD,KAAKiK,cAAchD,WAAW,CAAEgE,UAAahI,GAC/C,CAEAiI,YACElL,KAAKiK,cAAcvC,SAASnD,WAAckD,SAAS,IAC/CzH,KAAKiK,cAAcvC,SAASlD,UAAaiD,SAAS,IAClDzH,KAAKiK,cAAcvC,SAASjD,SAAYgD,SAAS,IACjDzH,KAAKiK,cAAcvC,SAASxD,cAAiBuD,SAAS,IACtDzH,KAAKiK,cAAcvC,SAAStD,WAAcqD,SAAS,IACnDzH,KAAKiK,cAAcvC,SAASrD,eAAkBoD,SAAS,GAC7D,CAAC7G,kDAxKUmJ,GAAsB1G,4GAAtB0G,EAAsB/I,osEFhBnCC,qBAA2B,UAA3BA,CAA2B,UAA3BA,CAA2B,UAGaA,2BAAeA,UAG/CA,2BAoJJA,iBApJoDA,i5BEU3C8I,CAAsB,MDF7B,CAAEH,KAAM,gBAAiBC,UAAW3B,OAQnC,IAAMiD,GAAsB,MAA7B,MAAOA,EAAsBvK,kDAAtBuK,EAAsB,sCAAtBA,IAAsBvK,wCAHvBwK,cAAsBzB,IACtByB,eAECD,CAAsB,KEatBE,GAAe,MAAtB,MAAOA,EAAezK,kDAAfyK,EAAe,sCAAfA,IAAezK,wCAVxB0K,KACAH,GACAI,KACAC,KACAC,KACAC,KACAC,IACAC,eAGSP,CAAe","names":["CustomerService","constructor","_http","this","environment","getCustomers","params","get","baseUrl","getCustomerByUuid","id","createFileServiceRequest","data","post","getFileFormData","static","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory","SubDealerComponent","selectors","i0","SubdealerListComponent","_titleservice","_customerservice","crud","setTitle","ngOnInit","users","JSON","parse","localStorage","getItem","subDealerList","field","type","param","isLoading","getRequest","requestUrl","uuid","then","res","customers","results","totalCustomer","count","finally","onKeyUp","x","title","page","roleChange","event","user_type","target","value","core","ctx","AddSubdealerComponent","fb","router","toastr","_registerservice","require","countryDetails","alpha2","name","resellerForm","group","bussness_name","Validators","tax_number","company_number","win_ols_license_number","first_name","last_name","phone_no","country_code","email","address","address_2","country","state","city","zip","captcha_response","countryData","sort","a","b","obj","forEach","element","moveCountryOnTop","index","findIndex","item","removedObject","splice","unshift","resellerFormFormSubmit","valid","resellerData","parent","usersdetail","user_id","detail","dealer","getPhoneNumber","postRequest","success","message","navigateByUrl","markAllControlsAsTouched","getPrimaryPhone","form","patchValue","dialCode","setCountryCode","setPhoneNumber","phone","countryCode","number","includes","setValue","controls","replace","formGroup","Object","values","control","markAsTouched","FormGroup","DealerCreditComponent","notification","getDealerCreditList","test","i","body","customer","fileCredit","file_key_credit","functionCredit","function_key_credit","evcCredit","evc_key_credit","putRequest","cusRequestUrl","setItem","stringify","updateTunningPoint","error","pageSize","modifyDealerCreditResponse","showError","length","getDealerCreditListOnSort","handlePageChange","routes","path","component","children","EditSubDealerComponent","route","subDealerForm","customer_uuid","snapshot","paramMap","getCustomerDetail","subscribe","image","userRole","address_user","reseller_sub_dealer","err","numberWithCode","oldCountryCode","subDealerFormFormSubmit","subDealerData","getPrimaryIndividualmobile","mobile_no","resetForm","SubDealerRoutingModule","RouterModule","SubDealerModule","CommonModule","NgxPaginationModule","ReactiveFormsModule","FormsModule","NgxCaptchaModule","Ng2TelInputModule","NgSelectModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/services/customer.service.ts","./src/app/customer/sub-dealer/sub-dealer.component.ts","./src/app/customer/sub-dealer/sub-dealer.component.html","./src/app/customer/sub-dealer/subdealer-list/subdealer-list.component.html","./src/app/customer/sub-dealer/subdealer-list/subdealer-list.component.ts","./src/app/customer/sub-dealer/add-subdealer/add-subdealer.component.html","./src/app/customer/sub-dealer/add-subdealer/add-subdealer.component.ts","./src/app/customer/sub-dealer/dealer-credit/dealer-credit.component.html","./src/app/customer/sub-dealer/dealer-credit/dealer-credit.component.ts","./src/app/customer/sub-dealer/edit-sub-dealer/edit-sub-dealer.component.html","./src/app/customer/sub-dealer/sub-dealer-routing.module.ts","./src/app/customer/sub-dealer/edit-sub-dealer/edit-sub-dealer.component.ts","./src/app/customer/sub-dealer/sub-dealer.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  baseUrl = environment.baseUrl;\n  constructor(private _http:HttpClient) \n  {\n\n\n  }\n  \n  getCustomers(params:any)\n  {\n    return this._http.get(this.baseUrl+\"/api/v1/admin/customer\", { params });\n  }\n\n  getCustomerByUuid(id:any)\n  {\n    return this._http.get(`${this.baseUrl}/api/v1/admin/customer/${id}`);\n  }\n  createFileServiceRequest(data:any) {\n    return this._http.post(`${this.baseUrl}/api/v1/file/service/request`,data);\n  }\n  getFileFormData() {\n    return this._http.get(`${this.baseUrl}/api/v1/file/service/get/file_form_data`);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sub-dealer',\n  templateUrl: './sub-dealer.component.html',\n  styleUrls: ['./sub-dealer.component.scss']\n})\nexport class SubDealerComponent {\n\n}\n","<router-outlet></router-outlet>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/sub-dealer\" routerLinkActive=\"active\">Sub Dealer</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"d-flex justify-content-between align-items-center after-seperator mb-4\">\n            <h2 class=\"main-title\">Sub Dealer</h2>\n            <button class=\"btn-primary\" routerLink=\"add-subdealer\">\n                <svg viewBox=\"0 0 24.00 24.00\" style=\"vertical-align: sub;\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\">\n                    <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                    <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\n                    <g id=\"SVGRepo_iconCarrier\"> <title></title> \n                        <g id=\"Complete\"> <g data-name=\"add\" id=\"add-2\"> \n                            <g> <line fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"12\" x2=\"12\" y1=\"19\" y2=\"5\"></line> <line fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\"></line> \n                  </g> \n                  </g> \n                  </g> \n                  </g>\n                </svg> \n                <span>Add Sub-dealer</span>\n            </button>\n        </div>\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Name</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"subDealerList('first_name','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"subDealerList('first_name','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Customer Type</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"subDealerList('user_type','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"subDealerList('user_type','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Status</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"subDealerList('on_stop','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"subDealerList('on_stop','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>Action</th>\n                </thead>\n                <tr\n                    *ngFor=\"let customer of customers | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalCustomer};let i = index\">\n                    <td>\n                        <div class=\"tdholder\"> <img class=\"userImg\"\n                                [src]=\"customer.image || 'assets/images/icon/avtarIcon.jpeg'\" alt=\"user\" />\n                            <div class=\"tdinner\"><span> {{customer.first_name || ''}} {{customer.last_name || ''}}\n                                </span>\n                                <p>{{customer.email || ''}}</p>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        {{ customer.user_type.replace('_', ' ') | titlecase }}\n                    </td>\n                    <td>\n                        <span [ngClass]=\"'activecls'\" *ngIf=\"customer.is_active==true\">Active</span>\n                        <span [ngClass]=\"'Inactivecls'\" *ngIf=\"customer.is_active == false\">Inactive</span>\n                    </td>\n                    <td>\n                        <div class=\"actiontd\">\n                            <a class=\"eyeIcon\" [routerLink]=\"['/sub-dealer/edit-subdealer', customer.uuid]\"><i\n                                    class=\"fa fa-pencil\" title=\"Edit\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <div class=\"no-data-fallback\" \n                *ngIf=\"!customers?.length\">\n                <span *ngIf=\"isLoading;else noData;\">Loading...</span>\n            \n                <ng-template #noData>\n                <span>No record found!</span>\n                </ng-template>\n            \n          </div>\n        </div>\n    </div>\n</section>","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { CustomerService } from 'src/app/admin/services/customer.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-subdealer-list',\n  templateUrl: './subdealer-list.component.html',\n  styleUrls: ['./subdealer-list.component.scss']\n})\nexport class SubdealerListComponent {\n\n  customers: any = [];\n  params: any;\n  page = 1;\n  pageSize = 10;\n  title = '';\n  user_type: any = '';\n  totalCustomer: any;\n  users: any;\n  isLoading = false;\n  constructor(private _titleservice: Title, private _customerservice: CustomerService, private crud: CrudService) {\n    this._titleservice.setTitle('Sub Dealer');\n  }\n\n  ngOnInit(): void {\n    this.users = JSON.parse(localStorage.getItem('userdetails') || '');\n    this.subDealerList();\n  }\n\n  subDealerList(field?: any, type?: any): void {\n    let param\n    if (field && type)\n      param = `field=${field}&order_in=${type}`;\n    else\n      param = ``;\n    this.isLoading = true;\n    this.crud.getRequest(`${requestUrl.addSubDealer}/${this.users.uuid}${param ? \"?\" + param : ''}`)\n    .then((res: any) => {\n      if (res) {\n        this.customers = res.data.results;\n        this.totalCustomer = res.data.count;\n      }\n    })\n    .finally(() => this.isLoading = false)\n\n  }\n\n\n  onKeyUp(x: any) {\n    this.title = x;\n    this.page = 1;\n  }\n\n  roleChange(event: any) {\n    this.user_type = event.target.value;\n    this.page = 1;\n  }\n\n}\n","<section class=\" ulist-div\">\n    <div class=\"u-add after-seperator mb-4\">\n        <h2 class=\"main-title\" routerLink=\"/admin/customer/addCustomer\">Add Sub Dealer</h2>\n    </div>\n\n    <div class=\" inner-box\">\n        <div class=\"register-box\">\n            <div class=\"register-box-inner\">\n                <form [formGroup]=\"resellerForm\">\n                    <div class=\"flex alignLeft\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                                [class.is-invalid]=\"resellerForm.controls['bussness_name'].invalid && resellerForm.controls['bussness_name'].touched\"\n                                placeholder=\"Business Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['bussness_name'].touched && resellerForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                [class.is-invalid]=\"resellerForm.controls['first_name'].invalid && resellerForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['first_name'].touched && resellerForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                        </div>\n                    </div>\n                    <div class=\"flex alignLeft\">\n                        <div>\n                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                [class.is-invalid]=\"resellerForm.controls['last_name'].invalid && resellerForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['last_name'].touched && resellerForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                [class.is-invalid]=\"resellerForm.controls['email'].invalid && resellerForm.controls['email'].touched\"\n                                placeholder=\"Email\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['email'].dirty && resellerForm.controls['email'].hasError('pattern')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['email'].touched && resellerForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                        </div>\n                    </div>\n                    \n                    <div class=\"flex alignLeft\">\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                            <textarea class=\"form-control\" formControlName=\"address\"\n                                [class.is-invalid]=\"resellerForm.controls['address'].invalid && resellerForm.controls['address'].touched\"\n                                placeholder=\"Address Line 1\"></textarea>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['address'].touched && resellerForm.controls['address'].hasError('required')\">\n                                Please enter Address Line 1.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                [class.is-invalid]=\"resellerForm.controls['address_2'].invalid && resellerForm.controls['address_2'].touched\"\n                                placeholder=\"Address Line 2\"></textarea>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['address_2'].touched && resellerForm.controls['address_2'].hasError('required')\">\n                                Please enter Address Line 2.\n                            </small>\n                        </div>\n                    </div>\n                    <div class=\"flex alignLeft\">\n                        <div>\n                            <label for=\"city\" class=\"form-label\">City</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                [class.is-invalid]=\"resellerForm.controls['city'].invalid && resellerForm.controls['city'].touched\"\n                                placeholder=\"City\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['city'].touched && resellerForm.controls['city'].hasError('required')\">\n                                Please enter City.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"country\" class=\"form-label\">State</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                [class.is-invalid]=\"resellerForm.controls['state'].invalid && resellerForm.controls['state'].touched\"\n                                placeholder=\"State\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['state'].touched && resellerForm.controls['state'].hasError('required')\">\n                                Please enter State.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"country\" class=\"form-label\">Country</label>\n                            <ng-select class=\"form-control sel_country\" formControlName=\"country\">\n                                <ng-option selected disabled>Select your country</ng-option>\n                                <ng-option *ngFor=\"let country of countryData\" [value]=\"country.country\">\n                                    {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                                </ng-option>\n                                </ng-select>\n                        </div>\n                    </div>\n\n                    <div class=\"flex alignLeft\">\n                        <div>\n                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                                [class.is-invalid]=\"resellerForm.controls['zip'].invalid && resellerForm.controls['zip'].touched\"\n                                placeholder=\"Zip / Postcode\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['zip'].touched && resellerForm.controls['zip'].hasError('required')\">\n                                Please enter Zip / Postcode.\n                            </small>\n                        </div>\n            \n                        <div>\n                            <label for=\"phone\" class=\"form-label\">Phone</label>\n                            <input class=\"form-control\" type=\"tel\" formControlName=\"phone_no\"\n                                [class.is-invalid]=\"resellerForm.controls['phone_no'].invalid && resellerForm.controls['phone_no'].touched\"\n                                pattern=\"^\\+?[\\d\\s]*$\"\n                                placeholder=\" \" ng2TelInput \n                                [ng2TelInputOptions]=\"{separateDialCode:true,initialCountry:'GB'}\"\n                                (countryChange)=\"getPrimaryPhone($event,resellerForm)\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['phone_no'].touched && resellerForm.controls['phone_no'].hasError('pattern')\">\n                                Invalid phone number.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['phone_no'].touched && resellerForm.controls['phone_no'].hasError('required')\">\n                                Please enter phone number.\n                            </small>\n                        </div>\n                    </div>\n\n                    <div class=\"flex alignLeft\">\n                        <div>\n                            <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                                [class.is-invalid]=\"resellerForm.controls['tax_number'].invalid && resellerForm.controls['tax_number'].touched\"\n                                placeholder=\"Tax number\">\n                        </div>\n                        <div>\n                            <label for=\"company_number\" class=\"form-label\">Company number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                                [class.is-invalid]=\"resellerForm.controls['company_number'].invalid && resellerForm.controls['company_number'].touched\"\n                                placeholder=\"Company number\">\n                        </div>\n                    </div>\n\n                    <div class=\"alignLeft\">\n                        <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License\n                            number</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                            [class.is-invalid]=\"resellerForm.controls['win_ols_license_number'].invalid && resellerForm.controls['win_ols_license_number'].touched\"\n                            placeholder=\"WinOLS License number\">\n                        <span class=\"evcres\">\n                            Applicable to EVC Software Operators only who are registered as EVC Resellers\n                        </span>\n                    </div>\n                    <div class=\"captcha\">\n                        <ngx-recaptcha2 #captchaElem [siteKey]=\"siteKey\"\n                            formControlName=\"captcha_response\">\n                        </ngx-recaptcha2>\n                        <small class=\"text-danger\"\n                            *ngIf=\"resellerForm.controls['captcha_response'].touched && resellerForm.controls['captcha_response'].hasError('required')\">\n                            Invalid Captcha.\n                        </small>\n                    </div>\n                    <div class=\"btnDiv\">\n                        <button class=\"btn-secondary\" (click)=\"resellerForm.reset()\">Reset</button>\n                        <button class=\"btn-primary\" (click)=\"resellerFormFormSubmit()\">Create</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    \n</section>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { RegisterService } from 'src/app/auth/services/register.service';\nimport { countryDetails } from 'src/app/global-files/global.const';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-subdealer',\n  templateUrl: './add-subdealer.component.html',\n  styleUrls: ['./add-subdealer.component.scss']\n})\nexport class AddSubdealerComponent {\n  resellerForm: FormGroup;\n  countries = require('country-data-list').countries;\n  siteKey: string = environment.captchaSecrateKey;\n  sortedArray: any;\n  countryData= countryDetails;\n  obj: any = [\n    { \"alpha2\": \"US\", \"name\": \"United States\", },\n    { \"alpha2\": \"GB\", \"name\": \"United Kingdom\", }\n  ];\n usersdetail:any = JSON.parse(localStorage.getItem('userdetails') || '');\n\n  constructor(private fb: FormBuilder, private _titleservice: Title,\n    private router: Router, private crud: CrudService,\n    private toastr: ToastrService, private _registerservice: RegisterService) {\n    this._titleservice.setTitle('Register');\n    this.resellerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: [''],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      phone_no: ['',],\n      country_code: ['44',],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      captcha_response: ['', [Validators.required]]\n    });\n  }\n\n\n\n\n ngOnInit(): void {\n    this.countryData.sort((a: any, b: any) => (a.country > b.country) ? 1 : -1)\n    this.obj.forEach((element: any) => {\n      this.moveCountryOnTop(element.name);\n    });\n  }\n\n\n  moveCountryOnTop(name: string) {\n    const index = this.countryData.findIndex((item: any) => item.country === name);\n    if (index !== -1) {\n      const removedObject = this.countryData.splice(index, 1)[0];\n      this.countryData.unshift(removedObject);\n    }\n  }\n\n\n  resellerFormFormSubmit() {\n    if (this.resellerForm.valid) {\n      let resellerData = this.resellerForm.value;\n      let data = {\n        \"parent\": this.usersdetail.user_id,\n        \"detail\": {\n          \"bussness_name\": resellerData.bussness_name,\n          \"tax_number\": resellerData.tax_number,\n          \"company_number\": resellerData.company_number,\n          \"win_ols_license_number\": resellerData.win_ols_license_number\n        },\n        'address': {\n          'address_2': resellerData.address,\n          'address': resellerData.address_2,\n          'country': resellerData.country,\n          'state': resellerData.state,\n          'city': resellerData.city,\n          'zip': resellerData.zip,\n        },\n        'dealer': {\n          'first_name': resellerData.first_name,\n          'last_name': resellerData.last_name,\n          'country_code': resellerData.country_code,\n          'phone_no': this.getPhoneNumber(),\n          'email': resellerData.email\n        },\n        \"captcha_response\": resellerData.captcha_response\n      };\n      this.crud.postRequest(`${requestUrl.addSubDealer}`,data).then((res:any)=>{\n        if(res){\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('/sub-dealer');\n        }\n      })\n    }\n    else {\n      this.markAllControlsAsTouched(this.resellerForm);\n    }\n  }\n\n\n  getPrimaryPhone(event: any,form:FormGroup) {\n    form.patchValue({ 'country_code': event.dialCode });\n  }\n\n  setCountryCode(event: any) {\n    this.resellerForm.patchValue({ 'country_code': event.dialCode });\n  }\n\n  setPhoneNumber(phone:string, countryCode:string) {\n    let number = \"\"\n    if(countryCode && !phone.includes(countryCode)) {\n      number = `+${countryCode}${phone}`;\n    } else {\n      number = phone;\n    }\n\n    this.resellerForm.get(\"phone_no\")?.setValue(number);\n\n  }\n\n\n  getPhoneNumber() {\n    const phone:string = this.resellerForm.controls['phone_no'].value;\n    const countryCode = this.resellerForm.controls['country_code'].value;\n    if(countryCode && phone.includes(\"+\" + countryCode)) {\n      return phone.replace(\"+\" + countryCode, \"\");\n    }\n    return phone;\n  }\n\n\n  markAllControlsAsTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markAllControlsAsTouched(control);\n      }\n    });\n  }\n\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Customer</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer/update-credit\" routerLinkActive=\"active\">Credit</a>\n        </li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2> Credit Distribution</h2>\n            <div class=\"u-add-right\">\n                <div>\n                    <input type=\"text\" #yourInput [(ngModel)]=\"title\" (keyup)=\"getDealerCreditList()\" placeholder=\"Search by name/email\" />\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Sub-dealer</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getDealerCreditListOnSort('first_name','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getDealerCreditListOnSort('first_name','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <!-- first_name, ,  -->\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">File key credit</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getDealerCreditListOnSort('customer_credit__file_key_credit','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getDealerCreditListOnSort('customer_credit__file_key_credit','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Fuction key credit</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getDealerCreditListOnSort('customer_credit__function_credit','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getDealerCreditListOnSort('customer_credit__function_credit','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div></th>\n                    <th *ngIf=\"usersdetail.is_evc_reseller_customer == true\" >EVC Credit</th>\n                    <th>Action</th>\n                </thead>\n                <tr\n                    *ngFor=\"let cus of customer | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalCustomer}; let i = index;\">\n                    <td>\n                        <div class=\"tdholder\"> <img class=\"userImg\"\n                                [src]=\"cus.img?cus.img:'assets/images/icon/avtarIcon.jpeg'\" alt=\"user\" />\n                            <div class=\"tdinner\"><span> {{cus.first_name }} {{cus.last_name}} </span>\n                                <p style=\"text-align: left;\"> {{cus.email}} </p>\n                            </div>\n                        </div>\n                    </td>\n                    <td class=\"\">\n                        <div class=\"d-flex align-items-center\"><input type=\"number\" style=\"width: 50% !important;\"\n                                [(ngModel)]=\"fileCredit[i]\" class=\"form-control\">\n                            <p class=\"viewCredit\">{{cus.credit?.file_key_credit}}</p>\n                            <!-- <i class=\"fa fa-question-circle\" aria-hidden=\"true\" [title]=\"'Sub-dealer available file credit'\"></i> -->\n                        </div>\n                    </td>\n                    <td class=\"\">\n                        <div class=\"d-flex align-items-center\"><input type=\"number\" style=\"width: 50% !important;\"\n                                [(ngModel)]=\"functionCredit[i]\" class=\"form-control\">\n                            <p class=\"viewCredit\">{{cus.credit?.function_credit}}</p>\n                            <!-- <i class=\"fa fa-question-circle\" aria-hidden=\"true\" [title]=\"'Sub-dealer available function credit'\"></i> -->\n                        </div>\n                    </td>\n                    <td class=\"\" *ngIf=\"usersdetail.is_evc_reseller_customer == true\">\n                        <div class=\"d-flex align-items-center\"><input type=\"number\" style=\"width: 50% !important;\"\n                                [(ngModel)]=\"evcCredit[i]\" class=\"form-control\">\n                            <p class=\"viewCredit\">{{cus.credit?.evc_credit}}</p>\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\" [title]=\"'Sub-dealer available EVC credit'\"></i>\n                        </div>\n                    </td>\n                    <td> <button class=\"btn\" (click)=\"test(i)\">Update</button></td>\n                </tr>\n                <tr class=\"errcls\" *ngIf=\"showError\">\n                    Records not found\n                </tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"customer?.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n            (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { NotificationsService } from 'src/services/notifications.service';\n\n@Component({\n  selector: 'app-dealer-credit',\n  templateUrl: './dealer-credit.component.html',\n  styleUrls: ['./dealer-credit.component.scss']\n})\nexport class DealerCreditComponent {\n  params: any;\n  page = 1;\n  pageSize = 10;\n  title = '';\n  user_type: any = '';\n  totalCustomer: any;\n  customer: any;\n  fileCredit: any[] = [];\n  functionCredit: any[] = [];\n  evcCredit: any[] = [];\n  patternValue: any = '[0-9]*';\n  usersdetail: any;\n  showError: boolean = false;\n  constructor(private notification: NotificationsService, private crud: CrudService,\n    private toastr: ToastrService) {\n  }\n\n  ngOnInit(): void {\n    this.usersdetail = JSON.parse(localStorage.getItem('userdetails') || '');\n    this.getDealerCreditList()\n  }\n\n  test(i: number) {\n    const body: any = {\n      uuid: this.customer[i].uuid\n    };\n    if (this.fileCredit[i])\n      body['file_key_credit'] = this.fileCredit[i];\n    if (this.functionCredit[i])\n      body['function_key_credit'] = this.functionCredit[i];\n    if (this.evcCredit[i])\n      body['evc_key_credit'] = this.evcCredit[i];\n    this.crud.putRequest(`${cusRequestUrl.dealerCreditUpdate}`, body).then((res: any) => {\n      if (res) {\n        if (res.success) {\n          this.toastr.success(res.message);\n          this.crud.getRequest(cusRequestUrl.getCustomerProfile).then((res: any) => {\n            localStorage.setItem('userdetails', JSON.stringify(res.data));\n            this.notification.updateTunningPoint(true);\n          })\n        }\n        else\n          this.toastr.error(res.message);\n        this.getDealerCreditList();\n      }\n\n    })\n  }\n\n\n  getDealerCreditList(): void {\n    var url;\n    if (this.title)\n      url = `${cusRequestUrl.getDealerOfReseller}${this.usersdetail.uuid}?search=${this.title}`;\n    else url = `${cusRequestUrl.getDealerOfReseller}${this.usersdetail.uuid}?page=${this.page}&page_size=${this.pageSize}`\n    this.crud.getRequest(url).then((res: any) => {\n      this.modifyDealerCreditResponse(res);\n    })\n  }\n  modifyDealerCreditResponse(res:any){\n    this.customer = res.data.results;\n    this.showError = this.customer.length == 0 ? true : false;\n    for (let i = 0; i < this.customer.length; i++) {\n      this.fileCredit[i] = 0;\n      this.functionCredit[i] = 0;\n      this.evcCredit[i] = 0;\n    }\n    this.totalCustomer = res.data.count;\n  }\n  getDealerCreditListOnSort(field?: any, type?: any): void {\n    let url = `${cusRequestUrl.getDealerOfReseller}${this.usersdetail.uuid}?field=${field}&order_in=${type}`\n    this.crud.getRequest(url).then((res: any) => {\n      this.modifyDealerCreditResponse(res);\n    })\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.getDealerCreditList();\n  }\n\n  // onKeyUp(x: any) {\n  //   this.title = x;\n  //   this.page = 1;\n  //   this.getDealerCreditList();\n  // }\n}\n","<section class=\"user-list\">\n    <div class=\"ulist-div\">\n        <div class=\"u-add after-seperator mb-4\">\n            <h2 class=\"main-title mb-0\">Edit Sub Dealer</h2>\n        </div>\n\n        <form class=\"pt-3\" [formGroup]=\"subDealerForm\" *ngIf=\"formType == 'reseller'\">\n                <div>\n                    <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                    <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                        [class.is-invalid]=\"subDealerForm.controls['bussness_name'].invalid && subDealerForm.controls['bussness_name'].touched\"\n                        placeholder=\"Business Name\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['bussness_name'].touched && subDealerForm.controls['bussness_name'].hasError('required')\">\n                        Please enter Business Name.\n                    </small>\n                </div>\n                <div>\n                    <label for=\"first-name\" class=\"form-label\">First Name</label>\n                    <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                        [class.is-invalid]=\"subDealerForm.controls['first_name'].invalid && subDealerForm.controls['first_name'].touched\"\n                        placeholder=\"First name\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['first_name'].touched && subDealerForm.controls['first_name'].hasError('required')\">\n                        Please enter First Name.\n                    </small>\n                </div>\n                <div>\n                    <label for=\"last name\" class=\"form-label\">Last Name</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                        [class.is-invalid]=\"subDealerForm.controls['last_name'].invalid && subDealerForm.controls['last_name'].touched\"\n                        placeholder=\"Last Name\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['last_name'].touched && subDealerForm.controls['last_name'].hasError('required')\">\n                        Please enter Last Name.\n                    </small>\n                </div>\n                <div>\n                    <label for=\"email\" class=\"form-label\">Email</label>\n                    <input type=\"text\" class=\"form-control\" readonly formControlName=\"email\"\n                        [class.is-invalid]=\"subDealerForm.controls['email'].invalid && subDealerForm.controls['email'].touched\"\n                        placeholder=\"Email\">\n                </div>\n            \n                <div>\n                    <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                    <textarea class=\"form-control\" formControlName=\"address\"\n                        [class.is-invalid]=\"subDealerForm.controls['address'].invalid && subDealerForm.controls['address'].touched\"\n                        placeholder=\"Address Line 1\"></textarea>\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['address'].touched && subDealerForm.controls['address'].hasError('required')\">\n                        Please enter Address Line 1.\n                    </small>\n                </div>\n                <div>\n                    <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                    <textarea class=\"form-control\" formControlName=\"address_2\"\n                        [class.is-invalid]=\"subDealerForm.controls['address_2'].invalid && subDealerForm.controls['address_2'].touched\"\n                        placeholder=\"Address Line 2\"></textarea>\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['address_2'].touched && subDealerForm.controls['address_2'].hasError('required')\">\n                        Please enter Address Line 2.\n                    </small>\n                </div>\n\n                <div>\n                    <label for=\"city\" class=\"form-label\">City</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                        [class.is-invalid]=\"subDealerForm.controls['city'].invalid && subDealerForm.controls['city'].touched\"\n                        placeholder=\"City\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['city'].touched && subDealerForm.controls['city'].hasError('required')\">\n                        Please enter City.\n                    </small>\n                </div>\n                <div>\n                    <label for=\"country\" class=\"form-label\">State</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                        [class.is-invalid]=\"subDealerForm.controls['state'].invalid && subDealerForm.controls['state'].touched\"\n                        placeholder=\"State\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['state'].touched && subDealerForm.controls['state'].hasError('required')\">\n                        Please enter State.\n                    </small>\n                </div>\n                <div>\n                    <label for=\"country\" class=\"form-label\">Country</label>\n                    <ng-select class=\"form-control\" formControlName=\"country\">\n                        <ng-option selected disabled>Select your country</ng-option>\n                        <ng-option *ngFor=\"let country of countryData\" [value]=\"country.country\">\n                            {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                        </ng-option>\n                        </ng-select>\n                </div>\n\n                <div>\n                    <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                        [class.is-invalid]=\"subDealerForm.controls['zip'].invalid && subDealerForm.controls['zip'].touched\"\n                        placeholder=\"Zip / Postcode\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['zip'].touched && subDealerForm.controls['zip'].hasError('required')\">\n                        Please enter Zip / Postcode.\n                    </small>\n                </div>\n\n                <div>\n                    <label for=\"mobile\" class=\"form-label\">Phone</label>\n                    <input class=\"form-control\" type=\"tel\" formControlName=\"phone_no\"\n                        [class.is-invalid]=\"subDealerForm.controls['phone_no'].invalid && subDealerForm.controls['phone_no'].touched\"\n                        placeholder=\" \" ng2TelInput\n                        [ng2TelInputOptions]=\"{separateDialCode:true,initialCountry:'GB'}\"\n                        (ng2TelOutput)=\"getPrimaryIndividualmobile($event)\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['phone_no'].touched && subDealerForm.controls['phone_no'].hasError('invalid')\">\n\n                        Invalid mobile number.\n                    </small>\n                    <small class=\"text-danger\"\n                        *ngIf=\"subDealerForm.controls['phone_no'].touched && subDealerForm.controls['phone_no'].hasError('required')\">\n                        Please enter mobile number.\n                    </small>\n                </div>\n\n                <div>\n                    <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                        [class.is-invalid]=\"subDealerForm.controls['tax_number'].invalid && subDealerForm.controls['tax_number'].touched\"\n                        placeholder=\"Tax number\">\n                </div>\n                <div>\n                    <label for=\"company_number\" class=\"form-label\">Company number</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                        [class.is-invalid]=\"subDealerForm.controls['company_number'].invalid && subDealerForm.controls['company_number'].touched\"\n                        placeholder=\"Company number\">\n                </div>\n\n            <div class=\"alignLeft\">\n                <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License\n                    number</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                    [class.is-invalid]=\"subDealerForm.controls['win_ols_license_number'].invalid && subDealerForm.controls['win_ols_license_number'].touched\"\n                    placeholder=\"WinOLS License number\">\n                <span class=\"evcSpn\" style=\"font-size: 13px; padding-top: 3px;\">\n                    Applicable to EVC Software Operators only who are registered as EVC Resellers\n                </span>\n            </div>\n\n            <div class=\"d-flex w-100 justify-content-center mt-5\">\n                <button class=\"btn-secondary me-3\" (click)=\"resetForm()\">Reset</button>\n                <button class=\"btn-primary\"\n                (click)=\"subDealerFormFormSubmit()\">Update</button>\n            </div>\n        </form>\n    </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SubDealerComponent } from './sub-dealer.component';\nimport { SubdealerListComponent } from './subdealer-list/subdealer-list.component';\nimport { AddSubdealerComponent } from './add-subdealer/add-subdealer.component';\nimport { DealerCreditComponent } from './dealer-credit/dealer-credit.component';\nimport { EditSubDealerComponent } from './edit-sub-dealer/edit-sub-dealer.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: SubDealerComponent, children: [\n      { path: '', component: SubdealerListComponent },\n      { path: 'add-subdealer', component: AddSubdealerComponent },\n      { path: 'edit-subdealer/:id', component: EditSubDealerComponent },\n      { path: 'dealer-credit', component: DealerCreditComponent },\n    ]\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubDealerRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CustomerService } from 'src/app/admin/services/customer.service';\nimport { countryDetails } from 'src/app/global-files/global.const';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-edit-sub-dealer',\n  templateUrl: './edit-sub-dealer.component.html',\n  styleUrls: ['./edit-sub-dealer.component.scss']\n})\nexport class EditSubDealerComponent {\n  formType: string = 'reseller';\n  subDealerForm: FormGroup;\n  countries = require('country-data-list').countries;\n  siteKey: string = environment.captchaSecrateKey;\n  sortedArray: any;\n  countryData= countryDetails;\n  usersdetail:any;\n  userRole:any;\n  image: any;\n  customer_uuid: any = '';\n  constructor(private fb: FormBuilder, private router: Router, private crud: CrudService,\n    private toastr: ToastrService, private _customerservice: CustomerService,\n    private route: ActivatedRoute) {\n    this.subDealerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      phone_no: ['',],\n      country_code: ['',],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n    });\n  }\n  obj: any = [\n    { \"alpha2\": \"US\", \"name\": \"United States\", },\n    { \"alpha2\": \"GB\", \"name\": \"United Kingdom\", }\n  ]\n\n\n  ngOnInit(): void {\n    this.customer_uuid = this.route.snapshot.paramMap.get('id');\n    this.countryData.sort((a: any, b: any) => (a.country > b.country) ? 1 : -1)\n    this.obj.forEach((element: any) => {\n      this.moveCountryOnTop(element.name);\n    });\n    this.getCustomerDetail();\n  }\n\n\n  getCustomerDetail() {\n    this._customerservice.getCustomerByUuid(this.customer_uuid).subscribe((res: any) => {\n      this.usersdetail = res.data;\n      this.image = res.data.image;\n      this.userRole = this.usersdetail?.user_type;\n    \n      if (this.userRole == 'DEALER') {\n        this.subDealerForm.controls['first_name'].setValue(this.usersdetail.first_name);\n        this.subDealerForm.controls['last_name'].setValue(this.usersdetail.last_name);\n        this.subDealerForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n        // this.individualForm.controls['phone_no'].setValue(this.usersdetail?.phone_no);\n        this.setPhoneNumber(this.subDealerForm);\n        // this.subDealerForm.controls['phone_no'].setValue(this.usersdetail.phone_no);\n        this.subDealerForm.controls['email'].setValue(this.usersdetail.email);\n        this.subDealerForm.controls['address'].setValue(this.usersdetail.address_user.address);\n        this.subDealerForm.controls['address_2'].setValue(this.usersdetail.address_user.address_2);\n        this.subDealerForm.controls['country'].setValue(this.usersdetail.address_user.country);\n        this.subDealerForm.controls['state'].setValue(this.usersdetail.address_user.state);\n        this.subDealerForm.controls['city'].setValue(this.usersdetail.address_user.city);\n        this.subDealerForm.controls['zip'].setValue(this.usersdetail.address_user.zip);\n        this.subDealerForm.controls['bussness_name'].setValue(this.usersdetail.reseller_sub_dealer.bussness_name);\n        this.subDealerForm.controls['tax_number'].setValue(this.usersdetail.reseller_sub_dealer.tax_number);\n        this.subDealerForm.controls['company_number'].setValue(this.usersdetail.reseller_sub_dealer.company_number);\n        \n        this.subDealerForm.controls['win_ols_license_number'].setValue(this.usersdetail.reseller_sub_dealer.win_ols_license_number);\n        \n      }\n    },\n      (err: any) => {\n      })\n  }\n\n  oldCountryCode = '';\n  setPhoneNumber(form:FormGroup) {\n    let numberWithCode = \"\";\n    if(this.usersdetail?.country_code) {\n      this.oldCountryCode = this.usersdetail.country_code;\n      numberWithCode = `+${this.usersdetail?.country_code}${this.usersdetail.phone_no}`\n    } else numberWithCode = this.usersdetail?.phone_no;\n    form.get('phone_no')?.setValue(numberWithCode)\n  }\n\n\n\n  getPhoneNumber() {\n    const phone:string = this.subDealerForm.controls['phone_no'].value;\n    const countryCode = this.subDealerForm.controls['country_code'].value;\n    if(countryCode && phone.includes(\"+\" + countryCode)) {\n      return phone.replace(\"+\" + countryCode, \"\");\n    }\n    return phone;\n  }\n\n  moveCountryOnTop(name: string) {\n    const index = this.countryData.findIndex((item: any) => item.country === name);\n    if (index !== -1) {\n      const removedObject = this.countryData.splice(index, 1)[0];\n      this.countryData.unshift(removedObject);\n    }\n  }\n\n\n  subDealerFormFormSubmit() {\n    if (this.subDealerForm.valid) {\n      let subDealerData = this.subDealerForm.value;\n      let data = {\n        \"uuid\": this.usersdetail.uuid,\n        \"detail\": {\n          \"bussness_name\": subDealerData.bussness_name,\n          \"tax_number\": subDealerData.tax_number,\n          \"company_number\": subDealerData.company_number,\n          \"win_ols_license_number\": subDealerData.win_ols_license_number\n        },\n        'address': {\n          'address_2': subDealerData.address,\n          'address': subDealerData.address_2,\n          'country': subDealerData.country,\n          'state': subDealerData.state,\n          'city': subDealerData.city,\n          'zip': subDealerData.zip,\n        },\n        'dealer': {\n          'first_name': subDealerData.first_name,\n          'last_name': subDealerData.last_name,\n          'phone_no': subDealerData.phone_no,\n          'country_code': subDealerData.country_code,\n          'email': subDealerData.email\n        },\n      };\n      this.crud.putRequest(`${requestUrl.addSubDealer}`,data).then((res:any)=>{\n        if(res){\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('/sub-dealer');\n        }\n      })\n    }\n    else {\n      this.markAllControlsAsTouched(this.subDealerForm);\n    }\n  }\n  markAllControlsAsTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markAllControlsAsTouched(control);\n      }\n    });\n  }\n\n  getPrimaryIndividualmobile(event: any) {\n    this.subDealerForm.patchValue({ 'mobile_no': event });\n  }\n\n  resetForm(){\n    this.subDealerForm.controls['first_name'].setValue('');\n        this.subDealerForm.controls['last_name'].setValue('');\n        this.subDealerForm.controls['phone_no'].setValue('');\n        this.subDealerForm.controls['bussness_name'].setValue('');\n        this.subDealerForm.controls['tax_number'].setValue('');\n        this.subDealerForm.controls['company_number'].setValue('');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SubDealerRoutingModule } from './sub-dealer-routing.module';\nimport { SubDealerComponent } from './sub-dealer.component';\nimport { SubdealerListComponent } from './subdealer-list/subdealer-list.component';\nimport { AddSubdealerComponent } from './add-subdealer/add-subdealer.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgxCaptchaModule } from 'ngx-captcha';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { DealerCreditComponent } from './dealer-credit/dealer-credit.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EditSubDealerComponent } from './edit-sub-dealer/edit-sub-dealer.component';\n\n\n@NgModule({\n  declarations: [\n    SubDealerComponent,\n    SubdealerListComponent,\n    AddSubdealerComponent,\n    DealerCreditComponent,\n    EditSubDealerComponent\n  ],\n  imports: [\n    CommonModule,\n    SubDealerRoutingModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxCaptchaModule,\n    Ng2TelInputModule,\n    NgSelectModule\n  ]\n})\nexport class SubDealerModule { }\n"],"x_google_ignoreList":[]}