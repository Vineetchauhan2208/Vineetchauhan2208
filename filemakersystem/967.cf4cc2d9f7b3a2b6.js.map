{"version":3,"file":"967.cf4cc2d9f7b3a2b6.js","mappings":"gRAqBcA,oBAEEA,8CACFA,+BAEAA,oBAEEA,8CACFA,iDAvBVA,iBAAgE,UAAhEA,CAAgE,UAAhEA,CAAgE,QAKtDA,2BAAeA,QACnBA,aAAGA,mEAAuDA,QAE1DA,kBAAuCA,4DAAYA,mCAA0B,GAC3EA,iBAAuB,cACiBA,mBAAMA,QAC5CA,qBAIAA,2BAKAA,2BAKFA,QAEAA,mBAAoB,gBAC2CA,qBAAQA,UAGvEA,mBAAkC,WAC1BA,sCAAyBA,QAAOA,iBAA4BA,kBAAKA,iBAAI,yBAxBzEA,iDAIAA,sHAAiH,6JAIhHA,0HAKAA,sKAqBbA,iBAA+D,UAA/DA,CAA+D,UAA/DA,CAA+D,QAKrDA,0BAAcA,QAClBA,aAAGA,2FAA+EA,QAElFA,kBAAuCA,4DAAYA,+BAAsB,GACvEA,kBAAoB,eAC2CA,uBAAUA,UAGzEA,mBAAkC,WAC1BA,sCAAyBA,QAAOA,iBAA4BA,kBAAKA,iBAAI,yBANzEA,kDClDhB,MAAMC,EAAe,CACnB,CACEC,KAAK,GACLC,UCKgC,MAA9B,MAAOC,EAKXC,YAAoBC,EAAyBC,EAAkCC,EACrEC,EAA+BC,EAA8BC,GADnDC,UAAyBA,mBAAkCA,cACrEA,cAA+BA,qBAA8BA,YAFvEA,SAAc,iBAGZA,KAAKF,cAAcG,SAAS,2BAC5BD,KAAKE,mBAAqBF,KAAKN,GAAGS,MAAM,CACtCC,MAAO,CAAC,GAAI,CAACC,cAAqBA,cAEtC,CAEAC,WAAmB,CAEnBC,2BACMP,KAAKE,mBAAmBM,MAC1BR,KAAKL,YAAYc,eAAeT,KAAKE,mBAAmBQ,OAAOC,UAAWC,IACpEA,IACCA,EAAIC,aACLb,KAAKH,OAAOiB,MAAMF,EAAIG,SACtBf,KAAKgB,IAAM,kBAEbhB,KAAKH,OAAOoB,QAAQL,EAAIG,QAAS,GAAI,CAAEG,QAAS,MAChDlB,KAAKJ,OAAOuB,SAAS,CAAC,eAAaC,KAAWpB,KAAKE,mBAAmBQ,MAAMN,UAAO,EAIpFiB,IACCrB,KAAKH,OAAOiB,MAAMO,EAAIP,MAAMQ,OAAQ,GAAI,CAAEJ,QAAS,KAAM,GAI7DlB,KAAKuB,yBAAyBvB,KAAKE,mBAEvC,CAEAqB,yBAAyBC,GACvBC,OAAOC,OAAOF,EAAUG,UAAUC,QAAQC,IACxCA,EAAQC,gBACJD,aAAmBE,MACrB/B,KAAKuB,yBAAyBM,EAAO,EAG3C,CACAG,uBACEhC,KAAKD,KAAKkC,IAAI,2CAA2CjC,KAAKE,mBAAmBQ,MAAMN,SAASO,UAAWC,IACtGA,IACDZ,KAAKH,OAAOoB,QAAQL,EAAIG,SACxBf,KAAKJ,OAAOsC,cAAc,eAAa,EAG7C,CAACC,kDApDU3C,GAAuB4C,4GAAvB5C,EAAuB6C,orBFdpCjD,iBAA8B,UAA9BA,CAA8B,WAIxBA,iBACFA,QACAA,wBA0CAA,wBAwBFA,iBAlEmCA,+CA0CAA,4KElCxBI,CAAuB,ODO7B,IAAM8C,EAAoB,MAA3B,MAAOA,EAAoBH,kDAApBG,EAAoB,sCAApBA,IAAoBH,wCAL7BI,KACAC,KACAC,cAAsBpD,aAGbiD,CAAoB","names":["i0","route","path","component","ForgetPasswordComponent","constructor","fb","authservice","router","toastr","_titleservice","crud","this","setTitle","forgetPasswordForm","group","email","Validators","ngOnInit","forgetPasswordFormSubmit","valid","forgotPassword","value","subscribe","res","resend_mail","error","message","tab","success","timeOut","navigate","encryption","err","detail","markAllControlsAsTouched","formGroup","Object","values","controls","forEach","control","markAsTouched","FormGroup","sendVerifiactionLink","get","navigateByUrl","static","core","selectors","ForgetPasswordModule","CommonModule","ReactiveFormsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./src/app/auth/forget-password/forget-password.component.html","./src/app/auth/forget-password/forget-password.module.ts","./src/app/auth/forget-password/forget-password.component.ts"],"sourcesContent":["<div class=\"container-fluid \">\n\n  <div class=\"row inner-box\">\n    <div class=\"col-sm-5 p-0 mob-left\">\n      <img class=\"bnrimg\" src=\"assets/images/Forgot-password.webp\" alt=\"\">\n    </div>\n    <div class=\"col-sm-7 mob-right\" *ngIf=\"tab == 'forgetPassword'\">\n\n      <div class=\"login-box\">\n\n        <div class=\"login-box-inner\">\n          <h2>Forgot Password</h2>\n          <p>Enter your registered email and we will send you a OTP.</p>\n\n          <form [formGroup]=\"forgetPasswordForm\" (ngSubmit)=\"forgetPasswordFormSubmit()\">\n            <div class=\"f-margins\">\n              <label for=\"email\" class=\"form-label\">Email:</label>\n              <input type=\"email\" class=\"form-control\" formControlName=\"email\"\n                [class.is-invalid]=\"forgetPasswordForm.controls['email'].invalid && forgetPasswordForm.controls['email'].touched\"\n                [class.is-valid]=\"!forgetPasswordForm.controls['email'].hasError('pattern') && forgetPasswordForm.controls['email'].valid && forgetPasswordForm.controls['email'].touched\"\n                placeholder=\"Enter email\">\n              <small class=\"text-danger mt-4\"\n                *ngIf=\"forgetPasswordForm.controls['email'].hasError('pattern') && forgetPasswordForm.controls['email'].dirty \">\n                Please enter valid email address\n              </small>\n\n              <small class=\"text-danger mt-4\"\n                *ngIf=\"forgetPasswordForm.controls['email'].touched && forgetPasswordForm.controls['email'].hasError('required')\">\n                Please enter your email address.\n              </small>\n\n            </div>\n\n            <div class=\"d-grid\">\n              <button type=\"submit\" class=\"btn btn-primary btn-block lbtn\">Send OTP</button>\n            </div>\n\n            <div class=\"mt-3 text-center reg\">\n              <span>Already have an account? </span><a routerLink=\"/auth/login\">Login</a>\n            </div>\n\n          </form>\n        </div>\n\n\n      </div>\n\n    </div>\n    <div class=\"col-sm-7 mob-right\" *ngIf=\"tab == 'verifyAccount'\">\n\n      <div class=\"login-box\">\n\n        <div class=\"login-box-inner\">\n          <h2>Verify Account</h2>\n          <p>We will send you a verification link on your email, Please verify your account.</p>\n\n          <form [formGroup]=\"forgetPasswordForm\" (ngSubmit)=\"sendVerifiactionLink()\">\n            <div class=\"d-grid\">\n              <button type=\"submit\" class=\"btn btn-primary btn-block lbtn\">Send Email</button>\n            </div>\n\n            <div class=\"mt-3 text-center reg\">\n              <span>Already have an account? </span><a routerLink=\"/auth/login\">Login</a>\n            </div>\n\n          </form>\n        </div>\n\n\n      </div>\n\n    </div>\n  </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ForgetPasswordComponent } from './forget-password.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst route:Routes = [\n  {\n    path:'',\n    component: ForgetPasswordComponent\n  }\n]\n\n@NgModule({\n  declarations: [ForgetPasswordComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(route)\n  ]\n})\nexport class ForgetPasswordModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../services/auth.service';\nimport { decryption, encryption } from 'src/app/encryption';\nimport { Title } from '@angular/platform-browser';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n\n  forgetPasswordForm: FormGroup;\n  tab: string = 'forgetPassword';\n  constructor(private fb: FormBuilder, private authservice: AuthService, private router: Router,\n    private toastr: ToastrService, private _titleservice: Title, private crud: CrudService) {\n    this._titleservice.setTitle('Forgot Password | Viezu');\n    this.forgetPasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  ngOnInit(): void { }\n\n  forgetPasswordFormSubmit() {\n    if (this.forgetPasswordForm.valid) {\n      this.authservice.forgotPassword(this.forgetPasswordForm.value).subscribe((res: any) => {\n        if (res) {\n          if(res.resend_mail){\n            this.toastr.error(res.message);\n            this.tab = 'verifyAccount';\n          } else {\n          this.toastr.success(res.message, '', { timeOut: 4000 });\n          this.router.navigate(['/auth/otp', encryption(this.forgetPasswordForm.value.email)])\n          };\n        }\n      },\n        (err: any) => {\n          this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n        })\n    }\n    else {\n      this.markAllControlsAsTouched(this.forgetPasswordForm);\n    }\n  }\n\n  markAllControlsAsTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markAllControlsAsTouched(control);\n      }\n    });\n  }\n  sendVerifiactionLink() {\n    this.crud.get(`account/resend-verification-email?email=${this.forgetPasswordForm.value.email}`).subscribe((res:any)=>{\n      if(res){\n        this.toastr.success(res.message);\n        this.router.navigateByUrl('/auth/login');\n      }\n    })\n  }\n\n\n}\n"],"x_google_ignoreList":[]}