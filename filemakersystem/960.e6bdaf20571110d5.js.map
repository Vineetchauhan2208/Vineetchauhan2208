{"version":3,"file":"960.e6bdaf20571110d5.js","mappings":"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","names":["OrderComponent","static","selectors","i0","routes","path","component","children","OrderListComponent","constructor","orderService","this","ngOnInit","getOrder","getTotal","amount","tax","parseFloat","getOrders","pageNo","then","res","orderList","data","handlePageChange","e","console","log","viewOrder","order","core","ctx","ViewOrderComponent","route","_orderService","subTotal","orderDetail","total","total_tax","orderId","snapshot","paramMap","get","getOrderByID","items","line_items","OrderRoutingModule","RouterModule","OrderModule","CommonModule","SharedPipeModule","NgxPaginationModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/shop/order/order.component.ts","./src/app/admin/shop/order/order.component.html","./src/app/admin/shop/order/order-list/order-list.component.html","./src/app/admin/shop/order/view-order/view-order.component.html","./src/app/admin/shop/order/order-routing.module.ts","./src/app/admin/shop/order/order-list/order-list.component.ts","./src/app/admin/shop/order/view-order/view-order.component.ts","./src/app/admin/shop/order/order.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss']\n})\nexport class OrderComponent {\n\n}\n","<router-outlet></router-outlet>","<section class=\"user-list\">\n    <div class=\"ulist-div\">\n      <div class=\"u-add after-seperator\">\n        <h2> Order</h2>\n      </div>\n\n      <div class=\"responsive-tbl mt-4\">\n        <table>\n          <thead>\n            <th>Order </th>\n            <th>Date</th>\n            <th>Status</th>\n            <th>Billing</th>\n            <th>Total Purchase</th>\n            <th>Action</th>\n          </thead>\n          <tr \n            *ngFor=\"\n              let order of orderList\n              let i = index\n            \">\n            <td> \n              <p class=\"mb-0\">{{order?.number}} </p>\n            </td>\n            <td> <span style=\"white-space: nowrap;\">{{ order?.date_created + \"Z\" | customDate}}</span> </td>\n            <td> \n              <span class=\"badge\"\n                [class.bg-success]=\"order?.status === 'completed'\"\n                [class.bg-warning]=\"order?.status === 'pending'\"\n                [class.text-dark]=\"order?.status === 'pending'\"\n                >\n                {{order?.status | titlecase }} \n              </span>\n            </td>\n            <td>\n              <p class=\"mb-0\" style=\"min-width: 20ch;\">\n                {{order.billing.company?order.billing.company+',':''}} {{order.billing.address_1?order.billing.address_1+',':''}}\n                {{order.billing.address_2?order.billing.address_2+',':''}} {{order.billing.city?order.billing.city+',':''}}\n                {{order.billing.state?order.billing.state+',':''}} ( {{order.billing.postcode}} ) {{order.billing.country}}\n              </p>\n            </td>\n            <td>&#163;{{getTotal(order?.total, order.total_tax) }}</td>\n            <td>\n                <div class=\"actiontd\">\n                  <a (click)=\"viewOrder(order)\" [routerLink]=\"['/admin/shop/order/view/', order.id]\" class=\"eyeIcon\">\n                    <i class=\"fa fa-eye\" title=\"View\"></i>\n                  </a>\n                </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <!-- <pagination-controls\n        class=\"pagination-crl\"\n        previousLabel=\"Prev\"\n        nextLabel=\"Next\"\n        (pageChange)=\"handlePageChange($event)\">\n      </pagination-controls> -->\n      <div class=\"mt-3\" style=\"display: inline-flex; text-align: center;\">\n        <button class=\"btn pprev\"  [disabled]=\"pageNo==1\" (click)=\"pageNo = pageNo-1; getOrder()\">Previous</button>\n        <p class=\" mx-2 mb-0\">{{pageNo}}</p>\n        <button class=\"btn pnext\"  [disabled]=\"orderList?.length<10\" (click)=\"pageNo = pageNo+1; getOrder()\">Next</button>\n      </div>\n    </div>\n   </section>","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/shop\">Shop </a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/shop/order\" routerLinkActive=\"active\">Order </a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2> Order</h2>\n            <div class=\"u-add-right\">\n                <button class=\"backBtn\" routerLink=\"/admin/shop/order\" title=\"Go Back\">\n                    <i class=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n        </div>\n        <hr class=\"mx-0\"/>\n\n        <div class=\"order-detail\" >\n            <div>\n                <p>Date Created : <span>{{orderDetail?.date_created | customDate }}</span></p>\n                <p>Customer : <span>{{orderDetail?.billing?.first_name}} {{orderDetail?.billing?.last_name || \"\"}}</span></p>\n                <p>Status : <span>{{orderDetail?.status | titlecase}}</span></p>\n            </div>\n            <div>\n                <div class=\"baddress\">\n                    <p>Billing Address :</p>\n\n                    <span>{{orderDetail?.billing?.country}},{{orderDetail?.billing?.city}}</span>\n                    <span>{{orderDetail?.billing?.address_1}},{{orderDetail?.billing?.postcode}}</span>\n                    <span>Phone:{{orderDetail?.billing?.phone}}</span>\n                </div>\n                <p>Email :  <span>{{orderDetail?.billing?.email}}</span></p>\n            </div>\n            <div>\n                <div class=\"baddress\">\n                    <p>Billing Address :</p>\n\n                    <span>{{orderDetail?.billing?.country}},{{orderDetail?.billing?.city}}</span>\n                    <span>{{orderDetail?.billing?.address_2}},{{orderDetail?.billing?.postcode}}</span>\n                    <span>Phone:{{orderDetail?.billing?.phone}}</span>\n                </div>\n                <p>Email :  <span>{{orderDetail?.billing?.email}}</span></p>\n            </div>\n        </div>\n\n        <div class=\"responsive-tbl \">\n            <table>\n              <thead>\n                <th>Item </th>\n                <th>Description</th>\n                <th>Unit Cost</th>\n                <th>Quantity</th>\n                <th>Total</th>\n              </thead>\n             <tr *ngFor=\"let item of items\">\n                <td>{{item?.name}}</td>\n                <td></td>\n                <td>{{item?.price}}</td>\n                <td>{{item?.quantity}}</td>\n                <td>&#163; {{item?.subtotal}}</td>\n             </tr>\n            </table>\n          </div>\n\n          <div class=\"total-val\">\n            <!-- <div class=\"tval-iiner\" *ngFor=\"let item of items\"> -->\n            <div class=\"tval-iiner\">\n                <div>\n                    <p>Subtotal :</p>\n                    <span>&#163; {{(subTotal |number: '1.2-2') || 0 }}</span>\n                </div>\n                <div>\n                    <p>Standard Rate (20%) :</p>\n                    <span>&#163; {{ orderDetail?.total_tax || \"0\" }}</span>\n                </div>\n                <div>\n                    <p>Order Total:</p>\n                    <span>&#163; {{ total || \"0\"}}</span>\n                </div>\n                <div [class.border-0]=\"orderDetail?.status !== 'completed'\">\n                    <p>Paid:</p>\n                    <span>{{orderDetail?.status === 'completed' ? '&#163; ' + total: 'NA'}}</span>\n                </div>\n                <p *ngIf=\"orderDetail?.status === 'completed'\">{{orderDetail?.date_paid | date:'MMMM d, yyyy'}} via Credit Card</p>\n            </div>\n           \n          </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrderComponent } from './order.component';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport { ViewOrderComponent } from './view-order/view-order.component';\n\nconst routes: Routes = [{\n  path: '', component: OrderComponent, children: [\n    { path: '', component: OrderListComponent },\n    {path:'view/:id', component:ViewOrderComponent}\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderRoutingModule { }\n","import { Component } from '@angular/core';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { OrderService } from '../../service/order-service';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.scss']\n})\nexport class OrderListComponent {\n  orderList: any;\n  pageNo: number = 1\n  limit = 10;\n  totalRecord = 0;\n  constructor(private orderService: OrderService) { }\n\n  ngOnInit() {\n    this.getOrder()\n  }\n\n  getTotal(amount:any,tax:any):number {\n    return parseFloat(amount) + parseFloat(tax);\n  }\n\n  \n  getOrder() {\n    this.orderService.getOrders(this.pageNo)\n    .then((res: any) => {\n      if(!res) return;\n      \n      this.orderList = res.data\n      // this.totalRecord = res.\n      }\n    )\n  }\n\n  handlePageChange(e:number) {\n    this.pageNo = e;\n    console.log('eee',e);\n    \n  }\n\n  viewOrder(order:any) {\n    this.orderService.viewOrder(order);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { OrderService } from '../../service/order-service';\n\n\n@Component({\n  selector: 'app-view-order',\n  templateUrl: './view-order.component.html',\n  styleUrls: ['./view-order.component.scss']\n})\nexport class ViewOrderComponent {\n  orderDetail: any;\n  items: any;\n  constructor(private route: ActivatedRoute, private _orderService: OrderService) {\n  }\n\n  get subTotal() {\n    // return this.orderDetail?.total - this.orderDetail?.shipping_tax - this.orderDetail?.total_tax\n    return this.orderDetail?.total\n  }\n\n  get total() {\n    return parseFloat(this.orderDetail.total) + parseFloat(this.orderDetail?.total_tax);\n  }\n  ngOnInit(): void {\n    const orderId:any = this.route.snapshot.paramMap.get('id');\n\n    this._orderService.getOrderByID(orderId)\n    .then((res: any) => {\n      this.orderDetail = res.data;\n      this.items = this.orderDetail.line_items;\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrderRoutingModule } from './order-routing.module';\nimport { OrderComponent } from './order.component';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport { ViewOrderComponent } from './view-order/view-order.component';\nimport { SharedPipeModule } from 'src/app/pipe/shared-pipe.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\n@NgModule({\n  declarations: [\n    OrderComponent,\n    OrderListComponent,\n    ViewOrderComponent\n  ],\n  imports: [\n    CommonModule,\n    OrderRoutingModule,\n    SharedPipeModule,\n    NgxPaginationModule,\n\n  ]\n})\nexport class OrderModule { }\n"],"x_google_ignoreList":[]}