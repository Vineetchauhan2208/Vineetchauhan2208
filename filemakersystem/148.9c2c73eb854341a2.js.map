{"version":3,"file":"148.9c2c73eb854341a2.js","mappings":"oMAOO,IAAMA,EAAuB,MAA9B,MAAOA,EAAuBC,kDAAvBD,EAAuB,sCAAvBA,EAAuBE,gFCPpCC,aAAGA,kCAAsBA,mBDOZH,CAAuB,sMEWpBG,kBAA+E,eAEvEA,0BACIA,gBAA+C,UAE/CA,gBAA6BA,iBACzBA,gBAAiB,SAAjBA,CAAiB,OACTA,oBAAsI,cACtJA,gBAKAA,2BACJA,QACAA,0BAA0B,SAClBA,mBAAqEA,iBACvBA,6BAAeA,UACjEA,eAAIA,mBAA4CA,iBAC0BA,wCACzDA,UAEjBA,eAAIA,mBAA4CA,iBACwBA,sCACvDA,UAEjBA,eAAIA,mBAA4CA,iBACwBA,sCACvDA,UAEjBA,eACIA,mBAA4CA,iBAC0BA,+BAC3DA,qCAkEPA,gBAAsCA,cAAEA,kCACxCA,gBAAsCA,SACUA,wCADVA,8LAEtCA,aAAmCA,SAAwCA,wCAAxCA,uGAUvCA,oBAAgEA,kBAAMA,cAAhEA,mDACNA,oBAAqEA,oBAAQA,cAAvEA,0IAYNA,gBACIA,0DAASA,yBAAgB,GAC2CA,iBAC1BA,0CAD1CA,8JAEJA,gBAAGA,0DAASA,yBAAgB,GAC0CA,iBACpBA,0CAD9CA,8FAIJA,iBAEIA,sEAASC,+BAA6BD,oBAAW,GAGjDA,mBACJA,kDAGAA,iBAEIA,2GAC8BA,iBACPA,wKAxEvCA,cACuI,OADvIA,CACuI,YAG3HA,kBAIAA,kBAAqB,UAAOA,SACxBA,QACAA,aAAGA,SAAyBA,cAIxCA,cAAI,YAAJA,CAAI,YAAJA,CAAI,WAGeA,UAAiDA,cAIpEA,eAAI,YAAJA,CAAI,aAGQA,0BACAA,0BAEAA,uBACJA,YAGRA,eAAI,WAC0CA,gCAAwDA,UAGtGA,eAAI,WAEIA,0BACAA,0BACJA,UAEJA,kBAA4B,YAA5BA,CAA4B,WAGDA,yDAASA,yBAAgB,GAC6BA,iBACYA,QACrFA,iBAAmBA,yDAASA,yBAAgB,GACiBA,iBACpCA,QACzBA,wBAIAA,wBAKAA,wBAOAA,sBAEAA,wBAKJA,WAAM,uCApEEA,wFAGwBA,2FAErBA,2CAOIA,gGAOAA,kDACAA,mDAEHA,oDAK8BA,0FAKPA,qDACEA,qDAO7BA,8DAGAA,8DAEAA,oJAI2CA,8DAM1CA,4LASAA,4KAOjBA,kBACIA,+BACJA,kDAGRA,mCACIA,+DAAcA,4BAAwB,GAAEA,gCA2FxBA,sBAAqDA,8BAAiBA,mCACtEA,sBACIA,SAAuBA,kCADnBA,yCACJA,8HC5PzB,IAAME,GAAqB,MAA5B,MAAOA,EA+BXC,YAAoBC,EAA8BC,EACxCC,EAAwCC,EAA2BC,EACnEC,EAA+BC,GAFrBC,qBAA8BA,wBACxCA,mBAAwCA,YAA2BA,oBACnEA,cAA+BA,UA/BzCA,eAAiB,GAEjBA,UAAO,EACPA,cAAW,GACXA,WAAQ,GACRA,eAAiB,GAEjBA,gBAAqB,EAOrBA,iBAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IAErEJ,yBAAsB,EACtBA,yBAAsB,EACtBA,qBAAkB,EAClBA,qBAAkB,EAClBA,gBAAa,EAMbA,mBAAgB,IAAIK,IACpBL,eAAgB,GAChBA,eAAgB,GAIdA,KAAKP,cAAca,SAAS,uBAC5BN,KAAKO,YAAcP,KAAKH,aAAaW,iBAErCR,KAAKS,mBAAqBT,KAAKD,GAAGW,MAAM,CACtCC,UAAW,CAAC,uBACZC,KAAM,CAAC,cAAeC,eACtBC,YAAa,CAAC,GAAID,gBAEtB,CAEAE,WACE,IAAIC,EAAYhB,KAAKL,YAAYsB,gBAC7BD,IACFhB,KAAKkB,KAAOF,GACdhB,KAAKmB,mBACLnB,KAAKoB,cAAcC,QAAKC,KAAa,MAAMC,UAAUC,IACnDxB,KAAKkB,KAAO,EACZlB,KAAKmB,kBAAgB,EAEzB,CACAM,iBACEzB,KAAKL,YAAY8B,eAAeC,OAAOC,SAASC,KAAM5B,KAAKkB,KAC7D,CAEAW,iBAAiBC,EAAqBZ,EAAca,EAAkBC,GACpE,IAAIC,EAAc,GAClB,OAAIH,IACFG,EAAOC,OAAYJ,GAEjBZ,IACFe,EAAOf,KAAUA,GAEfa,IACFE,EAAOE,UAAeJ,GAEpBA,IACFE,EAAOD,UAAeA,GAEjBC,CACT,CAEAd,iBAAiBiB,EAAexB,GAC9B,MAAMqB,EAASjC,KAAK6B,iBAAiB7B,KAAKqC,MAAOrC,KAAKkB,KAAMlB,KAAK+B,SAAU/B,KAAKgC,WAE7EI,IACDpC,KAAKsC,UAAYF,EACjBpC,KAAKuC,UAAY3B,GAEnB4B,QAAQC,IAAIL,EAAMpC,KAAKsC,UAAU,UAEjCL,EAAOG,MAAWpC,KAAKsC,UACvBL,EAAOS,SAAc1C,KAAKuC,UAC1BvC,KAAKN,iBAAiBiD,aAAaV,GAAQV,UAAWqB,IAChDA,EAAIC,OACN7C,KAAK8C,UAAYF,EAAIC,KAAKE,QAC1B/C,KAAKgD,UAAsC,GAA1BhD,KAAK8C,WAAWG,OACjCjD,KAAK8C,UAAUI,QAASC,IAEpBA,EAAQC,aADuC,GAA7CC,OAAOC,KAAKH,EAAQI,eAAeN,MAGX,GAE9BjD,KAAKwD,cAAgBZ,EAAIC,KAAKY,QAG/BC,MAEL,CACAC,oBAAoBvB,EAAYxB,GAC9B,IAAIqB,EAAc,GAClBA,EAAOG,MAAWA,EAClBH,EAAOS,SAAc9B,EACrBZ,KAAKN,iBAAiBiD,aAAaV,GAAQV,UAAWqB,IAChDA,EAAIC,OACN7C,KAAK8C,UAAYF,EAAIC,KAAKE,QAC1B/C,KAAKgD,UAAsC,GAA1BhD,KAAK8C,WAAWG,OAC7BjD,KAAK8C,WACP9C,KAAK8C,UAAUI,QAASC,IAEpBA,EAAQC,aADwC,GAA9CC,OAAOC,KAAKH,GAASI,eAAeN,MAGZ,GAGhCjD,KAAKwD,cAAgBZ,EAAIC,KAAKY,QAG/BC,MACL,CAEAE,iBAAiBC,GACf7D,KAAKkB,KAAO2C,EACZ7D,KAAKmB,kBACP,CAEA2C,SAAStC,GACPxB,KAAKqC,MAAQb,EACbxB,KAAKmB,iBAAiBK,EACxB,CAEAuC,WAAWF,GACT7D,KAAKgC,UAAY6B,EAAMG,OAAOC,MAC9BjE,KAAKkB,KAAO,EACZlB,KAAKmB,kBACP,CACA+C,QACElE,KAAKqC,MAAQ,GACbrC,KAAKgC,UAAY,GACjBhC,KAAKmE,WAAWC,cAAcH,MAAQ,GACtCjE,KAAKmB,kBACP,CACAkD,SACErE,KAAKJ,KAAK0E,cAAc,GAAGC,qBAA4BvE,KAAKwE,iBAAiBC,QAAQC,KAAM9B,IACrFA,IACF5C,KAAKqC,MAAQ,GACbrC,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKmB,mBAAgB,EAG3B,CAEA0D,mBAAmBJ,GACjBzE,KAAKJ,KAAKkF,WAAW,mCAAmCL,KAAQC,KAAM9B,IACpE5C,KAAK+E,gBAAkBnC,EAAIC,MAE/B,CAEAmC,mBAAmBC,GACjBjF,KAAK6E,mBAAmBI,EAAKR,MAC7BzE,KAAKkF,SAAWD,EAChBjF,KAAKJ,KAAKkF,WAAW,GAAGP,8BAAqCU,EAAKR,QAAQC,KAAM9B,IAC1EA,IACF5C,KAAKmF,gBAAkBvC,EAAIC,KAAK,GAAGsC,gBACnCnF,KAAKoF,gBAAkBxC,EAAIC,KAAK,GAAGuC,kBAGzC,CAEAC,0BACwBC,SAASC,cAAc,qBAClCC,OACb,CAEAC,wBACE,MAAMC,EAAW,CACfjB,KAAMzE,KAAKkF,SAAST,KACpBU,gBAAiBnF,KAAK2F,oBACtBC,oBAAqB5F,KAAK6F,oBAC1BC,eAAgB9F,KAAK+F,WACrBC,mBAAoBhG,KAAKS,mBAAmBwD,MAAMrD,KAClDqF,0BAA2BjG,KAAKS,mBAAmBwD,MAAMnD,aAGZ,uBAA3Cd,KAAKS,mBAAmBwD,MAAMtD,YAChC+E,EAAKQ,aAAkBlG,KAAKS,mBAAmBwD,MAAMtD,WAEvDX,KAAKJ,KAAKuG,WAAW,GAAG5B,wBAAgCmB,GAAMhB,KAAM9B,IAClE5C,KAAKoG,YACLpG,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqG,YACLf,SAASgB,eAAe,iBAAiBd,OAAK,EAGlD,CAEAY,YACEpG,KAAK2F,oBAAsB,EAC3B3F,KAAK6F,oBAAsB,CAC7B,CAEAQ,YACErG,KAAKS,mBAAmByD,QACxBlE,KAAKS,mBAAmB8F,SAAS5F,UAAa6F,SAAS,uBACvDxG,KAAKS,mBAAmB8F,SAAS3F,KAAQ4F,SAAS,cACpD,CAACrH,kDAhNUI,GAAqBkH,sHAArBlH,EAAqBH,67JDhBlCC,qBAA2B,UAA3BA,CAA2B,UAA3BA,CAA2B,UAGSA,qBAAQA,QAChCA,iBAAyB,UAAzBA,CAAyB,sBAEgCA,2CAAmB,EAAEqH,aAAgB,GAAGrH,UAE7FA,eAAK,iBACwBA,kCAAUqH,eAAkB,GACjDrH,sBAAkBA,2BAAaA,QAC/BA,sBAAkBA,8BAAiBA,QACnCA,sBAAkBA,gCAAmBA,QACrCA,sBAAkBA,8BAAiBA,QACnCA,sBAAkBA,+BAAkBA,YAG5CA,sBAA8BA,mDAASqH,iBAAQrH,gBAAiB,GAAEA,kBAAKA,QACvEA,0BAqCJA,UAEJA,mBAAiC,WAAjCA,CAAiC,WAAjCA,CAAiC,QAAjCA,CAAiC,YAAjCA,CAAiC,WAKGA,iBAAIA,QACpBA,2BAAaA,kCAAUqH,mBAAiB,aAAYC,EAAQ,GAAEtH,YAGtEA,eAAI,YAAJA,CAAI,WAEoBA,0BAAaA,YAIrCA,eAAI,YAAJA,CAAI,WAGoBA,qBAAQA,QACxBA,2BAAaA,kCAAUqH,mBAAiB,SAAQC,EAAQ,GAAEtH,YAGlEA,eAAI,YAAJA,CAAI,WAEoBA,0BAAaA,QAC7BA,2BAAaA,kCAAUqH,mBAAiB,YAAWC,EAAQ,GAAEtH,YAGrEA,eAAI,YAAJA,CAAI,WAEoBA,mBAAMA,QACtBA,2BAAaA,kCAAUqH,mBAAiB,YAAWC,EAAQ,GAAEtH,YAGrEA,kBAA4BA,mBAAMA,UAEtCA,gDA4EAA,yBAGJA,UAEJA,0CAEJA,UAGJA,mBAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAApCA,CAAoC,YAKQA,wBAAWA,QACnCA,sBACJA,QACAA,mBAAwB,SAAxBA,CAAwB,SAAxBA,CAAwB,QAGTA,8CAAiCA,cAAGA,UACAA,QAAKA,eAACA,cAIzDA,mBAA0B,YAA1BA,CAA0B,gBAEiCA,mBAAMA,QACzDA,sBAAyCA,gCAASqH,UAAQ,GAC9BrH,oBAAOA,oBAQ3DA,mBAA0C,YAA1CA,CAA0C,YAA1CA,CAA0C,YAA1CA,CAA0C,YAA1CA,CAA0C,YAKEA,2BAAcA,QACtCA,sBACJA,QACAA,mBAAwB,YAAxBA,CAAwB,YAAxBA,CAAwB,WAGeA,4BAAeA,QAC1CA,mBAA6C,eACCA,mEAA1CA,QACAA,iBAAsBA,UAAmBA,QACzCA,iBACJA,UAGJA,mBAAoC,WACLA,gCAAkBA,QAC7CA,oBAA6C,gBACCA,mEAA1CA,QACAA,kBAAsBA,WAAmBA,QACzCA,kBACJA,YAIRA,oBAAmD,iBACUA,oBAAMA,QAE/DA,uBACAA,gCAASqH,2BAAyB,GACjCrH,oBAAMA,oBAU/BA,oBAAuD,aAAvDA,CAAuD,aAAvDA,CAAuD,eAGJA,mCAAYqH,yBAAuB,GACtErH,oBAAkG,aACtEA,2BAAaA,QACrCA,uBAAwCA,gCAASqH,aAAW,GAChCrH,UAEhCA,gBACAA,oBAAwB,UAAxBA,CAAwB,gBAE4CA,0BAAYA,QACxEA,uBAAwD,iBACPA,iCAAmBA,QAChEA,8BACAA,8BAEJA,UAEJA,oBAAkB,gBAC8CA,kBAAIA,QAChEA,uBAAmD,iBACVA,yBAAWA,QAChDA,uBAAuBA,oBAAMA,QAC7BA,uBAAsBA,mBAAKA,YAGnCA,oBAAkB,gBAC8CA,yBAAWA,QACvEA,yBACJA,UAEJA,oBAA0B,iBACuBA,gCAASqH,aAAW,GACrCrH,oBAAMA,QAClCA,uBAC4BA,oBAAMA,iBAAS,OA9QzCA,yEA4EmBA,mGA2ELA,mCAKNA,sEAgBqCA,kJA8BOA,iDACpBA,kCAQoBA,gDACpBA,kCAwBpCA,kDAY4BA,mFACwCA,4CAoB5CA,ooUC/Q7BE,CAAqB,KCTrBqH,GAA2B,MAAlC,MAAOA,EAA2BzH,kDAA3ByH,EAA2B,sCAA3BA,EAA2BxH,mFCPxCC,uDDOauH,CAA2B,4FE8BZvH,oBAEIA,sCACJA,gCACAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCACAA,oBAEIA,qCACJA,gCAQAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,gCAiBAA,oBAEIA,0CACJA,gCACAA,oBAEIA,0CACJA,gCAOAA,oBAEIA,0CACJA,gCACAA,oBAEIA,0CACJA,gCASIA,oBAEIA,gCACJA,gCACAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,mCAMIA,wBACIA,SAAoBA,kBACxBA,kCAF+CA,yBAC3CA,kCAAsCA,2DAWlDA,oBAEIA,0CACJA,gCACAA,oBAEIA,0CACJA,+BAGJA,mCAMQA,qBACIA,SAAyBA,kCADYA,8BACrCA,+DAERA,oBAEIA,kCACJA,gCACAA,oBAEIA,kCACJA,gCAOAA,oBAEIA,uCACJA,gCACAA,oBAEIA,uCACJA,kDAEJA,kBACgD,cAEPA,4DAAUA,wBAAoB,GADnEA,QAEAA,oBAA+EA,oBACvEA,SAAQ,0BAHOA,mCAAkB,4DAK7CA,kBAAmF,eACrCA,0DAASA,mCAA0B,GAAEA,kBAAMA,SAAS,qEA9KtGA,mBAA2E,QAA3EA,CAA2E,cAExBA,sBAAUA,QACrDA,oBAGAA,2BAIAA,2BAIJA,QACAA,eAAK,cACyCA,qBAASA,QACnDA,qBAGAA,4BAIAA,4BAIJA,QAEAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIAA,sBACsCA,0BAC5BA,UAEdA,gBAAK,eACoCA,mBAAMA,QAC3CA,sBAAwD,gBAC/BA,mBAAMA,QAC3BA,sBAAsBA,qBAAQA,YAGtCA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,4BAIAA,4BAIJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,4BAIAA,4BAIJA,QAEAA,mBAAgE,SAAhEA,CAAgE,eAEnBA,iBAAIA,QACzCA,qBAGAA,4BAIAA,4BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,yBAA0D,mBACzBA,gCAAmBA,QAChDA,gCAGJA,YAIRA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGAA,4BAIAA,4BAIJA,QAEAA,mCAEAA,gBAAK,eAC4CA,yBAAYA,QACzDA,sBAA4D,gBAC9BA,gCAAmBA,QAC7CA,6BAEJA,QACAA,4BAIAA,4BAIJA,QACAA,gBAAK,eACkDA,+BAAkBA,QACrEA,qBAGAA,4BAIAA,4BAIJA,QACAA,0BAOAA,0BAGJA,0CAhLMA,oCAIMA,wHAGCA,6HAIAA,+HAODA,sHAGCA,2HAIAA,6HAQDA,8GAGCA,gHAIAA,mHAiBDA,mHAGCA,uHAIAA,yHAODA,sHAGCA,2HAIAA,6HASGA,4GAGCA,iHAIAA,mHAODA,8GAGCA,mHAQ8BA,wCAUnCA,0GAGCA,+GAIAA,iHAKMA,qCAAwB,wDAMHA,qCAI3BA,iIAIAA,mIAODA,wIAGCA,6IAIAA,+IAIHA,gJAOqBA,gGAavBA,oBAEIA,yCACJA,gCACAA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCACAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCACAA,oBAEIA,qCACJA,gCAQAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,kDAcJA,kBACgD,cAEPA,4DAAUA,wBAAoB,GADnEA,QAEAA,oBAA8EA,oBACtEA,SAAQ,0BAHOA,mCAAkB,yCAO7CA,+BAGAA,+BAEAA,kDApFJA,mBAAuE,QAAvEA,CAAuE,cAEpBA,yBAAaA,QACxDA,oBAGAA,2BAIAA,2BAIJA,QACAA,eAAK,cAC0CA,sBAAUA,QACrDA,qBAGAA,4BAIAA,4BAIJA,QACAA,gBAAK,eACyCA,uBAAUA,QACpDA,qBAGAA,4BAIAA,4BAIJA,QAEAA,gBAAK,eAC8CA,kBAAKA,QACpDA,qBAGAA,4BAIAA,4BAIAA,sBACsCA,0BAC5BA,UAGdA,gBAAK,eACoCA,mBAAMA,QAC3CA,sBAAwD,gBAC/BA,mBAAMA,QAC3BA,sBAAsBA,qBAAQA,YAItCA,0BASAA,mCAGAA,mCAEAA,mCAGAA,mBAAyB,gBACqBA,yDAASA,6BAAoB,GAAEA,mBAAMA,WAAS,6DAxF1FA,kCAIMA,0HAGCA,+HAIAA,iIAODA,oHAGCA,yHAIAA,2HAODA,kHAGCA,uHAIAA,yHAQDA,0GAGCA,4GAIAA,+GAgBHA,iJASSA,qCAAwB,sDAGxBA,qCAAwB,sDAExBA,qCAAkC,8EAe7CA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCACAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCACAA,oBAEIA,qCACJA,gCAQAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,kDAaJA,kBACgD,cAEPA,4DAAUA,wBAAoB,GADnEA,QAEAA,oBAA+EA,oBACvEA,SAAQ,0BAHOA,mCAAkB,yCAQ7CA,+BACAA,+BACAA,kDA7EJA,mBAA8D,QAA9DA,CAA8D,cAEXA,yBAAaA,QACxDA,oBAGAA,2BAIJA,QACAA,eAAK,cAC0CA,sBAAUA,QACrDA,oBAGAA,4BAIAA,4BAIJA,QACAA,gBAAK,eACyCA,sBAASA,QACnDA,qBAGAA,4BAIAA,4BAIJA,QAEAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIAA,sBACsCA,0BAC5BA,UAGdA,gBAAK,eACoCA,mBAAMA,QAC3CA,sBAAwD,gBAC/BA,mBAAMA,QAC3BA,sBAAsBA,qBAAQA,YAGtCA,0BAUAA,mCACAA,mCACAA,mCAGAA,mBAAyB,gBACqBA,yDAASA,6BAAoB,GAAEA,mBAAMA,WAAS,6DAjF1FA,kCAIMA,0HAGCA,iIAODA,oHAGCA,yHAIAA,2HAODA,kHAGCA,uHAIAA,yHAQDA,0GAGCA,4GAIAA,+GAeHA,iJAUSA,qCAAwB,sDACxBA,qCAAwB,sDACxBA,qCAAkC,8EAgB7CA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,+BAUJA,+BAEAA,+BACAA,kDAEAA,kBACgD,cAEPA,4DAAUA,wBAAoB,GADnEA,QAEAA,oBAA8EA,oBACtEA,SAAQ,0BAHOA,mCAAkB,4DA9CjDA,mBAA+D,QAA/DA,CAA+D,cAEZA,yBAAaA,QACxDA,oBAGAA,2BAIJA,QACAA,eAAK,cAC0CA,sBAAUA,QACrDA,oBAGAA,4BAIJA,QACAA,gBAAK,eACyCA,sBAASA,QACnDA,qBAGAA,4BAIJA,QACAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGJA,QAGAA,mCAEAA,mCACAA,mCAEAA,0BAOAA,mBAAyB,gBACqBA,yDAASA,8BAAqB,GAAEA,mBAAMA,WAAS,6DApD3FA,mCAIMA,4HAGCA,mIAODA,sHAGCA,6HAODA,oHAGCA,2HAODA,4GAKOA,qCAAwB,uDAExBA,qCAAwB,uDACxBA,qCAAkC,sDAE3CA,wKAkCMA,oBAEIA,+CACJA,mCAKJA,qBACyCA,kBAAMA,8BAA3CA,oEAkB5BA,oBAEIA,mCACJA,gCACAA,oBAEIA,sCACJA,kDAdJA,kBAAwB,cACkBA,iBAAKA,QAC3CA,oBAIIA,8EAAiBA,6BAA4B,GAJjDA,QAKAA,2BAIAA,2BAIJA,8CAfKA,qBAKGA,kDAGCA,0FAIAA,mHAOTA,YACIA,eAAK,cAC0CA,sBAAUA,QACrDA,oBAEJA,QACAA,eAAK,cAC8CA,0BAAcA,QAC7DA,oBAEJA,QACAA,kBAAsB,eACqCA,kCAAqBA,QAC5EA,qBAEJA,QACJA,cAhBcA,sDA0BNA,oBAEIA,0CACJA,gCAOAA,oBAEIA,0CACJA,gCAOAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,mCAMIA,wBACIA,SAAoBA,kBACxBA,kCAF+CA,yBAC3CA,kCAAsCA,2DAU9CA,oBAEIA,0CACJA,mCA3DRA,YACIA,eAAK,cACuCA,0BAAcA,QACtDA,uBAGAA,2BAIJA,QACAA,eAAK,cACuCA,0BAAcA,QACtDA,uBAGAA,4BAIJA,QACAA,gBAAK,eACoCA,iBAAIA,QACzCA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,yBAA0D,mBACzBA,gCAAmBA,QAChDA,gCAGAA,UAGRA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGAA,4BAIJA,QACJA,4CA7DcA,qBAIFA,oFAGCA,2FAODA,wFAGCA,+FAODA,8EAGCA,qFAODA,gFAGCA,uFAQ8BA,wCAS/BA,4EAGCA,oFC/iBV,IAAMwH,EAAuB,MAA9B,MAAOA,EAgCXrH,YAAoBO,EAAyB+G,EACnChH,EAA+BL,EAC/BsH,EAA4CnH,EAA2BC,EACvEH,EAA2CsH,GAA+BC,IAHhEjH,UAAyBA,oBACnCA,cAA+BA,qBAC/BA,oBAA4CA,YAA2BA,oBACvEA,wBAA2CA,cAA+BA,yBAlCpFA,8BAAmC,EACnCA,qBAA0B,EAO1BA,eAAoB,EACpBA,SAAW,UACXA,eAAYkH,WACZlH,WAAa,GACbA,oBAAyB,EAGzBA,cAAgB,IAAImH,SAEpBnH,iBAAsB,EAEtBA,mBAAqB,GACrBA,iBAAcoH,KACdpH,6BAAkC,EAClCA,aAAkB,EAElBA,kBAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IACtEJ,cAAgB,GAEhBA,gBAAa,CACXqH,kBAAiB,EACjBC,eAAe,MAqGjBtH,SAAW,CACT,CAAEuH,OAAU,KAAMC,KAAQ,iBAC1B,CAAED,OAAU,KAAMC,KAAQ,mBAhG1BxH,KAAKP,cAAca,SAAS,cAC5BN,KAAKyH,YAAczH,KAAKD,GAAGW,MAAM,CAC/BgH,WAAY,CAAC,GAAI7G,eACjB8G,UAAW,CAAC,GAAI9G,eAChB+G,QAAS,CAAC,GAAI/G,eACdgH,QAAS,CAAC,QAAShH,eACnBiH,SAAU,CAAC,GAAIjH,eACfkH,MAAO,CAAC,GAAI,CAAClH,cAAqBA,eAGpCb,KAAKgI,gBAAkBhI,KAAKD,GAAGW,MAAM,CACnCqH,MAAO,CAAC,GAAI,CAAClH,cAAqBA,eAGpCb,KAAKiI,cAAgBjI,KAAKD,GAAGW,MAAM,CACjCwH,IAAK,CAAC,GAAIrH,iBAGZb,KAAKmI,eAAiBnI,KAAKD,GAAGW,MAAM,CAClCgH,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBuH,aAAc,CAAC,IACfN,SAAU,CAAC,GAAI,CAACjH,gBAChBkH,MAAO,CAAC,GAAI,CAAClH,cAAqBA,aAClC+G,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,GAAI,CAACxH,gBACjBgH,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ2H,IAAK,CAAC,GAAI,CAAC3H,gBACX4H,UAAW,CAAC,GAAI,CAAC5H,gBACjB6H,aAAc,CAAC,GAAI,IACnBC,mBAAoB,CAAC,GAAI,MAE3B3I,KAAK4I,aAAe5I,KAAKD,GAAGW,MAAM,CAChCmI,cAAe,CAAC,GAAI,CAAChI,gBACrBiI,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7BtB,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBuH,aAAc,CAAC,IACfN,SAAU,CAAC,IACXmB,UAAW,CAAC,IACZlB,MAAO,CAAC,GAAI,CAAClH,cAAqBA,aAClC+G,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,GAAI,CAACxH,gBACjBgH,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ4H,UAAW,CAAC,GAAI,CAAC5H,gBACjB2H,IAAK,CAAC,GAAI,CAAC3H,kBAGbb,KAAKkJ,aAAelJ,KAAKD,GAAGW,MAAM,CAChCmI,cAAe,CAAC,GAAI,CAAChI,gBACrBiI,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7BpB,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,GAAI,CAACxH,gBACjBgH,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ2H,IAAK,CAAC,GAAI,CAAC3H,gBACX4H,UAAW,CAAC,GAAI,CAAC5H,gBACjB6G,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBuH,aAAc,CAAC,IACfN,SAAU,CAAC,GAAI,CAACjH,gBAChBkH,MAAO,CAAC,GAAI,CAAClH,cAAqBA,eAEpCb,KAAKmJ,cAAgBnJ,KAAKD,GAAGW,MAAM,CACjCmI,cAAe,CAAC,GAAI,CAAChI,gBACrBiI,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7BtB,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBuH,aAAc,CAAC,IACfN,SAAU,CAAC,IACXmB,UAAW,CAAC,IACZlB,MAAO,CAAC,GAAI,CAAClH,cAAqBA,aAClC+G,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,GAAI,CAACxH,gBACjBgH,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ2H,IAAK,CAAC,GAAI,CAAC3H,gBACXuI,WAAY,CAAC,kBAAmB,CAACvI,kBAEnCb,KAAKO,YAAcP,KAAKH,aAAaW,gBAEvC,CAKAO,WACEf,KAAKqJ,cAAgBrJ,KAAKgH,MAAMsC,SAASC,SAASC,IAAI,MACtDxJ,KAAKyJ,YAAYC,KAAK,CAACC,EAAQC,IAAYD,EAAE9B,QAAU+B,EAAE/B,QAAW,GAAI,GACxE7H,KAAK6J,IAAI3G,QAASC,IAChBnD,KAAK8J,iBAAiB3G,EAAQqE,KAAI,GAEpCxH,KAAK+J,oBACL/J,KAAKiH,iBAAiB+C,cAAczI,UAAWqB,IAC7C5C,KAAKiK,SAAWrH,EAAIC,KAAKE,SAExBW,MAGL,CAEAwG,eAAeC,GACb,IAAIC,EAAiB,GAEnBA,EADCpK,KAAKqK,aAAajC,aACF,IAAIpI,KAAKqK,aAAajC,eAAepI,KAAKqK,YAAYvC,WACjD9H,KAAKqK,aAAavC,SAC1CqC,EAAKX,IAAI,aAAahD,SAAS4D,EACjC,CAEAE,gBAAgBH,GACd,IAAII,EAAoB,GAItBA,EADCvK,KAAKqK,aAAajC,cAAgB+B,EAAKX,IAAI,aAAavF,OAASkG,EAAKX,IAAI,aAAavF,MAAMuG,SAASxK,KAAKqK,aAAajC,cACrG+B,EAAKX,IAAI,aAAavF,MAAMwG,QAAQ,IAAIzK,KAAKqK,aAAajC,eAAgB,IAI1E+B,EAAKX,IAAI,aAAavF,MAE5CkG,EAAKX,IAAI,aAAahD,SAAS+D,EACjC,CAEAR,oBACE/J,KAAKN,iBAAiBgL,kBAAkB1K,KAAKqJ,eAAe9H,UAAWqB,IACjEA,IACF5C,KAAKqK,YAAczH,EAAIC,KACvB7C,KAAK2K,MAAQ/H,EAAIC,MAAM8H,MACvB3K,KAAK4K,SAAW5K,KAAKqK,aAAarI,UAClChC,KAAK6K,OAAS7K,KAAKqK,aAAaS,QACX,uBAAjB9K,KAAK4K,UACP5K,KAAKmI,eAAe5B,SAASmC,aAAgBlC,SAASxG,KAAKqK,aAAaU,iBAAiBrC,cACzF1I,KAAKmI,eAAe5B,SAASoC,mBAAsBnC,SAASxG,KAAKqK,aAAaU,iBAAiBpC,oBAC/F3I,KAAKmI,eAAe5B,SAASmB,WAAclB,SAASxG,KAAKqK,aAAa3C,YACtE1H,KAAKmI,eAAe5B,SAASoB,UAAanB,SAASxG,KAAKqK,aAAa1C,WACrE3H,KAAKmI,eAAe5B,SAAS6B,aAAgB5B,SAASxG,KAAKqK,aAAajC,cAExEpI,KAAKkK,eAAelK,KAAKmI,gBACzBnI,KAAKmI,eAAe5B,SAASwB,MAASvB,SAASxG,KAAKqK,aAAatC,OACjE/H,KAAKmI,eAAe5B,SAASqB,QAAWpB,SAASxG,KAAKqK,aAAaW,cAAcpD,SACjF5H,KAAKmI,eAAe5B,SAAS8B,UAAa7B,SAASxG,KAAKqK,aAAaW,cAAc3C,WACnFrI,KAAKmI,eAAe5B,SAASsB,QAAWrB,SAASxG,KAAKqK,aAAaW,cAAcnD,SACjF7H,KAAKmI,eAAe5B,SAAS+B,MAAS9B,SAASxG,KAAKqK,aAAaW,cAAc1C,OAC/EtI,KAAKmI,eAAe5B,SAASgC,KAAQ/B,SAASxG,KAAKqK,aAAaW,cAAczC,MAC9EvI,KAAKmI,eAAe5B,SAASiC,IAAOhC,SAASxG,KAAKqK,aAAaW,cAAcxC,KAC7ExI,KAAKmI,eAAe5B,SAASkC,UAAajC,SAASxG,KAAKqK,aAAa5B,YAE7C,qBAAjBzI,KAAK4K,UACZ5K,KAAKkJ,aAAa3C,SAASsC,cAAiBrC,SAASxG,KAAKqK,aAAaY,eAAepC,eACtF7I,KAAKkJ,aAAa3C,SAASuC,WAActC,SAASxG,KAAKqK,aAAaY,eAAenC,YACnF9I,KAAKkJ,aAAa3C,SAASwC,eAAkBvC,SAASxG,KAAKqK,aAAaY,eAAelC,gBACvF/I,KAAKkJ,aAAa3C,SAASyC,uBAA0BxC,SAASxG,KAAKqK,aAAaY,eAAejC,wBAC/FhJ,KAAKkJ,aAAa3C,SAASmB,WAAclB,SAASxG,KAAKqK,aAAa3C,YACpE1H,KAAKkJ,aAAa3C,SAASoB,UAAanB,SAASxG,KAAKqK,aAAa1C,WACnE3H,KAAKkJ,aAAa3C,SAASwB,MAASvB,SAASxG,KAAKqK,aAAatC,OAC/D/H,KAAKkJ,aAAa3C,SAAS6B,aAAgB5B,SAASxG,KAAKqK,aAAajC,cAEtEpI,KAAKkK,eAAelK,KAAKkJ,cACzBlJ,KAAKkJ,aAAa3C,SAASqB,QAAWpB,SAASxG,KAAKqK,aAAaW,cAAcpD,SAC/E5H,KAAKkJ,aAAa3C,SAAS8B,UAAa7B,SAASxG,KAAKqK,aAAaW,cAAc3C,WACjFrI,KAAKkJ,aAAa3C,SAASsB,QAAWrB,SAASxG,KAAKqK,aAAaW,cAAcnD,SAC/E7H,KAAKkJ,aAAa3C,SAAS+B,MAAS9B,SAASxG,KAAKqK,aAAaW,cAAc1C,OAC7EtI,KAAKkJ,aAAa3C,SAASgC,KAAQ/B,SAASxG,KAAKqK,aAAaW,cAAczC,MAC5EvI,KAAKkJ,aAAa3C,SAASiC,IAAOhC,SAASxG,KAAKqK,aAAaW,cAAcxC,KAC3ExI,KAAKkJ,aAAa3C,SAASkC,UAAajC,SAASxG,KAAKqK,aAAa5B,YAE3C,YAAjBzI,KAAK4K,UACZ5K,KAAK4I,aAAarC,SAASmB,WAAclB,SAASxG,KAAKqK,aAAa3C,YACpE1H,KAAK4I,aAAarC,SAASoB,UAAanB,SAASxG,KAAKqK,aAAa1C,WACnE3H,KAAK4I,aAAarC,SAAS6B,aAAgB5B,SAASxG,KAAKqK,aAAajC,cACtEpI,KAAKkK,eAAelK,KAAK4I,cACzB5I,KAAK4I,aAAarC,SAASwB,MAASvB,SAASxG,KAAKqK,aAAatC,OAC/D/H,KAAK4I,aAAarC,SAASqB,QAAWpB,SAASxG,KAAKqK,aAAaW,cAAcpD,SAC/E5H,KAAK4I,aAAarC,SAAS8B,UAAa7B,SAASxG,KAAKqK,aAAaW,cAAc3C,WACjFrI,KAAK4I,aAAarC,SAASsB,QAAWrB,SAASxG,KAAKqK,aAAaW,cAAcnD,SAC/E7H,KAAK4I,aAAarC,SAAS+B,MAAS9B,SAASxG,KAAKqK,aAAaW,cAAc1C,OAC7EtI,KAAK4I,aAAarC,SAASgC,KAAQ/B,SAASxG,KAAKqK,aAAaW,cAAczC,MAC5EvI,KAAK4I,aAAarC,SAASiC,IAAOhC,SAASxG,KAAKqK,aAAaW,cAAcxC,KAC3ExI,KAAK4I,aAAarC,SAASkC,UAAajC,SAASxG,KAAKqK,aAAa5B,WACnEzI,KAAK4I,aAAarC,SAASsC,cAAiBrC,SAASxG,KAAKqK,aAAaa,qBAAqBrC,eAC5F7I,KAAK4I,aAAarC,SAASuC,WAActC,SAASxG,KAAKqK,aAAaa,qBAAqBpC,YACzF9I,KAAK4I,aAAarC,SAASwC,eAAkBvC,SAASxG,KAAKqK,aAAaa,qBAAqBnC,gBAC7F/I,KAAK4I,aAAarC,SAASyC,uBAA0BxC,SAASxG,KAAKqK,aAAaa,qBAAqBlC,yBAG7E,UAAjBhJ,KAAK4K,WACZ5K,KAAKmJ,cAAc5C,SAASsC,cAAiBrC,SAASxG,KAAKqK,aAAaa,qBAAqBrC,eAC7F7I,KAAKmJ,cAAc5C,SAASuC,WAActC,SAASxG,KAAKqK,aAAaa,qBAAqBpC,YAC1F9I,KAAKmJ,cAAc5C,SAASwC,eAAkBvC,SAASxG,KAAKqK,aAAaa,qBAAqBnC,gBAC9F/I,KAAKmJ,cAAc5C,SAASyC,uBAA0BxC,SAASxG,KAAKqK,aAAaa,qBAAqBlC,wBACtGhJ,KAAKmJ,cAAc5C,SAASmB,WAAclB,SAASxG,KAAKqK,aAAa3C,YACrE1H,KAAKmJ,cAAc5C,SAASoB,UAAanB,SAASxG,KAAKqK,aAAa1C,WACpE3H,KAAKmJ,cAAc5C,SAASwB,MAASvB,SAASxG,KAAKqK,aAAatC,OAChE/H,KAAKkK,eAAelK,KAAKmJ,eAEzBnJ,KAAKmJ,cAAc5C,SAAS6B,aAAgB5B,SAASxG,KAAKqK,aAAajC,cACvEpI,KAAKmJ,cAAc5C,SAASqB,QAAWpB,SAASxG,KAAKqK,aAAaW,cAAcpD,SAChF5H,KAAKmJ,cAAc5C,SAAS8B,UAAa7B,SAASxG,KAAKqK,aAAaW,cAAc3C,WAClFrI,KAAKmJ,cAAc5C,SAASsB,QAAWrB,SAASxG,KAAKqK,aAAaW,cAAcnD,SAChF7H,KAAKmJ,cAAc5C,SAAS+B,MAAS9B,SAASxG,KAAKqK,aAAaW,cAAc1C,OAC9EtI,KAAKmJ,cAAc5C,SAASgC,KAAQ/B,SAASxG,KAAKqK,aAAaW,cAAczC,MAC7EvI,KAAKmJ,cAAc5C,SAASiC,IAAOhC,SAASxG,KAAKqK,aAAaW,cAAcxC,MAW9ExI,KAAKyH,YAAY0D,WARC,CAChBzD,WAAc1H,KAAKqK,YAAY3C,WAC/BC,UAAa3H,KAAKqK,YAAY1C,UAC9BC,QAAW5H,KAAKqK,YAAYW,aAAapD,QACzCC,eAAmB7H,KAAKqK,YAAYW,aAAanD,QAAY,IAAc7H,KAAKqK,YAAYW,aAAanD,QAAU,QACnHC,SAAY9H,KAAKqK,YAAYvC,SAC7BC,MAAS/H,KAAKqK,YAAYtC,QAEW,EAGxCrE,MAIL,CACAoG,iBAAiBtC,GACf,MAAM4D,EAAQpL,KAAKyJ,YAAY4B,UAAWC,GAAcA,EAAKzD,UAAYL,GACzE,IAAc,IAAV4D,EAAc,CAChB,MAAMG,EAAgBvL,KAAKyJ,YAAY+B,OAAOJ,EAAO,GAAG,GACxDpL,KAAKyJ,YAAYgC,QAAQF,EAAa,CAE1C,CAGAG,2BACE,GAAI1L,KAAKmI,eAAewD,MAAO,CAC7B3L,KAAKsK,gBAAgBtK,KAAKmI,gBAE1B,IAAIyD,EAAiB5L,KAAKmI,eAAelE,MAsBzCjE,KAAKJ,KAAKuG,WAAW,GAAG5B,wBAA+BvE,KAAKqJ,gBArBjD,CACTwC,mBAAsB,CACpBnD,aAAgBkD,EAAelD,aAC/BC,mBAAsBiD,EAAejD,oBAEvCf,QAAW,CACTS,UAAauD,EAAevD,UAC5BT,QAAWgE,EAAehE,QAC1BU,MAASsD,EAAetD,MACxBC,KAAQqD,EAAerD,KACvBC,IAAOoD,EAAepD,KAExBsD,WAAc,CACZpE,WAAckE,EAAelE,WAC7BC,UAAaiE,EAAejE,UAC5BG,SAAY8D,EAAe9D,SAC3BM,aAAewD,EAAexD,aAC9BL,MAAS6D,EAAe7D,MACxBU,UAAamD,EAAenD,aAGmD/D,KAAM9B,IACvF5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAO,EAChC,MAED5E,KAAK+L,yBAAyB/L,KAAKmI,eAEvC,CAGA6D,sBACE,GAAIhM,KAAKmJ,cAAc8C,QAErB,YADAjM,KAAKmJ,cAAc+C,mBAIrBlM,KAAKsK,gBAAgBtK,KAAKmJ,eAE1B,IAAIgD,EAAgBnM,KAAKmJ,cAAclF,MA2BvCjE,KAAKJ,KAAKuG,WAAW5B,iBA1BV,CACT6H,OAAU,CACRvD,cAAiBsD,EAActD,cAC/BC,WAAcqD,EAAcrD,WAC5BC,eAAkBoD,EAAcpD,eAChCC,uBAA0BmD,EAAcnD,wBAE1CpB,QAAW,CACTS,UAAa8D,EAAcvE,QAC3BA,QAAWuE,EAAc9D,UACzBR,QAAWsE,EAActE,QACzBS,MAAS6D,EAAc7D,MACvBC,KAAQ4D,EAAc5D,KACtBC,IAAO2D,EAAc3D,KAEvB6D,OAAU,CACR3E,WAAcyE,EAAczE,WAC5BC,UAAawE,EAAcxE,UAC3BG,SAAYqE,EAAcrE,SAC1BM,aAAe+D,EAAc/D,aAE7BL,MAASoE,EAAcpE,OAGzBtD,KAAQzE,KAAKqJ,gBAEqC3E,KAAM9B,IACxD5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAO,EAEnC,CACA0H,uBAAuBzC,GACrB7J,KAAKuM,uBAAyB1C,EAE5B7J,KAAK4I,aAAarC,SAAS0C,UAAauD,UADtC3C,EACgD,KAEA,CAAE4C,WAAa,GAErE,CAGAC,qBACE,GAAI1M,KAAK4I,aAAa+C,MAAO,CAC3B3L,KAAKsK,gBAAgBtK,KAAK4I,cAC1B,IAAI+D,EAAe3M,KAAK4I,aAAa3E,MA2BrCjE,KAAKJ,KAAKuG,WAAW,GAAG5B,kBA1Bb,CACT6H,OAAU,CACRvD,cAAiB8D,EAAa9D,cAC9BC,WAAc6D,EAAa7D,WAC3BC,eAAkB4D,EAAa5D,eAC/BC,uBAA0B2D,EAAa3D,wBAEzCpB,QAAW,CACTS,UAAasE,EAAa/E,QAC1BA,QAAW+E,EAAatE,UACxBR,QAAW8E,EAAa9E,QACxBS,MAASqE,EAAarE,MACtBC,KAAQoE,EAAapE,KACrBC,IAAOmE,EAAanE,KAEtBoE,SAAY,CACVlF,WAAciF,EAAajF,WAC3BC,UAAagF,EAAahF,UAC1BS,aAAeuE,EAAavE,aAC5BN,SAAY6E,EAAa7E,SAEzBW,UAAakE,EAAalE,UAC1BV,MAAS4E,EAAa5E,OAExBtD,KAAQzE,KAAKqJ,gBAEyC3E,KAAM9B,IAC5D5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAO,EAChC,MAED5E,KAAK+L,yBAAyB/L,KAAK4I,aAEvC,CAEAmD,yBAAyBc,GACvBxJ,OAAOyJ,OAAOD,EAAUtG,UAAUrD,QAAQ6J,IACxCA,EAAQC,gBACJD,aAAmBE,MACrBjN,KAAK+L,yBAAyBgB,EAAO,EAG3C,CAEAG,qBACE,GAAIlN,KAAKkJ,aAAayC,MAAO,CAC3B3L,KAAKsK,gBAAgBtK,KAAKkJ,cAC1B,IAAIiE,EAAenN,KAAKkJ,aAAajF,MA4BrCjE,KAAKJ,KAAKuG,WAAW,GAAG5B,wBAA+BvE,KAAKqJ,gBA3BjD,CACT+D,iBAAoB,CAClBvE,cAAiBsE,EAAatE,cAC9BC,WAAcqE,EAAarE,WAC3BC,eAAkBoE,EAAapE,eAC/BC,uBAA0BmE,EAAanE,wBAEzCpB,QAAW,CACTS,UAAa8E,EAAa9E,UAC1BT,QAAWuF,EAAavF,QACxBC,QAAWsF,EAAatF,QACxBS,MAAS6E,EAAa7E,MACtBC,KAAQ4E,EAAa5E,KACrBC,IAAO2E,EAAa3E,KAEtB6E,SAAY,CACV3F,WAAcyF,EAAazF,WAC3BC,UAAawF,EAAaxF,UAC1BG,SAAYqF,EAAarF,SACzBM,aAAe+E,EAAa/E,aAC5BL,MAASoF,EAAapF,MACtBU,UAAa0E,EAAa1E,WAG5B6E,iBAAoB,KAG6D5I,KAAM9B,IACnFA,GACF5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAS,GAAI,CAAE2I,QAAS,KAAM,EAEzD,MAEDvN,KAAK+L,yBAAyB/L,KAAKkJ,cACnC1G,QAAQC,IAAIzC,KAAKkJ,aAAa,OAGlC,CAEAsE,aAAa3J,GAEX,GAAIA,EAAMG,OAAOyJ,OAAS5J,EAAMG,OAAOyJ,MAAM,GAAI,CAC/C,MAAMC,EAAO7J,EAAMG,OAAOyJ,MAAM,GAC1BE,EAAS,IAAIC,WACnBD,EAAOE,OAASC,GAAK9N,KAAK2K,MAAQgD,EAAOI,OACzCJ,EAAOK,cAAcN,GACrB1N,KAAKiO,SAASC,OAAO,QAASR,GAC9B1N,KAAKiO,SAASC,OAAO,OAAQlO,KAAKqJ,eAClCrJ,KAAKmO,kBAAgB,CAEzB,CACAA,mBACEnO,KAAKJ,KAAKwO,YAAY,GAAG7J,uBAA+BvE,KAAKiO,UAAUvJ,KAAM9B,MAE/E,CAEAyL,cAAcxE,GACZ7J,KAAKsO,cAAgBzE,EAEnB7J,KAAKyH,YAAYlB,SAASuB,SAAY0E,UADpC3C,EAC8C,KAEA,CAAE4C,WAAa,GAEnE,CAEA8B,gBAAgB1K,EAAYsG,GACvBA,GACDA,EAAKX,IAAI,iBAAiBhD,SAAS3C,EAAM2K,SAE7C,CAEAC,wBAAwB5E,GACtB7J,KAAK0O,wBAA0B7E,EAE7B7J,KAAKmI,eAAe5B,SAASuB,SAAY0E,UADvC3C,EACiD,KAEA,CAAE4C,WAAa,GAEtE,CACAkC,uBAAuB9E,GACrB7J,KAAK4O,eAAiB/E,EAEpB7J,KAAK4I,aAAarC,SAAS0C,UAAauD,UADtC3C,EACgD,KAEA,CAAE4C,WAAa,GAErE,CAgBAoC,cACE,IAAIhM,EAAO,CACTkF,MAAS/H,KAAKgI,gBAAgB/D,MAAM8D,MACpCG,IAAOlI,KAAKiI,cAAchE,MAAMiE,IAChCzD,KAAQzE,KAAKqJ,eAEfrJ,KAAK8G,aAAagI,KAAK,+BAAgCjM,GAAMtB,UAAWqB,IACtE5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAS,GAAI,CAAE2I,QAAS,MAChDvN,KAAK+J,oBAELzE,SAASgB,eAAe,yBAAyBd,QAC5B,YAAjBxF,KAAK4K,UACP5K,KAAK4I,aAAarC,SAASwB,MAASvB,SAAS3D,EAAKkF,MAAK,EAGxDrE,IACC1D,KAAKF,OAAOiP,MAAMrL,EAAIqL,MAAM3C,OAAQ,GAAI,CAAEmB,QAAS,KAAM,EAE/D,CAIAyB,iBAAiBnL,GACf7D,KAAKkJ,aAAaiC,WAAW,CAAErD,SAAYjE,GAC7C,CACAoL,aAAapL,GACX7D,KAAK6K,QAAU7K,KAAK6K,OACpB7K,KAAKJ,KAAKkF,WAAW,GAAGP,6BAAoCvE,KAAKqJ,iBAAiB3E,KAAM9B,IAClFA,GACF5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAO,EAGrC,CAACzF,kDAniBU0H,GAAuBJ,yJAAvBI,EAAuBzH,yzID1BpCC,qBAA+B,SAA/BA,CAA+B,SAA/BA,CAA+B,SAE4BA,gBAAIA,UACvDA,gBAA4B,SAAsDA,sBAAUA,YAEhGA,iBAA2B,UAA3BA,CAA2B,QAA3BA,CAA2B,UAA3BA,CAA2B,QAGsCA,6BAAgBA,YAE7EA,qBACEA,gBACFA,UAEAA,gBAAK,YAALA,CAAK,YAALA,CAAK,aAIWA,mBACAA,gBAAK,aAEGA,mBACJA,QACAA,qBAAmBA,kCAAUqH,iBAAoB,GAAjDrH,cAMZA,mBAEIA,6BAoLAA,6BA6FAA,6BAuFAA,6BAuDJA,cAMZA,mBAAwC,YAAxCA,CAAwC,YAAxCA,CAAwC,YAAxCA,CAAwC,YAAxCA,CAAwC,YAKIA,yBAAYA,QACpCA,sBAEJA,QACAA,mBAAwB,SAAxBA,CAAwB,cAGZA,mCAAYqH,eAAa,GACzBrH,mBACIA,qBAGAA,4BAIJA,UAGJA,mBACIA,6BAEJA,sBAS5BA,6CAmBAA,8CAoBAA,sDAvgBgBA,iEAUaA,qFAa2BA,yDAoLFA,uDA6FAA,8CAuFCA,4CAwEAA,+CAIfA,gHAGCA,4EAOAA,2xMCnc5BwH,CAAuB,6CCUhBxH,+CAAmCA,sFAR3CA,cAAqC,UAArCA,CAAqC,UAEvBA,8BAAyBA,QAC/BA,mBAAkEA,SAA+CA,UAErHA,gBAAwB,UAAOA,0BAAiCA,QAAQA,iBAAMA,UAAYA,UAC1FA,mBACIA,iBACAA,wBACJA,oCAPUA,mCAC4DA,6EAEvCA,wDAA+CA,uBAEvEA,yDAAuCA,uCACtCA,mGAhCpBA,SACIA,oBAA0C,cAMlCA,2DAASA,mCAA0C,GACnDA,yBACIA,eAA+C,SAE/CA,eACIA,kBAEJA,YAGRA,wBAA2B,aAEnBA,2BACJA,YAGRA,kBACIA,0BAWJA,QACJA,oCAhCYA,+CAA4C,6BAE5CA,mEAaIA,0DAIcA,uCACFA,2EAa5BA,qBAAyDA,yDAASA,mBAAU,GAAEA,qBAASA,SChCpF,IAAM6P,EAAiB,MAAxB,MAAOA,EALb1P,cAMYQ,cAAW,IAAImP,MAChBnP,qBAAiB,EAC1BA,kBAAmB,GAEnBA,wBAAkBoP,OAAOC,MAGlBC,iBAAiBC,GAEtB,MAAMC,EAAeD,EAAQE,OAAO,CAACC,EAAUpE,KAG7C,MAAMqE,EAAO,IAAIC,KAAKtE,EAAKuE,WAC3BF,EAAKG,SAAS,EAAG,EAAG,GACpBH,EAAKI,gBAAgB,GAIrB,MAAM3E,EAAQsE,EAAIrE,UAAW2E,GAAYA,EAAGL,KAAKM,YAAcN,EAAKM,WAE9DC,EAAalQ,KAAKmQ,gBAAgBC,aAAa9E,GAErD,OAAa,IAAVF,EACDsE,EAAItE,GAAOiF,KAAKC,KAAKJ,GAKrBR,EAAIY,KAAK,CAACX,OAAMY,aAAY,EAAOF,KAAK,CAACH,KAGpCR,GACP,IAGC1P,KAAKwP,aAAavM,QAAUjD,KAAKwP,aAAagB,IAAG,GAAIb,KAAKM,YAAcT,EAAa,GAAGG,KAAKM,YAC9FjQ,KAAKwP,aAAagB,IAAG,GAAIH,KAAKC,QAAQd,EAAa,GAAGa,MACtDb,EAAahE,OAAO,EAAG,IAGzBxL,KAAKwP,aAAac,QAAQd,EAC5B,CAEAiB,WACEzQ,KAAK0Q,SAASC,MAChB,CAACxR,kDA9CU+P,EAAiB,sCAAjBA,EAAiB9P,i7BDN9BC,mBACIA,mCAqCAA,2BAEJA,eAvCsCA,yCAqCzBA,6kFChCA6P,CAAiB,2CCP1B7P,iBAAuD,OAChDA,0BAAcA,WCWlB,IAAMuR,EAAyB,MAAhC,MAAOA,EAeXpR,YAAoBC,EAA8BK,EACxC+Q,EAA6CjR,EAA2BoH,EACzED,EAA2C+J,GAFhC9Q,qBAA8BA,cACxCA,yBAA6CA,YAA2BA,aACzEA,oBAA2CA,UAfpDA,UAAO,EACPA,cAAW,GACXA,WAAQ,GAMRA,kBAAc,EAEdA,cAAW,GAMTA,KAAKP,cAAca,SAAS,oBAC9B,CAEAS,WACEf,KAAKqJ,cAAgBrJ,KAAKgH,MAAMsC,SAASC,SAASC,IAAI,MACtDxJ,KAAK+Q,mBACP,CAEAlP,iBAAiBI,EAAWH,EAAqBZ,EAAca,GAC7D,OAAID,IACFG,EAAOC,OAAYJ,GAEjBZ,IACFe,EAAOf,KAAUA,GAEfa,IACFE,EAAOE,UAAeJ,GAEjBE,CACT,CAEA8O,kBAAkB3O,EAAgB4O,GAChC,IAAIC,EAAa,GAEd7O,IACDpC,KAAKsC,UAAYF,EACjBpC,KAAKuC,UAAYyO,GAEfhR,KAAKsC,YACP2O,EAAM7O,MAAWpC,KAAKsC,UACtB2O,EAAMvO,SAAc1C,KAAKuC,WAE3BvC,KAAK6B,iBAAiBoP,EAAMjR,KAAKqC,MAAOrC,KAAKkB,KAAMlB,KAAK+B,UAErD/B,KAAKkR,WACND,EAAME,UAAYnR,KAAKkR,SACvBD,EAAMG,QAAUpR,KAAKqR,QAGvBrR,KAAK6Q,kBAAkBS,kBAAkBL,EAAMjR,KAAKqJ,eAAe9H,UAAWqB,IAC5E5C,KAAKuR,SAASjC,iBAAiB1M,EAAIC,KAAKE,SACxC/C,KAAKwR,SAAW5O,EAAIC,KAAKE,QACzB/C,KAAKyR,YAAiC,OAAlB7O,EAAIC,KAAK6O,IAAS,EAErChO,IACC1D,KAAKF,OAAOiP,MAAMrL,EAAIqL,MAAM3C,OAAQ,GAAI,CAAEmB,QAAS,KAAM,EAE/D,CAEAoE,WACE3R,KAAKkB,OACLlB,KAAK+Q,mBACP,CAGAnN,iBAAiBC,GACf7D,KAAKkB,KAAO2C,EACZ7D,KAAK+Q,mBACP,CAEAa,QAAQpQ,GACNxB,KAAKqC,MAAQb,EAAEqQ,cAAcpH,QAAQ,MAAO,IAC5CzK,KAAKkB,KAAO,EACZlB,KAAK+Q,mBACP,CAKAe,cAAcC,GAAU,GACnBA,IACD/R,KAAKkR,SAAW,GAChBlR,KAAKqR,OAAS,IAEhBrR,KAAK+Q,mBACP,CAAC5R,kDA7FUyR,GAAyBnK,yHAAzBmK,EAAyBxR,2EAazB8P,EAAiB,qOD3B9B7P,qBAAqC,oBACnBA,mCAAYqH,YAAU,GAAiCrH,QACrEA,wBAGJA,eAJ0CA,+CAChCA,2ECYGuR,CAAyB,4BCQ5BvR,eAA4D,cACrBA,0BAAcA,QACnDA,oBACFA,gCAyCAA,eAA4D,cACrBA,yBAAaA,QAClDA,oBACFA,gCACAA,eAA4D,cACrBA,+BAAmBA,QACxDA,oBACFA,gCACAA,eAA4D,cACrBA,uBAAWA,QAChDA,oBACFA,gCACAA,eAA4D,cACrBA,0BAAcA,QACnDA,oBACFA,gCACAA,eAA4D,cACrBA,oCAAuBA,QAC5DA,oBACFA,mCA1ENA,iBAA4C,WAA5CA,CAA4C,YAGtCA,kBAIFA,UAEFA,kBAAwB,aAEpBA,wBAIAA,eAAK,cACwCA,uBAAWA,QACtDA,qBACFA,QACAA,gBAAK,eACmCA,uBAAUA,QAChDA,qBACFA,QACAA,gBAAK,eACmCA,mBAAMA,QAC5CA,qBACFA,QACAA,gBAAK,eACkCA,2BAAcA,QACnDA,qBACFA,QACAA,gBAAK,eACkCA,2BAAcA,QACnDA,qBACFA,QACAA,gBAAK,eACkCA,4BAAeA,QACpDA,qBACFA,QACAA,gBAAK,eACkCA,kBAAKA,QAC1CA,qBACFA,QACAA,gBAAK,eACkCA,kBAAKA,QAC1CA,qBACFA,QACAA,gBAAK,eACkCA,oBAAOA,QAC5CA,qBACFA,QACAA,gBAAK,eACkCA,sBAASA,QAC9CA,qBACFA,QACAA,yBAIAA,yBAIAA,yBAIAA,yBAIAA,yBAIFA,kCAvEIA,yEAMEA,+CACEA,+FA4CAA,gGAIAA,+FAIAA,+FAIAA,+FAIAA,sHAOZA,iCC9EG,IAAM2S,GAAqB,MAA5B,MAAOA,EAMXxS,YACUC,EACAuH,EACAtH,EACAK,GAHAC,qBACAA,aACAA,wBACAA,UATVA,SAAM,OACNA,WAAa,GACbA,mBAAqB,GAUnBA,KAAKP,cAAca,SAAS,oBAE5BN,KAAKiS,iBAAmBjS,KAAKD,GAAGW,MAAM,CACpCgH,WAAY,CAAC,IACbC,UAAW,CAAC,IACZG,SAAU,CAAC,IACXM,aAAc,CAAC,IACfL,MAAO,CAAC,IACRH,QAAS,CAAC,IACVS,UAAW,CAAC,IACZR,QAAS,CAAC,IACVS,MAAO,CAAC,IACRC,KAAM,CAAC,IACPC,IAAK,CAAC,IACNE,aAAc,CAAC,IACfC,mBAAoB,CAAC,IAErBE,cAAe,CAAC,IAChBC,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,IACzBhH,UAAW,CAAC,KAGhB,CAEAjB,WAEEf,KAAKqJ,cAAgBrJ,KAAKgH,MAAMsC,SAASC,SAASC,IAAI,MACtDxJ,KAAK+J,mBACP,CAEAA,oBACE/J,KAAKN,iBAAiBgL,kBAAkB1K,KAAKqJ,eAAe9H,UAAWqB,IACrE5C,KAAKkS,WAAatP,EAAIC,KAEtB7C,KAAK2K,MAAQ/H,EAAIC,KAAK8H,MACtB,IAAIwH,EAAiB,CACnBzK,WAAc9E,EAAIC,MAAM6E,WACxBC,UAAa/E,EAAIC,MAAM8E,UACvB3F,UAAaY,EAAIC,MAAMb,UAAUyI,QAAQ,IAAK,KAC9C1C,MAASnF,EAAIC,MAAMkF,MACnBD,SAAa,GAAGlF,EAAIC,MAAMuF,aAAe,IAAIxF,EAAIC,MAAMuF,eAAiB,KAAKxF,EAAIC,MAAMiF,WACvFF,QAAWhF,EAAIC,MAAMmI,cAAcpD,QACnCS,UAAazF,EAAIC,MAAMmI,cAAc3C,UACrCR,QAAWjF,EAAIC,MAAMmI,cAAcnD,QACnCS,MAAS1F,EAAIC,MAAMmI,cAAc1C,MACjCC,KAAQ3F,EAAIC,MAAMmI,cAAczC,KAChCC,IAAO5F,EAAIC,MAAMmI,cAAcxC,IAC/BE,aAAgB9F,EAAIC,MAAMkI,iBAAiBrC,aAC3CC,mBAAsB/F,EAAIC,MAAMkI,iBAAiBpC,mBAEjDE,cAAiBjG,EAAIC,MAAMoI,eAAepC,cAC1CC,WAAclG,EAAIC,MAAMoI,eAAenC,WACvCC,eAAkBnG,EAAIC,MAAMoI,eAAelC,eAC3CC,uBAA0BpG,EAAIC,MAAMoI,eAAejC,yBAEpB,UAA7BhJ,KAAKkS,WAAWlQ,WAAsD,YAA7BhC,KAAKkS,WAAWlQ,aAC3DmQ,EAAetJ,cAAgBjG,EAAIC,MAAMqI,qBAAqBrC,cAC9DsJ,EAAerJ,WAAalG,EAAIC,MAAMqI,qBAAqBpC,WAC3DqJ,EAAepJ,eAAiBnG,EAAIC,MAAMqI,qBAAqBnC,eAC/DoJ,EAAenJ,uBAAyBpG,EAAIC,MAAMqI,qBAAqBlC,wBAEzEhJ,KAAKiS,iBAAiB9G,WAAWgH,EAAc,EAE9CzO,MAEL,CAACvE,kDAhFU6S,GAAqBvL,qFAArBuL,EAAqB5S,qnEDXlCC,qBAA0B,UAA1BA,CAA0B,UAA1BA,CAA0B,SAA1BA,CAA0B,UAIkBA,sCAAe,MAAM,GAAEA,4BAAgBA,UAG7EA,oBACEA,eACFA,UAEFA,yBA8EAA,0CACFA,iBAtFUA,wCAOFA,sCA8EkBA,u5HC9Ef2S,CAAqB,iECkBV3S,aAAqBA,yCAA6BA,gCAClDA,gBAAyBA,6CAAgCA,mCACzDA,gBAAwBA,8BAAuCA,8BAAvCA,6DCtBzC,IAAM+S,GAAkB,MAAzB,MAAOA,EAOX5S,YAAqB6S,EAAwBC,GAAxBtS,cAAwBA,uBAF7CA,aAAkB,EAGhBA,KAAKY,KAAOZ,KAAKsS,gBAAgBhJ,SAASC,SAASC,IAAI,OACzD,CACAzI,WAAY,CACZyM,aAAa7G,GACX3G,KAAKuS,QAAS,EACd,MAAM9E,EAAQ9G,EAAO3C,OAAOyJ,MAC5B,GAAIA,EAAMxK,OAAQ,CAChB,MAAMyK,EAAOD,EAAM,GACbE,EAAS,IAAIC,WACnBD,EAAOE,OAAUhK,IACf,MAAM2O,KAAKC,MAAK5O,EAAMG,OAAO+J,QACvB2E,EAASF,EAAGG,WAElB,GAAID,EAAOzP,OAAQ,CACjB,MAAM2P,EAAOC,mBAAoBL,EAAGM,OAAOJ,EAAO,KAClD1S,KAAK+S,SAAWH,EAChB5S,KAAKgT,SAAWtF,EAAKlG,OAGzBmG,EAAOsF,kBAAkBvF,EAAI,CAGjC,CAEAwF,wBACclT,KAAK+S,SAAa,IAC5B/S,KAAKuS,QAAS,EAGdvS,KAAKqS,OAAOc,SAAS,CAAC,6BAA8BlT,KAAKmT,UAAUpT,KAAK+S,WAAW,CAAEM,YAAa,CAAEzS,KAAMZ,KAAKY,OAGnH,CAACzB,kDAxCUiT,GAAkB3L,8DAAlB2L,EAAkBhT,g2BDT/BC,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAAgCA,oBAAQA,UACpEA,gBAA4B,SAAqEA,uBAAUA,YAI/GA,kBAAuB,SAAvBA,CAAuB,WAAvBA,CAAuB,SAGNA,gCAAuDA,UAEhEA,eACAA,cAAGA,oCAAwBA,gBAQsCA,qCACxCA,UACzBA,kBAA+B,kBAC4CA,kCAAUqH,iBAAoB,GAArGrH,QACAA,mBACIA,mBACAA,eACIA,wBACAA,2BACAA,2BACJA,YAGRA,mBACIA,iBAAiCA,iBAC7BA,oFACAA,sBAA8BA,qCAAuBA,iBAChBA,YAE7CA,mBAAoB,gBACkDA,mBAAMA,QACxEA,sBAAkHA,gCAASqH,kBAAgB,GAAErH,iBAAIA,uBAhC5IA,6EAIDA,6SAcQA,mCACGA,mCACAA,kCAYMA,wiEClCxB+S,CAAkB,4BCIrB/S,gBAA0FA,gBACjCA,0BAAgBA,gCACzEA,gBAAsFA,gBAChDA,0BAAgBA,gCACtDA,gBAAsFA,gBAChDA,0BAAgBA,gCACtDA,gBAA0FA,gBACtDA,0BAAgBA,mCAWlDA,cAAsCA,SAAiBA,kCAAjBA,6DAYpCA,mBACEA,SAA+BA,wCAA/BA,+DAOJA,gCAEEA,gBAAkEA,2BAAeA,mCAC3DA,mBAA2BA,SAA4BA,wCAA5BA,iEACzBA,6FAMxBA,mBACEA,SAAsCA,wCAAtCA,kJA3BNA,cAAyD,QAClDA,SAAQA,QACbA,cAAKA,SAA0BA,QAC/BA,cAAKA,SAAyBA,QAE9BA,cAAI,UAEAA,SAAqBA,QACvBA,2BAEFA,QACAA,eAAKA,UAAuBA,QAC5BA,eAAKA,UAAyBA,QAC9BA,eAAKA,UAA4BA,QACjCA,eAAKA,UAA2BA,QAChCA,eAAKA,UAA8BA,QACnCA,mCACAA,eACEA,2BACAA,6CACAA,6CACFA,QACAA,eAAKA,UAA0BA,QAC/BA,eAAI,WAEAA,UAA4BA,QAC9BA,2BAEFA,QACAA,eAAKA,UAAkCA,QAGvCA,eAAKA,UAA+BA,QACpCA,eAAKA,UAAmCA,QACxCA,eAAKA,UAA8BA,iGAjC9BA,4BACAA,qCACAA,oCAGYA,gEACbA,gCACKA,qCAGJA,kCACAA,oCACAA,qCACAA,oCACAA,uCACUA,qCAA8B,yCAEpCA,wCAAgC,aAAhCA,CAAgC,cAIpCA,mCAEYA,uEACbA,uCACKA,4CAGJA,6CAGAA,0CACAA,8CACAA,oEAnCTA,iBACEA,0BAoCFA,8BApC6BA,gEAyCvBA,gBAAmEA,2BAAeA,mCAC7DA,mBAA2BA,SAA+BA,wCAA/BA,sEACzBA,kGAOvBA,mBACEA,SAA6BA,wCAA7BA,+DAQJA,gCAGEA,gBAAgEA,2BAAeA,mCACzDA,mBAA2BA,SAA0BA,wCAA1BA,iEACzBA,6FA1B5BA,cAAuD,QAChDA,SAAQA,QACbA,cACEA,0BACAA,4CACAA,4CACFA,QACAA,cAAKA,UAAwBA,QAC7BA,eAAKA,UAAuBA,QAC5BA,eAAI,WAEAA,UAAmBA,QACrBA,2BAEFA,QACAA,eAAKA,UAA6BA,QAClCA,eAAKA,UAA8BA,QACnCA,eAAKA,UAAyBA,QAC9BA,eAAKA,UAA0BA,QAC/BA,eAAKA,UAA4BA,QACjCA,eAAKA,UAAwBA,QAC7BA,mCAEAA,eACEA,2BACAA,6CACAA,6CACFA,QACAA,eAAKA,UAA+BA,QACpCA,eAAKA,UAAmCA,QACxCA,eAAKA,UAA2CA,QAGhDA,eAAKA,UAA6BA,QAClCA,eAAKA,UAAiCA,QACtCA,eAAKA,UAA4BA,uHAlC5BA,4BAEIA,6CAAmC,aAAnCA,CAAmC,cAIvCA,qCACAA,oCAEAA,gEACDA,gCACKA,qCAGJA,sCACAA,yCACAA,oCACAA,qCACAA,uCACAA,mCACUA,qCAA8B,yCAGpCA,wCAA8B,aAA9BA,CAA8B,cAIlCA,0CACAA,8CACAA,sDAGAA,0CACAA,8CACAA,oEApCTA,iBACEA,0BA8CFA,8BA9C2BA,gEAmDrBA,gBAAmEA,2BAAeA,mCAC7DA,mBAA2BA,SAA+BA,wCAA/BA,sEACzBA,kGAQvBA,mBACEA,SAA6BA,wCAA7BA,mEAKFA,mBACEA,SAAsCA,wCAAtCA,wEASJA,gCAEEA,gBAAgEA,2BAAeA,mCACzDA,mBAA2BA,SAA0BA,wCAA1BA,iEACzBA,6FAjC5BA,cAAuD,QAChDA,SAAQA,QACbA,cACEA,0BACAA,4CACAA,4CACFA,QAEAA,cAAKA,UAAwBA,QAC7BA,eAAKA,UAAuBA,QAC5BA,eAAI,WAEAA,UAAmBA,QACrBA,2BAEFA,QACAA,eAAI,WAEAA,UAA4BA,QAC9BA,2BAEFA,QAEAA,eAAKA,UAA4BA,QACjCA,eAAKA,UAA8BA,QACnCA,eAAKA,UAAyBA,QAC9BA,eAAKA,UAA0BA,QAC/BA,eAAKA,UAA4BA,QACjCA,eAAKA,UAAwBA,QAC7BA,mCACAA,eACEA,2BACAA,6CACAA,6CACFA,QAQAA,eAAKA,UAA+BA,QACpCA,eAAKA,UAAmCA,QACxCA,eAAKA,UAA2CA,QAGhDA,eAAKA,UAA6BA,QAClCA,eAAKA,UAAiCA,QACtCA,eAAKA,UAA4BA,uHAhD5BA,4BAEIA,6CAAmC,aAAnCA,CAAmC,cAKvCA,qCACAA,oCAEAA,gEACDA,gCACKA,qCAIJA,yEACDA,yCACKA,8CAIJA,uCACAA,yCACAA,oCACAA,qCACAA,uCACAA,mCACUA,qCAA8B,yCAEpCA,wCAA8B,aAA9BA,CAA8B,cAWlCA,0CACAA,8CACAA,sDAGAA,0CACAA,8CACAA,oEAlDTA,iBACEA,0BAmDFA,8BAnD2BA,gEAoE/BA,eAA6C,cAEzCA,gDACFA,qCAPJA,cAAI,SAEAA,SACFA,QACAA,yBAKFA,4CAPIA,4CAEIA,uDClLH,IAAMiU,GAAkB,MAAzB,MAAOA,EAqCX9T,YACU8S,EAAyC1S,EACzCE,EAA+BuS,GAD/BrS,uBAAyCA,YACzCA,cAA+BA,cArCzCA,iBAAmB,GACnBA,sBAA2B,EAE3BA,qBAA0B,EAC1BA,UAAYA,KAAKsS,gBAAgBe,YAIjCrT,UAAW,CACT,EAAG,KAAM,EAAG,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KACxE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAChE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAChE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAChE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAChE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAChE,GAAI,KAAM,GAAI,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACrE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAC5D,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KACvE,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,MAWxCA,yBAAqB,EAHnBA,KAAK+S,SAAW9S,KAAKC,MAAMF,KAAKsS,gBAAgBhJ,SAASC,SAASC,IAAI,SAAW,KACnF,CAGA+J,YAAYC,GACV,MAAMC,EAAMzT,KAAK0T,OAAOF,GACxB,YAAKG,qBAAuBF,EAC5BjR,QAAQC,IAAIzC,KAAK2T,mBAAmB,YAE7BF,CACT,CACA1S,WACEf,KAAK4T,YAAc5T,KAAKY,KAAKiT,OAAUjT,KACf,cAApBZ,KAAK4T,YACP5T,KAAK8T,YAAc,CACjB,CAAEC,QAAS,cACX,CAAEA,QAAS,aACX,CAAEA,QAAS,SACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,QACX,CAAEA,QAAS,SACX,CAAEA,QAAS,WACX,CAAEA,QAAS,gBACX,CAAEA,QAAS,YACX,CAAEA,QAAS,OACX,CAAEA,QAAS,gBACX,CAAEA,QAAS,uBAGc,YAApB/T,KAAK4T,aAoBe,YAApB5T,KAAK4T,YAnBZ5T,KAAK8T,YAAc,CACjB,CAAEC,QAAS,iBACX,CAAEA,QAAS,cACX,CAAEA,QAAS,aACX,CAAEA,QAAS,SACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,QACX,CAAEA,QAAS,SACX,CAAEA,QAAS,WACX,CAAEA,QAAS,OACX,CAAEA,QAAS,gBACX,CAAEA,QAAS,YACX,CAAEA,QAAS,cACX,CAAEA,QAAS,eACX,CAAEA,QAAS,wBAuBc,cAApB/T,KAAK4T,cACZ5T,KAAK8T,YAAc,CACjB,CAAEC,QAAS,iBACX,CAAEA,QAAS,cACX,CAAEA,QAAS,aACX,CAAEA,QAAS,SACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,QACX,CAAEA,QAAS,SACX,CAAEA,QAAS,WACX,CAAEA,QAAS,OACX,CAAEA,QAAS,gBACX,CAAEA,QAAS,YACX,CAAEA,QAAS,cACX,CAAEA,QAAS,eACX,CAAEA,QAAS,yBAIf/T,KAAK8T,YAAYxD,KACf,CAAEyD,QAAS,oBACX,CAAEA,QAAS,wBACX,CAAEA,QAAS,oBAIb/T,KAAK+S,SAAS7P,QAASe,IAGrB,GAFAzB,QAAQC,IAAIwB,EAAM,SAEdA,GAASjE,KAAK+S,SAAS9P,OACzB,GAAwB,cAApBjD,KAAK4T,YAA6B,CACpC,IAAI/Q,EAAO,CACT6E,WAAczD,EAAM,cACpB+P,wBAA4B/P,EAAM,cAAkB,IACpDgQ,eAAkB,WAClBtM,UAAa1D,EAAM,aACnBiQ,uBAA2BjQ,EAAM,aAAiB,IAClDkQ,cAAiB,WACjBpM,MAAS9D,EAAM,iBACfmQ,YAAepU,KAAKqU,cAAcpQ,EAAM,kBACxCqQ,UAAa,6BACbxM,SAAY9H,KAAKuU,eAAetQ,EAAM,iBACtCuQ,gBAAoBxU,KAAKuU,eAAetQ,EAAM,iBAC9CwQ,aAAgB,6BAChB7M,QAAW3D,EAAM,mBAAqB,GACtCoE,UAAapE,EAAM,mBAAqB,GACxCqE,MAASrE,EAAMyQ,OAAY,GAC3BnM,KAAQtE,EAAM0Q,MAAW,GACzB9M,QAAW5D,EAAM2Q,SAAc,GAC/BpM,IAAOvE,EAAM4Q,KAAU,GACvBnM,aAAgBzE,EAAM,iBAAmB,GACzC6Q,oBAAsB,EACtBC,iBAAoB,GACpBpM,mBAAsB1E,EAAM,uBAAyB,GACrDmE,aAAgBnE,EAAM,iBAAmB,GAIzCkB,gBAAmBlB,EAAM,qBAAuB,EAChD2B,oBAAuB3B,EAAM,yBAA2B,EACxD6B,eAAkB7B,EAAM,oBAAsB,IAG5CpB,EAAKmR,kBAAoBnR,EAAKqR,iBAAmBrR,EAAKuR,aAAevR,EAAK2R,kBAC5ExU,KAAKgV,iBAAkB,GAEzBhV,KAAKiV,YAAY3E,KAAKzN,EAAI,SAEC,YAApB7C,KAAK4T,YAA2B,CACvC,IAAI/Q,EAAO,CACTqS,cAAiBjR,EAAM,iBACvBkR,2BAA+BlR,EAAM,iBAAqB,IAC1DmR,kBAAqB,WACrBtM,WAAc7E,EAAM,eAAiB,GACrC8E,eAAkB9E,EAAM,mBAAqB,GAC7C+E,uBAA0B/E,EAAM,2BAA6B,GAC7DyD,WAAczD,EAAM,cACpB+P,wBAA4B/P,EAAM,cAAkB,IACpDgQ,eAAkB,WAClBtM,UAAa1D,EAAM,aACnBiQ,uBAA2BjQ,EAAM,aAAiB,IAClDkQ,cAAiB,WACjBpM,MAAS9D,EAAM,iBACfmQ,YAAepU,KAAKqU,cAAcpQ,EAAM,kBACxCqQ,UAAa,6BACbxM,SAAY9H,KAAKuU,eAAetQ,EAAM,iBACtCuQ,gBAAoBxU,KAAKuU,eAAetQ,EAAM,iBAC9CwQ,aAAgB,6BAChB7M,QAAW3D,EAAM,mBAAqB,GACtCoE,UAAapE,EAAM,mBAAqB,GACxCqE,MAASrE,EAAMyQ,OAAY,GAC3BnM,KAAQtE,EAAM0Q,MAAW,GACzB9M,QAAW5D,EAAM2Q,SAAc,GAC/BpM,IAAOvE,EAAM4Q,KAAU,GACvBzM,aAAgBnE,EAAM,iBAAmB,GAIzCkB,gBAAmBlB,EAAM,qBAAuB,EAChD2B,oBAAuB3B,EAAM,yBAA2B,EACxD6B,eAAkB7B,EAAM,oBAAsB,IAO5CpB,EAAKmR,kBAAoBnR,EAAKsS,qBAAuBtS,EAAKqR,iBAAmBrR,EAAKuR,aAAevR,EAAK2R,kBACxGxU,KAAKgV,iBAAkB,GAEzBhV,KAAKiV,YAAY3E,KAAKzN,EAAI,SAEC,YAApB7C,KAAK4T,YAA2B,CAEvC,IAAI/Q,EAAO,CACTqS,cAAiBjR,EAAM,iBACvBkR,2BAA+BlR,EAAM,iBAAqB,IAC1DmR,kBAAqB,WACrBtM,WAAc7E,EAAM,eAAiB,GACrC8E,eAAkB9E,EAAM,mBAAqB,GAC7C+E,uBAA0B/E,EAAM,2BAA6B,GAC7DyD,WAAczD,EAAM,cACpB+P,wBAA4B/P,EAAM,cAAkB,IACpDgQ,eAAkB,WAClBtM,UAAa1D,EAAM,aACnBiQ,uBAA2BjQ,EAAM,aAAiB,IAClDkQ,cAAiB,WACjBpM,MAAS9D,EAAM,iBACfmQ,YAAepU,KAAKqU,cAAcpQ,EAAM,kBACxCqQ,UAAa,6BACbxM,SAAY9H,KAAKuU,eAAetQ,EAAM,iBACtCuQ,gBAAoBxU,KAAKuU,eAAetQ,EAAM,iBAC9CwQ,aAAgB,6BAChB7M,QAAW3D,EAAM,mBAAqB,GACtCoE,UAAapE,EAAM,mBAAqB,GACxCqE,MAASrE,EAAMyQ,OAAY,GAC3BnM,KAAQtE,EAAM0Q,MAAW,GACzB9M,QAAW5D,EAAM2Q,SAAc,GAC/BpM,IAAOvE,EAAM4Q,KAAU,GACvBzM,aAAgBnE,EAAM,iBAAmB,GAIzCkB,gBAAmBlB,EAAM,qBAAuB,EAChD2B,oBAAuB3B,EAAM,yBAA2B,EACxD6B,eAAkB7B,EAAM,oBAAsB,IAO5CpB,EAAKmR,kBAAoBnR,EAAKsS,qBAAuBtS,EAAKqR,iBAAmBrR,EAAKuR,aAAevR,EAAK2R,kBACxGxU,KAAKgV,iBAAkB,GAEzBhV,KAAKiV,YAAY3E,KAAKzN,EAAI,SAEC,cAApB7C,KAAK4T,YAA6B,CACzC,IAAI/Q,EAAO,CACTqS,cAAiBjR,EAAM,iBACvBkR,2BAA+BlR,EAAM,iBAAqB,IAC1DmR,kBAAqB,WACrBtM,WAAc7E,EAAM,eAAiB,GACrC8E,eAAkB9E,EAAM,mBAAqB,GAC7C+E,uBAA0B/E,EAAM,2BAA6B,GAC7DyD,WAAczD,EAAM,cACpB+P,wBAA4B/P,EAAM,cAAkB,IACpDgQ,eAAkB,WAClBtM,UAAa1D,EAAM,aACnBiQ,uBAA2BjQ,EAAM,aAAiB,IAClDkQ,cAAiB,WACjBpM,MAAS9D,EAAM,iBACfmQ,YAAepU,KAAKqU,cAAcpQ,EAAM,kBACxCqQ,UAAa,6BAEbe,eAAkBpR,EAAM,kBACxBqR,qBAAwBtV,KAAKuV,sBAAsBtR,EAAM,mBACzDuR,mBAAsB,6BAEtB1N,SAAY9H,KAAKuU,eAAetQ,EAAM,iBACtCuQ,gBAAoBxU,KAAKuU,eAAetQ,EAAM,iBAC9CwQ,aAAgB,6BAChB7M,QAAW3D,EAAM,mBAAqB,GACtCoE,UAAapE,EAAM,mBAAqB,GACxCqE,MAASrE,EAAMyQ,OAAY,GAC3BnM,KAAQtE,EAAM0Q,MAAW,GACzB9M,QAAW5D,EAAM2Q,SAAc,GAC/BpM,IAAOvE,EAAM4Q,KAAU,GACvBzM,aAAgBnE,EAAM,iBAAmB,GAGzCkB,gBAAmBlB,EAAM,qBAAuB,EAChD2B,oBAAuB3B,EAAM,yBAA2B,EACxD6B,eAAkB7B,EAAM,oBAAsB,IAO5CpB,EAAKmR,kBAAoBnR,EAAKsS,qBAAuBtS,EAAKqR,iBAAmBrR,EAAKuR,aAAevR,EAAK2R,kBACxGxU,KAAKgV,iBAAkB,GAEzBhV,KAAKiV,YAAY3E,KAAKzN,EAAI,GAKlC,CAGA4S,iBAAiBC,EAAeC,EAAcC,GAC5C,IAAInS,EAAQ,EACZiS,SAASxS,QAAQ,CAACe,EAAYmH,KACxBnH,EAAM0R,IAAYC,IACpBnS,GAAgB,KAGJ,GAATA,CACT,CAGA8Q,eAAesB,GAEb,MAAMC,EAAMD,EACZrT,eAAQC,IAAIqT,EAAI,UAETA,CAET,CAEAC,cAAcF,GACZ,OAAI,6BAA6BG,KAAKH,IAC7B7V,KAAKyV,iBAAiBzV,KAAK+S,SAAU,eAAgB8C,EAKhE,CAEAxB,cAActM,GACZ,OAAI,gDAAgDiO,KAAKjO,IAChD/H,KAAKyV,iBAAiBzV,KAAK+S,SAAU,gBAAiBhL,EAKjE,CACAwN,sBAAsBxN,GACpB,OAAI,gDAAgDiO,KAAKjO,EAM3D,CACAkO,gBACE,IAAIvQ,EAAO,CACT7C,KAAM7C,KAAKiV,aAEW,cAApBjV,KAAK4T,YACP5T,KAAKJ,KAAKsW,eAAe3R,qBAA6BmB,GAAMhB,KAAM9B,IAC5DA,EAAImM,MACN/O,KAAKiV,YAAcrS,EAAImM,MAAMlM,MAG7B7C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqS,OAAO8D,cAAc,kCAAgC,GAInC,YAApBnW,KAAK4T,YACZ5T,KAAKJ,KAAKsW,eAAe3R,mBAA2BmB,GAAMhB,KAAM9B,IAE1DA,EAAImM,MACN/O,KAAKiV,YAAcrS,EAAImM,MAAMlM,MAG7B7C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqS,OAAO8D,cAAc,kCAAgC,GAInC,YAApBnW,KAAK4T,YACZ5T,KAAKJ,KAAKsW,eAAe3R,mBAA2BmB,GAAMhB,KAAM9B,IAC1DA,EAAImM,MACN/O,KAAKiV,YAAcrS,EAAImM,MAAMlM,MAG7B7C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqS,OAAO8D,cAAc,kCAAgC,GAInC,cAApBnW,KAAK4T,aACZ5T,KAAKJ,KAAKsW,eAAe3R,oBAA4BmB,GAAMhB,KAAM9B,IAC3DA,EAAImM,MACN/O,KAAKiV,YAAcrS,EAAImM,MAAMlM,MAG7B7C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqS,OAAO8D,cAAc,kCAAgC,EAIlE,CAAChX,kDAjaUmU,GAAkB7M,qFAAlB6M,EAAkBlU,2uCDX/BC,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAE4BA,gBAAIA,UACvDA,gBAA4B,SAAgCA,oBAAQA,UACpEA,gBAA4B,SAAqEA,uBAAUA,YAK7GA,kBAAuB,SAAvBA,CAAuB,WAAvBA,CAAuB,SAIfA,uBAEAA,uBAEAA,wBAEAA,wBAEFA,UAEFA,eACFA,QAEAA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAIpBA,eACAA,yBACFA,UAEFA,4BAsCAA,4BAgDAA,4BAqDFA,UAGFA,sBAA+FA,gCAASqH,iBAAe,GAAErH,6BACnHA,YAOVA,oDA3KcA,oDAEAA,iDAEAA,iDAEAA,mDAYmBA,wCAGjBA,wDAsCAA,sFAgDAA,wDAwD+BA,qtDCrKlCiU,CAAkB,qDCgCajU,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCASJA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,gCAQIA,oBAEIA,0CACJA,gCAmBAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,mCAOIA,wBAEIA,SAAoBA,kBACxBA,kCAFIA,yBACAA,kCAAsCA,2DAY9CA,oBAEIA,0CACJA,+BAGJA,mCAUQA,qBACIA,SAAyBA,kCADYA,8BACrCA,+DAERA,oBAEIA,kCACJA,gCAQAA,oBAEIA,uCACJA,gCAOJA,oBAEIA,8BACJA,2FA/IRA,mBAAoE,WAApEA,CAAoE,QAApEA,CAAoE,cAGbA,sBAAUA,QACrDA,oBAGAA,2BAIJA,QACAA,eAAK,cACyCA,qBAASA,QACnDA,qBAGAA,4BAIJA,UAGJA,mBAAuB,eACmBA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIJA,QACAA,mBAA4B,SAA5BA,CAA4B,eAEoBA,2BAAcA,QACtDA,wBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAOJA,UAEJA,mBAA4B,SAA5BA,CAA4B,eAEiBA,iBAAIA,QACzCA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAE/CA,yBAA0D,mBACzBA,gCAAmBA,QAChDA,gCAIJA,YAIRA,mBAA4B,SAA5BA,CAA4B,eAEoBA,2BAAcA,QACtDA,qBAGAA,4BAIJA,QAEAA,mCACJA,QAIAA,mBAA4B,SAA5BA,CAA4B,eAEyBA,yBAAYA,QACzDA,sBAA4D,gBAC9BA,gCAAmBA,QAC7CA,6BAEJA,QACAA,4BAIJA,QACAA,gBAAK,eACkDA,+BACzCA,QACVA,qBAGAA,4BAIJA,UAEJA,mBACIA,iCAGAA,4BAIJA,QACAA,mBAAoB,gBACcA,yDAASA,+BAAsB,GAAEA,kBAAKA,QACpEA,sBAA4BA,yDAASA,mCAA0B,GAAEA,mBAAMA,WAAS,qCAnJlFA,oCAKUA,wHAGCA,+HAODA,sHAGCA,6HASLA,8GAGCA,gHAIAA,qHAQGA,kHAGCA,yHAODA,sHAYAA,4GAGCA,mHAODA,8GAGCA,qHAS8BA,wCAY/BA,0GAGCA,iHAKMA,qCAAwB,wDAUHA,qCAI3BA,mIAQDA,wIAGCA,+IAMoBA,oCAIxBA,mKAmBDA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCAUAA,oBAEIA,qCACJA,gCAOAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,+BAIRA,kDAnDJA,mBAAgE,WAAhEA,CAAgE,QAAhEA,CAAgE,cAGTA,yBAAaA,QACxDA,oBAGAA,2BAIJA,QACAA,eAAK,cAC0CA,sBAAUA,QACrDA,qBAGAA,4BAIJA,UAGJA,mBAA4B,SAA5BA,CAA4B,eAEsBA,uBAAUA,QACpDA,qBAGAA,4BAIJA,QACAA,gBAAK,eAC8CA,kBAAKA,QACpDA,qBAGAA,4BAIAA,4BAIJA,UAGJA,mCAEAA,mBAAoB,gBACcA,yDAASA,6BAAoB,GAAEA,kBAAKA,QAClEA,sBAA4BA,yDAASA,6BAAoB,GAAEA,mBAAMA,WAAS,qCAvD5EA,kCAKUA,0HAGCA,iIAODA,oHAGCA,2HAUDA,kHAGCA,yHAODA,0GAGCA,4GAIAA,iHAMEA,qCAAwB,8EAgB/BA,oBAEIA,yCACJA,gCAOAA,oBAEIA,sCACJA,gCASAA,oBAEIA,qCACJA,gCAOAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,+BAIRA,kDAlDJA,mBAAgE,WAAhEA,CAAgE,QAAhEA,CAAgE,cAGTA,yBAAaA,QACxDA,oBAGAA,2BAIJA,QACAA,eAAK,cAC0CA,sBAAUA,QACrDA,qBAGAA,4BAIJA,UAEJA,mBAA4B,SAA5BA,CAA4B,eAEsBA,sBAASA,QACnDA,qBAGAA,4BAIJA,QACAA,gBAAK,eACqCA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIJA,UAGJA,mCA6HAA,mBAAoB,gBACcA,yDAASA,6BAAoB,GAAEA,kBAAKA,QAClEA,sBAA4BA,yDAASA,iCAAwB,GAAEA,mBAAMA,WAAS,qCAjLhFA,kCAKUA,0HAGCA,iIAODA,oHAGCA,2HASDA,kHAGCA,yHAODA,0GAGCA,4GAIAA,iHAMEA,qCAAwB,iFA0I3BA,qBAAoE,QAApEA,CAAoE,OAEzDA,SAAuBA,QAC1BA,aAAGA,SAAuBA,sCAHYA,oBAEnCA,6BACAA,oDAUfA,oBAEIA,yCACJA,gCASAA,oBAEIA,sCACJA,gCAOAA,oBAEIA,qCACJA,gCASAA,oBAEIA,uCACJA,gCACAA,oBAEIA,iCACJA,gCASAA,oBAEIA,0CACJA,gCAgBAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,mCASIA,wBAEIA,SAAoBA,kBACxBA,kCAFIA,yBACAA,kCAAsCA,2DAS9CA,oBAEIA,0CACJA,+BAGJA,gCA6BAA,oBAEIA,iDACJA,gCAMAA,oBAEIA,8BACJA,kDAxKRA,mBAAkE,WAAlEA,CAAkE,QAAlEA,CAAkE,cAGPA,oBAAQA,QACvDA,qBAAyD,eACpCA,2BAAeA,QAChCA,4BAMJA,UAEJA,eAAK,eAC0CA,0BAAaA,QACxDA,qBAGAA,4BAIJA,UAEJA,mBAA4B,SAA5BA,CAA4B,eAEuBA,uBAAUA,QACrDA,qBAGAA,4BAIJA,QACAA,gBAAK,eACyCA,sBAASA,QACnDA,qBAGAA,4BAIJA,UAEJA,mBAA4B,SAA5BA,CAA4B,eAEkBA,kBAAKA,QAC3CA,qBAGAA,4BAIAA,4BAIJA,QAEAA,gBAAK,eACuCA,2BAAcA,QACtDA,wBAGAA,iEACAA,4BAIJA,UAGJA,mBAA4B,SAA5BA,CAA4B,eAEoBA,2BAAcA,QACtDA,wBAGJA,QACAA,gBAAK,eACoCA,iBAAIA,QACzCA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,4BAIJA,UAGJA,mBAA4B,SAA5BA,CAA4B,eAEoBA,oBAAOA,QAC/CA,yBAA0D,mBACzBA,gCAAmBA,QAChDA,gCAIJA,UAEJA,gBAAK,eACuCA,2BAAcA,QACtDA,qBAGAA,4BAIJA,QAEAA,mCAEJA,QAGAA,mBAA4B,SAA5BA,CAA4B,eAEuBA,uBAAUA,QACrDA,qBAGJA,QACAA,gBAAK,eAC8CA,2BAAcA,QAC7DA,qBAGJA,UAGJA,mBAAuB,eACoCA,kCAC7CA,QACVA,qBAGAA,oBAAiDA,0FAElBA,QAC/BA,4BAIJA,QACAA,mBACIA,iCAGAA,4BAIJA,QACAA,mBAAoB,gBACcA,yDAASA,8BAAqB,GAAEA,kBAAKA,QACnEA,sBAA4BA,yDAASA,kCAAyB,GAAEA,mBAAMA,WAAS,qCA5KjFA,mCAMuCA,yCAW7BA,4HAGCA,mIASDA,sHAGCA,6HAODA,oHAGCA,2HASDA,4GAGCA,8GAIAA,mHAQDA,gHAICA,uHAUDA,oHAMAA,0GAGCA,iHAODA,4GAGCA,mHAW8BA,wCAS/BA,wGAGCA,+GAKMA,qCAAwB,uDAS/BA,sHAMAA,8HASJA,8IAMCA,qJAKwBA,oCAIxBA,iKA6BrCA,oBAEIA,mCACJA,gCACAA,oBAEIA,sCACJA,uHAhBJA,kBAAwB,cACkBA,iBAAKA,QAC3CA,oBAKIA,8EAAiBA,6BAA4B,GALjDA,QAOAA,2BAIAA,2BAIJA,oCAjBKA,qBAGGA,sFAGAA,wCAICA,0FAIAA,mHAeGA,oBAEIA,0CACJA,gCAmBAA,oBAEIA,gCACJA,gCAOAA,oBAEIA,iCACJA,mCAMIA,wBAEIA,SAAoBA,kBACxBA,kCAFIA,yBACAA,kCAAsCA,2DAY9CA,oBAEIA,0CACJA,+BAGJA,gCAgCAA,oBAEIA,8BACJA,mCAvGRA,YACIA,kBAA4B,QAA5BA,CAA4B,cAEoBA,0BAAcA,QACtDA,uBAGAA,2BAIJA,QACAA,eAAK,cACuCA,0BAAcA,QACtDA,wBAOJA,UAEJA,mBAA4B,SAA5BA,CAA4B,eAEiBA,iBAAIA,QACzCA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,kBAAKA,QAC7CA,qBAGAA,4BAIJA,QACAA,gBAAK,eACuCA,oBAAOA,QAC/CA,yBAA0D,mBACzBA,gCAAmBA,QAChDA,gCAIJA,YAIRA,mBAA4B,SAA5BA,CAA4B,eAEoBA,2BAAcA,QACtDA,qBAGAA,4BAIJA,QAEAA,mCAEJA,QAEAA,mBAA4B,SAA5BA,CAA4B,eAEuBA,uBAAUA,QACrDA,qBAEJA,QACAA,gBAAK,eAC8CA,2BAAcA,QAC7DA,qBAEJA,UAGJA,mBAAuB,eACoCA,iCAAoBA,QAE3EA,qBAGAA,oBACIA,4FACJA,UAGJA,mBACIA,iCAGAA,4BAIJA,QACJA,wDAzGcA,qBAKEA,8GAGCA,qHAODA,kHAYAA,wGAGCA,qFAODA,gFAGCA,uFAQ8BA,wCAY/BA,4EAGCA,mFAKMA,qCAAwB,yCA6BVA,qCAIxBA,wICptBV,IAAM+W,GAAoB,MAA3B,MAAOA,EAgBX5W,YAAoBO,EAAyBN,EACnC4S,EAAwBzS,EACxBE,EAA+BmH,GAFrBjH,UAAyBA,qBACnCA,cAAwBA,YACxBA,cAA+BA,wBAhBzCA,cAAmB,aAInBA,8BAAmC,EACnCA,6BAAkC,EAElCA,4BAAiC,EACjCA,oBAAyB,EACzBA,eAAYkH,WACZlH,aAAkBqW,uBAGlBrW,iBAAcoH,KA+EdpH,SAAW,CACT,CAAEuH,OAAU,KAAMC,KAAQ,iBAC1B,CAAED,OAAU,KAAMC,KAAQ,mBA7E1BxH,KAAKP,cAAca,SAAS,YAC5BN,KAAKmI,eAAiBnI,KAAKD,GAAGW,MAAM,CAClCgH,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBuH,aAAc,CAAC,GAAI,IACnBN,SAAU,CAAC,GAAI,CAACjH,gBAChBkH,MAAO,CAAC,GAAI,CAAClH,cAAqBA,aAClC+G,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,IACZR,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ2H,IAAK,CAAC,GAAI,CAAC3H,gBACX6H,aAAc,CAAC,GAAI,IACnBC,mBAAoB,CAAC,GAAI,IACzB2E,iBAAkB,CAAC,GAAI,CAACzM,kBAE1Bb,KAAKkJ,aAAelJ,KAAKD,GAAGW,MAAM,CAChCmI,cAAe,CAAC,GAAI,CAAChI,gBACrBiI,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7BpB,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,IACZR,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ2H,IAAK,CAAC,GAAI,CAAC3H,gBACX6G,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBiH,SAAU,CAAC,GAAI,CAACjH,gBAChBuH,aAAc,CAAC,GAAI,IACnBL,MAAO,CAAC,GAAI,CAAClH,cAAqBA,aAClCyM,iBAAkB,CAAC,GAAI,CAACzM,kBAE1Bb,KAAK4I,aAAe5I,KAAKD,GAAGW,MAAM,CAChCmI,cAAe,CAAC,GAAI,CAAChI,gBACrBiI,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7BtB,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBiH,SAAU,CAAC,IACXM,aAAc,CAAC,GAAI,IACnBa,UAAW,CAAC,IACZlB,MAAO,CAAC,GAAI,CAAClH,cAAqBA,aAClC+G,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,IACZR,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ2H,IAAK,CAAC,GAAI,CAAC3H,gBACXyM,iBAAkB,CAAC,GAAI,CAACzM,kBAE1Bb,KAAKmJ,cAAgBnJ,KAAKD,GAAGW,MAAM,CACjCmI,cAAe,CAAC,GAAI,CAAChI,gBACrBiI,WAAY,CAAC,IACbC,eAAgB,CAAC,IACjBC,uBAAwB,CAAC,GAAI,IAC7BtB,WAAY,CAAC,GAAI,CAAC7G,gBAClB8G,UAAW,CAAC,GAAI,CAAC9G,gBACjBuH,aAAc,CAAC,GAAI,IACnBN,SAAU,CAAC,IACXmB,UAAW,CAAC,IACZlB,MAAO,CAAC,GAAI,CAAClH,cAAqBA,aAClC+G,QAAS,CAAC,GAAI,CAAC/G,gBACfwH,UAAW,CAAC,IACZR,QAAS,CAAC,iBAAkB,CAAChH,gBAC7ByH,MAAO,CAAC,GAAI,CAACzH,gBACb0H,KAAM,CAAC,GAAI,CAAC1H,gBACZ2H,IAAK,CAAC,GAAI,CAAC3H,gBACXuI,WAAY,CAAC,kBAAmB,CAACvI,gBACjCyM,iBAAkB,CAAC,GAAI,CAACzM,iBAE5B,CAKAE,WACEyB,QAAQC,IAAIzC,KAAKsW,QAAQ,WAEzBtW,KAAKyJ,YAAYC,KAAK,CAACC,EAAQC,IAAYD,EAAE9B,QAAU+B,EAAE/B,QAAW,GAAI,GACxE7H,KAAK6J,IAAI3G,QAASC,IAChBnD,KAAK8J,iBAAiB3G,EAAQqE,KAAI,GAEpCxH,KAAKiH,iBAAiB+C,cAAczI,UAAWqB,IAC7C5C,KAAKiK,SAAWrH,EAAIC,KAAKE,SAExBW,MAEL,CACAoG,iBAAiBtC,GACf,MAAM4D,EAAQpL,KAAKyJ,YAAY4B,UAAWC,GAAcA,EAAKzD,UAAYL,GACzE,IAAc,IAAV4D,EAAc,CAChB,MAAMG,EAAgBvL,KAAKyJ,YAAY+B,OAAOJ,EAAO,GAAG,GACxDpL,KAAKyJ,YAAYgC,QAAQF,EAAa,CAE1C,CAEAG,2BACE,GAAI1L,KAAKmI,eAAewD,MAAO,CAC7B,IAAIC,EAAiB5L,KAAKmI,eAAelE,MAsBzCjE,KAAKiH,iBAAiBsP,mBArBX,CACT1K,mBAAsB,CACpBnD,aAAgBkD,EAAelD,aAC/BC,mBAAsBiD,EAAejD,oBAEvCf,QAAW,CACTA,QAAWgE,EAAehE,QAC1BC,QAAW+D,EAAe/D,QAC1BS,MAASsD,EAAetD,MACxBC,KAAQqD,EAAerD,KACvBC,IAAOoD,EAAepD,KAExBsD,WAAc,CACZpE,WAAckE,EAAelE,WAC7BC,UAAaiE,EAAejE,UAC5BG,SAAY8D,EAAe9D,SAC3BM,aAAgBwD,EAAexD,aAC/BL,MAAS6D,EAAe7D,OAE1BuF,iBAAoB1B,EAAe0B,mBAEU/L,UAAWqB,IACxD5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAS,GAAI,CAAE2I,QAAS,MAChDvN,KAAKqS,OAAOc,SAAS,CAAC,mCAAkC,EAEvDzP,IACC1D,KAAKF,OAAOiP,MAAMrL,EAAIqL,MAAM3C,OAAQ,GAAI,CAAEmB,QAAS,KAAM,EAC1D,MAGHvN,KAAK+L,yBAAyB/L,KAAKmI,eAEvC,CACAqO,yBACE,GAAIxW,KAAK4I,aAAa+C,MAAO,CAC3B,IAAIgB,EAAe3M,KAAK4I,aAAa3E,MA0BrCjE,KAAKJ,KAAKwO,YAAY7J,gBAzBX,CACT6H,OAAU,CACRvD,cAAiB8D,EAAa9D,cAC9BC,WAAc6D,EAAa7D,WAC3BC,eAAkB4D,EAAa5D,eAC/BC,uBAA0B2D,EAAa3D,wBAEzCpB,QAAW,CACTS,UAAasE,EAAa/E,QAC1BA,QAAW+E,EAAatE,UACxBR,QAAW8E,EAAa9E,QACxBS,MAASqE,EAAarE,MACtBC,KAAQoE,EAAapE,KACrBC,IAAOmE,EAAanE,KAEtBoE,SAAY,CACVlF,WAAciF,EAAajF,WAC3BC,UAAagF,EAAahF,UAC1BG,SAAY6E,EAAa7E,SACzBM,aAAgBuE,EAAavE,aAC7Ba,UAAa0D,EAAa1D,UAC1BlB,MAAS4E,EAAa5E,OAExBuF,iBAAoBX,EAAaW,mBAEgB5I,KAAM9B,IACpDA,IACD5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqS,OAAO8D,cAAc,mCAAiC,EAE9D,MAGDnW,KAAK+L,yBAAyB/L,KAAK4I,aAEvC,CACA6N,0BACE,GAAIzW,KAAKmJ,cAAcwC,MAAO,CAC5B,IAAI+K,EAAgB1W,KAAKmJ,cAAclF,MA4BvCjE,KAAKJ,KAAKwO,YAAY7J,iBA3BX,CACToS,OAAUD,EAActN,WACxBgD,OAAU,CACRvD,cAAiB6N,EAAc7N,cAC/BC,WAAc4N,EAAc5N,WAC5BC,eAAkB2N,EAAc3N,eAChCC,uBAA0B0N,EAAc1N,wBAE1CpB,QAAW,CACTS,UAAaqO,EAAc9O,QAC3BA,QAAW8O,EAAcrO,UACzBR,QAAW6O,EAAc7O,QACzBS,MAASoO,EAAcpO,MACvBC,KAAQmO,EAAcnO,KACtBC,IAAOkO,EAAclO,KAEvB6D,OAAU,CACR3E,WAAcgP,EAAchP,WAC5BC,UAAa+O,EAAc/O,UAC3BS,aAAgBsO,EAActO,aAC9BN,SAAY4O,EAAc5O,SAC1BmB,UAAayN,EAAczN,UAC3BlB,MAAS2O,EAAc3O,OAEzBuF,iBAAoBoJ,EAAcpJ,mBAGgB5I,KAAM9B,IACrDA,IACD5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqS,OAAO8D,cAAc,mCAAiC,EAE9D,MAGDnW,KAAK+L,yBAAyB/L,KAAKmJ,cAEvC,CACA4C,yBAAyBc,GACvBxJ,OAAOyJ,OAAOD,EAAUtG,UAAUrD,QAAQ6J,IACxCA,EAAQC,gBACJD,aAAmBE,MACrBjN,KAAK+L,yBAAyBgB,EAAO,EAG3C,CACAG,qBACE,GAAIlN,KAAKkJ,aAAayC,MAAO,CAE3B,GADA3L,KAAK4W,uBAAwB,EACzB5W,KAAKkJ,aAAa+C,QAAW,OACjC,IAAIkB,EAAenN,KAAKkJ,aAAajF,MAwBrCjE,KAAKiH,iBAAiB4P,iBAvBX,CACTzJ,iBAAoB,CAClBvE,cAAiBsE,EAAatE,cAC9BC,WAAcqE,EAAarE,WAC3BC,eAAkBoE,EAAapE,eAC/BC,uBAA0BmE,EAAanE,wBAEzCpB,QAAW,CACTA,QAAWuF,EAAavF,QACxBC,QAAWsF,EAAatF,QACxBS,MAAS6E,EAAa7E,MACtBC,KAAQ4E,EAAa5E,KACrBC,IAAO2E,EAAa3E,KAEtB6E,SAAY,CACV3F,WAAcyF,EAAazF,WAC3BC,UAAawF,EAAaxF,UAC1BG,SAAYqF,EAAarF,SACzBM,aAAgB+E,EAAa/E,aAC7BL,MAASoF,EAAapF,OAExBuF,iBAAoBH,EAAaG,mBAEU/L,UAAWqB,IACtD5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,QAAS,GAAI,CAAE2I,QAAS,MAChDvN,KAAKqS,OAAOc,SAAS,CAAC,mCAAkC,EAEvDzP,IACC1D,KAAKF,OAAOiP,MAAMrL,EAAIqL,MAAM3C,OAAQ,GAAI,CAAEmB,QAAS,KAAM,EAC1D,MAGHvN,KAAK+L,yBAAyB/L,KAAKkJ,aACvC,CACAmF,cAAcxE,GACZ7J,KAAKsO,cAAgBzE,EAEnB7J,KAAKkJ,aAAa3C,SAASuB,SAAY0E,UADrC3C,EAC+C,KAEA,CAAE4C,WAAa,GAEpE,CAEAgC,wBAAwB5E,GACtB7J,KAAK0O,wBAA0B7E,EAE7B7J,KAAKmI,eAAe5B,SAASuB,SAAY0E,UADvC3C,EACiD,KAEA,CAAE4C,WAAa,GAEtE,CACA8B,gBAAgB1K,EAAWsG,GACzBA,EAAKgB,WAAW,CAAE/C,aAAgBvE,EAAM2K,UAC1C,CAEAsI,eAAelW,GACbZ,KAAK+W,SAAWnW,EACL,aAARA,GACDZ,KAAKJ,KAAKkF,WAAW,GAAGP,uBAA8BG,KAAM9B,IAC1D5C,KAAKgX,aAAepU,EAAIC,OAG5B7C,KAAKmI,eAAe8O,kBACpBjX,KAAKkJ,aAAa+N,kBAClBjX,KAAK4I,aAAaqO,kBAClBjX,KAAKmJ,cAAc8N,iBACrB,CAAC9X,kDA1TUiX,GAAoB3P,4GAApB2P,EAAoBhX,2oGDhBjCC,qBAA2B,UAA3BA,CAA2B,UAA3BA,CAA2B,UAGiDA,wBAAYA,QAC5EA,oBACIA,eACJA,UAEJA,iBAAc,UAAdA,CAAc,UAAdA,CAAc,WAAdA,CAAc,YAAdA,CAAc,YAAdA,CAAc,YAAdA,CAAc,YAAdA,CAAc,WAAdA,CAAc,eAU0BA,gCAASqH,iBAAe,aAAa,GADzCrH,QACgEA,yBACpEA,QACAA,kBAAO,eAECA,gCAASqH,iBAAe,WAAW,GADvCrH,QACsDA,uBAC1DA,QACAA,kBAAO,eAECA,gCAASqH,iBAAe,WAAW,GADvCrH,QACsDA,wBAC1DA,QACAA,kBAAO,eAECA,gCAASqH,iBAAe,YAAY,GADxCrH,QACuDA,yBAC3DA,YAKRA,6BAyJAA,6BA4DAA,6BAsLAA,6BA+KJA,sBAU5BA,6CAsBAA,sDA1lBoEA,iDAyJFA,8CA4DAA,8CAsLCA,y4GC/ZtD+W,CAAoB,4BCuDb/W,cAEIA,mBAAMA,kDA4CVA,cACyI,eAEjIA,6GAA0BA,mCAA4B,GAAEA,kBAAMA,SAAS,2CA7CnFA,cACmI,OADnIA,CACmI,YAEpGA,kBAEnBA,kBAAqB,UAAOA,SAAsCA,QAC9DA,gBAA8BA,SAAcA,cAIxDA,cAAI,SAAJA,CAAI,cAE0BA,UAA4CA,YAG1EA,kBAAa,YAAbA,CAAa,eAEDA,qGAD+BA,QAEnCA,iBAAsBA,UAAyCA,QAC/DA,iBAEJA,UAEJA,kBAAa,YAAbA,CAAa,eAEDA,yGAD+BA,QAEnCA,iBAAsBA,UAAyCA,QAC/DA,iBAEJA,UAEJA,kBAAa,YAAbA,CAAa,eAEDA,oGAD+BA,QAEnCA,iBAAsBA,UAAoCA,QAC1DA,iBAEJA,UAKJA,yBAKJA,wDA3CgBA,4EACwBA,qDACMA,gCAMZA,yFAKlBA,0CACkBA,wFAElBA,yDAKAA,8CACkBA,wFAElBA,6DAKAA,yCACkBA,mFAElBA,wDAOPA,0LAQjBA,kCACIA,+DAAcA,4BAAwB,GAAEA,gCAoBxBA,qBAAqDA,8BAAiBA,mCACtEA,qBACIA,SAAuBA,kCADnBA,yCACJA,8HCvIzB,IAAM6X,GAAqB,MAA5B,MAAOA,EAiBX1X,YAAoBC,EAA8BG,EAA2BC,EACnEC,EAA+BC,GADrBC,qBAA8BA,YAA2BA,oBACnEA,cAA+BA,UAhBzCA,UAAO,EACPA,cAAW,GACXA,WAAQ,GACRA,eAAiB,GAGjBA,gBAAoB,GACpBA,oBAAwB,GACxBA,eAAmB,GACnBA,kBAAoB,SAEpBA,iBAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IAMnEJ,KAAKP,cAAca,SAAS,uBAC5BN,KAAKO,YAAcP,KAAKH,aAAaW,iBACrCR,KAAKS,mBAAqBT,KAAKD,GAAGW,MAAM,CACtCC,UAAW,CAAC,uBACZC,KAAM,CAAC,cAAeC,eACtBC,YAAa,CAAC,GAAID,gBAEtB,CAEAE,WACEZ,aAAagX,WAAW,sBACxBnX,KAAKoX,mBACP,CAEApB,OACEhW,KAAK0F,KAAO,GAUZ1F,KAAK0F,KAAO,CACVjB,KAAMzE,KAAKqX,SAASrX,KAAKsX,eAAe7S,KACxCU,gBAAiBnF,KAAKuX,WAAWvX,KAAKsX,eACtC1R,oBAAqB5F,KAAKwX,eAAexX,KAAKsX,eAC9CxR,eAAgB9F,KAAKyX,UAAUzX,KAAKsX,eACpCtR,mBAAoBhG,KAAKS,mBAAmBwD,MAAMrD,KAClDqF,0BAA2BjG,KAAKS,mBAAmBwD,MAAMnD,aAEZ,uBAA3Cd,KAAKS,mBAAmBwD,MAAMtD,YAChCX,KAAK0F,KAAKQ,aAAkBlG,KAAKS,mBAAmBwD,MAAMtD,WAE5DX,KAAKJ,KAAKuG,WAAW,GAAG5B,wBAAgCvE,KAAK0F,MAAMhB,KAAM9B,IACvE5C,KAAKF,OAAO6E,QAAQ/B,EAAIgC,SACxB5E,KAAKqG,YACLf,SAASgB,eAAe,iBAAiBd,QACzCxF,KAAKoX,mBAAiB,EAG1B,CACA/Q,YACErG,KAAKS,mBAAmByD,QACxBlE,KAAKS,mBAAmB8F,SAAS5F,UAAa6F,SAAS,uBACvDxG,KAAKS,mBAAmB8F,SAAS3F,KAAQ4F,SAAS,cACpD,CACA3B,mBAAmBJ,GACjBzE,KAAKJ,KAAKkF,WAAW,mCAAmCL,KAAQC,KAAM9B,IACpE5C,KAAK+E,gBAAkBnC,EAAIC,MAE/B,CACA6U,OAAOC,GACL,MAAMjS,EAAY,CAChBjB,KAAMzE,KAAKqX,SAASM,GAAGlT,MAErBzE,KAAKuX,WAAWI,KAClBjS,EAAKP,gBAAqBnF,KAAKuX,WAAWI,IACxC3X,KAAKwX,eAAeG,KACtBjS,EAAKE,oBAAyB5F,KAAKwX,eAAeG,IAChD3X,KAAKyX,UAAUE,KACjBjS,EAAKI,eAAoB9F,KAAKyX,UAAUE,GAW5C,CAGAP,kBAAkBhV,EAAaxB,GAC7B,GAAIZ,KAAKqC,MACPrC,KAAKJ,KAAKkF,WAAW,GAAGP,gCAAuCvE,KAAKqC,SAASqC,KAAM9B,IACjF5C,KAAKqX,SAAWzU,EAAIC,KAAKE,QACzB,QAAS4U,EAAI,EAAGA,EAAI3X,KAAKqX,SAASpU,OAAQ0U,IACxC3X,KAAKuX,WAAWI,GAAK,EACrB3X,KAAKwX,eAAeG,GAAK,EACzB3X,KAAKyX,UAAUE,GAAK,EAKtB3X,KAAKwD,cAAgBZ,EAAIC,KAAKY,YAG7B,CACH,IAAIxB,EAEFA,EADEG,GAASxB,EACF,UAAUwB,cAAkBxB,IAE5B,SAASZ,KAAKkB,kBAAkBlB,KAAK+B,WAChD/B,KAAKJ,KAAKkF,WAAW,GAAGP,wBAA+BtC,KAAUyC,KAAM9B,IACrE5C,KAAKqX,SAAWzU,EAAIC,KAAKE,QACzB,QAAS4U,EAAI,EAAGA,EAAI3X,KAAKqX,SAASpU,OAAQ0U,IACxC3X,KAAKuX,WAAWI,GAAK,EACrB3X,KAAKwX,eAAeG,GAAK,EACzB3X,KAAKyX,UAAUE,GAAK,EAEtB3X,KAAKwD,cAAgBZ,EAAIC,KAAKY,OAC/B,CAEL,CAEAG,iBAAiBC,GACf7D,KAAKkB,KAAO2C,EACZ7D,KAAKoX,mBACP,CAEAtT,SAAStC,GACPxB,KAAKqC,MAAQb,EACbxB,KAAKkB,KAAO,EACZlB,KAAKoX,mBACP,CAACjY,kDA1IU+X,GAAqBzQ,gGAArByQ,EAAqB9X,kjEDdlCC,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAAgCA,oBAAQA,UACpEA,gBAA4B,SACgDA,mBAAMA,YAGtFA,kBAAuB,WAAvBA,CAAuB,WAESA,sBAAQA,QAChCA,2BAAsDA,oCAAYqH,aAAgB,GAAGrH,UAEzFA,mBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,QAA5BA,CAA4B,YAA5BA,CAA4B,WAKQA,qBAAQA,QACxBA,mBAA2D,WACnBA,gCAASqH,oBAAkB,aAAa,MAAM,GAC3DrH,QACvBA,iBAAsCA,gCAASqH,oBAAkB,aAAa,MAAM,GAC7DrH,cAInCA,eAAI,YAAJA,CAAI,WAEoBA,0BAAaA,QAC7BA,mBAA2D,WACnBA,gCAASqH,oBAAkB,aAAa,MAAM,GAC3DrH,QACvBA,iBAAsCA,gCAASqH,oBAAkB,aAAa,MAAM,GAC7DrH,cAInCA,eAAI,YAAJA,CAAI,WAEoBA,4BAAeA,QAC/BA,mBAA2D,WACnBA,gCAASqH,oBAAkB,mCAAmC,MAAM,GACjFrH,QACvBA,iBAAsCA,gCAASqH,oBAAkB,mCAAmC,MAAM,GACnFrH,cAInCA,eAAI,YAAJA,CAAI,WAEoBA,gCAAmBA,QACnCA,mBAA2D,WACnBA,gCAASqH,oBAAkB,mCAAmC,MAAM,GACjFrH,QACvBA,iBAAsCA,gCAASqH,oBAAkB,mCAAmC,MAAM,GACnFrH,cAInCA,eAAI,YAAJA,CAAI,WAEoBA,uBAAUA,QAC1BA,mBAA2D,WACnBA,gCAASqH,oBAAkB,8BAA8B,MAAM,GAC5ErH,QACvBA,iBAAsCA,gCAASqH,oBAAkB,8BAA8B,MAAM,GAC9ErH,cAInCA,yBAGJA,QACAA,gDAiDJA,UAEJA,0CAEJA,UAIJA,mBAAuD,YAAvDA,CAAuD,YAAvDA,CAAuD,cAGJA,mCAAYqH,QAAM,GACrDrH,mBAAkG,YACtEA,0BAAaA,QACrCA,sBAAwCA,gCAASqH,aAAW,GAChCrH,UAEhCA,eACAA,mBAAwB,SAAxBA,CAAwB,eAE4CA,yBAAYA,QACxEA,sBAAwD,gBACPA,gCAAmBA,QAChEA,6BACAA,6BAEJA,UAEJA,mBAAkB,eAC8CA,iBAAIA,QAChEA,sBAAmD,gBACVA,wBAAWA,QAChDA,sBAAuBA,mBAAMA,QAC7BA,sBAAsBA,kBAAKA,YAGnCA,mBAAkB,eAC8CA,wBAAWA,QACvEA,wBACJA,UAEJA,mBAA0B,gBACuBA,gCAASqH,aAAW,GACrCrH,mBAAMA,QAClCA,sBAC4BA,mBAAMA,yBAjG7BA,iJAIWA,gGAkDNA,oEASZA,iDAY4BA,mFACwCA,4CAoB5CA,8yFC1J7B6X,CAAqB,kGCmBN7X,gBAA+HA,kBAC1DA,wCADTA,0HAfxEA,cACuI,OADvIA,CACuI,YAExGA,kBAEnBA,kBAAqB,UAAOA,SACxBA,QACAA,aAAGA,SAAwBA,cAIvCA,cAAI,YAAJA,CAAI,WAE+EA,iBAChCA,QAC3CA,wBAEJA,gDAbQA,yEACwBA,6DAErBA,4BAMYA,gDAEfA,gGAKhBA,iBACIA,+BACJA,kDAGRA,kCACIA,+DAAcA,4BAAwB,GAAEA,qFC/B7C,IAAMuY,GAAqB,MAA5B,MAAOA,EAYXpY,YAAoBC,EAA8BG,EAA2BoH,EACjEnH,GADQG,qBAA8BA,YAA2BA,aACjEA,oBAXZA,eAAiB,GAEjBA,UAAO,EACPA,cAAW,GACXA,WAAQ,GACRA,eAAiB,GAGjBA,gBAAqB,EAInBA,KAAKP,cAAca,SAAS,uBAC5BN,KAAKO,YAAcP,KAAKH,aAAaW,gBACvC,CAEAO,WACEf,KAAKqJ,cAAgBrJ,KAAKgH,MAAMsC,SAASC,SAASC,IAAI,MACtDxJ,KAAK6X,eACP,CACAA,gBACE7X,KAAKJ,KAAKkF,WAAW,GAAGP,oBAA2BvE,KAAKqJ,iBAAiB3E,KAAM9B,IACzEA,IACF5C,KAAK8C,UAAYF,EAAIC,KAAKE,QAC1B/C,KAAKgD,UAAqC,GAAzBhD,KAAK8C,UAAUG,OAChCjD,KAAKwD,cAAgBZ,EAAIC,KAAKY,QAGpC,CACAG,iBAAiBC,GACf7D,KAAKkB,KAAO2C,CACd,CAEA+N,QAAQpQ,GACNxB,KAAKqC,MAAQb,EACbxB,KAAKkB,KAAO,CACd,CAEA6C,WAAWF,GACT7D,KAAKgC,UAAY6B,EAAMG,OAAOC,MAC9BjE,KAAKkB,KAAO,CACd,CAAC/B,kDA3CUyY,GAAqBnR,oFAArBmR,EAAqBxY,oxBDblCC,qBAA2B,SAA3BA,CAA2B,SAA3BA,CAA2B,SAEgCA,gBAAIA,UACvDA,gBAA4B,SAA0DA,oBAAQA,YAElGA,iBAAuB,UAAvBA,CAAuB,SAEVA,wBAAUA,QACfA,kBAEJA,QACAA,eACAA,kBAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,SAGZA,kBAAKA,QACTA,eAAIA,mBAAMA,UAEdA,8CAoBAA,yBAGJA,UAEJA,0CAEJA,iBA1BqCA,iGAmBLA,mCAKNA,69QC9BjBuY,CAAqB,4DC0BFvY,gBAAmDA,8EAASA,4BAAwB,GAGhFA,gBAAoDA,kDAdpEA,cAC2I,QACnIA,SAAiCA,mBAC7BA,sEAASA,yCAAyB,GAAEA,UAC5CA,cAAIA,SAA+CA,QACnDA,cAAIA,SAAkDA,QACtDA,iBAA4B,QAA5BA,CAA4B,WAEDA,sEAASA,6BAAyB,GAEjDA,iBAAsCA,QAC1CA,wBAIJA,WAAM,wCAbNA,+CAEAA,qEACAA,mFAMQA,oFASxBA,kCACqBA,gEAAcA,4BAAwB,GAAEA,8GA9BjEA,eAA6B,WAA7BA,CAA6B,UAA7BA,CAA6B,UAA7BA,CAA6B,QAITA,0BAAcA,QAClBA,cAAIA,gBAAIA,QACRA,cAAIA,uBAAWA,QACfA,eAAIA,mBAAMA,UAEdA,+CAkBJA,UAEJA,0CAEJA,8BArBmCA,sGAmBTA,4GAadA,cAC8I,QACtIA,SAA0BA,QAC9BA,cAAIA,SAA8CA,QAClDA,cAAIA,SAAgBA,QACpBA,cAAIA,SAA0GA,+CAH1GA,+CACAA,qEACAA,yBACAA,gJAIhBA,kCAKIA,gEAAcA,iCAA6B,GAC/CA,mCAxBJA,eAA6B,WAA7BA,CAA6B,UAA7BA,CAA6B,UAA7BA,CAA6B,QAITA,sBAAUA,QACdA,cAAIA,gBAAIA,QACRA,cAAIA,kBAAMA,QACVA,eAAIA,wBAAWA,UAEnBA,8CAOJA,UAEJA,0CAOJA,8BAfkCA,0GASzBA,qHA6BeA,gBAA+CA,8EAASA,0BAAuB,GACjBA,gBACLA,kDAfrEA,cAMmB,QACXA,SAA2BA,QAC/BA,cAAIA,SAAgDA,QACpDA,cAAI,WAAJA,CAAI,UAEuBA,sEAASA,mDAAoC,GAAEA,gBACdA,QACpDA,uBAGJA,WAAM,wCATNA,8CACAA,qEAKwBA,yEAMhCA,iBACIA,+BACJA,kDAKRA,kCAKAA,gEAAcA,mCAA+B,GACjDA,mCAxCAA,eAA6B,WAA7BA,CAA6B,UAA7BA,CAA6B,UAA7BA,CAA6B,QAITA,uBAAWA,QACfA,cAAIA,gBAAIA,QACRA,cAAIA,kBAAMA,UAEdA,+CAmBAA,yBAKJA,UAEJA,0CAOJA,8BAjCoCA,4GAmBJA,mCAQ3BA,8FA0BeA,cAAsD,WACZA,kBACSA,SAAsBA,QACrEA,cAAIA,SAAiBA,QACrBA,cAAIA,SAAqBA,oCAFjBA,gDAAuCA,uCAC3CA,2BACAA,8DAoDRA,cAAqC,WACVA,kBAAMA,QAC7BA,iBAAuBA,SAA4BA,gCAA5BA,8FAE3BA,cAAoC,WACTA,kBAAMA,QAC7BA,iBAAuBA,SAA2BA,gCAA3BA,6FAE3BA,cAAyC,WACdA,kBAAMA,QAC7BA,iBAAuBA,SAAgCA,gCAAhCA,wEC/LvD,MAAMyY,GAAiB,CACrB,CAAEC,KAAM,GAAIC,UAAWpR,GAA6BqR,SAAS,CAC3D,CAACF,KAAK,kBAAkBC,UAAUzY,IAClC,CAACwY,KAAK,sBAAsBC,UAAUnR,GACtC,CAACkR,KAAK,eAAeC,UAAUpH,GAC/B,CAACmH,KAAK,SAASC,UAAU9Y,GACzB,CAAC6Y,KAAK,aAAaC,UAAUnR,GAC7B,CAACkR,KAAK,WAAWC,UAAUhG,IAC3B,CAAC+F,KAAK,mBAAoBC,UAAU5F,IACpC,CAAC2F,KAAK,mBAAmBC,UAAU1E,IACnC,CAACyE,KAAK,cAAcC,UAAU5B,IAC9B,CAAC2B,KAAK,gBAAgBC,UAAUd,IAChC,CAACa,KAAK,oBAAoBC,UAAUJ,IACpC,CAACG,KAAK,yBAAyBC,UCfE,MAA/B,MAAOE,EAuBX1Y,YAAoBM,EAA+BkH,EAA+BpH,EACzEmH,GADW/G,cAA+BA,aAA+BA,YACzEA,oBAvBTA,SAAc,WAGdA,cAAmB,GACnBA,UAAe,EACfA,mBAAwB,GAExBA,mBAAwB,GACxBA,eAAoB,EACpBA,gBAAqB,EAErBA,iBAAc,EACdA,qBAAkB,GAClBA,kBAAe,EAMfA,gBAAqB,CAI0B,CAC/Ce,WACEf,KAAKqJ,cAAgBrJ,KAAKgH,MAAMsC,SAASC,SAASC,IAAI,QACtDxJ,KAAKmY,oBACP,CACAA,qBACEnY,KAAKJ,KAAKkF,WAAW,GAAGP,8BAAqCvE,KAAKqJ,sBAAsBrJ,KAAKkB,kBAAkBlB,KAAK+B,YAAY2C,KAAM9B,IAChIA,IAEF5C,KAAKoY,gBAAkBxV,EAAIC,KAAKE,QAChC/C,KAAKwD,cAAgBZ,EAAIC,KAAKY,MAC9BzD,KAAKoY,gBAAgBlV,QAASC,IAC5BA,EAAQkV,UAAeC,SAASnV,EAAQkV,WACxClV,EAAQoV,YAAiBD,SAASnV,EAAQoV,YAAW,GACtD,EAGP,CAEAC,kBACExY,KAAKJ,KAAKkF,WAAW,GAAG2T,2BAAqCzY,KAAKqJ,sBAAsBrJ,KAAK0Y,uBAAuB1Y,KAAK2Y,iBAAiBjU,KAAM9B,IAC1IA,IACF5C,KAAK4Y,aAAehW,EAAIC,KAAKE,QAC7B/C,KAAK6Y,WAAajW,EAAIC,KAAKY,QAGjC,CACAqV,oBACE9Y,KAAKJ,KAAKkF,WAAW,GAAGP,wBAA+BvE,KAAKqJ,sBAAsBrJ,KAAK+Y,yBAAyB/Y,KAAKgZ,mBAAmBtU,KAAM9B,IACxIA,IACF5C,KAAKiZ,SAAWrW,EAAIC,KAAKE,QACzB/C,KAAKkZ,aAAetW,GAAKC,MAAMY,OAAS,EACxCzD,KAAKgD,UAAoC,GAAxBhD,KAAKiZ,SAAShW,OAAU,EAG/C,CACAkW,OAAOC,GACLpZ,KAAKF,OAAO6E,QAAQ,yBACpB0U,UAAUC,UAAUC,UAAUH,EAChC,CAEAxV,iBAAiBC,GACf7D,KAAKkB,KAAO2C,EACZ7D,KAAKmY,oBACP,CACAqB,sBAAsB3V,GACpB7D,KAAK0Y,UAAY7U,EACjB7D,KAAKwY,iBACP,CAEAiB,wBAAwB5V,GACtB7D,KAAK+Y,YAAclV,EACnB7D,KAAK8Y,mBACP,CAEAY,kBAAkBC,GAChB3Z,KAAK4Z,WAAa,EAClB5Z,KAAK6Z,UAAY,EACjB7Z,KAAK8Z,eAAiBH,EAAOI,MAC7B/Z,KAAKga,UAAYL,EAAOtB,UACxBrY,KAAK8Z,eAAe5W,QAASC,IAC3BnD,KAAK4Z,WAAa5Z,KAAK4Z,WAAazW,EAAQ8W,UAC5Cja,KAAK6Z,UAAY7Z,KAAK6Z,UAAY1W,EAAQ+W,WAE5Cla,KAAK6Z,UAAY7Z,KAAK8Z,eAAe7W,OACrCjD,KAAK4Z,WAAatB,SAAStY,KAAK4Z,YAActB,SAAStY,KAAKga,UAS9D,CACAG,gBAAgBf,GACdpZ,KAAKJ,KAAKkF,WAAW,GAAG2T,sBAAgCW,KAAM1U,KAAM9B,IAC9DA,IACCA,EAAIwX,YACL1Y,OAAO2Y,KAAKzX,EAAI0X,IAAK,UACrBta,KAAKF,OAAO6E,QAAQ/B,EAAIgC,UAGxB5E,KAAKF,OAAOiP,MAAMnM,EAAIgC,SAAO,EAIrC,CAKA2V,eAAeC,GACbxa,KAAKya,YAAcD,EAAQE,WAC3B1a,KAAKya,YAAYpC,UAAeC,SAAStY,KAAKya,YAAYpC,WAC1DrY,KAAKya,YAAYlC,YAAiBD,SAAStY,KAAKya,YAAYlC,YAC9D,CACAoC,iBAAiBhB,GACf3Z,KAAK4a,cAAgBjB,EAAOa,QAAQ,EACtC,CAACrb,kDA3HU+Y,GAAwBzR,oFAAxByR,EAAwB9Y,yvDFZjCC,iBAA2B,UAA3BA,CAA2B,OAA3BA,CAA2B,UAGfA,sCAAa,UAAU,GACvBA,aAAGA,mCAAuBA,UAE9BA,gBAAIA,yBAASqH,2BAAiBA,MAAK,UAAU,GACzCrH,aAAGA,gCAAoBA,UAE3BA,gBAAIA,yBAASqH,6BAAmBA,MAAK,UAAU,GAC3CrH,cAAGA,4BAAeA,YAI1BA,qBACIA,gBACJA,UAEAA,0BAiCAA,0BA2BAA,2BA0CJA,QAGJA,kBAAwC,WAAxCA,CAAwC,WAAxCA,CAAwC,WAAxCA,CAAwC,YAAxCA,CAAwC,YAKIA,qBAAQA,QAChCA,sBACJA,QACAA,mBAAwB,YAAxBA,CAAwB,WAAxBA,CAAwB,WAAxBA,CAAwB,SAIJA,yBAAYA,QAChBA,eAAIA,qBAAQA,QACZA,eAAIA,kBAAKA,UAEbA,yBAMAA,eAAI,YAC8BA,gBAAGA,QACjCA,kBACAA,kBAA8BA,UAAoBA,UAEtDA,eAAI,YAC8BA,kBAAKA,QACnCA,kBAA8BA,UAAaA,QAC3CA,kBAA8BA,UAAqBA,wBAUnFA,mBAAyC,WAAzCA,CAAyC,WAAzCA,CAAyC,WAAzCA,CAAyC,YAAzCA,CAAyC,YAKGA,+BAAkBA,QAC1CA,sBACJA,QACAA,mBAAwB,YAAxBA,CAAwB,WAAxBA,CAAwB,QAAxBA,CAAwB,YAIeA,sBAASA,QAChCA,kBAAuBA,UAA6CA,oBACpCA,gCAASqH,0DAA8B,GAAErH,YAE7EA,eAAI,YACuBA,iBAAIA,QAC3BA,kBAAuBA,UAAoDA,UAE/EA,eAAI,YACuBA,kBAAKA,QAC5BA,kBAAuBA,UAAmCA,UAE9DA,eAAI,YACuBA,gBAAGA,QAC1BA,kBAAuBA,UAAiCA,UAE5DA,eAAI,YACuBA,wBAAWA,QAClCA,kBAAuBA,UAA4DA,UAEvFA,wBAIAA,wBAIAA,wBAIJA,oBASxBA,mBAAyC,WAAzCA,CAAyC,WAAzCA,CAAyC,WAAzCA,CAAyC,YAAzCA,CAAyC,YAKGA,2BAAcA,QACtCA,sBACJA,QACAA,mBAAwB,YAAxBA,CAAwB,YAAxBA,CAAwB,SAGTA,yBAAWA,QACdA,kBAAMA,WAAiCA,UAE3CA,oBAAmB,SACZA,mBAAKA,QACRA,kBAAMA,WAAsDA,6BArO/CA,iEAGkBA,iEAGEA,iEAS/CA,yCAiCAA,yCA2BAA,yCA6DmCA,4CASaA,uCAIAA,4BACAA,wCAuBPA,yFAKAA,6FAIAA,8EAIAA,4EAIAA,mIAEtBA,0EAIAA,yEAIAA,8EAyBCA,2EAIAA,mwGE5NrB6Y,CAAwB,SDsB9B,IAAM2C,GAA+B,MAAtC,MAAOA,EAA+B1b,kDAA/B0b,EAA+B,sCAA/BA,IAA+B1b,wCAHhC2b,cAAsBhD,IACtBgD,eAECD,CAA+B,oBEerC,IAAME,GAAwB,MAA/B,MAAOA,EAAwB5b,kDAAxB4b,EAAwB,sCAAxBA,IAAwB5b,wCAXjC6b,KACAH,GACAI,KACAC,KACAC,KACAC,KACAC,IACAC,KACAC,eAGSR,CAAwB","names":["CreateCustomerComponent","static","selectors","i0","ctx_r27","CustomerListComponent","constructor","_titleservice","_customerservice","pageService","crud","_permissions","toastr","fb","this","JSON","parse","localStorage","getItem","Subject","setTitle","permissions","getPermissions","frTicketstatusForm","group","frRequest","type","Validators","description","ngOnInit","checkPage","getPageDetail","page","retrieveCustomer","searchKeyword","pipe","debounceTime","subscribe","x","savePageDetail","window","location","href","getRequestParams","searchTitle","pageSize","user_type","params","search","page_size","field","title","sortField","sortOrder","console","log","order_in","getCustomers","res","data","customers","results","showError","length","forEach","element","showReseller","Object","keys","reseller_data","totalCustomer","count","err","getCustomerOnFilter","handlePageChange","event","onSearch","roleChange","target","value","reset","roleSelect","nativeElement","delete","deleteRequest","requestUrl","selectedCustomer","uuid","then","success","message","getFileRequestList","getRequest","fileRequestList","getResellerCredits","cust","editCust","file_key_credit","function_credit","openUpdateResellerModal","document","querySelector","click","updateResellerCredits","body","new_file_key_credit","function_key_credit","new_function_credit","evc_key_credit","evc_credit","credit_update_type","credit_update_description","file_request","putRequest","resetKeys","formReset","getElementById","controls","setValue","core","ctx","$event","CustomerManagementComponent","UpdateCustomerComponent","_crudservice","notification","route","_registerservice","require","FormData","countryDetails","separateDialCode","initialCountry","alpha2","name","profileForm","first_name","last_name","address","country","phone_no","email","changeEmailForm","verifyOtpForm","otp","individualForm","country_code","address_2","state","city","zip","is_active","product_name","tool_serial_number","resellerForm","bussness_name","tax_number","company_number","win_ols_license_number","mobile_no","businessForm","subDealerForm","resellerId","customer_uuid","snapshot","paramMap","get","countryData","sort","a","b","obj","moveCountryOnTop","getCustomerDetail","getProducts","products","setPhoneNumber","form","numberWithCode","usersdetail","removePhoneCode","numberWithoutCode","includes","replace","getCustomerByUuid","image","userRole","onStop","on_stop","individual_user","address_user","business_user","reseller_sub_dealer","patchValue","index","findIndex","item","removedObject","splice","unshift","individualFormFormSubmit","valid","individualData","individual_profile","individual","markAllControlsAsTouched","subDealerFormSubmit","invalid","markAllAsTouched","subDellerData","detail","dealer","addmobileResellerError","addmobileResellererror","setErrors","incorrect","resellerFormSubmit","resellerData","reseller","formGroup","values","control","markAsTouched","FormGroup","businessFormSubmit","businessData","business_profile","business","captcha_response","timeOut","onFileChange","files","file","reader","FileReader","onload","e","result","readAsDataURL","formData","append","updateProfileImg","postRequest","addphoneError","addphoneerror","getPrimaryPhone","dialCode","addphoneIndividualError","addphoneindividualerror","addMobileResellerError","addmobileerror","updateEmail","post","error","getbusinessPhone","updateOnStop","TimelineComponent","EventEmitter","inject","LogParseService","filterLogsByDate","rawLogs","filteredLogs","reduce","acc","date","Date","timestamp","setHours","setMilliseconds","el","getTime","parsedItem","logParseService","parseDetails","logs","push","isCollapsed","at","loadlogs","loadMore","emit","CustomerTimelineComponent","_logreportservice","cd","retrieveLogReport","order","param","fromDate","from_date","to_date","toDate","getLogReportsByID","timeline","logsList","isFinalPage","next","loadLogs","onKeyUp","toLowerCase","searchByRange","isReset","ViewCustomerComponent","customerViewForm","userDetail","customerdetail","UploadCsvComponent","router","_Activatedroute","isFile","wb","read","sheets","SheetNames","rows","utils","Sheets","jsonData","filename","readAsArrayBuffer","goToImportFile","navigate","stringify","queryParams","ImportCsvComponent","isValidCode","code","val","list","isCountryCodeValid","csvUserType","_value","tableHeader","headTag","first_name_error","first_name_msg","last_name_error","last_name_msg","email_error","emailValidate","email_msg","fixCodeInPhone","phone_no_error","phone_no_msg","State","City","Country","Zip","product_name_error","product_name_msg","isUploadDisable","customerArr","business_name","business_name_error","business_name_msg","reseller_email","reseller_email_error","resellerEmailValidate","reseller_email_msg","uniqueValidation","arrayObj","colName","matchvalue","phone","num","phoneValidate","test","uploadCsvFile","csvPostRequest","navigateByUrl","AddCustomerComponent","environment","siteKey","individualRegister","resellerFormFormSubmit","subDealerFormFormSubmit","subDealerData","parent","businessFormSubmitted","businessRegister","formTypeChange","formType","resellerList","markAsUntouched","UpdateCreditComponent","removeItem","getCustomerCredit","customer","selectedIndex","fileCredit","functionCredit","evcCredit","testss","i","ResellerListComponent","subDealerList","routes","path","component","children","ViewTransactionComponent","getPurchaseHistory","purchasehistory","tax_price","parseInt","total_price","getSpentHistory","cusRequestUrl","spentPage","spentPageSize","spendhistory","totalSpent","getInvoiceHistory","invoicePage","invoicePageSize","thistory","totalInvoice","copyId","id","navigator","clipboard","writeText","handleSpentPageChange","handleInvoicePageChange","getCheckOutDetail","credit","totalValue","TotalItem","checkoutDetail","items","total_tax","sub_total","quantity","downloadInvoice","is_success","open","url","getOrderDetail","invoice","orderDetail","order_list","getInvoiceDetail","invoiceDetail","CustomerManagementRoutingModule","RouterModule","CustomerManagementModule","CommonModule","NgxPaginationModule","ReactiveFormsModule","FormsModule","NgxCaptchaModule","Ng2TelInputModule","NgSelectModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/customer-management/create-customer/create-customer.component.ts","./src/app/admin/customer-management/create-customer/create-customer.component.html","./src/app/admin/customer-management/customer-list/customer-list.component.html","./src/app/admin/customer-management/customer-list/customer-list.component.ts","./src/app/admin/customer-management/customer-management.component.ts","./src/app/admin/customer-management/customer-management.component.html","./src/app/admin/customer-management/update-customer/update-customer.component.html","./src/app/admin/customer-management/update-customer/update-customer.component.ts","./src/app/shared-components/timeline/timeline.component.html","./src/app/shared-components/timeline/timeline.component.ts","./src/app/admin/customer-management/customer-timeline/customer-timeline.component.html","./src/app/admin/customer-management/customer-timeline/customer-timeline.component.ts","./src/app/admin/customer-management/view-customer/view-customer.component.html","./src/app/admin/customer-management/view-customer/view-customer.component.ts","./src/app/admin/customer-management/upload-csv/upload-csv.component.html","./src/app/admin/customer-management/upload-csv/upload-csv.component.ts","./src/app/admin/customer-management/import-csv/import-csv.component.html","./src/app/admin/customer-management/import-csv/import-csv.component.ts","./src/app/admin/customer-management/add-customer/add-customer.component.html","./src/app/admin/customer-management/add-customer/add-customer.component.ts","./src/app/admin/customer-management/update-credit/update-credit.component.html","./src/app/admin/customer-management/update-credit/update-credit.component.ts","./src/app/admin/customer-management/reseller-list/reseller-list.component.html","./src/app/admin/customer-management/reseller-list/reseller-list.component.ts","./src/app/admin/customer-management/view-transaction/view-transaction.component.html","./src/app/admin/customer-management/customer-management-routing.module.ts","./src/app/admin/customer-management/view-transaction/view-transaction.component.ts","./src/app/admin/customer-management/customer-management.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.scss']\n})\nexport class CreateCustomerComponent {\n\n}\n","<p>create-customer works!</p>\n","<section class=\"user-list\">\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h1 class=\"main-title\"> Customer</h1>\n            <div class=\"u-add-right\">\n                <div class=\"searchName\">\n                    <smart-search #searchInp placeholder=\"Search...\" (onSearch)=\"page = 1;onSearch($event);\"></smart-search>\n                </div>\n                <div>\n                    <select class=\"bg-input\" (change)=\"roleChange($event)\" #roleSelect>\n                        <option value=\"\"> Customer Type</option>\n                        <option value=\"3\">Business Customer</option>\n                        <option value=\"4\">Individual Customer</option>\n                        <option value=\"6\">Reseller Customer</option>\n                        <option value=\"7\">Subdealer Customer</option>\n                    </select>\n                </div>\n                <button class=\"btn-secondary\" (click)=\"reset();searchInp.reset()\">Reset</button>\n                <div *ngIf=\"permissions.customer_management == 'Full access'\" class=\"dropdown\">\n                    <button class=\"btn-primary\" data-bs-toggle=\"dropdown\">\n                        <svg viewBox=\"0 0 24.00 24.00\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\">\n                            <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                            <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\n                            <g id=\"SVGRepo_iconCarrier\"> <title></title> \n                                <g id=\"Complete\"> <g data-name=\"add\" id=\"add-2\"> \n                                    <g> <line fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"12\" x2=\"12\" y1=\"19\" y2=\"5\"></line> <line fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\"></line> \n                        </g> \n                        </g> \n                        </g> \n                        </g>\n                        </svg>\n                        Add Customer\n                    </button>\n                    <ul class=\"dropdown-menu\">\n                        <li><img _ngcontent-xsx-c95=\"\" src=\"assets/images/icon/add-customer.svg\"><a\n                                routerLink=\"/admin/customer/addCustomer\"> Add a customer </a></li>\n                        <li><img src=\"assets/images/icon/exportCsv.png\"><a\n                                routerLink=\"/admin/customer/upload-csv/individual\" class=\"exlexp\">Import Individual\n                                Customers</a>\n                        </li>\n                        <li><img src=\"assets/images/icon/exportCsv.png\"><a\n                                routerLink=\"/admin/customer/upload-csv/business\" class=\"exlexp\">Import Business\n                                Customers</a>\n                        </li>\n                        <li><img src=\"assets/images/icon/exportCsv.png\"><a\n                                routerLink=\"/admin/customer/upload-csv/reseller\" class=\"exlexp\">Import Reseller\n                                Customers</a>\n                        </li>\n                        <li>\n                            <img src=\"assets/images/icon/exportCsv.png\"><a\n                                routerLink=\"/admin/customer/upload-csv/sub_dealer\" class=\"exlexp\">Import Sub\n                                Dealers</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"responsive-tbl mt-4\">\n            <table>\n                <thead>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">Name</p>\n                            <sort-button (onSort)=\"retrieveCustomer('first_name',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center\" style=\"min-width: 15ch;\">\n                            <p class=\"mb-0\">Business Name</p>\n                            <!-- <sort-button (onSort)=\"retrieveCustomer('business_name',$event)\"></sort-button> -->\n                        </div>\n                    </th>\n                    <th>\n\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">Reseller</p>\n                            <sort-button (onSort)=\"retrieveCustomer('parent',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">Customer Type</p>\n                            <sort-button (onSort)=\"retrieveCustomer('user_type',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">Status</p>\n                            <sort-button (onSort)=\"retrieveCustomer('is_active',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th class=\"tableHeadAction\">Action</th>\n                </thead>\n                <tr\n                    *ngFor=\"let customer of customers | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalCustomer};let i = index\">\n                    <td>\n                        <div class=\"tdholder\">\n                            <img class=\"userImg\"\n                                [src]=\"customer?.image || 'assets/images/icon/avtarIcon.jpeg'\"\n                                onerror=\"this.src = 'assets/images/icon/avtarIcon.jpeg'\"\n                                 alt=\"user\" />\n                            <div class=\"tdinner\"><span> {{customer?.first_name || ''}} {{customer?.last_name || ''}}\n                                </span>\n                                <p>{{customer?.email || ''}}</p>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"tdholder\">\n                            <div class=\"tdinner\">\n                                <span> {{customer?.business_user?.bussness_name || '-'}}</span>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"tdholder\">\n                            <div class=\"tdinner\">\n                                <span *ngIf=\"!customer?.showReseller\">NA</span>\n                                <span *ngIf=\"customer?.showReseller\"> {{customer?.reseller_data?.first_name || ''}}\n                                    {{customer?.reseller_data?.last_name || ''}}</span>\n                                <p *ngIf=\"customer?.reseller_data\">{{customer?.reseller_data?.email || ''}}</p>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <p class=\"mb-0\" style=\"text-align: left;\">{{ customer?.user_type?.replace('_', ' ') | titlecase }}</p>\n                    </td>\n\n                    <td>\n                        <p class=\"mb-0\" style=\"text-align: left;\">\n                            <span [ngClass]=\"'activecls'\" *ngIf=\"customer?.is_active==true\">Active</span>\n                            <span [ngClass]=\"'Inactivecls'\" *ngIf=\"customer?.is_active == false\">Inactive</span>\n                        </p>\n                    </td>\n                    <td class=\"tableBodyAction\">\n                        <div class=\"actiontd\">\n\n                            <a class=\"eyeIcon\" (click)=\"savePageDetail()\"\n                                [routerLink]=\"['/admin/customer/view-transaction/', customer?.uuid]\"><i\n                                    class=\"fa fa-credit-card\" title=\"View Credit History\" aria-hidden=\"true\"></i></a>\n                            <a class=\"eyeIcon\" (click)=\"savePageDetail()\"\n                                [routerLink]=\"['/admin/customer/view/', customer?.uuid]\"><i class=\"fa fa-eye\"\n                                    title=\"View\"></i></a>\n                            <a *ngIf=\"permissions.customer_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\"\n                                (click)=\"savePageDetail()\" class=\"eyeIcon\"\n                                [routerLink]=\"['/admin/customer/update-customer/', customer?.uuid]\"><i\n                                    class=\"fa fa-pencil\" title=\"Edit\"></i></a>\n                            <a (click)=\"savePageDetail()\" class=\"eyeIcon\" *ngIf=\"customer?.user_type == 'RESELLER'\"\n                                [routerLink]=\"['/admin/customer/reseller-List/', customer?.uuid]\"><i class=\"fa fa-users\"\n                                    title=\"Sub-dealer\" aria-hidden=\"true\"></i></a>\n\n                            <!-- Only visible for resellers -->\n                            <a class=\"eyeIcon\" style=\"cursor: pointer;\"\n                                *ngIf=\"permissions.customer_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN') && customer?.user_type == 'RESELLER'\" data-bs-toggle=\"modal\"\n                                (click)=\"getResellerCredits(customer);resetKeys()\"\n                                data-bs-target=\"#updateCreditModal\" title=\"Update Credits\">\n                                <!-- <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> -->\n                                <img src=\"assets/images/icon/edit_credit.svg\" alt=\"\">\n                            </a>\n                            <button class=\"sr-only\" id=\"openUpdateModal\" class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#changeStatusModel\" style=\"position: absolute;\"></button>\n                            \n                            <a class=\"edit\" style=\"cursor: pointer;\"\n                                *ngIf=\"permissions.customer_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\"\n                                (click)=\"selectedCustomer = customer\" data-bs-toggle=\"modal\"\n                                data-bs-target=\"#deleteModal\"><i class=\"fa fa-trash-o\" style=\"color: red;\"\n                                    title=\"Delete\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n                <tr class=\"errcls\" *ngIf=\"showError\">\n                    Records not found\n                </tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"customers?.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n            (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>\n<!-- Delete Modal -->\n<div class=\"modal\" id=\"deleteModal\">\n    <div class=\"v-align\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content deleteModal\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Delete User</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div>\n                        <div>\n                            <p>Are you sure, you want to delete <b>{{selectedCustomer?.first_name}}\n                                    {{selectedCustomer?.last_name}}</b> ?</p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"flexDiv\">\n                        <button class=\"btn cancel\" data-bs-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn delete\" (click)=\"delete()\"\n                            data-bs-dismiss=\"modal\">Confirm</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal\" id=\"updateCreditModal\">\n    <div class=\"v-align\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Update Credits</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"d-flex gap-2\">\n                        <div style=\"width: 48% !important;\">\n                            <p class=\"text-start mb-1\">File key credit</p>\n                            <div class=\"d-flex align-items-center gap-2\">\n                                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"new_file_key_credit\">\n                                <p class=\"viewCredit\">{{file_key_credit}}</p>\n                                <i aria-hidden=\"true\" class=\"fa fa-question-circle\" title=\"Customer available file credit\"></i>\n                            </div>\n                        </div>\n\n                        <div style=\"width: 48% !important;\">\n                            <p class=\"text-start mb-1\">Fuction key credit</p>\n                            <div class=\"d-flex align-items-center gap-2\">\n                                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"new_function_credit\">\n                                <p class=\"viewCredit\">{{function_credit}}</p>\n                                <i aria-hidden=\"true\" class=\"fa fa-question-circle\" title=\"Customer available file credit\"></i>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"d-flex justify-content-end gap-2 mt-4\">\n                        <button class=\"btn reset w-auto\" data-bs-dismiss=\"modal\">Cancel</button>\n                        \n                        <button class=\"btn update-credit\" data-bs-toggle=\"modal\" data-bs-target=\"#updateCreditModal\"\n                        (click)=\"openUpdateResellerModal()\"\n                        >Update</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- Update Credit Modal -->\n<div class=\"modal productModal\" id=\"changeStatusModel\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"frTicketstatusForm\" (ngSubmit)=\"updateResellerCredits()\">\n                <div class=\" modal-header\" style=\"margin-bottom: 0px !important; padding-bottom: 0px !important;\">\n                    <h4 class=\"modal-title\">Update Credit</h4>\n                    <button type=\"button\" class=\"btn-close\" (click)=\"formReset();\" id=\"closeFtmodal\"\n                        data-bs-dismiss=\"modal\"></button>\n                </div>\n                <hr />\n                <div class=\"modal-body\">\n                    <div>\n                        <label for=\"status\" class=\"form-label\" style=\"float: left;\">File Request</label>\n                        <select class=\"form-select\" formControlName=\"frRequest\">\n                            <option disabled value=\"Select File Request\">Select File Request</option>\n                            <option disabled *ngIf=\"fileRequestList?.length==0\"> No data available</option>\n                            <option [value]=\"request?.request_id\" *ngFor=\"let request of fileRequestList\">\n                                {{request?.request_id}}</option>\n                        </select>\n                    </div>\n                    <div class=\"mt-2\">\n                        <label for=\"status\" class=\"form-label\" style=\"float: left;\">Type</label>\n                        <select class=\"form-select\" formControlName=\"type\">\n                            <option disabled value=\"Select Type\">Select Type</option>\n                            <option value=\"Refund\">Refund</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n                    <div class=\"mt-2\">\n                        <label for=\"status\" class=\"form-label\" style=\"float: left;\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"formReset();\" id=\"closemodal\"\n                        data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" [disabled]=\"frTicketstatusForm.invalid\"\n                        class=\"btn btn-primary\">Update</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { CustomerService } from '../../services/customer.service';\nimport { UploadFileService } from 'src/app/services/upload-file.service';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissionsService } from '../../services/permissions.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subject, debounceTime } from 'rxjs';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit {\n\n  customers: any = [];\n  params: any;\n  page = 1;\n  pageSize = 10;\n  title = '';\n  user_type: any = '';\n  totalCustomer: any;\n  showError: boolean = false;\n  @ViewChild('yourInput')\n  public yourInput!: ElementRef;\n  @ViewChild('roleSelect')\n  public roleSelect!: ElementRef;\n  selectedCustomer:any;\n  permissions: any;\n  usersdetail: any = JSON.parse(localStorage.getItem('userdetails') || '');\n\n  new_function_credit = 0;\n  new_file_key_credit = 0;\n  file_key_credit = 0;\n  function_credit = 0;\n  evc_credit = 0;\n  editCust?:any;\n\n  fileRequestList: any;\n\n  frTicketstatusForm: FormGroup\n  searchKeyword = new Subject();\n  sortField:any = '';\n  sortOrder:any = '';\n  constructor(private _titleservice: Title, private _customerservice: CustomerService,\n    private pageService: UploadFileService, private crud: CrudService, private _permissions: PermissionsService,\n    private toastr: ToastrService, private fb:FormBuilder) {\n    this._titleservice.setTitle('Customer Management');\n    this.permissions = this._permissions.getPermissions();\n\n    this.frTicketstatusForm = this.fb.group({\n      frRequest: ['Select File Request'],\n      type: ['Select Type', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    var checkPage = this.pageService.getPageDetail();\n    if (checkPage)\n      this.page = checkPage;\n    this.retrieveCustomer();\n    this.searchKeyword.pipe(debounceTime(800)).subscribe(x => {\n      this.page = 1;\n      this.retrieveCustomer();\n    })\n  }\n  savePageDetail() {\n    this.pageService.savePageDetail(window.location.href, this.page);\n  }\n\n  getRequestParams(searchTitle: string, page: number, pageSize: number, user_type: any): any {\n    let params: any = {};\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    if (pageSize) {\n      params[`user_type`] = user_type;\n    }\n    return params;\n  }\n\n  retrieveCustomer(field?:string, type?:string): void {\n    const params = this.getRequestParams(this.title, this.page, this.pageSize, this.user_type);\n    \n    if(field) {\n      this.sortField = field;\n      this.sortOrder = type;\n    }\n    console.log(field,this.sortField,'fields');\n    \n    params[`field`] = this.sortField;\n    params[`order_in`] = this.sortOrder;\n    this._customerservice.getCustomers(params).subscribe((res: any) => {\n      if (res.data) {\n        this.customers = res.data.results;\n        this.showError = this.customers?.length == 0 ? true : false;\n        this.customers.forEach((element: any) => {\n          if (Object.keys(element.reseller_data).length == 0)\n            element['showReseller'] = false;\n          else\n            element['showReseller'] = true;\n        });\n        this.totalCustomer = res.data.count;\n      }\n    },\n      (err: any) => { })\n\n  }\n  getCustomerOnFilter(field: any, type: any) {\n    let params: any = {};\n    params[`field`] = field;\n    params[`order_in`] = type;\n    this._customerservice.getCustomers(params).subscribe((res: any) => {\n      if (res.data) {\n        this.customers = res.data.results;\n        this.showError = this.customers?.length == 0 ? true : false;\n        if (this.customers) {\n          this.customers.forEach((element: any) => {\n            if (Object.keys(element?.reseller_data).length == 0)\n              element['showReseller'] = false;\n            else\n              element['showReseller'] = true;\n          });\n        }\n        this.totalCustomer = res.data.count;\n      }\n    },\n      (err: any) => { })\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveCustomer();\n  }\n\n  onSearch(x: any) {\n    this.title = x;\n    this.retrieveCustomer(x);\n  }\n\n  roleChange(event: any) {\n    this.user_type = event.target.value;\n    this.page = 1;\n    this.retrieveCustomer();\n  }\n  reset() {\n    this.title = '';\n    this.user_type = '';\n    this.roleSelect.nativeElement.value = \"\";\n    this.retrieveCustomer();\n  }\n  delete() {\n    this.crud.deleteRequest(`${requestUrl.deleteCustomer}${this.selectedCustomer.uuid}`).then((res: any) => {\n      if (res) {\n        this.title = '';\n        this.toastr.success(res.message);\n        this.retrieveCustomer();\n      }\n    })\n  }\n\n  getFileRequestList(uuid: any) {\n    this.crud.getRequest(`customer/file_request/list?uuid=${uuid}`).then((res: any) => {\n      this.fileRequestList = res.data;\n    })\n  }\n\n  getResellerCredits(cust:any) {\n    this.getFileRequestList(cust.uuid);\n    this.editCust = cust;\n    this.crud.getRequest(`${requestUrl.getResellerCredit}?uuid=${cust.uuid}`).then((res: any) => {\n      if (res) {\n        this.file_key_credit = res.data[0].file_key_credit;\n        this.function_credit = res.data[0].function_credit; \n      }\n    })\n  }\n\n  openUpdateResellerModal() {\n    const toggleBtn:any = document.querySelector('#openUpdateModal');\n    toggleBtn?.click();\n  }\n\n  updateResellerCredits() {\n    const body:any = {\n      uuid: this.editCust.uuid,\n      file_key_credit: this.new_file_key_credit,\n      function_key_credit: this.new_function_credit,\n      evc_key_credit: this.evc_credit,\n      credit_update_type: this.frTicketstatusForm.value.type,\n      credit_update_description: this.frTicketstatusForm.value.description,\n    }\n\n    if (this.frTicketstatusForm.value.frRequest != 'Select File Request') {\n      body['file_request'] = this.frTicketstatusForm.value.frRequest;\n    }\n    this.crud.putRequest(`${requestUrl.getResellerCredit}`, body).then((res: any) => {\n      this.resetKeys();\n      this.toastr.success(res.message);\n      this.formReset();\n      document.getElementById('closeFtmodal')?.click();\n\n    })\n  }\n\n  resetKeys() {\n    this.new_file_key_credit = 0;\n    this.new_function_credit = 0;\n  }\n\n  formReset() {\n    this.frTicketstatusForm.reset();\n    this.frTicketstatusForm.controls['frRequest'].setValue('Select File Request');\n    this.frTicketstatusForm.controls['type'].setValue('Select Type');\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-management',\n  templateUrl: './customer-management.component.html',\n  styleUrls: ['./customer-management.component.scss']\n})\nexport class CustomerManagementComponent {\n\n}\n","<router-outlet></router-outlet>","<section class=\"admin-profile\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/role\" routerLinkActive=\"active\">My Profile</a></li>\n    </ul>\n    <div class=\"profile-inner\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n        <ul>\n            <li [ngClass]=\"tab =='profile'?'tactive':'tnactive'\"> <a>Customer Profile</a> </li>\n        </ul>\n        <button class=\"backBtn\" routerLink=\"/admin/customer/customer-detail\">\n          <i class=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n        <div>\n            <div class=\"addUser\">\n                <div class=\"profile-info\">\n                    <div class=\"upload-pic\">\n                        <img [src]=\"image || '../../../../assets/images/icon/avtarIcon.jpeg'\" />\n                        <div>\n                            <div class=\"uploadtext\">\n                                <img src=\"assets/images/icon/camraIcon.png\" alt=\"upload\" />\n                            </div>\n                            <input type=\"file\" (change)=\"onFileChange($event)\"\n                                accept=\"image/png, image/gif, image/jpeg\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"formFields\">\n                    <!-- ====================================  INDIVIDUAL CUSTOMER ======================================= -->\n                    <form [formGroup]=\"individualForm\" *ngIf=\"userRole=='INDIVIDUAL_CUSTOMER'\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                [class.is-invalid]=\"individualForm.controls['first_name'].invalid && individualForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['first_name'].dirty && individualForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['first_name'].touched && individualForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                [class.is-invalid]=\"individualForm.controls['last_name'].invalid && individualForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['last_name'].dirty && individualForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['last_name'].touched && individualForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n\n                        <div>\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" class=\"form-control\" readonly formControlName=\"email\"\n                                [class.is-invalid]=\"individualForm.controls['email'].invalid && individualForm.controls['email'].touched\"\n                                placeholder=\"Email\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['email'].dirty && individualForm.controls['email'].hasError('email')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['email'].dirty && individualForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                            <button type=\"button\" class=\"chngemil\" data-bs-toggle=\"modal\"\n                                data-bs-target=\"#chngeEmailModal\">Change\n                                Email </button>\n                        </div>\n                        <div>\n                            <label for=\"role\" class=\"form-label\">Status</label>\n                            <select class=\"form-select\" formControlName=\"is_active\">\n                                <option value=\"true\">Active</option>\n                                <option value=\"false\">Inactive</option>\n                            </select>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                            <textarea class=\"form-control\" formControlName=\"address\"\n                                [class.is-invalid]=\"individualForm.controls['address'].invalid && individualForm.controls['address'].touched\"\n                                placeholder=\"Address Line 1\"></textarea>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['address'].dirty && individualForm.controls['address'].hasError('required')\">\n                                Please enter Address Line 1.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['address'].touched && individualForm.controls['address'].hasError('required')\">\n                                Please enter Address Line 1.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                [class.is-invalid]=\"individualForm.controls['address_2'].invalid && individualForm.controls['address_2'].touched\"\n                                placeholder=\"Address Line 2\"></textarea>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['address_2'].dirty && individualForm.controls['address_2'].hasError('required')\">\n                                Please enter Address Line 2.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['address_2'].touched && individualForm.controls['address_2'].hasError('required')\">\n                                Please enter Address Line 2.\n                            </small>\n                        </div>\n\n                        <div class=\"cityStateCountry\" style=\"width:100%; display:flex;\">\n                            <div>\n                                <label for=\"city\" class=\"form-label\">City</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                    [class.is-invalid]=\"individualForm.controls['city'].invalid && individualForm.controls['city'].touched\"\n                                    placeholder=\"City\">\n                                <small class=\"text-danger\"\n                                    *ngIf=\"individualForm.controls['city'].dirty && individualForm.controls['city'].hasError('required')\">\n                                    Please enter City.\n                                </small>\n                                <small class=\"text-danger\"\n                                    *ngIf=\"individualForm.controls['city'].touched && individualForm.controls['city'].hasError('required')\">\n                                    Please enter City.\n                                </small>\n                            </div>\n                            <div>\n                                <label for=\"country\" class=\"form-label\">State</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                    [class.is-invalid]=\"individualForm.controls['state'].invalid && individualForm.controls['state'].touched\"\n                                    placeholder=\"State\">\n                                <small class=\"text-danger\"\n                                    *ngIf=\"individualForm.controls['state'].dirty && individualForm.controls['state'].hasError('required')\">\n                                    Please enter State.\n                                </small>\n                            </div>\n                            <div>\n                                <label for=\"country\" class=\"form-label\">Country</label>\n                                <ng-select class=\"form-control\" formControlName=\"country\">\n                                    <ng-option selected disabled>Select your country</ng-option>\n                                    <ng-option *ngFor=\"let country of countryData\" [value]=\"country.country\">\n                                        {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                                    </ng-option>\n                                </ng-select>\n                            </div>\n                        </div>\n\n                        <div>\n                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                                [class.is-invalid]=\"individualForm.controls['zip'].invalid && individualForm.controls['zip'].touched\"\n                                placeholder=\"Zip / Postcode\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['zip'].dirty && individualForm.controls['zip'].hasError('required')\">\n                                Please enter Zip / Postcode.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['zip'].touched && individualForm.controls['zip'].hasError('required')\">\n                                Please enter Zip / Postcode.\n                            </small>\n                        </div>\n\n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:individualForm}\"></ng-container>\n                        \n                        <div>\n                            <label for=\"product_name\" class=\"form-label\">Product Name</label>\n                            <select class=\"form-control\" formControlName=\"product_name\">\n                                <option selected disabled>Select Product Name</option>\n                                <option *ngFor=\"let product of products\" [value]=\"product.product_name\">\n                                    {{product.product_name}} </option>\n                            </select>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['product_name'].dirty && individualForm.controls['product_name'].hasError('required')\">\n                                Select product name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['product_name'].touched && individualForm.controls['product_name'].hasError('required')\">\n                                Select product name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"tool_serial_number\" class=\"form-label\">Tool Serial number</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tool_serial_number\"\n                                [class.is-invalid]=\"individualForm.controls['tool_serial_number'].invalid && individualForm.controls['tool_serial_number'].touched\"\n                                placeholder=\"Tool Serial number\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['tool_serial_number'].dirty && individualForm.controls['tool_serial_number'].hasError('required')\">\n                                Enter Tool Serial number.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"individualForm.controls['tool_serial_number'].touched && individualForm.controls['tool_serial_number'].hasError('required')\">\n                                Enter Tool Serial number.\n                            </small>\n                        </div>\n                        <div *ngIf=\"permissions.user_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\"\n                            style=\"display: flex; align-items: center;\">\n                            <input type=\"checkbox\" [checked]=\"onStop\" style=\"margin-top: 25px;\" id=\"vehicle1\"\n                                name=\"vehicle1\" [value]=\"onStop\" (change)=\"updateOnStop($event)\">\n                            <label for=\"vehicle1\" style=\"padding-bottom: 0px; margin: 25px 0px 0px 20px;\"> On\n                                Stop</label>\n                        </div>\n                        <div class=\"submitReset\"  *ngIf=\"permissions.customer_management == 'Full access'\">\n                            <button class=\"btn-primary\" type=\"submit\" (click)=\"individualFormFormSubmit()\">Update</button>\n                        </div>\n                    </form>\n\n\n                    <!-- ====================================  BUSINESS CUSTOMER ======================================= -->\n                    <form [formGroup]=\"businessForm\" *ngIf=\"userRole=='BUSINESS_CUSTOMER'\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                                [class.is-invalid]=\"businessForm.controls['bussness_name'].invalid && businessForm.controls['bussness_name'].touched\"\n                                placeholder=\"Business Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['bussness_name'].dirty && businessForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['bussness_name'].touched && businessForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"first_name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"first_name\"\n                                [class.is-invalid]=\"businessForm.controls['first_name'].invalid && businessForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['first_name'].dirty && businessForm.controls['first_name'].hasError('required')\">\n                                Please enter First name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['first_name'].touched && businessForm.controls['first_name'].hasError('required')\">\n                                Please enter First name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last_name\" class=\"form-label\">Last Name </label>\n                            <input type=\"text\" formControlName=\"last_name\" class=\"form-control\"\n                                [class.is-invalid]=\"businessForm.controls['last_name'].invalid && businessForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['last_name'].dirty && businessForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['last_name'].touched && businessForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n\n                        <div>\n                            <label for=\"business_email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" readonly class=\"form-control\" formControlName=\"email\"\n                                [class.is-invalid]=\"businessForm.controls['email'].invalid && businessForm.controls['email'].touched\"\n                                placeholder=\"Email\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['email'].dirty && businessForm.controls['email'].hasError('email')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"businessForm.controls['email'].dirty && businessForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                            <button type=\"button\" class=\"chngemil\" data-bs-toggle=\"modal\"\n                                data-bs-target=\"#chngeEmailModal\">Change\n                                Email </button>\n                        </div>\n\n                        <div>\n                            <label for=\"role\" class=\"form-label\">Status</label>\n                            <select class=\"form-select\" formControlName=\"is_active\">\n                                <option value=\"true\">Active</option>\n                                <option value=\"false\">Inactive</option>\n                            </select>\n                        </div>\n                        \n                        <div *ngIf=\"permissions.user_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\"\n                            style=\"display: flex; align-items: center;\">\n                            <input type=\"checkbox\" [checked]=\"onStop\" style=\"margin-top: 0px;\" id=\"vehicle1\"\n                                name=\"vehicle1\" [value]=\"onStop\" (change)=\"updateOnStop($event)\">\n                            <label for=\"vehicle1\" style=\"padding-bottom: 0px; margin: 0px 0px 0px 20px;\"> On\n                                Stop</label>\n                        </div>\n                   \n\n                        <ng-container *ngTemplateOutlet=\"basic;context:{$implicit:businessForm}\"></ng-container>\n\n\n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:businessForm}\"></ng-container>\n\n                        <ng-container *ngTemplateOutlet=\"tax_company_win;context:{$implicit:businessForm}\"></ng-container>\n\n\n                        <div class=\"submitReset\">\n                            <button class=\"btn-primary\" type=\"submit\" (click)=\"businessFormSubmit()\">Update</button>\n                        </div>\n                    </form>\n\n                    <!-- ====================================  RESELLER ======================================= -->\n                    <form [formGroup]=\"resellerForm\" *ngIf=\"userRole=='RESELLER'\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                                [class.is-invalid]=\"resellerForm.controls['bussness_name'].invalid && resellerForm.controls['bussness_name'].touched\"\n                                placeholder=\"Business Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['bussness_name'].touched && resellerForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                [class.is-invalid]=\"resellerForm.controls['first_name'].invalid && resellerForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['first_name'].dirty && resellerForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['first_name'].touched && resellerForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                [class.is-invalid]=\"resellerForm.controls['last_name'].invalid && resellerForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['last_name'].dirty && resellerForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['last_name'].touched && resellerForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n\n                        <div>\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" readonly class=\"form-control\" formControlName=\"email\"\n                                [class.is-invalid]=\"resellerForm.controls['email'].invalid && resellerForm.controls['email'].touched\"\n                                placeholder=\"Email\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['email'].dirty && resellerForm.controls['email'].hasError('email')\">\n                                Please enter valid email.\n                            </small>\n                            <small class=\"text-danger\"\n                                *ngIf=\"resellerForm.controls['email'].dirty && resellerForm.controls['email'].hasError('required')\">\n                                Please enter email.\n                            </small>\n                            <button type=\"button\" class=\"chngemil\" data-bs-toggle=\"modal\"\n                                data-bs-target=\"#chngeEmailModal\">Change\n                                Email </button>\n                        </div>\n\n                        <div>\n                            <label for=\"role\" class=\"form-label\">Status</label>\n                            <select class=\"form-select\" formControlName=\"is_active\">\n                                <option value=\"true\">Active</option>\n                                <option value=\"false\">Inactive</option>\n                            </select>\n                        </div>\n                        <div *ngIf=\"permissions.user_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\"\n                            style=\"display: flex; align-items: center;\">\n                            <input type=\"checkbox\" [checked]=\"onStop\" style=\"margin-top: 25px;\" id=\"vehicle1\"\n                                name=\"vehicle1\" [value]=\"onStop\" (change)=\"updateOnStop($event)\">\n                            <label for=\"vehicle1\" style=\"padding-bottom: 0px; margin: 25px 0px 0px 20px;\"> On\n                                Stop</label>\n                        </div>\n                   \n               \n\n                        <ng-container *ngTemplateOutlet=\"basic;context:{$implicit:resellerForm}\"></ng-container>\n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:resellerForm}\"></ng-container>\n                        <ng-container *ngTemplateOutlet=\"tax_company_win;context:{$implicit:resellerForm}\"></ng-container>\n\n\n                        <div class=\"submitReset\">\n                            <button class=\"btn-primary\" type=\"submit\" (click)=\"resellerFormSubmit()\">Update</button>\n                        </div>\n                    </form>\n\n\n                    <!-- ================================ SUB-DEALER ========================== -->\n                    <form [formGroup]=\"subDealerForm\" *ngIf=\"userRole == 'DEALER'\">\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                                [class.is-invalid]=\"subDealerForm.controls['bussness_name'].invalid && subDealerForm.controls['bussness_name'].touched\"\n                                placeholder=\"Business Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['bussness_name'].touched && subDealerForm.controls['bussness_name'].hasError('required')\">\n                                Please enter Business Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                [class.is-invalid]=\"subDealerForm.controls['first_name'].invalid && subDealerForm.controls['first_name'].touched\"\n                                placeholder=\"First name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['first_name'].touched && subDealerForm.controls['first_name'].hasError('required')\">\n                                Please enter First Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                [class.is-invalid]=\"subDealerForm.controls['last_name'].invalid && subDealerForm.controls['last_name'].touched\"\n                                placeholder=\"Last Name\">\n                            <small class=\"text-danger\"\n                                *ngIf=\"subDealerForm.controls['last_name'].touched && subDealerForm.controls['last_name'].hasError('required')\">\n                                Please enter Last Name.\n                            </small>\n                        </div>\n                        <div>\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"text\" class=\"form-control\" readonly formControlName=\"email\"\n                                [class.is-invalid]=\"subDealerForm.controls['email'].invalid && subDealerForm.controls['email'].touched\"\n                                placeholder=\"Email\">\n                        </div>\n                       \n\n                        <ng-container *ngTemplateOutlet=\"basic;context:{$implicit:subDealerForm}\"></ng-container>\n\n                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:subDealerForm}\"></ng-container>\n                        <ng-container *ngTemplateOutlet=\"tax_company_win;context:{$implicit:businessForm}\"></ng-container>\n\n                        <div *ngIf=\"permissions.user_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\"\n                            style=\"display: flex; align-items: center;\">\n                            <input type=\"checkbox\" [checked]=\"onStop\" style=\"margin-top: 0px;\" id=\"vehicle1\"\n                                name=\"vehicle1\" [value]=\"onStop\" (change)=\"updateOnStop($event)\">\n                            <label for=\"vehicle1\" style=\"padding-bottom: 0px; margin: 0px 0px 0px 20px;\"> On\n                                Stop</label>\n                        </div>\n                        <div class=\"submitReset\">\n                            <button class=\"btn-primary\" type=\"submit\" (click)=\"subDealerFormSubmit()\">Update</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- The Modal -->\n    <div class=\"modal\" id=\"chngeEmailModal\">\n        <div class=\"v-align\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Change Email</h4>\n                        <button type=\"button\" class=\"btn-close\" id=\"hidechangeemailmodal\"\n                            data-bs-dismiss=\"modal\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <div>\n                            <form id=\"changeEmailForm\" [formGroup]=\"changeEmailForm\"\n                                (ngSubmit)=\"updateEmail()\">\n                                <div class=\"absdivModal\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                        [class.is-invalid]=\"changeEmailForm.controls['email'].invalid && changeEmailForm.controls['email'].touched\"\n                                        placeholder=\"Enter new email\">\n                                    <small class=\"text-danger \"\n                                        *ngIf=\"changeEmailForm.controls['email'].hasError('pattern') \">\n                                        Please enter valid email address.\n                                    </small>\n                                </div>\n                            </form>\n                    \n                            <div class=\"flexDiv\">\n                                <button *ngIf=\"!showOtpBox\" type=\"submit\" form=\"changeEmailForm\" class=\"btn-primary\"\n                                    [disabled]=\"changeEmailForm.invalid\">Update</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<ng-template #phone let-form>\n    <div [formGroup]=\"form\">\n        <label for=\"phone\" class=\"form-label\">Phone</label>\n        <input class=\"form-control\" type=\"tel\" formControlName=\"phone_no\"\n            pattern=\"^\\+?[\\d\\s]*$\"\n            placeholder=\" \" ng2TelInput\n            [ng2TelInputOptions]=\"telOptions\"\n            (countryChange)=\"getPrimaryPhone($event,form)\">\n        <small class=\"text-danger\"\n            *ngIf=\"form.controls['phone_no'].dirty && form.controls['phone_no'].hasError('pattern')\">\n            Invalid phone number.\n        </small>\n        <small class=\"text-danger\"\n            *ngIf=\"form.controls['phone_no'].dirty && form.controls['phone_no'].hasError('required')\">\n            Phone number is required\n        </small>\n    </div>\n</ng-template>\n\n<ng-template #tax_company_win let-form>\n    <ng-container [formGroup]=\"form\">\n        <div>\n            <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                placeholder=\"Tax number\">\n        </div>\n        <div>\n            <label for=\"company_number\" class=\"form-label\">Company number</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                placeholder=\"Company number\">\n        </div>\n        <div class=\"emaildiv\">\n            <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License number</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                placeholder=\"WinOLS License number\">\n        </div>\n    </ng-container>\n</ng-template>\n\n<ng-template #basic let-form>\n    <ng-container [formGroup]=\"form\">\n        <div>\n            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n            <textarea class=\"form-control\" formControlName=\"address\"\n                [class.is-invalid]=\"form.controls['address'].invalid && form.controls['address'].touched\"\n                placeholder=\"Address Line 1\"></textarea>\n            <small class=\"text-danger\"\n                *ngIf=\"form.controls['address'].touched && form.controls['address'].hasError('required')\">\n                Please enter Address Line 1.\n            </small>\n        </div>\n        <div>\n            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n            <textarea class=\"form-control\" formControlName=\"address_2\"\n                [class.is-invalid]=\"form.controls['address_2'].invalid && form.controls['address_2'].touched\"\n                placeholder=\"Address Line 2\"></textarea>\n            <small class=\"text-danger\"\n                *ngIf=\"form.controls['address_2'].touched && form.controls['address_2'].hasError('required')\">\n                Please enter Address Line 2.\n            </small>\n        </div>\n        <div>\n            <label for=\"city\" class=\"form-label\">City</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                [class.is-invalid]=\"form.controls['city'].invalid && form.controls['city'].touched\"\n                placeholder=\"City\">\n            <small class=\"text-danger\"\n                *ngIf=\"form.controls['city'].touched && form.controls['city'].hasError('required')\">\n                Please enter City.\n            </small>\n        </div>\n        <div>\n            <label for=\"country\" class=\"form-label\">State</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                [class.is-invalid]=\"form.controls['state'].invalid && form.controls['state'].touched\"\n                placeholder=\"State\">\n            <small class=\"text-danger\"\n                *ngIf=\"form.controls['state'].touched && form.controls['state'].hasError('required')\">\n                Please enter State.\n            </small>\n        </div>\n        <div>\n            <label for=\"country\" class=\"form-label\">Country</label>\n            <ng-select class=\"form-control\" formControlName=\"country\">\n                <ng-option selected disabled>Select your country</ng-option>\n                <ng-option *ngFor=\"let country of countryData\" [value]=\"country.country\">\n                    {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                </ng-option>\n                </ng-select>\n        </div>\n\n        <div>\n            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                [class.is-invalid]=\"form.controls['zip'].invalid && form.controls['zip'].touched\"\n                placeholder=\"Zip / Postcode\">\n            <small class=\"text-danger\"\n                *ngIf=\"form.controls['zip'].touched && form.controls['zip'].hasError('required')\">\n                Please enter Zip / Postcode.\n            </small>\n        </div>\n    </ng-container>\n</ng-template>","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { encryption } from 'src/app/encryption';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { CrudjService } from 'src/app/services/crudj.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { CustomerService } from '../../services/customer.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { countryDetails } from 'src/app/global-files/global.const';\nimport { PermissionsService } from '../../services/permissions.service';\nimport { RegisterService } from 'src/app/auth/services/register.service';\n\nconst list = {1:\"US\",7:[\"RU\",\"KZ\"],20:[\"EG\"],27:[\"ZA\"],30:[\"GR\"],31:[\"NL\"],32:[\"BE\"],33:[\"FR\"],34:[\"ES\"],36:[\"HU\"],39:[\"IT\",\"VA\"],40:[\"RO\"],41:[\"CH\"],43:[\"AT\"],44:[\"GB\",\"GG\",\"IM\",\"JE\"],45:[\"DK\"],46:[\"SE\"],47:[\"NO\",\"SJ\"],48:[\"PL\"],49:[\"DE\"],51:[\"PE\"],52:[\"MX\"],53:[\"CU\"],54:[\"AR\"],55:[\"BR\"],56:[\"CL\"],57:[\"CO\"],58:[\"VE\"],60:[\"MY\"],61:[\"AU\",\"CC\",\"CX\"],62:[\"ID\"],63:[\"PH\"],64:[\"NZ\"],65:[\"SG\"],66:[\"TH\"],81:[\"JP\"],82:[\"KR\"],84:[\"VN\"],\n  86:[\"CN\"],90:[\"TR\"],91:[\"IN\"],92:[\"PK\"],93:[\"AF\"],94:[\"LK\"],95:[\"MM\"],98:[\"IR\"],211:[\"SS\"],212:[\"MA\",\"EH\"],213:[\"DZ\"],216:[\"TN\"],218:[\"LY\"],220:[\"GM\"],221:[\"SN\"],222:[\"MR\"],223:[\"ML\"],224:[\"GN\"],225:[\"CI\"],226:[\"BF\"],227:[\"NE\"],228:[\"TG\"],229:[\"BJ\"],230:[\"MU\"],231:[\"LR\"],232:[\"SL\"],233:[\"GH\"],234:[\"NG\"],235:[\"TD\"],236:[\"CF\"],237:[\"CM\"],238:[\"CV\"],239:[\"ST\"],240:[\"GQ\"],241:[\"GA\"],242:[\"CG\"],243:[\"CD\"],244:[\"AO\"],245:[\"GW\"],246:[\"IO\"],247:[\"AC\"],248:[\"SC\"],249:[\"SD\"],250:[\"RW\"],251:[\"ET\"],252:[\"SO\"],\n  253:[\"DJ\"],254:[\"KE\"],255:[\"TZ\"],256:[\"UG\"],257:[\"BI\"],258:[\"MZ\"],260:[\"ZM\"],261:[\"MG\"],262:[\"RE\",\"YT\"],263:[\"ZW\"],264:[\"NA\"],265:[\"MW\"],266:[\"LS\"],267:[\"BW\"],268:[\"SZ\"],269:[\"KM\"],290:[\"SH\",\"TA\"],291:[\"ER\"],297:[\"AW\"],298:[\"FO\"],299:[\"GL\"],350:[\"GI\"],351:[\"PT\"],352:[\"LU\"],353:[\"IE\"],354:[\"IS\"],355:[\"AL\"],356:[\"MT\"],357:[\"CY\"],358:[\"FI\",\"AX\"],359:[\"BG\"],370:[\"LT\"],371:[\"LV\"],372:[\"EE\"],373:[\"MD\"],374:[\"AM\"],375:[\"BY\"],376:[\"AD\"],377:[\"MC\"],378:[\"SM\"],380:[\"UA\"],381:[\"RS\"],382:[\"ME\"],383:[\"XK\"],385:[\"HR\"],\n  386:[\"SI\"],387:[\"BA\"],389:[\"MK\"],420:[\"CZ\"],421:[\"SK\"],423:[\"LI\"],500:[\"FK\"],501:[\"BZ\"],502:[\"GT\"],503:[\"SV\"],504:[\"HN\"],505:[\"NI\"],506:[\"CR\"],507:[\"PA\"],508:[\"PM\"],509:[\"HT\"],590:[\"GP\",\"BL\",\"MF\"],591:[\"BO\"],592:[\"GY\"],593:[\"EC\"],594:[\"GF\"],595:[\"PY\"],596:[\"MQ\"],597:[\"SR\"],598:[\"UY\"],599:[\"CW\",\"BQ\"],670:[\"TL\"],672:[\"NF\"],673:[\"BN\"],674:[\"NR\"],675:[\"PG\"],676:[\"TO\"],677:[\"SB\"],678:[\"VU\"],679:[\"FJ\"],680:[\"PW\"],681:[\"WF\"],682:[\"CK\"],683:[\"NU\"],685:[\"WS\"],686:[\"KI\"],687:[\"NC\"],688:[\"TV\"],689:[\"PF\"],690:[\"TK\"],\n  691:[\"FM\"],692:[\"MH\"],800:[\"001\"],808:[\"001\"],850:[\"KP\"],852:[\"HK\"],853:[\"MO\"],855:[\"KH\"],856:[\"LA\"],870:[\"001\"],878:[\"001\"],880:[\"BD\"],881:[\"001\"],882:[\"001\"],883:[\"001\"],886:[\"TW\"],888:[\"001\"],960:[\"MV\"],961:[\"LB\"],962:[\"JO\"],963:[\"SY\"],964:[\"IQ\"],965:[\"KW\"],966:[\"SA\"],967:[\"YE\"],968:[\"OM\"],970:[\"PS\"],971:[\"AE\"],972:[\"IL\"],973:[\"BH\"],974:[\"QA\"],975:[\"BT\"],976:[\"MN\"],977:[\"NP\"],979:[\"001\"],992:[\"TJ\"],993:[\"TM\"],994:[\"AZ\"],995:[\"GE\"],996:[\"KG\"],998:[\"UZ\"]};\n@Component({\n  selector: 'app-update-customer',\n  templateUrl: './update-customer.component.html',\n  styleUrls: ['./update-customer.component.scss']\n})\nexport class UpdateCustomerComponent {\n  addphoneindividualerror: boolean = true;\n  addmobileerror: boolean = true;\n\n  businessForm!: FormGroup;\n  individualForm!: FormGroup;\n  resellerForm!: FormGroup;\n  subDealerForm!: FormGroup;\n  userRole: any;\n  formType: boolean = true;\n  tab: any = 'profile';\n  countries = require('country-data-list').countries;\n  image: any = '';\n  addphoneerror: boolean = true;\n  usersdetail: any;\n  profileForm: FormGroup;\n  formData: any = new FormData();\n  changeEmailForm: FormGroup;\n  showOtpBox: boolean = false;\n  verifyOtpForm: FormGroup;\n  customer_uuid: any = '';\n  countryData = countryDetails;\n  addmobileResellererror: boolean = true;\n  onStop: boolean = false;\n  permissions:any;\n  usersdetails: any = JSON.parse(localStorage.getItem('userdetails') || '');\n  products: any = [];\n\n  telOptions = {\n    separateDialCode:true,\n    initialCountry:'GB'\n  }\n  constructor(private fb: FormBuilder, private _crudservice: CrudjService,\n    private toastr: ToastrService, private _titleservice: Title,\n    private notification: NotificationsService, private crud: CrudService, private _permissions:PermissionsService,\n    private _customerservice: CustomerService, private route: ActivatedRoute, private _registerservice:RegisterService\n  ) {\n    this._titleservice.setTitle('My Profile');\n    this.profileForm = this.fb.group({\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      address: ['', Validators.required],\n      country: ['India', Validators.required],\n      phone_no: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.changeEmailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n\n    this.verifyOtpForm = this.fb.group({\n      otp: ['', Validators.required]\n    });\n    /*individual and Business Profile statshere*/\n    this.individualForm = this.fb.group({\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      country_code: [44],\n      phone_no: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      is_active: ['', [Validators.required]],\n      product_name: ['', []],\n      tool_serial_number: ['', []]\n    });\n    this.resellerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      country_code: [44],\n      phone_no: [''],\n      mobile_no: [''],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      is_active: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n    });\n\n    this.businessForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      is_active: ['', [Validators.required]],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      country_code: [44],\n      phone_no: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n    this.subDealerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      country_code: [44],\n      phone_no: ['',],\n      mobile_no: [''],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: ['', [Validators.required]],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      resellerId: ['Select Reseller', [Validators.required]],\n    });\n    this.permissions = this._permissions.getPermissions();\n\n  }\n  obj: any = [\n    { \"alpha2\": \"US\", \"name\": \"United States\", },\n    { \"alpha2\": \"GB\", \"name\": \"United Kingdom\", }\n  ]\n  ngOnInit(): void {\n    this.customer_uuid = this.route.snapshot.paramMap.get('id');\n    this.countryData.sort((a: any, b: any) => (a.country > b.country) ? 1 : -1)\n    this.obj.forEach((element: any) => {\n      this.moveCountryOnTop(element.name);\n    });\n    this.getCustomerDetail();\n    this._registerservice.getProducts().subscribe((res: any) => {\n      this.products = res.data.results;\n    },\n      (err: any) => {\n      });\n\n  }\n\n  setPhoneNumber(form:FormGroup) {\n    let numberWithCode = \"\";\n    if(this.usersdetail?.country_code) {\n      numberWithCode = `+${this.usersdetail?.country_code}${this.usersdetail.phone_no}`\n    } else numberWithCode = this.usersdetail?.phone_no;\n    form.get('phone_no')?.setValue(numberWithCode)\n  }\n\n  removePhoneCode(form:FormGroup) {\n    let numberWithoutCode = \"\";\n\n    // Check if phone number already have country code and remove the code \n    if(this.usersdetail?.country_code && form.get('phone_no')?.value && form.get('phone_no')?.value.includes(this.usersdetail?.country_code)) {\n      numberWithoutCode = form.get('phone_no')?.value.replace(`+${this.usersdetail?.country_code}`, \"\");\n    } \n    // If not then use the input field number\n    else {\n      numberWithoutCode = form.get('phone_no')?.value;\n    }\n    form.get('phone_no')?.setValue(numberWithoutCode)\n  }\n\n  getCustomerDetail() {\n    this._customerservice.getCustomerByUuid(this.customer_uuid).subscribe((res: any) => {\n      if (res) {\n        this.usersdetail = res.data;\n        this.image = res.data?.image;\n        this.userRole = this.usersdetail?.user_type;\n        this.onStop = this.usersdetail?.on_stop;\n        if (this.userRole == 'INDIVIDUAL_CUSTOMER') {\n          this.individualForm.controls['product_name'].setValue(this.usersdetail?.individual_user?.product_name);\n          this.individualForm.controls['tool_serial_number'].setValue(this.usersdetail?.individual_user?.tool_serial_number);\n          this.individualForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n          this.individualForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n          this.individualForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n          // this.individualForm.controls['phone_no'].setValue(this.usersdetail?.phone_no);\n          this.setPhoneNumber(this.individualForm);\n          this.individualForm.controls['email'].setValue(this.usersdetail?.email);\n          this.individualForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n          this.individualForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n          this.individualForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n          this.individualForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n          this.individualForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n          this.individualForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n          this.individualForm.controls['is_active'].setValue(this.usersdetail?.is_active);\n        }\n        else if (this.userRole == 'BUSINESS_CUSTOMER') {\n          this.businessForm.controls['bussness_name'].setValue(this.usersdetail?.business_user?.bussness_name);\n          this.businessForm.controls['tax_number'].setValue(this.usersdetail?.business_user?.tax_number);\n          this.businessForm.controls['company_number'].setValue(this.usersdetail?.business_user?.company_number);\n          this.businessForm.controls['win_ols_license_number'].setValue(this.usersdetail?.business_user?.win_ols_license_number);\n          this.businessForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n          this.businessForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n          this.businessForm.controls['email'].setValue(this.usersdetail?.email);\n          this.businessForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n          \n          this.setPhoneNumber(this.businessForm);\n          this.businessForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n          this.businessForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n          this.businessForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n          this.businessForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n          this.businessForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n          this.businessForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n          this.businessForm.controls['is_active'].setValue(this.usersdetail?.is_active);\n        }\n        else if (this.userRole == 'RESELLER') {\n          this.resellerForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n          this.resellerForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n          this.resellerForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n          this.setPhoneNumber(this.resellerForm);\n          this.resellerForm.controls['email'].setValue(this.usersdetail?.email);\n          this.resellerForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n          this.resellerForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n          this.resellerForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n          this.resellerForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n          this.resellerForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n          this.resellerForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n          this.resellerForm.controls['is_active'].setValue(this.usersdetail?.is_active);\n          this.resellerForm.controls['bussness_name'].setValue(this.usersdetail?.reseller_sub_dealer?.bussness_name);\n          this.resellerForm.controls['tax_number'].setValue(this.usersdetail?.reseller_sub_dealer?.tax_number);\n          this.resellerForm.controls['company_number'].setValue(this.usersdetail?.reseller_sub_dealer?.company_number);\n          this.resellerForm.controls['win_ols_license_number'].setValue(this.usersdetail?.reseller_sub_dealer?.win_ols_license_number);\n\n        }\n        else if (this.userRole == 'DEALER') {\n          this.subDealerForm.controls['bussness_name'].setValue(this.usersdetail?.reseller_sub_dealer?.bussness_name);\n          this.subDealerForm.controls['tax_number'].setValue(this.usersdetail?.reseller_sub_dealer?.tax_number);\n          this.subDealerForm.controls['company_number'].setValue(this.usersdetail?.reseller_sub_dealer?.company_number);\n          this.subDealerForm.controls['win_ols_license_number'].setValue(this.usersdetail?.reseller_sub_dealer?.win_ols_license_number);\n          this.subDealerForm.controls['first_name'].setValue(this.usersdetail?.first_name);\n          this.subDealerForm.controls['last_name'].setValue(this.usersdetail?.last_name);\n          this.subDealerForm.controls['email'].setValue(this.usersdetail?.email);\n          this.setPhoneNumber(this.subDealerForm);\n          // this.subDealerForm.controls['phone_no'].setValue(this.usersdetail?.phone_no);\n          this.subDealerForm.controls['country_code'].setValue(this.usersdetail?.country_code);\n          this.subDealerForm.controls['address'].setValue(this.usersdetail?.address_user?.address);\n          this.subDealerForm.controls['address_2'].setValue(this.usersdetail?.address_user?.address_2);\n          this.subDealerForm.controls['country'].setValue(this.usersdetail?.address_user?.country);\n          this.subDealerForm.controls['state'].setValue(this.usersdetail?.address_user?.state);\n          this.subDealerForm.controls['city'].setValue(this.usersdetail?.address_user?.city);\n          this.subDealerForm.controls['zip'].setValue(this.usersdetail?.address_user?.zip);\n        }\n\n        let profileData = {\n          \"first_name\": this.usersdetail.first_name,\n          \"last_name\": this.usersdetail.last_name,\n          \"address\": this.usersdetail.address_user.address,\n          \"country\": typeof (this.usersdetail.address_user.country) != 'undefined' ? this.usersdetail.address_user.country : 'India',\n          \"phone_no\": this.usersdetail.phone_no,\n          \"email\": this.usersdetail.email,\n        };\n        this.profileForm.patchValue(profileData);\n      }\n    },\n      (err: any) => {\n      })\n\n\n  }\n  moveCountryOnTop(name: string) {\n    const index = this.countryData.findIndex((item: any) => item.country === name);\n    if (index !== -1) {\n      const removedObject = this.countryData.splice(index, 1)[0];\n      this.countryData.unshift(removedObject);\n    }\n  }\n\n  \n  individualFormFormSubmit() {\n    if (this.individualForm.valid) {\n      this.removePhoneCode(this.individualForm);\n\n      let individualData = this.individualForm.value;\n      let data = {\n        \"individual_profile\": {\n          \"product_name\": individualData.product_name,\n          \"tool_serial_number\": individualData.tool_serial_number\n        },\n        \"address\": {\n          \"address_2\": individualData.address_2,\n          \"address\": individualData.address,\n          \"state\": individualData.state,\n          \"city\": individualData.city,\n          \"zip\": individualData.zip\n        },\n        \"individual\": {\n          \"first_name\": individualData.first_name,\n          \"last_name\": individualData.last_name,\n          \"phone_no\": individualData.phone_no,\n          \"country_code\":individualData.country_code,\n          \"email\": individualData.email,\n          \"is_active\": individualData.is_active\n        }\n      };\n      this.crud.putRequest(`${requestUrl.getCustomerByUuid}${this.customer_uuid}`, data).then((res: any) => {\n        this.toastr.success(res.message);\n      });\n    } else {\n      this.markAllControlsAsTouched(this.individualForm)\n    }\n  }\n\n\n  subDealerFormSubmit() {\n    if (this.subDealerForm.invalid) { \n      this.subDealerForm.markAllAsTouched();\n      return; \n    }\n\n    this.removePhoneCode(this.subDealerForm);\n    \n    let subDellerData = this.subDealerForm.value;\n    let data = {\n      \"detail\": {\n        \"bussness_name\": subDellerData.bussness_name,\n        \"tax_number\": subDellerData.tax_number,\n        \"company_number\": subDellerData.company_number,\n        \"win_ols_license_number\": subDellerData.win_ols_license_number\n      },\n      'address': {\n        'address_2': subDellerData.address,\n        'address': subDellerData.address_2,\n        'country': subDellerData.country,\n        'state': subDellerData.state,\n        'city': subDellerData.city,\n        'zip': subDellerData.zip,\n      },\n      'dealer': {\n        'first_name': subDellerData.first_name,\n        'last_name': subDellerData.last_name,\n        'phone_no': subDellerData.phone_no,\n        \"country_code\":subDellerData.country_code,\n          // 'mobile_no': subDellerData.mobile_no,\n        'email': subDellerData.email\n      },\n      // \"captcha_response\": subDellerData.captcha_response,\n      'uuid': this.customer_uuid\n    };\n    this.crud.putRequest(requestUrl.addSubDealer, data).then((res: any) => {\n      this.toastr.success(res.message);\n    });\n  }\n  addmobileResellerError(obj: any) {\n    this.addmobileResellererror = obj;\n    if (obj) {\n      this.resellerForm.controls['mobile_no'].setErrors(null);\n    } else {\n      this.resellerForm.controls['mobile_no'].setErrors({ 'incorrect': false });\n    }\n  }\n\n\n  resellerFormSubmit() {\n    if (this.resellerForm.valid) {\n      this.removePhoneCode(this.resellerForm);\n      let resellerData = this.resellerForm.value;\n      let data = {\n        \"detail\": {\n          \"bussness_name\": resellerData.bussness_name,\n          \"tax_number\": resellerData.tax_number,\n          \"company_number\": resellerData.company_number,\n          \"win_ols_license_number\": resellerData.win_ols_license_number\n        },\n        'address': {\n          'address_2': resellerData.address,\n          'address': resellerData.address_2,\n          'country': resellerData.country,\n          'state': resellerData.state,\n          'city': resellerData.city,\n          'zip': resellerData.zip,\n        },\n        'reseller': {\n          'first_name': resellerData.first_name,\n          'last_name': resellerData.last_name,\n          \"country_code\":resellerData.country_code,\n          'phone_no': resellerData.phone_no,\n          // 'mobile_no': resellerData.mobile_no,\n          'is_active': resellerData.is_active,\n          'email': resellerData.email\n        },\n        'uuid': this.customer_uuid\n      };\n      this.crud.putRequest(`${requestUrl.addReseller}`, data).then((res: any) => {\n        this.toastr.success(res.message);\n      });\n    } else {\n      this.markAllControlsAsTouched(this.resellerForm);\n    }\n  }\n\n  markAllControlsAsTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markAllControlsAsTouched(control);\n      }\n    });\n  }\n\n  businessFormSubmit() {\n    if (this.businessForm.valid) {\n      this.removePhoneCode(this.businessForm);\n      let businessData = this.businessForm.value;\n      let data = {\n        \"business_profile\": {\n          \"bussness_name\": businessData.bussness_name,\n          \"tax_number\": businessData.tax_number,\n          \"company_number\": businessData.company_number,\n          \"win_ols_license_number\": businessData.win_ols_license_number\n        },\n        \"address\": {\n          \"address_2\": businessData.address_2,\n          \"address\": businessData.address,\n          \"country\": businessData.country,\n          \"state\": businessData.state,\n          \"city\": businessData.city,\n          \"zip\": businessData.zip\n        },\n        \"business\": {\n          \"first_name\": businessData.first_name,\n          \"last_name\": businessData.last_name,\n          \"phone_no\": businessData.phone_no,\n          \"country_code\":businessData.country_code,\n          \"email\": businessData.email,\n          \"is_active\": businessData.is_active\n\n        },\n        \"captcha_response\": \"\"\n\n      };\n      this.crud.putRequest(`${requestUrl.getCustomerByUuid}${this.customer_uuid}`, data).then((res: any) => {\n        if (res) {\n          this.toastr.success(res.message, '', { timeOut: 4000 });\n        }\n      });\n    } else {\n      this.markAllControlsAsTouched(this.businessForm)\n      console.log(this.businessForm,'form');\n      \n    }\n  }\n\n  onFileChange(event: any) {\n\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => this.image = reader.result;\n      reader.readAsDataURL(file);\n      this.formData.append(\"image\", file);\n      this.formData.append(\"uuid\", this.customer_uuid);\n      this.updateProfileImg();\n    }\n  }\n  updateProfileImg() {\n    this.crud.postRequest(`${requestUrl.updateProfileImg}`, this.formData).then((res: any) => {\n    })\n  }\n\n  addphoneError(obj: any) {\n    this.addphoneerror = obj;\n    if (obj) {\n      this.profileForm.controls['phone_no'].setErrors(null);\n    } else {\n      this.profileForm.controls['phone_no'].setErrors({ 'incorrect': false });\n    }\n  }\n\n  getPrimaryPhone(event: any, form:FormGroup) {\n    if(form) {\n      form.get('country_code')?.setValue(event.dialCode);\n    }\n  }\n\n  addphoneIndividualError(obj: any) {\n    this.addphoneindividualerror = obj;\n    if (obj) {\n      this.individualForm.controls['phone_no'].setErrors(null);\n    } else {\n      this.individualForm.controls['phone_no'].setErrors({ 'incorrect': false });\n    }\n  }\n  addMobileResellerError(obj: any) {\n    this.addmobileerror = obj;\n    if (obj) {\n      this.resellerForm.controls['mobile_no'].setErrors(null);\n    } else {\n      this.resellerForm.controls['mobile_no'].setErrors({ 'incorrect': false });\n    }\n  }\n\n  // Obsolete\n  // changeEmailFormSubmit() {\n  //   let data = this.changeEmailForm.value;\n  //   this._crudservice.post('/api/v1/account/update-email-request', data).subscribe((res: any) => {\n  //     this.showOtpBox = true;\n  //     this.toastr.success(res.message, '', { timeOut: 4000 });\n  //   },\n  //     (err: any) => {\n  //       this.showOtpBox = false;\n  //       this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n  //     })\n  // }\n\n\n  updateEmail() {\n    let data = {\n      'email': this.changeEmailForm.value.email,\n      'otp': this.verifyOtpForm.value.otp,\n      'uuid': this.customer_uuid\n    };\n    this._crudservice.post('/api/v1/account/update-email', data).subscribe((res: any) => {\n      this.toastr.success(res.message, '', { timeOut: 4000 });\n      this.getCustomerDetail();\n\n      document.getElementById('hidechangeemailmodal')?.click();\n      if (this.userRole == 'RESELLER')\n        this.resellerForm.controls['email'].setValue(data.email);\n\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n\n\n  getbusinessPhone(event: any) {\n    this.businessForm.patchValue({ 'phone_no': event });\n  }\n  updateOnStop(event: any) {\n    this.onStop = !this.onStop;\n    this.crud.getRequest(`${requestUrl.updateOnStopOfCustomer}${this.customer_uuid}`).then((res: any) => {\n      if (res) {\n        this.toastr.success(res.message);\n      }\n    });\n  }\n\n}","\n<!-- THIS COMPONENT IS USED IN VIEW CUSTOMER PAGE FOR CUSTOMER LOGS ONLY -->\n\n<section>\n    <ng-container *ngFor=\"let logList of filteredLogs\">\n        <header class=\"d-flex align-items-center\">\n            <button\n                class=\"btn-collapse\"\n                [class.btn-secondary]=\"!logList.isCollapsed\"\n                [class.btn-primary]=\"logList.isCollapsed\" \n                [title]=\"logList.isCollapsed ? 'Click to expand' : 'Click to collapse'\"\n                (click)=\"logList.isCollapsed = !logList.isCollapsed\">\n                <svg width=\"1.25rem\" viewBox=\"-3.24 -3.24 24.48 24.48\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\">\n                    <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                    <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\n                    <g id=\"SVGRepo_iconCarrier\">\n                        <path fill=\"#494c4e\" d=\"M17.707 5.707l-8 8a1 1 0 0 1-1.414 0l-8-8A1 1 0 0 1 1 4h16a1 1 0 0 1 .924.617A.97.97 0 0 1 18 5a1 1 0 0 1-.293.707z\">\n                        </path>\n                    </g>\n                </svg>\n            </button>\n            <h3 class=\"date-seperator\">\n                <span class=\"ms-2\">\n                    {{ logList.date | date:\"dd MMM, yyyy\" }}\n                </span>\n            </h3>\n        </header>\n        <ul class=\"timeline-logs\" [class.hidden]=\"logList.isCollapsed\">\n            <li *ngFor=\"let log of logList.logs\">\n                <h4 class=\"log-title\">\n                    <span>{{log.title | titlecase}}</span>\n                    <span class=\"ms-2\" style=\"color:var(--txt-500);font-size: .8rem;\">[{{ log?.sys_id ? 'LOG' + log?.sys_id : 'NA'}}]</span>\n                </h4>\n                <p class=\"log-subtitle\"> <span>{{log.timestamp | date:\"h:mma\"}}.</span> <span>{{log.user}}</span></p>\n                <div class=\"log-description\">\n                    <p [class.mb-3]=\"log?.vehicleDetailsDesc\" [innerHTML]=\"log.description\"></p>\n                    <p *ngIf=\"log?.vehicleDetailsDesc\" [innerHTML]=\"log?.vehicleDetailsDesc\"></p>\n                </div>\n            </li>\n        </ul>\n    </ng-container>\n    <button *ngIf=\"!hidePagination\" class=\"btn-primary ms-3\" (click)=\"loadlogs()\">Load More</button>\n\n</section>","import { TitleCasePipe } from '@angular/common';\nimport { Component, EventEmitter, inject, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { LogParseService } from 'src/app/services/log-parse.service';\n\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent {\n  @Output() loadMore = new EventEmitter<null>();\n  @Input() hidePagination = false;\n  filteredLogs:any = [];\n\n  logParseService = inject(LogParseService);\n  \n  \n  public filterLogsByDate(rawLogs:any[]) {\n    \n    const filteredLogs = rawLogs.reduce((acc:any[],item:any) => {\n      \n      // Normalize date to day, remove hours,second,milisecs\n      const date = new Date(item.timestamp)\n      date.setHours(0, 0, 0);\n      date.setMilliseconds(0);\n\n\n      // Check If this date already exist in array\n      const index = acc.findIndex((el:any) =>  el.date.getTime() === date.getTime());\n      \n      const parsedItem = this.logParseService.parseDetails(item);\n      // If date key already exist then push it\n      if(index !== -1) {\n        acc[index].logs.push(parsedItem)\n      } \n\n      // If not then create it and add it\n      else {\n        acc.push({date, isCollapsed:false, logs:[parsedItem]});\n      }\n\n      return acc;\n    },[])\n\n    // If last date of current log list and first element of paginated log list is same then merge them\n    if(this.filteredLogs.length && this.filteredLogs.at(-1).date.getTime() === filteredLogs[0].date.getTime()) {\n      this.filteredLogs.at(-1).logs.push(...filteredLogs[0].logs);\n      filteredLogs.splice(0, 1);\n    }\n    \n    this.filteredLogs.push(...filteredLogs);\n  }\n\n  loadlogs() {\n    this.loadMore.emit();\n  }\n\n\n\n}\n","<section class=\"page-container px-0\">\n    <app-timeline (loadMore)=\"loadLogs()\" [hidePagination]=\"isFinalPage\"></app-timeline>\n    <div *ngIf=\"!logsList.length\" class=\"no-data-fallback\">\n        <p>No logs found!</p>\n    </div>\n</section>","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { LogReportService } from '../../services/log-report.service';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { TimelineComponent } from 'src/app/shared-components/timeline/timeline.component';\n\n@Component({\n  selector: 'app-customer-timeline',\n  templateUrl: './customer-timeline.component.html',\n  styleUrls: ['./customer-timeline.component.scss']\n})\nexport class CustomerTimelineComponent {\n\n  page = 1;\n  pageSize = 50;\n  title = '';\n  fromDate: any;\n  toDate: any;\n  sortField: any;\n  sortOrder: any;\n  customer_uuid!:string;\n  isFinalPage = true;\n\n  logsList = [];\n  @ViewChild(TimelineComponent) timeline!:TimelineComponent;\n\n  constructor(private _titleservice: Title, private toastr: ToastrService,\n    private _logreportservice: LogReportService, private crud: CrudService, private route:ActivatedRoute,\n    public notification: NotificationsService,private cd:ChangeDetectorRef) {\n    this._titleservice.setTitle('Customer Timeline')\n  }\n\n  ngOnInit(): void {\n    this.customer_uuid = this.route.snapshot.paramMap.get('id') as string;\n    this.retrieveLogReport();\n  }\n\n  getRequestParams(params:any,searchTitle: string, page: number, pageSize: number): any {\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveLogReport(field?: string, order?: string): void {\n    let param: any = {};\n\n    if(field) {\n      this.sortField = field;\n      this.sortOrder = order;\n    }\n    if (this.sortField) {\n      param[`field`] = this.sortField;\n      param[`order_in`] = this.sortOrder;\n    }\n    this.getRequestParams(param,this.title, this.page, this.pageSize);\n\n    if(this.fromDate) {\n      param.from_date = this.fromDate;\n      param.to_date = this.toDate;\n    }\n\n    this._logreportservice.getLogReportsByID(param,this.customer_uuid).subscribe((res: any) => {\n      this.timeline.filterLogsByDate(res.data.results);\n      this.logsList = res.data.results;\n      this.isFinalPage = (res.data.next === null);\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n  }\n\n  loadLogs() {\n    this.page++;\n    this.retrieveLogReport();\n  }\n\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveLogReport();\n  }\n\n  onKeyUp(x: any) {\n    this.title = x.toLowerCase().replace('log', '');\n    this.page = 1;\n    this.retrieveLogReport();\n  }\n\n  \n\n  // Filter log reports list based on date range \n  searchByRange(isReset = false) {\n    if(isReset) {\n      this.fromDate = '';\n      this.toDate = '';\n    }\n    this.retrieveLogReport();\n  }\n\n\n\n}\n","<section class=\"add-user\">\n  <div class=\"add-user-inner overflow-hidden\">\n    <div class=\"d-flex justify-content-between align-items-center overflow-x-hidden bg-sm-light\">\n      <ul class=\"tab-list\">\n        <li [class.active]=\"tab === 'info'\" (click)=\"tab = 'info'\">Customer Details</li>\n        <!-- <li [class.active]=\"tab === 'timeline'\" (click)=\"tab = 'timeline'\">Customer Timeline</li> -->\n      </ul>\n      <button class=\"backBtn\" routerLink=\"/admin/customer/customer-detail\">\n        <i class=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div *ngIf=\"tab === 'info'\" class=\"addUser\">\n      <div class=\"profile-info\">\n        <div class=\"upload-pic\">\n          <img \n            [src]=\"image || 'assets/images/icon/avtarIcon.jpeg'\" \n            onerror=\"this.src = 'assets/images/icon/avtarIcon.jpeg'\"\n          alt=\"avatar\" />\n        </div>\n      </div>\n      <div class=\"formFields\">\n        <form [formGroup]=\"customerViewForm\">\n          <div *ngIf=\"userDetail?.user_type != 'INDIVIDUAL_CUSTOMER'\">\n            <label for=\"role\" class=\"form-label\">Business Name </label>\n            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"first_name\" class=\"form-label\">First Name </label>\n            <input type=\"text\" formControlName=\"first_name\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"lname\" class=\"form-label\">Last Name </label>\n            <input type=\"text\" formControlName=\"last_name\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"email\" class=\"form-label\">Email </label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"role\" class=\"form-label\">Customer Type </label>\n            <input type=\"text\" formControlName=\"user_type\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"role\" class=\"form-label\">Address Line 1</label>\n            <input type=\"text\" formControlName=\"address\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"role\" class=\"form-label\">Address Line 2 </label>\n            <input type=\"text\" formControlName=\"address_2\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"role\" class=\"form-label\">City </label>\n            <input type=\"text\" formControlName=\"city\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"role\" class=\"form-label\">State</label>\n            <input type=\"text\" formControlName=\"state\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"role\" class=\"form-label\">Country</label>\n            <input type=\"text\" formControlName=\"country\" class=\"form-control readonly\" readonly>\n          </div>\n          <div>\n            <label for=\"role\" class=\"form-label\">Phone No.</label>\n            <input type=\"text\" formControlName=\"phone_no\" class=\"form-control readonly\" readonly>\n          </div>\n          <div *ngIf=\"userDetail?.user_type == 'INDIVIDUAL_CUSTOMER'\">\n            <label for=\"role\" class=\"form-label\">Product Name </label>\n            <input type=\"text\" formControlName=\"product_name\" class=\"form-control readonly\" readonly>\n          </div>\n          <div *ngIf=\"userDetail?.user_type == 'INDIVIDUAL_CUSTOMER'\">\n            <label for=\"role\" class=\"form-label\">Tool Serial Number </label>\n            <input type=\"text\" formControlName=\"tool_serial_number\" class=\"form-control readonly\" readonly>\n          </div>\n          <div *ngIf=\"userDetail?.user_type != 'INDIVIDUAL_CUSTOMER'\">\n            <label for=\"role\" class=\"form-label\">Tax Number </label>\n            <input type=\"text\" formControlName=\"tax_number\" class=\"form-control readonly\" readonly>\n          </div>\n          <div *ngIf=\"userDetail?.user_type != 'INDIVIDUAL_CUSTOMER'\">\n            <label for=\"role\" class=\"form-label\">Company Number</label>\n            <input type=\"text\" formControlName=\"company_number\" class=\"form-control readonly\" readonly>\n          </div>\n          <div *ngIf=\"userDetail?.user_type != 'INDIVIDUAL_CUSTOMER'\">\n            <label for=\"des\" class=\"form-label\"> WIN OLS License Number </label>\n            <input type=\"text\" class=\"form-control readonly\" formControlName=\"win_ols_license_number\" readonly>\n          </div>\n        </form>\n      </div>\n    </div>\n    <app-customer-timeline *ngIf=\"tab === 'timeline'\"></app-customer-timeline>\n  </div>\n</section>\n<!-- Force build -->","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-view-customer',\n  templateUrl: './view-customer.component.html',\n  styleUrls: ['./view-customer.component.scss']\n})\nexport class ViewCustomerComponent implements OnInit {\n  tab = 'info'\n  image: any = '';\n  customer_uuid: any = '';\n  customerViewForm: FormGroup;\n  userDetail: any;\n  constructor(\n    private _titleservice: Title,\n    private route: ActivatedRoute,\n    private _customerservice: CustomerService,\n    private fb: FormBuilder,\n  ) {\n\n    this._titleservice.setTitle('Customer details');\n\n    this.customerViewForm = this.fb.group({\n      first_name: [''],\n      last_name: [''],\n      phone_no: [''],\n      country_code: [''],\n      email: [''],\n      address: [''],\n      address_2: [''],\n      country: [''],\n      state: [''],\n      city: [''],\n      zip: [''],\n      product_name: [''],\n      tool_serial_number: [''],\n      // business\n      bussness_name: [''],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: [''],\n      user_type: ['']\n    });\n\n  }\n\n  ngOnInit(): void {\n\n    this.customer_uuid = this.route.snapshot.paramMap.get('id');\n    this.getCustomerDetail();\n  }\n\n  getCustomerDetail() {\n    this._customerservice.getCustomerByUuid(this.customer_uuid).subscribe((res: any) => {\n      this.userDetail = res.data;\n\n      this.image = res.data.image;\n      let customerdetail = {\n        \"first_name\": res.data?.first_name,\n        \"last_name\": res.data?.last_name,\n        \"user_type\": res.data?.user_type.replace('_', ' '),\n        \"email\": res.data?.email,\n        \"phone_no\":  `${res.data?.country_code ? `+${res.data?.country_code}` : ''}${res.data?.phone_no}`,\n        \"address\": res.data?.address_user?.address,\n        \"address_2\": res.data?.address_user?.address_2,\n        \"country\": res.data?.address_user?.country,\n        \"state\": res.data?.address_user?.state,\n        \"city\": res.data?.address_user?.city,\n        \"zip\": res.data?.address_user?.zip,\n        \"product_name\": res.data?.individual_user?.product_name,\n        \"tool_serial_number\": res.data?.individual_user?.tool_serial_number,\n        // business\n        \"bussness_name\": res.data?.business_user?.bussness_name,\n        \"tax_number\": res.data?.business_user?.tax_number,\n        \"company_number\": res.data?.business_user?.company_number,\n        \"win_ols_license_number\": res.data?.business_user?.win_ols_license_number,\n      };\n      if (this.userDetail.user_type == 'DEALER' || this.userDetail.user_type == 'RESELLER') {\n        customerdetail.bussness_name = res.data?.reseller_sub_dealer?.bussness_name;\n        customerdetail.tax_number = res.data?.reseller_sub_dealer?.tax_number;\n        customerdetail.company_number = res.data?.reseller_sub_dealer?.company_number;\n        customerdetail.win_ols_license_number = res.data?.reseller_sub_dealer?.win_ols_license_number;\n      }\n      this.customerViewForm.patchValue(customerdetail);\n    },\n      (err: any) => {\n      })\n  }\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Customer</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer/upload-csv\" routerLinkActive=\"active\">Upload CSV</a>\n        </li>\n\n    </ul>\n    <div class=\"ulist-div\">\n        <div>\n            <div class=\"u-add\">\n                <h2> Import {{type.replace('_', ' ') | titlecase}} Customers</h2>\n            </div>\n            <hr />\n            <p>Import customers using  <a\n                    [href]=\"\n                        type=='individual' ? \n                        '../../../../assets/csv_sample_files/individual.xlsx' : \n                        type=='sub_dealer' ? \n                        '../../../../assets/csv_sample_files/subDealer.xlsx' : \n                        type=='reseller' ? \n                        '../../../../assets/csv_sample_files/reseller.xlsx' : \n                        '../../../../assets/csv_sample_files/business.xlsx'\">sample\n                    csv or xlsx file.</a></p>\n            <div class=\"image-upload-wrap\">\n                <input type=\"file\" #takeInput accept=\".xlsx\" class=\"file-upload-input\" (change)=\"onFileChange($event)\">\n                <div class=\"drag-text\">\n                    <img src=\"assets/images/icon/exportCsv.png\" alt=\"upload csv\">\n                    <h4>\n                        <p *ngIf=\"!filename\">Drop or upload your file here</p>\n                        <span *ngIf=\"!filename\"> (.CSV, .XLSX formats supported) </span>\n                        <span *ngIf=\"filename\"> {{filename |titlecase }} File Uploaded </span>\n                    </h4>\n                </div>\n            </div>\n            <div class=\"alert alert-primary\">\n                <i class=\"fa fa-info-circle\"></i><span>\n                    To make sure every record is imported, check if your file has data in\n                    <strong class=\"text-primary\"> these mandatory fields <i class=\"fa fa-info-circle\"\n                            style=\"cursor: pointer;\"></i></strong></span>\n            </div>\n            <div class=\"btnDiv\">\n                <button class=\"sbtn\" routerLink=\"/admin/customer/customer-detail\">Cancel</button>\n                <button class=\"fbtn\" [disabled]=\"filename == '' || filename == undefined\" routerLink=\"/admin/customer/import-csv\" (click)=\"goToImportFile()\">Next</button>\n            </div>\n        </div>\n    </div>\n\n\n</section>","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as XLSX from 'xlsx';\nimport { read, utils, writeFile } from 'xlsx';\n@Component({\n  selector: 'app-upload-csv',\n  templateUrl: './upload-csv.component.html',\n  styleUrls: ['./upload-csv.component.scss']\n})\nexport class UploadCsvComponent {\n  @ViewChild(\"takeInput\", { static: false })\n  InputVar!: ElementRef;\n  jsonData: any;\n  filename: any;\n  isFile: boolean = false;\n  type: any;\n  constructor( private router: Router, private _Activatedroute: ActivatedRoute) {\n    this.type = this._Activatedroute.snapshot.paramMap.get(\"type\");\n  }\n  ngOnInit(){ }\n  onFileChange($event: any) {\n    this.isFile = false;\n    const files = $event.target.files;\n    if (files.length) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        const wb = read(event.target.result);\n        const sheets = wb.SheetNames;\n\n        if (sheets.length) {\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n          this.jsonData = rows;\n          this.filename = file.name;\n        }\n      }\n      reader.readAsArrayBuffer(file);\n\n    }\n  }\n\n  goToImportFile() {\n    if (typeof (this.jsonData) == 'undefined') {\n      this.isFile = true;\n    }\n    else {\n      this.router.navigate(['/admin/customer/import-csv', JSON.stringify(this.jsonData)],{ queryParams: { type: this.type }});\n    }\n\n  }\n}\n","<section class=\"user-list\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Customer</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer/upload-csv\" routerLinkActive=\"active\">Upload CSV</a>\n    </li>\n\n  </ul>\n\n  <div class=\"ulist-div\">\n    <div>\n      <div class=\"u-add\">\n        <h2>\n          <a *ngIf=\"csvUserType == 'individual'\" routerLink=\"/admin/customer/upload-csv/individual\"><i\n              aria-hidden=\"true\" class=\"fa fa-long-arrow-left\"></i>&nbsp;Import CSV</a>\n          <a *ngIf=\"csvUserType == 'business'\" routerLink=\"/admin/customer/upload-csv/business\"><i aria-hidden=\"true\"\n              class=\"fa fa-long-arrow-left\"></i>&nbsp;Import CSV</a>\n          <a *ngIf=\"csvUserType == 'reseller'\" routerLink=\"/admin/customer/upload-csv/reseller\"><i aria-hidden=\"true\"\n              class=\"fa fa-long-arrow-left\"></i>&nbsp;Import CSV</a>\n          <a *ngIf=\"csvUserType == 'sub_dealer'\" routerLink=\"/admin/customer/upload-csv/sub_dealer\"><i aria-hidden=\"true\"\n            class=\"fa fa-long-arrow-left\"></i>&nbsp;Import CSV</a>\n        </h2>\n      </div>\n      <hr />\n    </div>\n\n    <div class=\"responsive-tbl\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th *ngFor=\"let head of tableHeader\"> {{head.headTag}} </th>\n          </tr>\n        </thead>\n        <tbody *ngIf=\"type['_value'].type == 'individual'\">\n          <tr *ngFor=\"let individual of customerArr; let i=index;\">\n            <td> {{i+1}} </td>\n            <td> {{individual.first_name}} </td>\n            <td> {{individual.last_name}} </td>\n\n            <td>\n              <p class=\"m-0\" [ngStyle]=\"{'color': individual.email_error==true ? 'red' : ''}\">\n                {{individual.email}} </p>\n              <span *ngIf=\"individual.email_error\" style=\"color:#e55a5a;font-size:14px;\">\n                {{individual.email_msg || ''}} </span>\n            </td>\n            <td> {{individual.address}} </td>\n            <td> {{individual.address_2}} </td>\n            <td> {{individual.state || \"-\"}} </td>\n            <td> {{individual.city || \"-\"}} </td>\n            <td> {{individual.country || \"-\"}} </td>\n            <ng-container *ngTemplateOutlet=\"countryCode;context:{$implicit:individual}\"></ng-container>\n            <td>\n              <span *ngIf=\"individual.phone_no_error;then error1 else success1\">here is ignored</span>\n              <ng-template #error1> <span class=\"text-danger\"> {{individual.phone_no_msg}} </span> </ng-template>\n              <ng-template #success1> {{individual.phone_no}} </ng-template>\n            </td>\n            <td> {{individual.zip || \"-\"}} </td>\n            <td>\n              <p class=\"m-0\" [ngStyle]=\"{'color': individual.product_name_error==true ? 'red' : ''}\">\n                {{individual.product_name}} </p>\n              <span *ngIf=\"individual.product_name_error\" style=\"color:#e55a5a;font-size:14px;\">\n                {{individual.product_name_msg || ''}} </span>\n            </td>\n            <td> {{individual.tool_serial_number}} </td>\n\n            <!-- Credits -->\n            <td> {{individual.file_key_credit}} </td>\n            <td> {{individual.function_key_credit}} </td>\n            <td> {{individual.evc_key_credit}} </td>\n          </tr>\n        </tbody>\n        <tbody *ngIf=\"type['_value'].type == 'business' || type['_value'].type == 'reseller'\">\n          <tr *ngFor=\"let business of customerArr; let i=index;\">\n            <td> {{i+1}} </td>\n            <td>\n              <span *ngIf=\"business.business_name_error;then error else success\">here is ignored</span>\n              <ng-template #error> <span class=\"text-danger\"> {{business.business_name_msg}} </span> </ng-template>\n              <ng-template #success> {{business.business_name}} </ng-template>\n            </td>\n            <td> {{business.first_name}} </td>\n            <td> {{business.last_name}} </td>\n            <td>\n              <p [ngStyle]=\"{'color': business.email_error==true ? 'red' : ''}\" class=\"m-0\">\n                {{business.email}} </p>\n              <span *ngIf=\"business.email_error\" style=\"color:#e55a5a;font-size:14px;\">\n                {{business.email_msg || ''}} </span>\n            </td>\n            <td> {{ business.address || \"\" }} </td>\n            <td> {{business.address_2 || \"-\"}} </td>\n            <td> {{business.city || \"-\"}} </td>\n            <td> {{business.state || \"-\"}} </td>\n            <td> {{business.country || \"-\"}} </td>\n            <td> {{business.zip || \"-\"}} </td>\n            <ng-container *ngTemplateOutlet=\"countryCode;context:{$implicit:business}\"></ng-container>\n\n            <td>\n              <span *ngIf=\"business.phone_no_error;then error1 else success1\">here is ignored</span>\n              <ng-template #error1> <span class=\"text-danger\"> {{business.phone_no_msg}} </span> </ng-template>\n              <ng-template #success1> {{business.phone_no}} </ng-template>\n            </td>\n            <td> {{business.tax_number || \"-\"}} </td>\n            <td> {{business.company_number || \"-\"}} </td>\n            <td> {{business.win_ols_license_number || \"-\"}} </td>\n\n            <!-- Credits -->\n            <td> {{business.file_key_credit}} </td>\n            <td> {{business.function_key_credit}} </td>\n            <td> {{business.evc_key_credit}} </td>\n            <!-- <td>\n              <p class=\"m-0\" [ngStyle]=\"{'color': business.product_name_error==true ? 'red' : ''}\">\n                {{business.product_name}} </p>\n              <span *ngIf=\"business.product_name_error\" style=\"color:#e55a5a;font-size:14px;\">\n                {{business.product_name_msg || ''}} </span>\n            </td>\n            <td> {{business.tool_serial_number}} </td> -->\n\n          </tr>\n\n        </tbody>\n        <tbody *ngIf=\"type['_value'].type == 'sub_dealer'\">\n          <tr *ngFor=\"let business of customerArr; let i=index;\">\n            <td> {{i+1}} </td>\n            <td>\n              <span *ngIf=\"business.business_name_error;then error else success\">here is ignored</span>\n              <ng-template #error> <span class=\"text-danger\"> {{business.business_name_msg}} </span> </ng-template>\n              <ng-template #success> {{business.business_name}} </ng-template>\n            </td>\n\n            <td> {{business.first_name}} </td>\n            <td> {{business.last_name}} </td>\n            <td>\n              <p [ngStyle]=\"{'color': business.email_error==true ? 'red' : ''}\" class=\"m-0\">\n                {{business.email}} </p>\n              <span *ngIf=\"business.email_error\" style=\"color:#e55a5a;font-size:14px;\">\n                {{business.email_msg || ''}} </span>\n            </td>\n            <td>\n              <p [ngStyle]=\"{'color': business.reseller_email_error==true ? 'red' : ''}\" class=\"m-0\">\n                {{business.reseller_email}} </p>\n              <span *ngIf=\"business.reseller_email_error\" style=\"color:#e55a5a;font-size:14px;\">\n                {{business.reseller_email_msg || ''}} </span>\n            </td>\n\n            <td> {{business.address || \"-\"}} </td>\n            <td> {{business.address_2 || \"-\"}} </td>\n            <td> {{business.city || \"-\"}} </td>\n            <td> {{business.state || \"-\"}} </td>\n            <td> {{business.country || \"-\"}} </td>\n            <td> {{business.zip || \"-\"}} </td>\n            <ng-container *ngTemplateOutlet=\"countryCode;context:{$implicit:business}\"></ng-container>\n            <td>\n              <span *ngIf=\"business.phone_no_error;then error1 else success1\">here is ignored</span>\n              <ng-template #error1> <span class=\"text-danger\"> {{business.phone_no_msg}} </span> </ng-template>\n              <ng-template #success1> {{business.phone_no}} </ng-template>\n            </td>\n            <!-- <td>\n              <p class=\"m-0\" [ngStyle]=\"{'color': business.product_name_error==true ? 'red' : ''}\">\n                {{business.product_name}} </p>\n              <span *ngIf=\"business.product_name_error\" style=\"color:#e55a5a;font-size:14px;\">\n                {{business.product_name_msg || ''}} </span>\n            </td>\n            <td> {{business.tool_serial_number}} </td> -->\n            <td> {{business.tax_number || \"-\"}} </td>\n            <td> {{business.company_number || \"-\"}} </td>\n            <td> {{business.win_ols_license_number || \"-\"}} </td>\n\n            <!-- Credits -->\n            <td> {{business.file_key_credit}} </td>\n            <td> {{business.function_key_credit}} </td>\n            <td> {{business.evc_key_credit}} </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <button class=\"btn btn-primary upload-btn\" [disabled]=\"!isCountryCodeValid || isUploadDisable\" (click)=\"uploadCsvFile()\">Upload .CSV\n      File</button>\n  </div>\n\n\n\n</section>\n\n<ng-template #countryCode let-form>\n  <td>\n    <div>\n      {{form.country_code || \"-\"}} \n    </div>\n    <div *ngIf=\"!isValidCode(form.country_code)\">\n      <small class=\"text-danger\" style=\"font-size: .8rem;\">\n        Please input a valid country code.\n      </small>\n    </div>\n  </td>\n</ng-template>","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Component({\n  selector: 'app-import-csv',\n  templateUrl: './import-csv.component.html',\n  styleUrls: ['./import-csv.component.scss']\n})\nexport class ImportCsvComponent {\n  jsonData: any;\n  customerArr: any = [];\n  isUploadDisable: boolean = false;\n\n  editphoneerror: boolean = true;\n  type: any = this._Activatedroute.queryParams\n  tableHeader: any;\n  csvUserType: any;\n\n  list:any = {\n    1: \"US\", 7: \"RU\", 20: \"EG\", 27: \"ZA\", 30: \"GR\", 31: \"NL\", 32: \"BE\", 33: \"FR\", \n    34: \"ES\", 36: \"HU\", 39: \"IT\", 40: \"RO\", 41: \"CH\", 43: \"AT\", 44: \"GB\", \n    45: \"DK\", 46: \"SE\", 47: \"NO\", 48: \"PL\", 49: \"DE\", 51: \"PE\", 52: \"MX\", \n    53: \"CU\", 54: \"AR\", 55: \"BR\", 56: \"CL\", 57: \"CO\", 58: \"VE\", 60: \"MY\", \n    61: \"AU\", 62: \"ID\", 63: \"PH\", 64: \"NZ\", 65: \"SG\", 66: \"TH\", 81: \"JP\", \n    82: \"KR\", 84: \"VN\", 86: \"CN\", 90: \"TR\", 91: \"IN\", 92: \"PK\", 93: \"AF\", \n    94: \"LK\", 98: \"IR\", 211: \"SS\", 212: \"MA\", 213: \"DZ\", 216: \"TN\", 218: \"LY\", \n    220: \"GM\", 221: \"SN\", 222: \"MR\", 223: \"ML\", 224: \"GN\", 225: \"CI\", 226: \"BF\", \n    227: \"NE\", 228: \"TG\", 229: \"BJ\", 230: \"MU\", 231: \"LR\", 232: \"SL\", 233: \"GH\", \n    234: \"NG\", 235: \"TD\", 236: \"CF\", 237: \"CM\", 238: \"CV\", 239: \"ST\", 240: \"GQ\", \n    241: \"GA\", 242: \"CG\", 243: \"CD\", 244: \"AO\", 245: \"GW\", 246: \"IO\", 247: \"AC\", \n    248: \"SC\", 249: \"SD\", 250: \"RW\", 251: \"ET\", 252: \"SO\", 253: \"DJ\", 254: \"KE\", \n    255: \"TZ\", 256: \"UG\", 257: \"BI\", 258: \"MZ\", 260: \"ZM\", 261: \"MG\", 262: \"RE\", \n    263: \"ZW\", 264: \"NA\", 265: \"MW\", 266: \"LS\", 267: \"BW\", 268: \"SZ\", 269: \"KM\", \n    291: \"ER\", 297: \"AW\", 501: \"BZ\", 502: \"GT\", 503: \"SV\", 504: \"HN\", 505: \"NI\", \n    506: \"CR\", 507: \"PA\", 509: \"HT\", 590: \"GP\", 591: \"BO\", 592: \"GY\", 593: \"EC\", \n    594: \"GF\", 595: \"PY\", 596: \"MQ\", 597: \"SR\", 598: \"UY\", 670: \"TL\", 672: \"NF\", \n    673: \"BN\", 674: \"NR\", 675: \"PG\", 676: \"TO\", 677: \"SB\", 678: \"VU\", 679: \"FJ\", \n    680: \"PW\", 681: \"WF\", 682: \"CK\", 683: \"NU\", 685: \"WS\", 686: \"KI\", 687: \"NC\", \n    691: \"FM\", 960: \"MV\", 961: \"LB\", 962: \"JO\", 963: \"SY\", 964: \"IQ\", \n    965: \"KW\", 966: \"SA\", 967: \"YE\", 968: \"OM\", 970: \"PS\", 971: \"AE\", 972: \"IL\", \n    973: \"BH\", 974: \"QA\", 975: \"BT\", 976: \"MN\", 977: \"NP\", 992: \"TJ\", 993: \"TM\", \n    994: \"AZ\", 995: \"GE\", 996: \"KG\", 998: \"UZ\"\n  };\n  \n\n  constructor(\n    private _Activatedroute: ActivatedRoute, private crud: CrudService,\n    private toastr: ToastrService, private router: Router\n  ) {\n    this.jsonData = JSON.parse(this._Activatedroute.snapshot.paramMap.get(\"file\") || '{}');\n  }\n\n  isCountryCodeValid = false\n  isValidCode(code:number) {\n    const val = this.list?.[code];\n    this.isCountryCodeValid = !!val;\n    console.log(this.isCountryCodeValid,'showCode');\n    \n    return val;\n  }\n  ngOnInit(): void {\n    this.csvUserType = this.type['_value'].type;\n    if (this.csvUserType == 'individual') {\n      this.tableHeader = [\n        { headTag: 'First Name' },\n        { headTag: 'Last Name' },\n        { headTag: 'Email' },\n        { headTag: 'Address Line 1' },\n        { headTag: 'Address Line 2' },\n        { headTag: 'City' },\n        { headTag: 'State' },\n        { headTag: 'Country' },\n        { headTag: 'Country code' },\n        { headTag: 'Phone No' },\n        { headTag: 'Zip' },\n        { headTag: 'Product Name' },\n        { headTag: 'Tool Serial Number' },\n      ]\n    }\n    else if (this.csvUserType == 'business') {\n      this.tableHeader = [\n        { headTag: 'Business Name' },\n        { headTag: 'First Name' },\n        { headTag: 'Last Name' },\n        { headTag: 'Email' },\n        { headTag: 'Address Line 1' },\n        { headTag: 'Address Line 2' },\n        { headTag: 'City' },\n        { headTag: 'State' },\n        { headTag: 'Country' },\n        { headTag: 'Zip' },\n        { headTag: 'Country code' },\n        { headTag: 'Phone No' },\n        { headTag: 'Tax Number' },\n        { headTag: 'Company No.' },\n        { headTag: 'Win Ols License No.' },\n\n      ]\n    }\n    else if (this.csvUserType == 'reseller') {\n      this.tableHeader = [\n        { headTag: 'Business Name' },\n        { headTag: 'First Name' },\n        { headTag: 'Last Name' },\n        { headTag: 'Email' },\n        { headTag: 'Address Line 1' },\n        { headTag: 'Address Line 2' },\n        { headTag: 'City' },\n        { headTag: 'State' },\n        { headTag: 'Country' },\n        { headTag: 'Zip' },\n        { headTag: 'Country code' },\n        { headTag: 'Phone No' },\n        { headTag: 'Tax Number' },\n        { headTag: 'Company No.' },\n        { headTag: 'Win Ols License No.' },\n      ]\n    }\n    else if (this.csvUserType == 'sub_dealer') {\n      this.tableHeader = [\n        { headTag: 'Business Name' },\n        { headTag: 'First Name' },\n        { headTag: 'Last Name' },\n        { headTag: 'Email' },\n        { headTag: 'Reseller Email' },\n        { headTag: 'Address Line 1' },\n        { headTag: 'Address Line 2' },\n        { headTag: 'City' },\n        { headTag: 'State' },\n        { headTag: 'Country' },\n        { headTag: 'Zip' },\n        { headTag: 'Country code' },\n        { headTag: 'Phone No' },\n        { headTag: 'Tax Number' },\n        { headTag: 'Company No.' },\n        { headTag: 'Win Ols License No.' },\n      ]\n    }\n    // Credits\n    this.tableHeader.push(...[\n      { headTag: 'File key credits' },\n      { headTag: 'Function key credits' },\n      { headTag: 'Evc key credits' },\n    ])\n\n\n    this.jsonData.forEach((value: any) => {\n      console.log(value,'value');\n\n      if (value != this.jsonData.length) {\n        if (this.csvUserType == 'individual') {\n          let data = {\n            \"first_name\": value['First Name'],\n            \"first_name_error\": typeof (value['First Name']) == 'undefined' ? true : false,\n            \"first_name_msg\": 'Required',\n            \"last_name\": value['Last Name'],\n            \"last_name_error\": typeof (value['Last Name']) == 'undefined' ? true : false,\n            \"last_name_msg\": 'Required',\n            \"email\": value['Email Address'],\n            \"email_error\": this.emailValidate(value['Email Address']),\n            \"email_msg\": 'Invalid or duplicate email',\n            \"phone_no\": this.fixCodeInPhone(value['Phone Number']),\n            \"phone_no_error\": !(this.fixCodeInPhone(value['Phone Number'])),\n            \"phone_no_msg\": 'Invalid or duplicate phone',\n            \"address\": value['Address Line 1'] || '',\n            \"address_2\": value['Address Line 2'] || '',\n            \"state\": value['State'] || '',\n            \"city\": value['City'] || '',\n            \"country\": value['Country'] || '',\n            \"zip\": value['Zip'] || '',\n            \"product_name\": value['Product Name'] || '',\n            \"product_name_error\": false,\n            \"product_name_msg\": '',\n            \"tool_serial_number\": value['Tool Serial Number'] || '',\n            \"country_code\": value['Country code'] || '',\n\n\n            // Credits\n            \"file_key_credit\": value[\"File key credits\"] || 0,\n            \"function_key_credit\": value[\"Function key credits\"] || 0,\n            \"evc_key_credit\": value[\"EVC key credits\"] || 0,\n          };\n\n          if (data.first_name_error || data.last_name_error || data.email_error || data.phone_no_error) {\n            this.isUploadDisable = true;\n          }\n          this.customerArr.push(data);\n        }\n        else if (this.csvUserType == 'business') {\n          let data = {\n            \"business_name\": value['Business Name'],\n            \"business_name_error\": typeof (value['Business Name']) == 'undefined' ? true : false,\n            \"business_name_msg\": 'Required',\n            \"tax_number\": value['Tax Number'] || '',\n            \"company_number\": value['Company Number'] || '',\n            \"win_ols_license_number\": value['Win Ols License Number'] || '',\n            \"first_name\": value['First Name'],\n            \"first_name_error\": typeof (value['First Name']) == 'undefined' ? true : false,\n            \"first_name_msg\": 'Required',\n            \"last_name\": value['Last Name'],\n            \"last_name_error\": typeof (value['Last Name']) == 'undefined' ? true : false,\n            \"last_name_msg\": 'Required',\n            \"email\": value['Email Address'],\n            \"email_error\": this.emailValidate(value['Email Address']),\n            \"email_msg\": 'Invalid or duplicate email',\n            \"phone_no\": this.fixCodeInPhone(value['Phone Number']),\n            \"phone_no_error\": !(this.fixCodeInPhone(value['Phone Number'])),\n            \"phone_no_msg\": 'Invalid or duplicate phone',\n            \"address\": value['Address Line 1'] || '',\n            \"address_2\": value['Address Line 2'] || '',\n            \"state\": value['State'] || '',\n            \"city\": value['City'] || '',\n            \"country\": value['Country'] || '',\n            \"zip\": value['Zip'] || '',\n            \"country_code\": value['Country code'] || '',\n\n\n            // Credits\n            \"file_key_credit\": value[\"File key credits\"] || 0,\n            \"function_key_credit\": value[\"Function key credits\"] || 0,\n            \"evc_key_credit\": value[\"EVC key credits\"] || 0,\n            // \"product_name\": value['Product Name'] || '',\n            // \"product_name_error\": typeof (value['Product Name']) == 'undefined' ? true : false,\n            // \"product_name_msg\": '',\n            // \"tool_serial_number\": value['Tool Serial Number'] || '',\n          };\n\n          if (data.first_name_error || data.business_name_error || data.last_name_error || data.email_error || data.phone_no_error) {\n            this.isUploadDisable = true;\n          }\n          this.customerArr.push(data);\n        }\n        else if (this.csvUserType == 'reseller') {\n          \n          let data = {\n            \"business_name\": value['Business Name'],\n            \"business_name_error\": typeof (value['Business Name']) == 'undefined' ? true : false,\n            \"business_name_msg\": 'Required',\n            \"tax_number\": value['Tax Number'] || '',\n            \"company_number\": value['Company Number'] || '',\n            \"win_ols_license_number\": value['Win Ols License Number'] || '',\n            \"first_name\": value['First Name'],\n            \"first_name_error\": typeof (value['First Name']) == 'undefined' ? true : false,\n            \"first_name_msg\": 'Required',\n            \"last_name\": value['Last Name'],\n            \"last_name_error\": typeof (value['Last Name']) == 'undefined' ? true : false,\n            \"last_name_msg\": 'Required',\n            \"email\": value['Email Address'],\n            \"email_error\": this.emailValidate(value['Email Address']),\n            \"email_msg\": 'Invalid or duplicate email',\n            \"phone_no\": this.fixCodeInPhone(value['Phone Number']),\n            \"phone_no_error\": !(this.fixCodeInPhone(value['Phone Number'])),\n            \"phone_no_msg\": 'Invalid or duplicate phone',\n            \"address\": value['Address Line 1'] || '',\n            \"address_2\": value['Address Line 2'] || '',\n            \"state\": value['State'] || '',\n            \"city\": value['City'] || '',\n            \"country\": value['Country'] || '',\n            \"zip\": value['Zip'] || '',\n            \"country_code\": value['Country code'] || '',\n\n\n            // Credits\n            \"file_key_credit\": value[\"File key credits\"] || 0,\n            \"function_key_credit\": value[\"Function key credits\"] || 0,\n            \"evc_key_credit\": value[\"EVC key credits\"] || 0,\n            // \"product_name\": value['Product Name'] || '',\n            // \"product_name_error\": typeof (value['Product Name']) == 'undefined' ? true : false,\n            // \"product_name_msg\": '',\n            // \"tool_serial_number\": value['Tool Serial Number'] || '',\n          };\n\n          if (data.first_name_error || data.business_name_error || data.last_name_error || data.email_error || data.phone_no_error) {\n            this.isUploadDisable = true;\n          }\n          this.customerArr.push(data);\n        }\n        else if (this.csvUserType == 'sub_dealer') {\n          let data = {\n            \"business_name\": value['Business Name'],\n            \"business_name_error\": typeof (value['Business Name']) == 'undefined' ? true : false,\n            \"business_name_msg\": 'Required',\n            \"tax_number\": value['Tax Number'] || '',\n            \"company_number\": value['Company Number'] || '',\n            \"win_ols_license_number\": value['Win Ols License Number'] || '',\n            \"first_name\": value['First Name'],\n            \"first_name_error\": typeof (value['First Name']) == 'undefined' ? true : false,\n            \"first_name_msg\": 'Required',\n            \"last_name\": value['Last Name'],\n            \"last_name_error\": typeof (value['Last Name']) == 'undefined' ? true : false,\n            \"last_name_msg\": 'Required',\n            \"email\": value['Email Address'],\n            \"email_error\": this.emailValidate(value['Email Address']),\n            \"email_msg\": 'Invalid or duplicate email',\n\n            \"reseller_email\": value['Reseller Email'],\n            \"reseller_email_error\": this.resellerEmailValidate(value['Reseller Email']),\n            \"reseller_email_msg\": 'Invalid or duplicate email',\n\n            \"phone_no\": this.fixCodeInPhone(value['Phone Number']),\n            \"phone_no_error\": !(this.fixCodeInPhone(value['Phone Number'])),\n            \"phone_no_msg\": 'Invalid or duplicate phone',\n            \"address\": value['Address Line 1'] || '',\n            \"address_2\": value['Address Line 2'] || '',\n            \"state\": value['State'] || '',\n            \"city\": value['City'] || '',\n            \"country\": value['Country'] || '',\n            \"zip\": value['Zip'] || '',\n            \"country_code\": value['Country code'] || '',\n\n            // Credits\n            \"file_key_credit\": value[\"File key credits\"] || 0,\n            \"function_key_credit\": value[\"Function key credits\"] || 0,\n            \"evc_key_credit\": value[\"EVC key credits\"] || 0,\n            // \"product_name\": value['Product Name'] || '',\n            // \"product_name_error\": typeof (value['Product Name']) == 'undefined' ? true : false,\n            // \"product_name_msg\": '',\n            // \"tool_serial_number\": value['Tool Serial Number'] || '',\n          };\n\n          if (data.first_name_error || data.business_name_error || data.last_name_error || data.email_error || data.phone_no_error) {\n            this.isUploadDisable = true;\n          }\n          this.customerArr.push(data);\n        }\n      }\n    });\n\n  }\n\n\n  uniqueValidation(arrayObj: any, colName: any, matchvalue: any) {\n    let count = 0;\n    arrayObj.forEach((value: any, index: any) => {\n      if (value[colName] == matchvalue) {\n        count = count + 1;\n      }\n    });\n    return count == 1 ? false : true;\n  };\n\n\n  fixCodeInPhone(phone: any) {\n    // let codewithphone = \"+\" + parseInt(phone);\n    const num = phone;\n    console.log(num,'number');\n    \n    return num;\n\n  }\n\n  phoneValidate(phone: any) {\n    if (/^\\+(?:[0-9] ?){6,14}[0-9]$/.test(phone)) {\n      return this.uniqueValidation(this.jsonData, 'Phone Number', phone);\n    }\n    else {\n      return true;\n    }\n  }\n\n  emailValidate(email: any) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return this.uniqueValidation(this.jsonData, 'Email Address', email);\n    }\n    else {\n      return true;\n    }\n  }\n  resellerEmailValidate(email: any) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  uploadCsvFile() {\n    let body = {\n      data: this.customerArr\n    }\n    if (this.csvUserType == 'individual') {\n      this.crud.csvPostRequest(requestUrl.importIndividual, body).then((res: any) => {\n        if (res.error) {\n          this.customerArr = res.error.data;\n        }\n        else {\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('admin/customer/customer-detail');\n        }\n      })\n    }\n    else if (this.csvUserType == 'business') {\n      this.crud.csvPostRequest(requestUrl.importBusiness, body).then((res: any) => {\n\n        if (res.error) {\n          this.customerArr = res.error.data;\n        }\n        else {\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('admin/customer/customer-detail');\n        }\n      })\n    }\n    else if (this.csvUserType == 'reseller') {\n      this.crud.csvPostRequest(requestUrl.importReseller, body).then((res: any) => {\n        if (res.error) {\n          this.customerArr = res.error.data;\n        }\n        else {\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('admin/customer/customer-detail');\n        }\n      })\n    }\n    else if (this.csvUserType == 'sub_dealer') {\n      this.crud.csvPostRequest(requestUrl.importSubDealer, body).then((res: any) => {\n        if (res.error) {\n          this.customerArr = res.error.data;\n        }\n        else {\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('admin/customer/customer-detail');\n        }\n      })\n    }\n  }\n\n}\n","<section class=\"user-list\">\n    <div class=\"ulist-div\">\n        <div class=\"u-add after-seperator\">\n            <h2 class=\"main-title\" routerLink=\"/admin/customer/addCustomer\">Add Customer</h2>\n            <button class=\"backBtn\" routerLink=\"/admin/customer/customer-detail\">\n                <i class=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n        <div class=\"\">\n            <div class=\"container-fluid \">\n                <div class=\"row inner-box\">\n                    <div class=\"col-sm-12 mob-right\">\n                        <div class=\"register-box\">\n                            <div class=\"register-box-inner\">\n                                <div class=\"mb-3 mt-3\">\n                                    <div class=\"flex trade\">\n                                        <label>\n                                            <input class=\"form-check-input\" type=\"radio\"\n                                                (click)=\"formTypeChange('individual')\" checked name=\"type\"> Individual\n                                        </label>\n                                        <label>\n                                            <input class=\"form-check-input\" type=\"radio\"\n                                                (click)=\"formTypeChange('business')\" name=\"type\"> Business\n                                        </label>\n                                        <label>\n                                            <input class=\"form-check-input\" type=\"radio\"\n                                                (click)=\"formTypeChange('reseller')\" name=\"type\"> Re-seller\n                                        </label>\n                                        <label>\n                                            <input class=\"form-check-input\" type=\"radio\"\n                                                (click)=\"formTypeChange('subDealer')\" name=\"type\"> Sub-dealer\n                                        </label>\n                                    </div>\n                                </div>\n\n                                <!-- Individual Customer Form -->\n                                <form [formGroup]=\"individualForm\" *ngIf=\"formType == 'individual'\">\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                                [class.is-invalid]=\"individualForm.controls['first_name'].invalid && individualForm.controls['first_name'].touched\"\n                                                placeholder=\"First name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['first_name'].touched && individualForm.controls['first_name'].hasError('required')\">\n                                                Please enter First Name.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                                [class.is-invalid]=\"individualForm.controls['last_name'].invalid && individualForm.controls['last_name'].touched\"\n                                                placeholder=\"Last Name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['last_name'].touched && individualForm.controls['last_name'].hasError('required')\">\n                                                Please enter Last Name.\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"alignLeft\">\n                                        <label for=\"email\" class=\"form-label\">Email</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                            [class.is-invalid]=\"individualForm.controls['email'].invalid && individualForm.controls['email'].touched\"\n                                            placeholder=\"Email\">\n                                        <small class=\"text-danger\"\n                                            *ngIf=\"individualForm.controls['email'].dirty && individualForm.controls['email'].hasError('email')\">\n                                            Please enter valid email.\n                                        </small>\n                                        <small class=\"text-danger\"\n                                            *ngIf=\"individualForm.controls['email'].touched && individualForm.controls['email'].hasError('required')\">\n                                            Please enter email.\n                                        </small>\n                                    </div>\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                                            <textarea class=\"form-control\" formControlName=\"address\"\n                                                [class.is-invalid]=\"individualForm.controls['address'].invalid && individualForm.controls['address'].touched\"\n                                                placeholder=\"Address Line 1\"></textarea>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['address'].touched && individualForm.controls['address'].hasError('required')\">\n                                                Please enter Address Line 1.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                                [class.is-invalid]=\"individualForm.controls['address_2'].invalid && individualForm.controls['address_2'].touched\"\n                                                placeholder=\"Address Line 2\"></textarea>\n                                            <!-- <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['address_2'].touched && individualForm.controls['address_2'].hasError('required')\">\n                                                Please enter Address Line 2.\n                                            </small> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"city\" class=\"form-label\">City</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                                [class.is-invalid]=\"individualForm.controls['city'].invalid && individualForm.controls['city'].touched\"\n                                                placeholder=\"City\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['city'].touched && individualForm.controls['city'].hasError('required')\">\n                                                Please enter City.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"country\" class=\"form-label\">State</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                                [class.is-invalid]=\"individualForm.controls['state'].invalid && individualForm.controls['state'].touched\"\n                                                placeholder=\"State\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['state'].touched && individualForm.controls['state'].hasError('required')\">\n                                                Please enter State.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"country\" class=\"form-label\">Country</label>\n\n                                            <ng-select class=\"form-control\" formControlName=\"country\">\n                                                <ng-option selected disabled>Select your country</ng-option>\n                                                <ng-option *ngFor=\"let country of countryData\"\n                                                    [value]=\"country.country\">\n                                                    {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                                                </ng-option>\n                                            </ng-select>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                                                [class.is-invalid]=\"individualForm.controls['zip'].invalid && individualForm.controls['zip'].touched\"\n                                                placeholder=\"Zip / Postcode\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['zip'].touched && individualForm.controls['zip'].hasError('required')\">\n                                                Please enter Zip / Postcode.\n                                            </small>\n                                        </div>\n                                        \n                                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:individualForm}\"></ng-container>\n                                    </div>\n\n\n\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"product_name\" class=\"form-label\">Product Name</label>\n                                            <select class=\"form-control\" formControlName=\"product_name\">\n                                                <option selected disabled>Select Product Name</option>\n                                                <option *ngFor=\"let product of products\" [value]=\"product.product_name\">\n                                                    {{product.product_name}} </option>\n                                            </select>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['product_name'].touched && individualForm.controls['product_name'].hasError('required')\">\n                                                Select product name.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"tool_serial_number\" class=\"form-label\">Tool Serial\n                                                number</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"tool_serial_number\"\n                                                [class.is-invalid]=\"individualForm.controls['tool_serial_number'].invalid && individualForm.controls['tool_serial_number'].touched\"\n                                                placeholder=\"Tool Serial number\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"individualForm.controls['tool_serial_number'].touched && individualForm.controls['tool_serial_number'].hasError('required')\">\n                                                Enter Tool Serial number.\n                                            </small>\n                                        </div>\n                                    </div>\n                                    <div class=\"captcha\">\n                                        <ngx-recaptcha2 #captchaElem [siteKey]=\"siteKey\"\n                                            formControlName=\"captcha_response\">\n                                        </ngx-recaptcha2>\n                                        <small class=\"text-danger\"\n                                            *ngIf=\"individualForm.controls['captcha_response'].touched && individualForm.controls['captcha_response'].hasError('required')\">\n                                            Invalid Captcha.\n                                        </small>\n                                    </div>\n                                    <div class=\"btnDiv\">\n                                        <button class=\"btn-secondary\" (click)=\"individualForm.reset()\">Reset</button>\n                                        <button class=\"btn-primary\" (click)=\"individualFormFormSubmit()\">Create</button>\n                                    </div>\n                                </form>\n\n\n                                <!-- Business Customer Form -->\n                                <form [formGroup]=\"businessForm\" *ngIf=\"formType == 'business'\">\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                                            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                                                [class.is-invalid]=\"businessForm.controls['bussness_name'].invalid && businessForm.controls['bussness_name'].touched\"\n                                                placeholder=\"Business Name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"businessForm.controls['bussness_name'].touched && businessForm.controls['bussness_name'].hasError('required')\">\n                                                Please enter Business Name.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"first_name\" class=\"form-label\">First Name</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"first_name\"\n                                                [class.is-invalid]=\"businessForm.controls['first_name'].invalid && businessForm.controls['first_name'].touched\"\n                                                placeholder=\"First name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"businessForm.controls['first_name'].touched && businessForm.controls['first_name'].hasError('required')\">\n                                                Please enter First name.\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"last_name\" class=\"form-label\">Last Name </label>\n                                            <input type=\"text\" formControlName=\"last_name\" class=\"form-control\"\n                                                [class.is-invalid]=\"businessForm.controls['last_name'].invalid && businessForm.controls['last_name'].touched\"\n                                                placeholder=\"Last Name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"businessForm.controls['last_name'].touched && businessForm.controls['last_name'].hasError('required')\">\n                                                Please enter Last Name.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"business_email\" class=\"form-label\">Email</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                                [class.is-invalid]=\"businessForm.controls['email'].invalid && businessForm.controls['email'].touched\"\n                                                placeholder=\"Email\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"businessForm.controls['email'].dirty && businessForm.controls['email'].hasError('email')\">\n                                                Please enter valid email.\n                                            </small>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"businessForm.controls['email'].touched && businessForm.controls['email'].hasError('required')\">\n                                                Please enter email.\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <ng-container *ngTemplateOutlet=\"basic;context:{$implicit:businessForm}\"></ng-container>\n\n                                    <div class=\"btnDiv\">\n                                        <button class=\"btn-secondary\" (click)=\"businessForm.reset()\">Reset</button>\n                                        <button class=\"btn-primary\" (click)=\"businessFormSubmit()\">Create</button>\n                                    </div>\n                                </form>\n\n                                <!-- Reseller Form -->\n                                <form [formGroup]=\"resellerForm\" *ngIf=\"formType == 'reseller'\">\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                                            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                                                [class.is-invalid]=\"resellerForm.controls['bussness_name'].invalid && resellerForm.controls['bussness_name'].touched\"\n                                                placeholder=\"Business Name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['bussness_name'].touched && resellerForm.controls['bussness_name'].hasError('required')\">\n                                                Please enter Business Name.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                                [class.is-invalid]=\"resellerForm.controls['first_name'].invalid && resellerForm.controls['first_name'].touched\"\n                                                placeholder=\"First name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['first_name'].touched && resellerForm.controls['first_name'].hasError('required')\">\n                                                Please enter First Name.\n                                            </small>\n                                        </div>\n                                    </div>\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                                [class.is-invalid]=\"resellerForm.controls['last_name'].invalid && resellerForm.controls['last_name'].touched\"\n                                                placeholder=\"Last Name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['last_name'].touched && resellerForm.controls['last_name'].hasError('required')\">\n                                                Please enter Last Name.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"email\" class=\"form-label\">Email</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                                [class.is-invalid]=\"resellerForm.controls['email'].invalid && resellerForm.controls['email'].touched\"\n                                                placeholder=\"Email\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['email'].dirty && resellerForm.controls['email'].hasError('email')\">\n                                                Please enter valid email.\n                                            </small>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['email'].touched && resellerForm.controls['email'].hasError('required')\">\n                                                Please enter email.\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <ng-container *ngTemplateOutlet=\"basic;context:{$implicit:resellerForm}\"></ng-container>\n\n                                    <!-- <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                                            <textarea class=\"form-control\" formControlName=\"address\"\n                                                [class.is-invalid]=\"resellerForm.controls['address'].invalid && resellerForm.controls['address'].touched\"\n                                                placeholder=\"Address Line 1\"></textarea>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['address'].touched && resellerForm.controls['address'].hasError('required')\">\n                                                Please enter Address Line 1.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                                [class.is-invalid]=\"resellerForm.controls['address_2'].invalid && resellerForm.controls['address_2'].touched\"\n                                                placeholder=\"Address Line 2\"></textarea>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['address_2'].touched && resellerForm.controls['address_2'].hasError('required')\">\n                                                Please enter Address Line 2.\n                                            </small>\n                                        </div>\n                                    </div>\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"city\" class=\"form-label\">City</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                                [class.is-invalid]=\"resellerForm.controls['city'].invalid && resellerForm.controls['city'].touched\"\n                                                placeholder=\"City\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['city'].touched && resellerForm.controls['city'].hasError('required')\">\n                                                Please enter City.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"country\" class=\"form-label\">State</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                                [class.is-invalid]=\"resellerForm.controls['state'].invalid && resellerForm.controls['state'].touched\"\n                                                placeholder=\"State\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['state'].touched && resellerForm.controls['state'].hasError('required')\">\n                                                Please enter State.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"country\" class=\"form-label\">Country</label>\n                                            <ng-select class=\"form-control\" formControlName=\"country\">\n                                                <ng-option selected disabled>Select your country</ng-option>\n                                                <ng-option *ngFor=\"let country of countryData\"\n                                                    [value]=\"country.country\">\n                                                    {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                                                </ng-option>\n                                            </ng-select>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                                                [class.is-invalid]=\"resellerForm.controls['zip'].invalid && resellerForm.controls['zip'].touched\"\n                                                placeholder=\"Zip / Postcode\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['zip'].touched && resellerForm.controls['zip'].hasError('required')\">\n                                                Please enter Zip / Postcode.\n                                            </small>\n                                        </div>\n                                  \n                                        <div>\n                                            <label for=\"phone\" class=\"form-label\">Phone</label>\n                                            <input class=\"form-control\" type=\"tel\" formControlName=\"phone_no\"\n                                                [class.is-invalid]=\"resellerForm.controls['phone_no'].invalid && resellerForm.controls['phone_no'].touched\"\n                                                placeholder=\" \" ng2TelInput (hasError)=\"addphoneError($event)\"\n                                                [ng2TelInputOptions]=\"{separateDialCode:true,initialCountry:'GB'}\"\n                                                (countryChange)=\"getPrimaryPhone($event, resellerForm)\">\n                                            <small class=\"text-danger\" *ngIf=\"!addphoneerror\">\n                                                Invalid phone number.\n                                            </small>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"resellerForm.controls['phone_no'].touched && resellerForm.controls['phone_no'].hasError('required')\">\n                                                Please enter phone number.\n                                            </small>\n                                        </div>\n\n                                    </div>\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                                                [class.is-invalid]=\"resellerForm.controls['tax_number'].invalid && resellerForm.controls['tax_number'].touched\"\n                                                placeholder=\"Tax number\">\n                       \n                                        </div>\n                                        <div>\n                                            <label for=\"company_number\" class=\"form-label\">Company number</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                                                [class.is-invalid]=\"resellerForm.controls['company_number'].invalid && resellerForm.controls['company_number'].touched\"\n                                                placeholder=\"Company number\">\n                                        </div>\n                                    </div>\n\n                                    <div class=\"alignLeft\">\n                                        <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License\n                                            number</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                                            [class.is-invalid]=\"resellerForm.controls['win_ols_license_number'].invalid && resellerForm.controls['win_ols_license_number'].touched\"\n                                            placeholder=\"WinOLS License number\">\n                                        <span style=\"font-size: 13px; padding-top: 3px;\">Applicable to EVC Software\n                                            Operators only who are\n                                            registered as EVC Resellers</span>\n                                        <small class=\"text-danger\"\n                                            *ngIf=\"resellerForm.controls['win_ols_license_number'].touched && resellerForm.controls['win_ols_license_number'].hasError('required')\">\n                                            Please enter WinOLS License number.\n                                        </small>\n                                    </div>\n                                    <div class=\"captcha\">\n                                        <ngx-recaptcha2 #captchaElem [siteKey]=\"siteKey\"\n                                            formControlName=\"captcha_response\">\n                                        </ngx-recaptcha2>\n                                        <small class=\"text-danger\"\n                                            *ngIf=\"resellerForm.controls['captcha_response'].touched && resellerForm.controls['captcha_response'].hasError('required')\">\n                                            Invalid Captcha.\n                                        </small>\n                                    </div> -->\n                                    <div class=\"btnDiv\">\n                                        <button class=\"btn-secondary\" (click)=\"resellerForm.reset()\">Reset</button>\n                                        <button class=\"btn-primary\" (click)=\"resellerFormFormSubmit()\">Create</button>\n                                    </div>\n                                </form>\n\n                                <!-- Sub Dealer Form -->\n                                <form [formGroup]=\"subDealerForm\" *ngIf=\"formType == 'subDealer'\">\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"company_number\" class=\"form-label\">Reseller</label>\n                                            <select class=\"form-select\" formControlName=\"resellerId\">\n                                                <option disabled>Select Reseller</option>\n                                                <option *ngFor=\"let reseller of resellerList\" [value]=\"reseller.id\">\n                                                    <div>\n                                                        <p>{{reseller.first_name}}</p>\n                                                        <p>{{ reseller.last_name}}</p>\n                                                    </div>\n                                                </option>\n                                            </select>\n                                        </div>\n                                        <div>\n                                            <label for=\"first-name\" class=\"form-label\">Business Name</label>\n                                            <input type=\"text\" formControlName=\"bussness_name\" class=\"form-control\"\n                                                [class.is-invalid]=\"subDealerForm.controls['bussness_name'].invalid && subDealerForm.controls['bussness_name'].touched\"\n                                                placeholder=\"Business Name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['bussness_name'].touched && subDealerForm.controls['bussness_name'].hasError('required')\">\n                                                Please enter Business Name.\n                                            </small>\n                                        </div>\n                                    </div>\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"first-name\" class=\"form-label\">First Name</label>\n                                            <input type=\"text\" formControlName=\"first_name\" class=\"form-control\"\n                                                [class.is-invalid]=\"subDealerForm.controls['first_name'].invalid && subDealerForm.controls['first_name'].touched\"\n                                                placeholder=\"First name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['first_name'].touched && subDealerForm.controls['first_name'].hasError('required')\">\n                                                Please enter First Name.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"last name\" class=\"form-label\">Last Name</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"last_name\"\n                                                [class.is-invalid]=\"subDealerForm.controls['last_name'].invalid && subDealerForm.controls['last_name'].touched\"\n                                                placeholder=\"Last Name\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['last_name'].touched && subDealerForm.controls['last_name'].hasError('required')\">\n                                                Please enter Last Name.\n                                            </small>\n                                        </div>\n                                    </div>\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"email\" class=\"form-label\">Email</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                                [class.is-invalid]=\"subDealerForm.controls['email'].invalid && subDealerForm.controls['email'].touched\"\n                                                placeholder=\"Email\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['email'].dirty && subDealerForm.controls['email'].hasError('email')\">\n                                                Please enter valid email.\n                                            </small>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['email'].touched && subDealerForm.controls['email'].hasError('required')\">\n                                                Please enter email.\n                                            </small>\n                                        </div>\n\n                                        <div>\n                                            <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                                            <textarea class=\"form-control\" formControlName=\"address\"\n                                                [class.is-invalid]=\"subDealerForm.controls['address'].invalid && subDealerForm.controls['address'].touched\"\n                                                placeholder=\"Address Line 1\">\n                                            </textarea>\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['address'].touched && subDealerForm.controls['address'].hasError('required')\">\n                                                Please enter Address Line 1.\n                                            </small>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                                            <textarea class=\"form-control\" formControlName=\"address_2\"\n                                                [class.is-invalid]=\"subDealerForm.controls['address_2'].invalid && subDealerForm.controls['address_2'].touched\"\n                                                placeholder=\"Address Line 2\"></textarea>\n                                        </div>\n                                        <div>\n                                            <label for=\"city\" class=\"form-label\">City</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                                                [class.is-invalid]=\"subDealerForm.controls['city'].invalid && subDealerForm.controls['city'].touched\"\n                                                placeholder=\"City\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['city'].touched && subDealerForm.controls['city'].hasError('required')\">\n                                                Please enter City.\n                                            </small>\n                                        </div>\n                                        <div>\n                                            <label for=\"country\" class=\"form-label\">State</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                                                [class.is-invalid]=\"subDealerForm.controls['state'].invalid && subDealerForm.controls['state'].touched\"\n                                                placeholder=\"State\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['state'].touched && subDealerForm.controls['state'].hasError('required')\">\n                                                Please enter State.\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"country\" class=\"form-label\">Country</label>\n                                            <ng-select class=\"form-control\" formControlName=\"country\">\n                                                <ng-option selected disabled>Select your country</ng-option>\n                                                <ng-option *ngFor=\"let country of countryData\"\n                                                    [value]=\"country.country\">\n                                                    {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                                                </ng-option>\n                                            </ng-select>\n                                        </div>\n                                        <div>\n                                            <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                                                [class.is-invalid]=\"subDealerForm.controls['zip'].invalid && subDealerForm.controls['zip'].touched\"\n                                                placeholder=\"Zip / Postcode\">\n                                            <small class=\"text-danger\"\n                                                *ngIf=\"subDealerForm.controls['zip'].touched && subDealerForm.controls['zip'].hasError('required')\">\n                                                Please enter Zip / Postcode.\n                                            </small>\n                                        </div>\n                                  \n                                        <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:subDealerForm}\"></ng-container>\n\n                                    </div>\n\n                                    \n                                    <div class=\"flex alignLeft\">\n                                        <div>\n                                            <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                                                [class.is-invalid]=\"subDealerForm.controls['tax_number'].invalid && subDealerForm.controls['tax_number'].touched\"\n                                                placeholder=\"Tax number\">\n                                        </div>\n                                        <div>\n                                            <label for=\"company_number\" class=\"form-label\">Company number</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                                                [class.is-invalid]=\"subDealerForm.controls['company_number'].invalid && subDealerForm.controls['company_number'].touched\"\n                                                placeholder=\"Company number\">\n                                        </div>\n                                    </div>\n\n                                    <div class=\"alignLeft\">\n                                        <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS License\n                                            number</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                                            [class.is-invalid]=\"subDealerForm.controls['win_ols_license_number'].invalid && subDealerForm.controls['win_ols_license_number'].touched\"\n                                            placeholder=\"WinOLS License number\">\n                                        <span style=\"font-size: 13px; padding-top: 3px;\">Applicable to EVC Software\n                                            Operators only who are\n                                            registered as EVC Resellers</span>\n                                        <small class=\"text-danger\"\n                                            *ngIf=\"subDealerForm.controls['win_ols_license_number'].touched && subDealerForm.controls['win_ols_license_number'].hasError('required')\">\n                                            Please enter WinOLS License number.\n                                        </small>\n                                    </div>\n                                    <div class=\"captcha\">\n                                        <ngx-recaptcha2 #captchaElem [siteKey]=\"siteKey\"\n                                            formControlName=\"captcha_response\">\n                                        </ngx-recaptcha2>\n                                        <small class=\"text-danger\"\n                                            *ngIf=\"subDealerForm.controls['captcha_response'].touched && subDealerForm.controls['captcha_response'].hasError('required')\">\n                                            Invalid Captcha.\n                                        </small>\n                                    </div>\n                                    <div class=\"btnDiv\">\n                                        <button class=\"btn-secondary\" (click)=\"subDealerForm.reset()\">Reset</button>\n                                        <button class=\"btn-primary\" (click)=\"subDealerFormFormSubmit()\">Create</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n\n<ng-template #phone let-form>\n    <div [formGroup]=\"form\">\n        <label for=\"phone\" class=\"form-label\">Phone</label>\n        <input class=\"form-control\" type=\"tel\" formControlName=\"phone_no\"\n            [class.is-invalid]=\"form.controls['phone_no'].invalid && form.controls['phone_no'].touched\"\n            pattern=\"^\\+?[\\d\\s]*$\"\n            placeholder=\" \" ng2TelInput\n            [ng2TelInputOptions]=\"{separateDialCode:true,initialCountry:'GB'}\"\n            (countryChange)=\"getPrimaryPhone($event,form)\">\n\n        <small class=\"text-danger\"\n            *ngIf=\"form.controls['phone_no'].dirty && form.controls['phone_no'].hasError('pattern')\">\n            Invalid phone number.\n        </small>\n        <small class=\"text-danger\"\n            *ngIf=\"form.controls['phone_no'].dirty && form.controls['phone_no'].hasError('required')\">\n            Phone number is required\n        </small>\n    </div>\n</ng-template>\n\n\n<ng-template #basic let-form>\n    <ng-container [formGroup]=\"form\">\n        <div class=\"flex alignLeft\">\n            <div>\n                <label for=\"address\" class=\"form-label\">Address Line 1</label>\n                <textarea class=\"form-control\" formControlName=\"address\"\n                    [class.is-invalid]=\"resellerForm.controls['address'].invalid && resellerForm.controls['address'].touched\"\n                    placeholder=\"Address Line 1\"></textarea>\n                <small class=\"text-danger\"\n                    *ngIf=\"resellerForm.controls['address'].touched && resellerForm.controls['address'].hasError('required')\">\n                    Please enter Address Line 1.\n                </small>\n            </div>\n            <div>\n                <label for=\"address\" class=\"form-label\">Address Line 2</label>\n                <textarea class=\"form-control\" formControlName=\"address_2\"\n                    [class.is-invalid]=\"resellerForm.controls['address_2'].invalid && resellerForm.controls['address_2'].touched\"\n                    placeholder=\"Address Line 2\"></textarea>\n                <!-- <small class=\"text-danger\"\n                    *ngIf=\"resellerForm.controls['address_2'].touched && resellerForm.controls['address_2'].hasError('required')\">\n                    Please enter Address Line 2.\n                </small> -->\n            </div>\n        </div>\n        <div class=\"flex alignLeft\">\n            <div>\n                <label for=\"city\" class=\"form-label\">City</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"city\"\n                    [class.is-invalid]=\"resellerForm.controls['city'].invalid && resellerForm.controls['city'].touched\"\n                    placeholder=\"City\">\n                <small class=\"text-danger\"\n                    *ngIf=\"form.controls['city'].touched && form.controls['city'].hasError('required')\">\n                    Please enter City.\n                </small>\n            </div>\n            <div>\n                <label for=\"country\" class=\"form-label\">State</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"state\"\n                    [class.is-invalid]=\"form.controls['state'].invalid && form.controls['state'].touched\"\n                    placeholder=\"State\">\n                <small class=\"text-danger\"\n                    *ngIf=\"form.controls['state'].touched && form.controls['state'].hasError('required')\">\n                    Please enter State.\n                </small>\n            </div>\n            <div>\n                <label for=\"country\" class=\"form-label\">Country</label>\n                <ng-select class=\"form-control\" formControlName=\"country\">\n                    <ng-option selected disabled>Select your country</ng-option>\n                    <ng-option *ngFor=\"let country of countryData\"\n                        [value]=\"country.country\">\n                        {{country.country}} <img width=\"20px\" [src]=\"country.flag\" alt=\"\">\n                    </ng-option>\n                </ng-select>\n            </div>\n        </div>\n\n        <div class=\"flex alignLeft\">\n            <div>\n                <label for=\"pincode\" class=\"form-label\">Zip / Postcode</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"zip\"\n                    [class.is-invalid]=\"form.controls['zip'].invalid && form.controls['zip'].touched\"\n                    placeholder=\"Zip / Postcode\">\n                <small class=\"text-danger\"\n                    *ngIf=\"form.controls['zip'].touched && form.controls['zip'].hasError('required')\">\n                    Please enter Zip / Postcode.\n                </small>\n            </div>\n      \n            <ng-container *ngTemplateOutlet=\"phone;context:{$implicit:form}\"></ng-container>\n\n        </div>\n\n        <div class=\"flex alignLeft\">\n            <div>\n                <label for=\"tax_number\" class=\"form-label\">Tax number</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"tax_number\"\n                    placeholder=\"Tax number\">\n            </div>\n            <div>\n                <label for=\"company_number\" class=\"form-label\">Company number</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"company_number\"\n                    placeholder=\"Company number\">\n            </div>\n        </div>\n\n        <div class=\"alignLeft\">\n            <label for=\"win_ols_license_number\" class=\"form-label\">WinOLS Licensenumber</label>\n\n            <input type=\"text\" class=\"form-control\" formControlName=\"win_ols_license_number\"\n                placeholder=\"WinOLS License number\">\n                \n            <span style=\"font-size: 13px; padding-top: 3px;\">\n                Applicable to EVC Software Operators only who are registered as EVC Resellers\n            </span>\n        </div>\n\n        <div class=\"captcha\">\n            <ngx-recaptcha2 #captchaElem [siteKey]=\"siteKey\"\n                formControlName=\"captcha_response\">\n            </ngx-recaptcha2>\n            <small class=\"text-danger\"\n                *ngIf=\"resellerForm.controls['captcha_response'].touched && resellerForm.controls['captcha_response'].hasError('required')\">\n                Invalid Captcha.\n            </small>\n        </div>\n    </ng-container>\n</ng-template>","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { RegisterService } from 'src/app/auth/services/register.service';\nimport { countryDetails } from 'src/app/global-files/global.const';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.scss']\n})\nexport class AddCustomerComponent {\n  products: any;\n  formType: string = 'individual';\n  individualForm: FormGroup;\n  resellerForm: FormGroup;\n  subDealerForm: FormGroup;\n  addphoneindividualerror: boolean = true;\n  addmobileResellererror: boolean = true;\n  businessForm: FormGroup;\n  businessFormSubmitted: boolean = false;\n  addphoneerror: boolean = true;\n  countries = require('country-data-list').countries;\n  siteKey: string = environment.captchaSecrateKey;\n  sortedArray: any;\n  resellerList:any;\n  countryData = countryDetails\n  constructor(private fb: FormBuilder, private _titleservice: Title,\n    private router: Router, private crud: CrudService,\n    private toastr: ToastrService, private _registerservice: RegisterService) {\n    this._titleservice.setTitle('Register');\n    this.individualForm = this.fb.group({\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      country_code: ['', []],\n      phone_no: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: [''],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      product_name: ['', []],\n      tool_serial_number: ['', []],\n      captcha_response: ['', [Validators.required]]\n    });\n    this.businessForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      address: ['', [Validators.required]],\n      address_2: [''],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      phone_no: ['', [Validators.required]],\n      country_code: ['', []],\n      email: ['', [Validators.required, Validators.email]],\n      captcha_response: ['', [Validators.required]]\n    });\n    this.resellerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      phone_no: ['',],\n      country_code: ['', []],\n      mobile_no: [''],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: [''],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      captcha_response: ['', [Validators.required]]\n    });\n    this.subDealerForm = this.fb.group({\n      bussness_name: ['', [Validators.required]],\n      tax_number: [''],\n      company_number: [''],\n      win_ols_license_number: ['', []],\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      country_code: ['', []],\n      phone_no: ['',],\n      mobile_no: [''],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      address_2: [''],\n      country: ['United Kingdom', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      resellerId: ['Select Reseller', [Validators.required]],\n      captcha_response: ['', [Validators.required]]\n    });\n  }\n  obj: any = [\n    { \"alpha2\": \"US\", \"name\": \"United States\", },\n    { \"alpha2\": \"GB\", \"name\": \"United Kingdom\", }\n  ]\n  ngOnInit(): void {\n    console.log(this.siteKey,'siteKey');\n    \n    this.countryData.sort((a: any, b: any) => (a.country > b.country) ? 1 : -1)\n    this.obj.forEach((element: any) => {\n      this.moveCountryOnTop(element.name);\n    });\n    this._registerservice.getProducts().subscribe((res: any) => {\n      this.products = res.data.results;\n    },\n      (err: any) => {\n      });\n  }\n  moveCountryOnTop(name: string) {\n    const index = this.countryData.findIndex((item: any) => item.country === name);\n    if (index !== -1) {\n      const removedObject = this.countryData.splice(index, 1)[0];\n      this.countryData.unshift(removedObject);\n    }\n  }\n\n  individualFormFormSubmit() {\n    if (this.individualForm.valid) {\n      let individualData = this.individualForm.value;\n      let data = {\n        \"individual_profile\": {\n          \"product_name\": individualData.product_name,\n          \"tool_serial_number\": individualData.tool_serial_number\n        },\n        \"address\": {\n          \"address\": individualData.address,\n          \"country\": individualData.country,\n          \"state\": individualData.state,\n          \"city\": individualData.city,\n          \"zip\": individualData.zip\n        },\n        \"individual\": {\n          \"first_name\": individualData.first_name,\n          \"last_name\": individualData.last_name,\n          \"phone_no\": individualData.phone_no,\n          \"country_code\": individualData.country_code,\n          \"email\": individualData.email\n        },\n        \"captcha_response\": individualData.captcha_response\n      };\n      this._registerservice.individualRegister(data).subscribe((res: any) => {\n        this.toastr.success(res.message, '', { timeOut: 4000 });\n        this.router.navigate(['/admin/customer/customer-detail']);\n      },\n        (err: any) => {\n          this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n        });\n    }\n    else {\n      this.markAllControlsAsTouched(this.individualForm);\n    }\n  }\n  resellerFormFormSubmit() {\n    if (this.resellerForm.valid) {\n      let resellerData = this.resellerForm.value;\n      let data = {\n        \"detail\": {\n          \"bussness_name\": resellerData.bussness_name,\n          \"tax_number\": resellerData.tax_number,\n          \"company_number\": resellerData.company_number,\n          \"win_ols_license_number\": resellerData.win_ols_license_number\n        },\n        'address': {\n          'address_2': resellerData.address,\n          'address': resellerData.address_2,\n          'country': resellerData.country,\n          'state': resellerData.state,\n          'city': resellerData.city,\n          'zip': resellerData.zip,\n        },\n        'reseller': {\n          'first_name': resellerData.first_name,\n          'last_name': resellerData.last_name,\n          'phone_no': resellerData.phone_no,\n          \"country_code\": resellerData.country_code,\n          'mobile_no': resellerData.mobile_no,\n          'email': resellerData.email\n        },\n        \"captcha_response\": resellerData.captcha_response\n      };\n      this.crud.postRequest(requestUrl.addReseller,data).then((res:any)=>{\n        if(res){\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('/admin/customer/customer-detail');\n        }\n      })\n    }\n    else {\n      this.markAllControlsAsTouched(this.resellerForm);\n    }\n  }\n  subDealerFormFormSubmit() {\n    if (this.subDealerForm.valid) {\n      let subDealerData = this.subDealerForm.value;\n      let data = {\n        \"parent\": subDealerData.resellerId,\n        \"detail\": {\n          \"bussness_name\": subDealerData.bussness_name,\n          \"tax_number\": subDealerData.tax_number,\n          \"company_number\": subDealerData.company_number,\n          \"win_ols_license_number\": subDealerData.win_ols_license_number\n        },\n        'address': {\n          'address_2': subDealerData.address,\n          'address': subDealerData.address_2,\n          'country': subDealerData.country,\n          'state': subDealerData.state,\n          'city': subDealerData.city,\n          'zip': subDealerData.zip,\n        },\n        'dealer': {\n          'first_name': subDealerData.first_name,\n          'last_name': subDealerData.last_name,\n          \"country_code\": subDealerData.country_code,\n          'phone_no': subDealerData.phone_no,\n          'mobile_no': subDealerData.mobile_no,\n          'email': subDealerData.email\n        },\n        \"captcha_response\": subDealerData.captcha_response\n      };\n      \n      this.crud.postRequest(requestUrl.addSubDealer,data).then((res:any)=>{\n        if(res){\n          this.toastr.success(res.message);\n          this.router.navigateByUrl('/admin/customer/customer-detail');\n        }\n      })\n    }\n    else {\n      this.markAllControlsAsTouched(this.subDealerForm);\n    }\n  }\n  markAllControlsAsTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markAllControlsAsTouched(control);\n      }\n    });\n  }\n  businessFormSubmit() {\n    if (this.businessForm.valid) {\n      this.businessFormSubmitted = true;\n      if (this.businessForm.invalid) { return; }\n      let businessData = this.businessForm.value;\n      let data = {\n        \"business_profile\": {\n          \"bussness_name\": businessData.bussness_name,\n          \"tax_number\": businessData.tax_number,\n          \"company_number\": businessData.company_number,\n          \"win_ols_license_number\": businessData.win_ols_license_number\n        },\n        \"address\": {\n          \"address\": businessData.address,\n          \"country\": businessData.country,\n          \"state\": businessData.state,\n          \"city\": businessData.city,\n          \"zip\": businessData.zip\n        },\n        \"business\": {\n          \"first_name\": businessData.first_name,\n          \"last_name\": businessData.last_name,\n          \"phone_no\": businessData.phone_no,\n          \"country_code\": businessData.country_code,\n          \"email\": businessData.email\n        },\n        \"captcha_response\": businessData.captcha_response\n      };\n      this._registerservice.businessRegister(data).subscribe((res: any) => {\n        this.toastr.success(res.message, '', { timeOut: 4000 });\n        this.router.navigate(['/admin/customer/customer-detail']);\n      },\n        (err: any) => {\n          this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n        });\n    }\n    else\n      this.markAllControlsAsTouched(this.businessForm);\n  }\n  addphoneError(obj: any) {\n    this.addphoneerror = obj;\n    if (obj) {\n      this.businessForm.controls['phone_no'].setErrors(null);\n    } else {\n      this.businessForm.controls['phone_no'].setErrors({ 'incorrect': false });\n    }\n  }\n\n  addphoneIndividualError(obj: any) {\n    this.addphoneindividualerror = obj;\n    if (obj) {\n      this.individualForm.controls['phone_no'].setErrors(null);\n    } else {\n      this.individualForm.controls['phone_no'].setErrors({ 'incorrect': false });\n    }\n  }\n  getPrimaryPhone(event: any,form:FormGroup) {\n    form.patchValue({ 'country_code': event.dialCode });\n  }\n\n  formTypeChange(type: any) {\n    this.formType = type;\n    if(type == 'subDealer'){\n      this.crud.getRequest(`${requestUrl.getResellerList}`).then((res:any)=>{\n        this.resellerList = res.data;\n      });\n    }\n    this.individualForm.markAsUntouched();\n    this.businessForm.markAsUntouched();\n    this.resellerForm.markAsUntouched();\n    this.subDealerForm.markAsUntouched();\n  }\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\">Customer</a></li>\n        <li class=\"breadcrumb-item\">\n            <a routerLink=\"/admin/customer/update-credit\" routerLinkActive=\"active\">Credit</a>\n        </li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2 class=\"main-title\"> Customer</h2>\n            <smart-search class=\"ms-auto\" placeholder=\"Search...\" (onSearch)=\"onSearch($event);\"></smart-search>\n        </div>\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">Customer</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getCustomerCredit('first_name','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getCustomerCredit('first_name','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">Business Name</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getCustomerCredit('first_name','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getCustomerCredit('first_name','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">File key credit</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getCustomerCredit('customer_credit__file_key_credit','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getCustomerCredit('customer_credit__file_key_credit','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">Function key credit</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getCustomerCredit('customer_credit__function_credit','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getCustomerCredit('customer_credit__function_credit','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"mb-0\">EVC Credit</p>\n                            <div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n                                <i class=\"fa fa-chevron-up pointer\" (click)=\"getCustomerCredit('customer_credit__evc_credit','dec')\"\n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-chevron-down pointer\" (click)=\"getCustomerCredit('customer_credit__evc_credit','asc')\"\n                                    aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </th>\n                    <th\n                        *ngIf=\"permissions.user_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\">\n                        Action</th>\n                </thead>\n                <tr\n                    *ngFor=\"let cus of customer | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalCustomer}; let i = index;\">\n                    <td>\n                        <div class=\"tdholder\"> <img class=\"userImg\"\n                                [src]=\"cus.img?cus.img:'assets/images/icon/avtarIcon.jpeg'\" alt=\"user\" />\n                            <div class=\"tdinner\"><span> {{cus.first_name }} {{cus.last_name}} </span>\n                                <p style=\"text-align: left;\"> {{cus.email}} </p>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <div>\n                            <span class=\"txt-500\">{{cus?.business_user?.bussness_name || '-'}}</span>\n                        </div>\n                    </td>\n                    <td class=\"\">\n                        <div class=\"d-flex align-items-center\"><input type=\"number\" style=\"width: 50% !important;\"\n                                [(ngModel)]=\"fileCredit[i]\" class=\"form-control\">\n                            <p class=\"viewCredit\">{{cus?.customer_credit?.file_key_credit}}</p>\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"\n                                [title]=\"'Customer available file credit'\"></i>\n                        </div>\n                    </td>\n                    <td class=\"\">\n                        <div class=\"d-flex align-items-center\"><input type=\"number\" style=\"width: 50% !important;\"\n                                [(ngModel)]=\"functionCredit[i]\" class=\"form-control\">\n                            <p class=\"viewCredit\">{{cus?.customer_credit?.function_credit}}</p>\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"\n                                [title]=\"'Customer available function credit'\"></i>\n                        </div>\n                    </td>\n                    <td class=\"\">\n                        <div class=\"d-flex align-items-center\"><input type=\"number\" style=\"width: 50% !important;\"\n                                [(ngModel)]=\"evcCredit[i]\" class=\"form-control\">\n                            <p class=\"viewCredit\">{{cus?.customer_credit?.evc_credit}}</p>\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"\n                                [title]=\"'Customer available EVC credit'\"></i>\n                        </div>\n                    </td>\n                    <!-- <td><input type=\"number\" [(ngModel)]=\"fileCredit[i]\" class=\"form-control\"></td>\n                    <td><input type=\"number\" [(ngModel)]=\"functionCredit[i]\" class=\"form-control\"></td>\n                    <td><input type=\"number\" [(ngModel)]=\"evcCredit[i]\" class=\"form-control\"></td> -->\n                    <td\n                        *ngIf=\"permissions.user_management == 'Full access' && (usersdetail.role == 'Internal_Team' || usersdetail.role == 'AIREMAP_ADMIN')\">\n                        <button class=\"btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#changeStatusModel\"\n                            (click)=\"selectedIndex=i; getFileRequestList(cus.uuid)\">Update</button>\n                    </td>\n                </tr>\n\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"customer?.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n            (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>\n\n<!-- Update Credit Modal -->\n<div class=\"modal productModal\" id=\"changeStatusModel\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=\"frTicketstatusForm\" (ngSubmit)=\"test()\">\n                <div class=\" modal-header\" style=\"margin-bottom: 0px !important; padding-bottom: 0px !important;\">\n                    <h4 class=\"modal-title\">Update Credit</h4>\n                    <button type=\"button\" class=\"btn-close\" (click)=\"formReset();\" id=\"closeFtmodal\"\n                        data-bs-dismiss=\"modal\"></button>\n                </div>\n                <hr />\n                <div class=\"modal-body\">\n                    <div>\n                        <label for=\"status\" class=\"form-label\" style=\"float: left;\">File Request</label>\n                        <select class=\"form-select\" formControlName=\"frRequest\">\n                            <option disabled value=\"Select File Request\">Select File Request</option>\n                            <option disabled *ngIf=\"fileRequestList?.length==0\"> No data available</option>\n                            <option [value]=\"request?.request_id\" *ngFor=\"let request of fileRequestList\">\n                                {{request?.request_id}}</option>\n                        </select>\n                    </div>\n                    <div class=\"mt-2\">\n                        <label for=\"status\" class=\"form-label\" style=\"float: left;\">Type</label>\n                        <select class=\"form-select\" formControlName=\"type\">\n                            <option disabled value=\"Select Type\">Select Type</option>\n                            <option value=\"Refund\">Refund</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n                    <div class=\"mt-2\">\n                        <label for=\"status\" class=\"form-label\" style=\"float: left;\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"formReset();\" id=\"closemodal\"\n                        data-bs-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" [disabled]=\"frTicketstatusForm.invalid\"\n                        class=\"btn btn-primary\">Update</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { ToastrService } from 'ngx-toastr';\nimport { PermissionsService } from '../../services/permissions.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-credit',\n  templateUrl: './update-credit.component.html',\n  styleUrls: ['./update-credit.component.scss']\n})\n\nexport class UpdateCreditComponent {\n  params: any;\n  page = 1;\n  pageSize = 10;\n  title = '';\n  user_type: any = '';\n  totalCustomer: any;\n  customer: any;\n  fileCredit: any[] = [];\n  functionCredit: any[] = [];\n  evcCredit: any[] = [];\n  patternValue: any = '[0-9]*';\n  permissions: any;\n  usersdetail: any = JSON.parse(localStorage.getItem('userdetails') || '');\n  selectedIndex: any;\n  frTicketstatusForm: FormGroup\n  fileRequestList: any;\n  constructor(private _titleservice: Title, private crud: CrudService, private _permissions: PermissionsService,\n    private toastr: ToastrService, private fb: FormBuilder) {\n    this._titleservice.setTitle('Customer Management');\n    this.permissions = this._permissions.getPermissions();\n    this.frTicketstatusForm = this.fb.group({\n      frRequest: ['Select File Request'],\n      type: ['Select Type', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    localStorage.removeItem('previousPageDetail');\n    this.getCustomerCredit()\n  }\n  body: any;\n  test() {\n    this.body = {};\n    // {\n    //   \"uuid\": \"d8f15ba0-3c98-4560-b6f2-cf926da76271\",\n    //   \"file_key_credit\": 7,\n    //   \"function_key_credit\": 7,\n    //   \"evc_key_credit\": 7,\n    //   \"credit_update_type\":\"Refund\",\n    //   \"file_request\":\"FR963\",\n    //   \"credit_update_description\":\"Refund to be intiate to customer side\"\n    // }\n    this.body = {\n      uuid: this.customer[this.selectedIndex].uuid,\n      file_key_credit: this.fileCredit[this.selectedIndex],\n      function_key_credit: this.functionCredit[this.selectedIndex],\n      evc_key_credit: this.evcCredit[this.selectedIndex],\n      credit_update_type: this.frTicketstatusForm.value.type,\n      credit_update_description: this.frTicketstatusForm.value.description,\n    }\n    if (this.frTicketstatusForm.value.frRequest != 'Select File Request') {\n      this.body['file_request'] = this.frTicketstatusForm.value.frRequest;\n    }\n    this.crud.putRequest(`${requestUrl.getCustomerCredit}`, this.body).then((res: any) => {\n      this.toastr.success(res.message);\n      this.formReset();\n      document.getElementById('closeFtmodal')?.click();\n      this.getCustomerCredit();\n\n    })\n  }\n  formReset() {\n    this.frTicketstatusForm.reset();\n    this.frTicketstatusForm.controls['frRequest'].setValue('Select File Request');\n    this.frTicketstatusForm.controls['type'].setValue('Select Type');\n  }\n  getFileRequestList(uuid: any) {\n    this.crud.getRequest(`customer/file_request/list?uuid=${uuid}`).then((res: any) => {\n      this.fileRequestList = res.data;\n    })\n  }\n  testss(i: number) {\n    const body: any = {\n      uuid: this.customer[i].uuid\n    };\n    if (this.fileCredit[i])\n      body['file_key_credit'] = this.fileCredit[i];\n    if (this.functionCredit[i])\n      body['function_key_credit'] = this.functionCredit[i];\n    if (this.evcCredit[i])\n      body['evc_key_credit'] = this.evcCredit[i];\n    // this.crud.putRequest(`${cusRequestUrl.dealerCreditUpdate}`, body).then((res: any) => {\n    //   if (res) {\n    //     if (res.success)\n    //       this.toastr.success(res.message);\n    //     else\n    //       this.toastr.error(res.message);\n    //     this.getDealerCreditList();\n    //   }\n\n    // })\n  }\n\n\n  getCustomerCredit(field?: any, type?: any): void {\n    if (this.title) {\n      this.crud.getRequest(`${requestUrl.getCustomerCredit}?search=${this.title}`).then((res: any) => {\n        this.customer = res.data.results;\n        for (let i = 0; i < this.customer.length; i++) {\n          this.fileCredit[i] = 0;\n          this.functionCredit[i] = 0;\n          this.evcCredit[i] = 0;\n          // this.fileCredit[i] = this.customer[i].customer_credit?.file_key_credit?this.customer[i].customer_credit?.file_key_credit :0;\n          // this.functionCredit[i] = this.customer[i].customer_credit?.function_credit?this.customer[i].customer_credit?.function_credit: 0;\n          // this.evcCredit[i] = this.customer[i].customer_credit?.evc_credit?this.customer[i].customer_credit?.evc_credit:0;\n        }\n        this.totalCustomer = res.data.count;\n      })\n    }\n    else {\n      let params;\n      if (field && type)\n        params = `?field=${field}&order_in=${type}`;\n      else\n        params = `?page=${this.page}&page_size=${this.pageSize}`;\n      this.crud.getRequest(`${requestUrl.getCustomerCredit}${params}`).then((res: any) => {\n        this.customer = res.data.results;\n        for (let i = 0; i < this.customer.length; i++) {\n          this.fileCredit[i] = 0;\n          this.functionCredit[i] = 0;\n          this.evcCredit[i] = 0;\n        }\n        this.totalCustomer = res.data.count;\n      })\n    }\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.getCustomerCredit();\n  }\n\n  onSearch(x: any) {\n    this.title = x;\n    this.page = 1;\n    this.getCustomerCredit();\n  }\n\n}\n","<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/customer\" routerLinkActive=\"active\">Customer</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add\">\n            <h2> Sub Dealer</h2>\n            <div class=\"u-add-right\">\n            </div>\n        </div>\n        <hr />\n        <div class=\"responsive-tbl\">\n            <table>\n                <thead>\n                    <th>Name </th>\n                    <th>Action</th>\n                </thead>\n                <tr\n                    *ngFor=\"let customer of customers | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalCustomer};let i = index\">\n                    <td>\n                        <div class=\"tdholder\"> <img class=\"userImg\"\n                                [src]=\"customer.image || 'assets/images/icon/avtarIcon.jpeg'\" alt=\"user\" />\n                            <div class=\"tdinner\"><span> {{customer.first_name || ''}} {{customer.last_name || ''}}\n                                </span>\n                                <p>{{customer.email || ''}}</p>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"actiontd\">\n                            <a class=\"eyeIcon\" [routerLink]=\"['/admin/customer/view/', customer.uuid]\"><i\n                                    class=\"fa fa-eye\" title=\"View\"></i></a>\n                            <a *ngIf=\"permissions.customer_management == 'Full access'\" [routerLink]=\"['/admin/customer/update-customer/', customer.uuid]\"><img class=\"edit\"\n                                    src=\"../../../../assets/images/icon/edit.png\" title=\"Edit\" /></a>\n                        </div>\n                    </td>\n                </tr>\n                <tr class=\"errcls\" *ngIf=\"showError\">\n                    Records not found\n                </tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"customers.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n            (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n</section>","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { CustomerService } from '../../services/customer.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PermissionsService } from '../../services/permissions.service';\n\n@Component({\n  selector: 'app-reseller-list',\n  templateUrl: './reseller-list.component.html',\n  styleUrls: ['./reseller-list.component.scss']\n})\nexport class ResellerListComponent {\n\n  customers: any = [];\n  params: any;\n  page = 1;\n  pageSize = 10;\n  title = '';\n  user_type: any = '';\n  totalCustomer: any;\n  customer_uuid: any;\n  showError: boolean = false;\n  permissions: any;\n  constructor(private _titleservice: Title, private crud: CrudService, private route: ActivatedRoute\n    , private _permissions: PermissionsService) {\n    this._titleservice.setTitle('Customer Management');\n    this.permissions = this._permissions.getPermissions();\n  }\n\n  ngOnInit(): void {\n    this.customer_uuid = this.route.snapshot.paramMap.get('id');\n    this.subDealerList();\n  }\n  subDealerList(): void {\n    this.crud.getRequest(`${requestUrl.addSubDealer}/${this.customer_uuid}`).then((res: any) => {\n      if (res) {\n        this.customers = res.data.results;\n        this.showError = this.customers.length == 0 ? true : false;\n        this.totalCustomer = res.data.count;\n      }\n    })\n  }\n  handlePageChange(event: number): void {\n    this.page = event;\n  }\n\n  onKeyUp(x: any) {\n    this.title = x;\n    this.page = 1;\n  }\n\n  roleChange(event: any) {\n    this.user_type = event.target.value;\n    this.page = 1;\n  }\n}\n","\n    <div class=\"profile-inner\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n        <ul>\n            <li (click)=\"tab='phistory'\" [ngClass]=\"tab =='phistory'?'tactive':'tnactive'\">\n                <a>Credit Purchase History</a>\n            </li>\n            <li (click)=\"getSpentHistory();tab='chistory'\" [ngClass]=\"tab =='chistory'?'tactive':'tnactive'\">\n                <a>Credit Spent History</a>\n            </li>\n            <li (click)=\"getInvoiceHistory();tab='Ihistory'\" [ngClass]=\"tab =='Ihistory'?'tactive':'tnactive'\">\n                <a>Invoice History</a>\n            </li>\n        </ul>\n\n        <button class=\"backBtn\" routerLink=\"/admin/customer/customer-detail\">\n            <i class=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\n        </button>\n        </div>\n        <div *ngIf=\"tab=='phistory'\">\n            <div class=\"responsive-tbl\">\n                <table>\n                    <thead>\n                        <th>Transaction ID</th>\n                        <th>Date</th>\n                        <th>Amount Paid</th>\n                        <th>Action</th>\n                    </thead>\n                    <tr\n                        *ngFor=\"let credit of purchasehistory | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalCustomer};let i = index\">\n                        <td>{{credit.stripe_id.slice(0,20)}} <span class=\"fa fa-clipboard\"\n                                (click)=\"copyId(credit?.stripe_id)\"></span></td>\n                        <td>{{notification.formatDate(credit?.created_at)}}</td>\n                        <td>&#163; {{credit?.total_price + credit?.tax_price}}</td>\n                        <td class=\"tableBodyAction\">\n                            <div>\n                                <a class=\"eyeIcon\" (click)=\"getCheckOutDetail(credit)\" data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#chngeEmailModal\">\n                                    <i class=\"fa fa-eye\" title=\"View\"></i></a>\n                                <a *ngIf=\"credit.invoice.length>0\" class=\"eyeIcon\" (click)=\"getInvoiceDetail(credit)\"\n                                    style=\"margin-left: 15px;\" data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#chngeEmailModal3\">\n                                    <i class=\"fa fa-file-text-o\" aria-hidden=\"true\"></i></a>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n            <pagination-controls *ngIf=\"purchasehistory?.length >0\" class=\"pagination-crl\" previousLabel=\"Prev\"\n                nextLabel=\"Next\" (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n        </div>\n\n        <div *ngIf=\"tab=='chistory'\">\n            <div class=\"responsive-tbl\">\n                <table>\n                    <thead>\n                        <th>Request Id</th>\n                        <th>Date</th>\n                        <th>Credit</th>\n                        <th>Credit Type</th>\n                    </thead>\n                    <tr\n                        *ngFor=\"let debit of spendhistory | paginate : {itemsPerPage: spentPageSize,currentPage: spentPage,totalItems: totalSpent};let i = index\">\n                        <td>{{debit?.file_request_id}}</td>\n                        <td>{{notification.formatDate(debit?.created_at)}}</td>\n                        <td>{{debit.credit}}</td>\n                        <td>{{debit.credit_type == 1 ? 'File key credit': (debit.credit_type == 3?'Fuction key Credit':'EVC Credit')}}</td>\n                    </tr>\n                </table>\n            </div>\n            <pagination-controls \n                *ngIf=\"spendhistory?.length >0\" \n                class=\"pagination-crl\" \n                previousLabel=\"Prev\"\n                nextLabel=\"Next\" \n                (pageChange)=\"handleSpentPageChange($event)\">\n            </pagination-controls>\n        </div>\n        \n        <div *ngIf=\"tab=='Ihistory'\">\n            <div class=\"responsive-tbl\">\n                <table>\n                    <thead>\n                        <th>Invoice No.</th>\n                        <th>Date</th>\n                        <th>Action</th>\n                    </thead>\n                    <tr *ngFor=\"let invoice of thistory | paginate : \n                        {\n                            itemsPerPage: invoicePageSize,\n                            currentPage: invoicePage,\n                            totalItems: totalInvoice\n                        };\n                        let i = index\">\n                        <td>{{invoice?.invoice_number}}</td>\n                        <td>{{notification.formatDate(invoice?.created_at)}}</td>\n                        <td>\n                            <div class=\"actiontd\">\n                                <a class=\"eyeIcon\" (click)=\"downloadInvoice(invoice?.invoice_id)\"><i\n                                        class=\"fa fa-download\" title=\"Download\"></i></a>\n                                <a class=\"eyeIcon\" *ngIf=\"invoice?.order_list\" (click)=\"getOrderDetail(invoice);\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#chngeEmailModal2\"><i\n                                        class=\"fa fa-credit-card\" aria-hidden=\"true\"></i></a>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr class=\"errcls\" *ngIf=\"showError\">\n                        Records not found\n                    </tr>\n\n\n                </table>\n            </div>\n            <pagination-controls \n            *ngIf=\"thistory?.length >0\" \n            class=\"pagination-crl\" \n            previousLabel=\"Prev\"\n            nextLabel=\"Next\" \n            (pageChange)=\"handleInvoicePageChange($event)\">\n        </pagination-controls>\n        </div>\n    </div>\n\n\n<div class=\"modal\" id=\"chngeEmailModal\">\n    <div class=\"v-align\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Products</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"responsive-tbl\">\n                        <table>\n                            <thead>\n                                <th>Product name</th>\n                                <th>Quantity</th>\n                                <th>Price</th>\n                            </thead>\n                            <tr *ngFor=\"let item of checkoutDetail;let i = index\">\n                                <td class=\"d-flex align-items-center\"><img width=\"50px\" style=\" margin-right: 15px;\"\n                                        [src]=\"item.product_image_url\" alt=\"\"> {{item.product_name}} </td>\n                                <td>{{item.quantity}}</td>\n                                <td>&#163; {{item.price}}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900;\">VAT</td>\n                                <td style=\"font-weight: 900;\"></td>\n                                <td style=\"font-weight: 900;\">&#163; {{total_tax}}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900;\">Total</td>\n                                <td style=\"font-weight: 900;\">{{TotalItem}}</td>\n                                <td style=\"font-weight: 900;\">&#163; {{totalValue}}</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Modal one -->\n<div class=\"modal\" id=\"chngeEmailModal2\">\n    <div class=\"v-align\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Transaction Detail</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"responsive-tbl\">\n                        <table>\n                            <tr>\n                                <td class=\"leftWeight\">Stripe Id</td>\n                                <td class=\"leftWeight\">{{orderDetail?.stripe_id.slice(0,20)}} &nbsp;<span\n                                        class=\"fa fa-clipboard\" (click)=\"copyId(orderDetail?.stripe_id)\"></span></td>\n                            </tr>\n                            <tr>\n                                <td class=\"leftWeight\">Date</td>\n                                <td class=\"leftWeight\">{{notification.formatDate(orderDetail?.created_at)}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"leftWeight\">Price</td>\n                                <td class=\"leftWeight\">&#163; {{orderDetail?.total_price}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"leftWeight\">VAT</td>\n                                <td class=\"leftWeight\">&#163; {{orderDetail?.tax_price}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"leftWeight\">Total Price</td>\n                                <td class=\"leftWeight\">&#163; {{orderDetail?.total_price + orderDetail?.tax_price}}</td>\n                            </tr>\n                            <tr *ngIf=\"orderDetail?.file_credit\">\n                                <td class=\"leftWeight\">Credit</td>\n                                <td class=\"leftWeight\">{{orderDetail?.file_credit}}</td>\n                            </tr>\n                            <tr *ngIf=\"orderDetail?.evc_credit\">\n                                <td class=\"leftWeight\">Credit</td>\n                                <td class=\"leftWeight\">{{orderDetail?.evc_credit}}</td>\n                            </tr>\n                            <tr *ngIf=\"orderDetail?.function_credit\">\n                                <td class=\"leftWeight\">Credit</td>\n                                <td class=\"leftWeight\">{{orderDetail?.function_credit}}</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Modal two -->\n<div class=\"modal\" id=\"chngeEmailModal3\">\n    <div class=\"v-align\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Invoice Detail</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"invoiceDetail\">\n                        <div class=\"block\">\n                            <p>Invoice No:</p>\n                            <span>{{invoiceDetail?.invoice_number}}</span>\n                        </div>\n                        <div class=\"block\">\n                            <p>Date:</p>\n                            <span>{{notification.formatDate(invoiceDetail?.created_at)}}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateCustomerComponent } from './create-customer/create-customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerManagementComponent } from './customer-management.component';\nimport { UpdateCustomerComponent } from './update-customer/update-customer.component';\nimport { ViewCustomerComponent } from './view-customer/view-customer.component';\nimport { UploadCsvComponent } from './upload-csv/upload-csv.component';\nimport { ImportCsvComponent } from './import-csv/import-csv.component';\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\nimport { UpdateCreditComponent } from './update-credit/update-credit.component';\nimport { ResellerListComponent } from './reseller-list/reseller-list.component';\nimport { ViewTransactionComponent } from './view-transaction/view-transaction.component';\nimport { CustomerTimelineComponent } from './customer-timeline/customer-timeline.component';\n\nconst routes: Routes = [\n  { path: '', component: CustomerManagementComponent, children:[\n    {path:'customer-detail',component:CustomerListComponent},\n    {path:'update-customer/:id',component:UpdateCustomerComponent},\n    {path:'timeline/:id',component:CustomerTimelineComponent},\n    {path:'create',component:CreateCustomerComponent},\n    {path:'update/:id',component:UpdateCustomerComponent},\n    {path:'view/:id',component:ViewCustomerComponent},\n    {path:'upload-csv/:type', component:UploadCsvComponent},\n    {path:'import-csv/:file',component:ImportCsvComponent},\n    {path:'addCustomer',component:AddCustomerComponent},\n    {path:'update-credit',component:UpdateCreditComponent},\n    {path:'reseller-List/:id',component:ResellerListComponent},\n    {path:'view-transaction/:uuid',component:ViewTransactionComponent},\n  ]} \n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerManagementRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { cusRequestUrl } from 'src/app/services/customerReqUrl.const';\nimport { NotificationsService } from 'src/services/notifications.service';\n\n@Component({\n  selector: 'app-view-transaction',\n  templateUrl: './view-transaction.component.html',\n  styleUrls: ['./view-transaction.component.scss']\n})\nexport class ViewTransactionComponent {\n  tab: string = 'phistory'\n  purchasehistory: any;\n  customer_uuid: any;\n  pageSize: number = 10;\n  page: number = 1;\n  totalCustomer: number = 10;\n  spendhistory: any;\n  spentPageSize: number = 10;\n  spentPage: number = 1;\n  totalSpent: number = 0;\n\n  invoicePage = 1;\n  invoicePageSize = 10;\n  totalInvoice = 0;\n  checkoutDetail: any;\n  totalValue: any;\n  total_tax: any;\n  TotalItem: any;\n  thistory:any;\n  showError: boolean = false;\n  orderDetail: any;\n  invoiceDetail:any;\n  constructor(private toastr: ToastrService, private route: ActivatedRoute, private crud: CrudService,\n    public notification: NotificationsService) { }\n  ngOnInit() {\n    this.customer_uuid = this.route.snapshot.paramMap.get('uuid');\n    this.getPurchaseHistory();\n  }\n  getPurchaseHistory() {\n    this.crud.getRequest(`${requestUrl.getPurchaseHistoryAdmin}${this.customer_uuid}&page=${this.page}&page_size=${this.pageSize}`).then((res: any) => {\n      if (res) {\n\n        this.purchasehistory = res.data.results;\n        this.totalCustomer = res.data.count;\n        this.purchasehistory.forEach((element: any) => {\n          element['tax_price'] = parseInt(element.tax_price);\n          element['total_price'] = parseInt(element.total_price);\n        });\n      }\n    })\n  }\n\n  getSpentHistory() {\n    this.crud.getRequest(`${cusRequestUrl.customerSpentHistory}${this.customer_uuid}&page=${this.spentPage}&page_size=${this.spentPageSize}`).then((res: any) => {\n      if (res) {\n        this.spendhistory = res.data.results;\n        this.totalSpent = res.data.count;\n      }\n    })\n  }\n  getInvoiceHistory() {\n    this.crud.getRequest(`${requestUrl.getInvoiceHistory}${this.customer_uuid}?page=${this.invoicePage}&page_size=${this.invoicePageSize}`).then((res: any) => {\n      if (res) {\n        this.thistory = res.data.results;\n        this.totalInvoice = res?.data?.count || 0;\n        this.showError = this.thistory.length == 0 ? true : false;\n      }\n    })\n  }\n  copyId(id: string) {\n    this.toastr.success('Transaction Id Copied');\n    navigator.clipboard.writeText(id);\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.getPurchaseHistory();\n  }\n  handleSpentPageChange(event: number): void {\n    this.spentPage = event;\n    this.getSpentHistory();\n  }\n\n  handleInvoicePageChange(event: number): void {\n    this.invoicePage = event;\n    this.getInvoiceHistory();\n  }\n\n  getCheckOutDetail(credit: any) {\n    this.totalValue = 0;\n    this.TotalItem = 0;\n    this.checkoutDetail = credit.items;\n    this.total_tax = credit.tax_price;\n    this.checkoutDetail.forEach((element: any) => {\n      this.totalValue = this.totalValue + element.sub_total;\n      this.TotalItem = this.TotalItem + element.quantity;\n    });\n    this.TotalItem = this.checkoutDetail.length;\n    this.totalValue = parseInt(this.totalValue) + parseInt(this.total_tax);\n    // this.totalValue = 0;\n    // this.checkoutDetail = credit.items;\n    // this.total_tax = credit.tax_price;\n    // this.checkoutDetail.forEach((element: any) => {\n    //   this.totalValue = this.totalValue + element.price;\n    // });\n    // this.totalValue = this.totalValue + parseInt(this.total_tax);\n    // this.TotalItem = this.checkoutDetail.length;\n  }\n  downloadInvoice(id: any) {\n    this.crud.getRequest(`${cusRequestUrl.downloadInvoice}${id}`).then((res: any) => {\n      if (res) {\n        if(res.is_success){\n          window.open(res.url, '_blank');\n          this.toastr.success(res.message);\n        }\n        else{\n          this.toastr.error(res.message);\n        }\n      }\n    })\n  }\n  // copyId(id: string) {\n  //   this.toastr.success('Transaction Id Copied');\n  //   navigator.clipboard.writeText(id);\n  // }\n  getOrderDetail(invoice:any){\n    this.orderDetail = invoice.order_list\n    this.orderDetail['tax_price'] = parseInt(this.orderDetail.tax_price);\n    this.orderDetail['total_price'] = parseInt(this.orderDetail.total_price);\n  }\n  getInvoiceDetail(credit: any) {\n    this.invoiceDetail = credit.invoice[0];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, TitleCasePipe } from '@angular/common';\n\nimport { CustomerManagementRoutingModule } from './customer-management-routing.module';\nimport { CreateCustomerComponent } from './create-customer/create-customer.component';\nimport { UpdateCustomerComponent } from './update-customer/update-customer.component';\nimport { ViewCustomerComponent } from './view-customer/view-customer.component';\nimport { CustomerManagementComponent } from './customer-management.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { UploadCsvComponent } from './upload-csv/upload-csv.component';\nimport { ImportCsvComponent } from './import-csv/import-csv.component';\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\nimport { NgxCaptchaModule } from 'ngx-captcha';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { UpdateCreditComponent } from './update-credit/update-credit.component';\nimport { ResellerListComponent } from './reseller-list/reseller-list.component';\nimport { ViewTransactionComponent } from './view-transaction/view-transaction.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedComponentsModule } from \"../../shared-components/shared-components.module\";\nimport { CustomerTimelineComponent } from './customer-timeline/customer-timeline.component';\n\n@NgModule({\n  declarations: [\n    CreateCustomerComponent,\n    UpdateCustomerComponent,\n    ViewCustomerComponent,\n    CustomerManagementComponent,\n    CustomerListComponent,\n    UploadCsvComponent,\n    ImportCsvComponent,\n    AddCustomerComponent,\n    UpdateCreditComponent,\n    ResellerListComponent,\n    ViewTransactionComponent,\n    CustomerTimelineComponent\n  ],\n  imports: [\n    CommonModule,\n    CustomerManagementRoutingModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxCaptchaModule,\n    Ng2TelInputModule,\n    NgSelectModule,\n    SharedComponentsModule\n],\n})\nexport class CustomerManagementModule { }\n"],"x_google_ignoreList":[]}