{"version":3,"file":"825.ab627226e440793d.js","mappings":"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","names":["i0","ReportListComponent","constructor","_titleservice","toastr","_logreportservice","crud","notification","this","inject","LogParseService","setTitle","ngOnInit","retrieveLogReport","getRequestParams","params","searchTitle","page","pageSize","search","page_size","field","order","param","sortField","sortOrder","order_in","title","fromDate","from_date","to_date","toDate","getLogReports","subscribe","res","logReports","data","results","map","log","logParseService","parseDetails","showError","length","totalLogReport","count","document","getElementById","click","err","error","detail","timeOut","handlePageChange","event","onKeyUp","x","toLowerCase","replace","serchFileAgainstDate","getRequest","requestUrl","then","exportToCsv","searchByRange","isReset","forEach","value","index","method","sys_id","Intl","DateTimeFormat","resolvedOptions","dt","Date","created_at","date","getDate","month","toLocaleString","year","getFullYear","time","hour","minute","hour12","description","file_request","credit_update_type","credit_update_description","filename","toLocaleDateString","replaceAll","downloadInvoiceFile","static","core","selectors","ctx","$event","routes","path","component","ReportLogComponent","children","ReportViewComponent","router","route","report_id","snapshot","paramMap","get","getLogReportById","getLogById","reportDetail","ReportLogRoutingModule","RouterModule","ReportLogModule","CommonModule","NgxPaginationModule","NgxJsonViewerModule","FormsModule","SharedComponentsModule","TitleCasePipe","imports","SharedPipeModule","SortButtonComponent","EventEmitter"],"sourceRoot":"webpack:///","sources":["./src/app/admin/report-log/report-list/report-list.component.html","./src/app/admin/report-log/report-list/report-list.component.ts","./src/app/admin/report-log/report-view/report-view.component.html","./src/app/admin/report-log/report-log-routing.module.ts","./src/app/admin/report-log/report-log.component.ts","./src/app/admin/report-log/report-log.component.html","./src/app/admin/report-log/report-view/report-view.component.ts","./src/app/admin/report-log/report-log.module.ts","./src/app/shared-components/shared-components.module.ts","./src/app/shared-components/sort-button/sort-button.component.ts","./src/app/shared-components/sort-button/sort-button.component.html"],"sourcesContent":["<section class=\"user-list\">\n    <ul class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a routerLink=\"/admin/log-report\" routerLinkActive=\"active\">Log report</a></li>\n    </ul>\n    <div class=\"ulist-div\">\n        <div class=\"u-add after-seperator\">\n            <h2>Log Report</h2>\n            <div class=\"u-add-right\">\n                <div class=\"searchBy\">\n                    <input type=\"text\" #yourInput (keyup)=\"onKeyUp(yourInput.value)\"\n                        placeholder=\"Search by name & email\" />\n                </div>\n\n                <button\n                title=\"Filter By Date\"\n                class=\"searhbtn\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#dateSearchModal\">\n                <i\n                    class=\"fa fa-calendar\"\n                    style=\"color: #5367de\"\n                    aria-hidden=\"true\">\n                </i>\n                </button>\n                <a class=\"btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#dateSearchModal\" style=\"white-space: nowrap;\">CSV Download</a>\n            </div>\n        </div>\n        <div class=\"responsive-tbl mt-4\">\n            <table>\n                <thead>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">#</p>\n                            <sort-button (onSort)=\"retrieveLogReport('sys_id',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">User Name</p>\n                            <sort-button (onSort)=\"retrieveLogReport('user__first_name',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">File Request</p>\n                            <sort-button (onSort)=\"retrieveLogReport('file_request',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th> \n                        <div class=\"d-flex align-items-center justify-content-center\" style=\"min-width: 15ch;\">\n                            <p class=\"mb-0\">Title</p>\n                            <sort-button (onSort)=\"retrieveLogReport('title',$event)\"></sort-button>\n                        </div>\n                     </th>\n                    <th>  \n                        <div class=\"d-flex align-items-center justify-content-center\" style=\"min-width: 45ch;\">\n                            <p class=\"mb-0\">Description</p>\n                            <sort-button (onSort)=\"retrieveLogReport('description',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <!-- <th> User ip </th> -->\n                    <th>\n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Event Type</p>\n                            <sort-button (onSort)=\"retrieveLogReport('event',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th> Module </th>\n                    <th>  \n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Type</p>\n                            <sort-button (onSort)=\"retrieveLogReport('credit_update_type',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th> \n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">User Description</p>\n                            <sort-button (onSort)=\"retrieveLogReport('credit_update_description',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th> \n                        <div class=\"d-flex align-items-center justify-content-center\">\n                            <p class=\"mb-0\">Event Timestamp</p>\n                            <sort-button (onSort)=\"retrieveLogReport('created_at',$event)\"></sort-button>\n                        </div>\n                    </th>\n                    <th class=\"tableHeadAction\"> Action </th>\n                </thead>\n                <tr\n                    *ngFor=\"let report of logReports | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: totalLogReport};let i = index\">\n                    <td style=\"width: 25px;\">LOG{{report?.sys_id || 'NA'}}</td>\n                    <td>\n                        <div class=\"tdholder\">\n                            <div class=\"tdinner\"> <span>{{report?.user || 'NA'}} </span>\n                                <p>{{report?.email || 'NA'}} </p>\n                            </div>\n                        </div>\n                    </td>\n                    <td> {{report?.file_request || 'NA'}} </td>\n                    <!-- <td> {{report?.ip_address || 'NA'}} </td> -->\n                    <td> {{report?.title || 'NA'}} </td>\n                    <td>\n                        <p style=\"white-space: pre-wrap;\" [innerHTML]=\"report?.description || 'NA'\">\n                        </p> \n                    </td>\n                    <td>\n                        <span [ngSwitch]=\"report.event\">\n                            <span *ngSwitchCase=\"'GET'\">View</span>\n                            <span *ngSwitchCase=\"'POST'\">Created</span>\n                            <span *ngSwitchCase=\"'UPDATE'\">Updated</span>\n                            <span *ngSwitchCase=\"'Update'\">Updated</span>\n                            <span *ngSwitchCase=\"'Updated'\">Updated</span>\n                            <span *ngSwitchCase=\"'updated'\">Updated</span>\n                            <span *ngSwitchCase=\"'DELETE'\">Deleted</span>\n                            <span *ngSwitchCase=\"'Deleted'\">Deleted</span>\n                            <span *ngSwitchCase=\"'deleted'\">Deleted</span>\n                            <span *ngSwitchCase=\"'created'\">Created</span>\n                            <span *ngSwitchCase=\"'Created'\">Created</span>\n                            <span *ngSwitchCase=\"'buisness Profile updated'\">Buisness Profile updated</span>\n                            <span *ngSwitchDefault>....</span>\n                        </span>\n                    </td>\n                    <td> {{report?.module || 'NA'}} </td>\n                    <td> {{report?.credit_update_type || 'NA'}} </td>\n                    <td> {{report?.credit_update_description || 'NA'}} </td>\n                    <td> {{notification.formatDate(report?.created_at)}} </td>\n                    <td class=\"tableBodyAction\">\n                        <div class=\"actiontd\">\n                            <a class=\"eyeIcon\" [routerLink]=\"['/admin/report-log/report-detail',report.sys_id]\"><i\n                                    class=\"fa fa-eye\" title=\"View\" style=\"font-size:12px; color:#5367DE;\"></i></a>\n                        </div>\n                    </td>\n                </tr>\n                <tr class=\"errcls\" *ngIf=\"showError\">\n                    Records not found\n                </tr>\n            </table>\n        </div>\n        <pagination-controls *ngIf=\"logReports.length !=0\" class=\"pagination-crl\" previousLabel=\"Prev\" nextLabel=\"Next\"\n            (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n            \n            <!-- <app-timeline [logs]=\"logReports\"></app-timeline> -->\n    </div>\n\n\n</section>\n<!-- The search by date modal -->\n<div class=\"modal fade\" id=\"dateSearchModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\" style=\"top: -200px;\">\n    <div class=\"v-align\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Select Range</h4>\n                    <button type=\"button\" id=\"dateModal\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"searchByDate\">\n                        <div class=\"dateRange\">\n                            <div>\n                                <div>\n                                    <label for=\"\">From</label>\n                                    <input type=\"date\" [(ngModel)]=\"fromDate\" class=\"form-control\"\n                                        placeholder=\"From: DD/MM/YY\" />\n                                </div>\n                                <div>\n                                    <label for=\"\">To</label>\n                                    <input type=\"date\" [(ngModel)]=\"toDate\" [min]=\"fromDate\" class=\"form-control\"\n                                        placeholder=\"To: DD/MM/YY\" />\n                                </div>\n                            </div>\n                            <div class=\"btnDiv\">\n                                <div>\n                                    <button (click)=\"searchByRange(true)\" data-bs-dismiss=\"modal\">Reset</button>\n                                </div>\n                                <div>\n                                    <button (click)=\"searchByRange()\">Apply</button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, inject, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { LogReportService } from '../../services/log-report.service';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { requestUrl } from 'src/app/services/adminReqUrl.const';\nimport { NotificationsService } from 'src/services/notifications.service';\nimport { LogParseService } from 'src/app/services/log-parse.service';\n\n@Component({\n  selector: 'app-report-list',\n  templateUrl: './report-list.component.html',\n  styleUrls: ['./report-list.component.scss']\n})\nexport class ReportListComponent implements OnInit {\n\n  logReports: any = [];\n  page = 1;\n  pageSize = 10;\n  title = '';\n  totalLogReport: any;\n  showError: boolean = false;\n  fromDate: any;\n  toDate: any;\n  sortOrder: any;\n  sortField: any;\n\n  logParseService = inject(LogParseService);\n  \n  constructor(private _titleservice: Title, private toastr: ToastrService,\n    private _logreportservice: LogReportService, private crud: CrudService,\n    public notification: NotificationsService) {\n    this._titleservice.setTitle('Log Report')\n  }\n\n  ngOnInit(): void {\n    this.retrieveLogReport();\n  }\n\n  getRequestParams(params:any,searchTitle: string, page: number, pageSize: number): any {\n    if (searchTitle) {\n      params[`search`] = searchTitle;\n    }\n    if (page) {\n      params[`page`] = page;\n    }\n    if (pageSize) {\n      params[`page_size`] = pageSize;\n    }\n    return params;\n  }\n\n  retrieveLogReport(field?: any, order?: any): void {\n    let param: any = {};\n\n    if(field) {\n      this.sortField = field;\n      this.sortOrder = order;\n    }\n    if (this.sortField) {\n      param['field'] = this.sortField;\n      param['order_in'] = this.sortOrder;\n    }\n    this.getRequestParams(param, this.title, this.page, this.pageSize);\n\n    if(this.fromDate) {\n      param.from_date = this.fromDate;\n      param.to_date = this.toDate;\n    }\n\n    this._logreportservice.getLogReports(param).subscribe((res: any) => {\n      this.logReports = res.data.results;\n      this.logReports.map((log:any) => this.logParseService.parseDetails(log))\n      this.showError = this.logReports.length == 0 ? true : false;\n      this.totalLogReport = res.data.count;\n      document.getElementById('dateModal')?.click();\n    },\n      (err: any) => {\n        this.toastr.error(err.error.detail, '', { timeOut: 4000 });\n      })\n\n  }\n\n  handlePageChange(event: number): void {\n    this.page = event;\n    this.retrieveLogReport();\n  }\n\n  onKeyUp(x: any) {\n    this.title = x.toLowerCase().replace('log', '');\n    this.page = 1;\n    this.retrieveLogReport();\n  }\n\n  exportData: any = [];\n\n  // Downloads log report based on date\n  serchFileAgainstDate() {\n    // (click)=\"exportToCsv(logReports)\"\n    if (this.fromDate && this.toDate) {\n      this.crud.getRequest(`${requestUrl.downloadLogReportByDateFilter}?from_date=${this.fromDate}&to_date=${this.toDate}`).then((res: any) => {\n        if (res) {\n          this.exportToCsv(res.data);\n        }\n        document.getElementById('dateModal')?.click();\n      })\n    }\n  }\n\n  // Filter log reports list based on date range \n  searchByRange(isReset = false) {\n    if(isReset) {\n      this.fromDate = '';\n      this.toDate = '';\n    }\n    this.retrieveLogReport();\n  }\n  exportToCsv(data: any) {\n    data.forEach((value: any, index: any) => {\n      let method = '';\n      let event = '';\n      // switch (value.method) {\n      //   case 'GET': method = 'View';\n      //     break;\n      //   case 'POST': method = 'Created';\n      //     break;\n      //   case 'PUT': method = 'Updated';\n      //     break;\n      //   case 'DELETE': method = 'Deleted';\n      //     break;\n      // }\n      method = (value?.method == 'POST') ? 'Created' : ((value?.method == 'PUT') ? 'Updated' : value?.method);\n      event = (value?.event == 'POST') ? 'Created' : ((value?.event == 'PUT') ? 'Updated' : value?.event);\n\n      data[index]['method'] = method;\n      data[index]['event'] = event;\n      data[index]['#'] = `LOG${value?.sys_id}`\n      const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      let dt = new Date(value?.created_at);\n      let date = dt.getDate();\n      let month = dt.toLocaleString('default', { month: 'short' });\n      let year = dt.getFullYear();\n      let time = dt.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n      data[index]['created_at'] = month + \" \" + date + \" \" + year + \" | \" + time;\n      data[index]['description'] = (value?.description) ? (value?.description) : ''\n      data[index]['title'] = (value?.title) ? (value?.title) : ''\n      data[index]['file_request'] = (value?.file_request) ? (value?.file_request) : ''\n      data[index]['credit_update_type'] = (value?.credit_update_type) ? (value?.credit_update_type) : ''\n      data[index]['credit_update_description'] = (value?.credit_update_description) ? (value?.credit_update_description) : ''\n    });\n\n    let today = new Date().toLocaleDateString(\"de-DE\");\n    let filename = \"log-report-\" + today.replaceAll(\".\", \"-\");\n    this._logreportservice.downloadInvoiceFile(data, filename);\n  }\n}","<section class=\"user-list\">\n  <ul class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin\">Home</a></li>\n    <li class=\"breadcrumb-item\"><a routerLink=\"/admin/report-log\">Log Report</a></li>\n    <li class=\"breadcrumb-item\"><a routerLinkActive=\"active\">Log Details</a></li>\n  </ul>\n  <div class=\"ulist-div\">\n    <div class=\"formFields\">\n      <div class=\"u-add \">\n        <h2>Log Details</h2>\n        <button class=\"backBtn\" routerLink=\"/admin/report-log\">\n          <i class=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n      <form>\n\n        <div>\n          <label for=\"fname\" class=\"form-label\"> Title </label>\n          <p>{{reportDetail?.title || ''}}</p>\n          <!-- <input [disabled]=\"true\" type=\"text\" value=\"{{reportDetail?.title || ''}}\" class=\"form-control\"> -->\n        </div>\n        <div>\n          <label for=\"fname\" class=\"form-label\"> Description </label>\n          <p>{{reportDetail?.description || ''}}</p>\n          <!-- <input [disabled]=\"true\" type=\"text\" value=\"{{reportDetail?.description || ''}}\" class=\"form-control\"> -->\n        </div>\n        <div>\n          <label for=\"fname\" class=\"form-label\"> User Name </label>\n          <p>{{reportDetail?.user || ''}}</p>\n          <!-- <input [disabled]=\"true\" type=\"text\" value=\"{{reportDetail?.user || ''}}\" class=\"form-control\"> -->\n        </div>\n        <div>\n          <label for=\"lname\" class=\"form-label\">User Email</label>\n          <p>{{reportDetail?.email || ''}}</p>\n          <!-- <input [disabled]=\"true\" type=\"text\" value=\"{{reportDetail?.email}}\" class=\"form-control\"> -->\n        </div>\n        <div>\n          <label for=\"fname\" class=\"form-label\">User ip</label>\n          <p>{{reportDetail?.ip_address || ''}}</p>\n          <!-- <input [disabled]=\"true\" type=\"text\" value=\"{{reportDetail?.ip_address}}\" class=\"form-control\"> -->\n        </div>\n        <div>\n          <label for=\"lname\" class=\"form-label\">Event Type</label>\n          <br>\n          <span [ngSwitch]=\"reportDetail?.method\">\n            <span *ngSwitchCase=\"'GET'\">View</span>\n            <span *ngSwitchCase=\"'POST'\">Created</span>\n            <span *ngSwitchCase=\"'UPDATE'\">Updated</span>\n            <span *ngSwitchCase=\"'Update'\">Updated</span>\n            <span *ngSwitchCase=\"'Updated'\">Updated</span>\n            <span *ngSwitchCase=\"'updated'\">Updated</span>\n            <span *ngSwitchCase=\"'DELETE'\">Deleted</span>\n            <span *ngSwitchCase=\"'Deleted'\">Deleted</span>\n            <span *ngSwitchCase=\"'deleted'\">Deleted</span>\n            <span *ngSwitchCase=\"'created'\">Created</span>\n            <span *ngSwitchCase=\"'Created'\">Created</span>\n            <span *ngSwitchDefault>....</span>\n          </span>\n        </div>\n        <div>\n          <label for=\"lname\" class=\"form-label\">Module</label>\n          <p>{{reportDetail?.module || ''}}</p>\n          <!-- <input [disabled]=\"true\" type=\"text\" value=\"{{reportDetail?.module}}\" class=\"form-control\"> -->\n        </div>\n        <div>\n          <label for=\"lname\" class=\"form-label\">Event Timestamp</label>\n          <p>{{notification.formatDate(reportDetail?.created_at)}}</p>\n          <!-- <input [disabled]=\"true\" type=\"text\"\n            value=\"{{reportDetail?.created_at | date}} | {{reportDetail?.created_at | date: 'hh:mm a'}}\"\n            class=\"form-control\"> -->\n        </div>\n      </form>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReportListComponent } from './report-list/report-list.component';\nimport { ReportLogComponent } from './report-log.component';\nimport { ReportViewComponent } from './report-view/report-view.component';\n\nconst routes: Routes = [{ path: '', component: ReportLogComponent,children:[\n                          {path:'',component:ReportListComponent},\n                          {path:'report-detail/:id',component:ReportViewComponent}\n                        ]}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportLogRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-report-log',\n  templateUrl: './report-log.component.html',\n  styleUrls: ['./report-log.component.scss']\n})\nexport class ReportLogComponent {\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogReportService } from '../../services/log-report.service';\nimport { NotificationsService } from 'src/services/notifications.service';\n\n@Component({\n  selector: 'app-report-view',\n  templateUrl: './report-view.component.html',\n  styleUrls: ['./report-view.component.scss']\n})\nexport class ReportViewComponent implements OnInit {\n\n  report_id:any;\n  reportDetail:any;\n  constructor(\n    private router:Router,\n    private route:ActivatedRoute, public notification: NotificationsService,\n    private _titleservice:Title,\n    private _logreportservice:LogReportService\n  )\n  {\n    this._titleservice.setTitle('Log report details')\n\n    this.report_id = this.route.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n\n    this.getLogReportById();\n    \n  }\n\n  getLogReportById()\n  {\n    this._logreportservice.getLogById(this.report_id).subscribe((res:any)=>{\n      this.reportDetail = res.data;\n      \n    },\n    (err:any)=>{\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportLogRoutingModule } from './report-log-routing.module';\nimport { ReportLogComponent } from './report-log.component';\nimport { ReportListComponent } from './report-list/report-list.component';\nimport { ReportViewComponent } from './report-view/report-view.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { FormsModule } from '@angular/forms';\nimport { SharedComponentsModule } from \"../../shared-components/shared-components.module\";\n\n@NgModule({\n  declarations: [\n    ReportLogComponent,\n    ReportListComponent,\n    ReportViewComponent\n  ],\n  imports: [\n    CommonModule,\n    ReportLogRoutingModule,\n    NgxPaginationModule,\n    NgxJsonViewerModule,\n    FormsModule,\n    SharedComponentsModule\n]\n})\nexport class ReportLogModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, TitleCasePipe } from '@angular/common';\nimport { SortButtonComponent } from './sort-button/sort-button.component';\nimport { SmartSearchComponent } from './smart-search/smart-search.component';\nimport { LoaderComponent } from './loader/loader.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { SharedPipeModule } from '../pipe/shared-pipe.module';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonComponent } from './button/button.component';\nimport { VehicleDetailsComponent } from './vehicle-details/vehicle-details.component';\n\n\n@NgModule({\n  declarations: [SortButtonComponent, SmartSearchComponent, LoaderComponent, TimelineComponent, VehicleDetailsComponent, ButtonComponent],\n  imports: [\n    CommonModule,\n    SharedPipeModule,\n    CommonModule,\n    FormsModule,\n  ],\n  exports:[SortButtonComponent, SmartSearchComponent, LoaderComponent, TimelineComponent, VehicleDetailsComponent, ButtonComponent],\n  providers:[TitleCasePipe]\n})\nexport class SharedComponentsModule { }\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'sort-button',\n  templateUrl: './sort-button.component.html',\n  styleUrls: ['./sort-button.component.scss']\n})\nexport class SortButtonComponent {\n@Output() onSort = new EventEmitter<string>();\n\n\n}\n","<div class=\"d-flex flex-column\" style=\"margin-left: 10px;\">\n    <i class=\"fa fa-chevron-up pointer\" (click)=\"onSort.emit('desc')\"\n        aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down pointer\"\n        (click)=\"onSort.emit('asc')\" aria-hidden=\"true\"></i>\n</div>"],"x_google_ignoreList":[]}