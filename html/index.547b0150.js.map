{"mappings":"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","sources":["<anon>","src/js/home.js","src/js/tiny-slider.js","src/js/vanillajs-scrollspy.js"],"sourcesContent":["var $126f17a2d0da0791$exports = {};\n\"use strict\";\nObject.defineProperty($126f17a2d0da0791$exports, \"__esModule\", {\n    value: true\n});\nvar $126f17a2d0da0791$var$win = window;\nvar $126f17a2d0da0791$var$caf = $126f17a2d0da0791$var$win.cancelAnimationFrame || $126f17a2d0da0791$var$win.mozCancelAnimationFrame || function(id) {\n    clearTimeout(id);\n};\nfunction $126f17a2d0da0791$var$extend() {\n    var obj, name, copy, target = arguments[0] || {}, i = 1, length = arguments.length;\n    for(; i < length; i++){\n        if ((obj = arguments[i]) !== null) for(name in obj){\n            copy = obj[name];\n            if (target === copy) continue;\n            else if (copy !== undefined) target[name] = copy;\n        }\n    }\n    return target;\n}\nfunction $126f17a2d0da0791$var$checkStorageValue(value) {\n    return [\n        \"true\",\n        \"false\"\n    ].indexOf(value) >= 0 ? JSON.parse(value) : value;\n}\nfunction $126f17a2d0da0791$var$setLocalStorage(storage, key, value, access) {\n    if (access) try {\n        storage.setItem(key, value);\n    } catch (e) {}\n    return value;\n}\nfunction $126f17a2d0da0791$var$getSlideId() {\n    var id = window.tnsId;\n    window.tnsId = !id ? 1 : id + 1;\n    return \"tns\" + window.tnsId;\n}\nfunction $126f17a2d0da0791$var$getBody() {\n    var doc = document, body = doc.body;\n    if (!body) {\n        body = doc.createElement(\"body\");\n        body.fake = true;\n    }\n    return body;\n}\nvar $126f17a2d0da0791$var$docElement = document.documentElement;\nfunction $126f17a2d0da0791$var$setFakeBody(body) {\n    var docOverflow = \"\";\n    if (body.fake) {\n        docOverflow = $126f17a2d0da0791$var$docElement.style.overflow; //avoid crashing IE8, if background image is used\n        body.style.background = \"\"; //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n        body.style.overflow = $126f17a2d0da0791$var$docElement.style.overflow = \"hidden\";\n        $126f17a2d0da0791$var$docElement.appendChild(body);\n    }\n    return docOverflow;\n}\nfunction $126f17a2d0da0791$var$resetFakeBody(body, docOverflow) {\n    if (body.fake) {\n        body.remove();\n        $126f17a2d0da0791$var$docElement.style.overflow = docOverflow; // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n        // eslint-disable-next-line\n        $126f17a2d0da0791$var$docElement.offsetHeight;\n    }\n}\n// get css-calc\nfunction $126f17a2d0da0791$var$calc() {\n    var doc = document, body = $126f17a2d0da0791$var$getBody(), docOverflow = $126f17a2d0da0791$var$setFakeBody(body), div = doc.createElement(\"div\"), result = false;\n    body.appendChild(div);\n    try {\n        var str = \"(10px * 10)\", vals = [\n            \"calc\" + str,\n            \"-moz-calc\" + str,\n            \"-webkit-calc\" + str\n        ], val;\n        for(var i = 0; i < 3; i++){\n            val = vals[i];\n            div.style.width = val;\n            if (div.offsetWidth === 100) {\n                result = val.replace(str, \"\");\n                break;\n            }\n        }\n    } catch (e) {}\n    body.fake ? $126f17a2d0da0791$var$resetFakeBody(body, docOverflow) : div.remove();\n    return result;\n}\n// get subpixel support value\nfunction $126f17a2d0da0791$var$percentageLayout() {\n    // check subpixel layout supporting\n    var doc = document, body = $126f17a2d0da0791$var$getBody(), docOverflow = $126f17a2d0da0791$var$setFakeBody(body), wrapper = doc.createElement(\"div\"), outer = doc.createElement(\"div\"), str = \"\", count = 70, perPage = 3, supported = false;\n    wrapper.className = \"tns-t-subp2\";\n    outer.className = \"tns-t-ct\";\n    for(var i = 0; i < count; i++)str += \"<div></div>\";\n    outer.innerHTML = str;\n    wrapper.appendChild(outer);\n    body.appendChild(wrapper);\n    supported = Math.abs(wrapper.getBoundingClientRect().left - outer.children[count - perPage].getBoundingClientRect().left) < 2;\n    body.fake ? $126f17a2d0da0791$var$resetFakeBody(body, docOverflow) : wrapper.remove();\n    return supported;\n}\nfunction $126f17a2d0da0791$var$mediaquerySupport() {\n    if (window.matchMedia || window.msMatchMedia) return true;\n    var doc = document, body = $126f17a2d0da0791$var$getBody(), docOverflow = $126f17a2d0da0791$var$setFakeBody(body), div = doc.createElement(\"div\"), style = doc.createElement(\"style\"), rule = \"@media all and (min-width:1px){.tns-mq-test{position:absolute}}\", position;\n    style.type = \"text/css\";\n    div.className = \"tns-mq-test\";\n    body.appendChild(style);\n    body.appendChild(div);\n    if (style.styleSheet) style.styleSheet.cssText = rule;\n    else style.appendChild(doc.createTextNode(rule));\n    position = window.getComputedStyle ? window.getComputedStyle(div).position : div.currentStyle[\"position\"];\n    body.fake ? $126f17a2d0da0791$var$resetFakeBody(body, docOverflow) : div.remove();\n    return position === \"absolute\";\n}\n// create and append style sheet\nfunction $126f17a2d0da0791$var$createStyleSheet(media, nonce) {\n    // Create the <style> tag\n    var style = document.createElement(\"style\"); // style.setAttribute(\"type\", \"text/css\");\n    // Add a media (and/or media query) here if you'd like!\n    // style.setAttribute(\"media\", \"screen\")\n    // style.setAttribute(\"media\", \"only screen and (max-width : 1024px)\")\n    if (media) style.setAttribute(\"media\", media);\n     // Add nonce attribute for Content Security Policy\n    if (nonce) style.setAttribute(\"nonce\", nonce);\n     // WebKit hack :(\n    // style.appendChild(document.createTextNode(\"\"));\n    // Add the <style> element to the page\n    document.querySelector(\"head\").appendChild(style);\n    return style.sheet ? style.sheet : style.styleSheet;\n}\n// cross browsers addRule method\nfunction $126f17a2d0da0791$var$addCSSRule(sheet, selector, rules, index) {\n    // return raf(function() {\n    \"insertRule\" in sheet ? sheet.insertRule(selector + \"{\" + rules + \"}\", index) : sheet.addRule(selector, rules, index); // });\n}\n// cross browsers addRule method\nfunction $126f17a2d0da0791$var$removeCSSRule(sheet, index) {\n    // return raf(function() {\n    \"deleteRule\" in sheet ? sheet.deleteRule(index) : sheet.removeRule(index); // });\n}\nfunction $126f17a2d0da0791$var$getCssRulesLength(sheet) {\n    var rule = \"insertRule\" in sheet ? sheet.cssRules : sheet.rules;\n    return rule.length;\n}\nfunction $126f17a2d0da0791$var$toDegree(y, x) {\n    return Math.atan2(y, x) * (180 / Math.PI);\n}\nfunction $126f17a2d0da0791$var$getTouchDirection(angle, range) {\n    var direction = false, gap = Math.abs(90 - Math.abs(angle));\n    if (gap >= 90 - range) direction = \"horizontal\";\n    else if (gap <= range) direction = \"vertical\";\n    return direction;\n}\n// https://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\nfunction $126f17a2d0da0791$var$forEach(arr, callback, scope) {\n    for(var i = 0, l = arr.length; i < l; i++)callback.call(scope, arr[i], i);\n}\nvar $126f17a2d0da0791$var$classListSupport = \"classList\" in document.createElement(\"_\");\nvar $126f17a2d0da0791$var$hasClass = $126f17a2d0da0791$var$classListSupport ? function(el, str) {\n    return el.classList.contains(str);\n} : function(el, str) {\n    return el.className.indexOf(str) >= 0;\n};\nvar $126f17a2d0da0791$var$addClass = $126f17a2d0da0791$var$classListSupport ? function(el, str) {\n    if (!$126f17a2d0da0791$var$hasClass(el, str)) el.classList.add(str);\n} : function(el, str) {\n    if (!$126f17a2d0da0791$var$hasClass(el, str)) el.className += \" \" + str;\n};\nvar $126f17a2d0da0791$var$removeClass = $126f17a2d0da0791$var$classListSupport ? function(el, str) {\n    if ($126f17a2d0da0791$var$hasClass(el, str)) el.classList.remove(str);\n} : function(el, str) {\n    if ($126f17a2d0da0791$var$hasClass(el, str)) el.className = el.className.replace(str, \"\");\n};\nfunction $126f17a2d0da0791$var$hasAttr(el, attr) {\n    return el.hasAttribute(attr);\n}\nfunction $126f17a2d0da0791$var$getAttr(el, attr) {\n    return el.getAttribute(attr);\n}\nfunction $126f17a2d0da0791$var$isNodeList(el) {\n    // Only NodeList has the \"item()\" function\n    return typeof el.item !== \"undefined\";\n}\nfunction $126f17a2d0da0791$var$setAttrs(els, attrs) {\n    els = $126f17a2d0da0791$var$isNodeList(els) || els instanceof Array ? els : [\n        els\n    ];\n    if (Object.prototype.toString.call(attrs) !== \"[object Object]\") return;\n    for(var i = els.length; i--;)for(var key in attrs)els[i].setAttribute(key, attrs[key]);\n}\nfunction $126f17a2d0da0791$var$removeAttrs(els, attrs) {\n    els = $126f17a2d0da0791$var$isNodeList(els) || els instanceof Array ? els : [\n        els\n    ];\n    attrs = attrs instanceof Array ? attrs : [\n        attrs\n    ];\n    var attrLength = attrs.length;\n    for(var i = els.length; i--;)for(var j = attrLength; j--;)els[i].removeAttribute(attrs[j]);\n}\nfunction $126f17a2d0da0791$var$arrayFromNodeList(nl) {\n    var arr = [];\n    for(var i = 0, l = nl.length; i < l; i++)arr.push(nl[i]);\n    return arr;\n}\nfunction $126f17a2d0da0791$var$hideElement(el, forceHide) {\n    if (el.style.display !== \"none\") el.style.display = \"none\";\n}\nfunction $126f17a2d0da0791$var$showElement(el, forceHide) {\n    if (el.style.display === \"none\") el.style.display = \"\";\n}\nfunction $126f17a2d0da0791$var$isVisible(el) {\n    return window.getComputedStyle(el).display !== \"none\";\n}\nfunction $126f17a2d0da0791$var$whichProperty(props) {\n    if (typeof props === \"string\") {\n        var arr = [\n            props\n        ], Props = props.charAt(0).toUpperCase() + props.substr(1), prefixes = [\n            \"Webkit\",\n            \"Moz\",\n            \"ms\",\n            \"O\"\n        ];\n        prefixes.forEach(function(prefix) {\n            if (prefix !== \"ms\" || props === \"transform\") arr.push(prefix + Props);\n        });\n        props = arr;\n    }\n    var el = document.createElement(\"fakeelement\");\n    props.length;\n    for(var i = 0; i < props.length; i++){\n        var prop = props[i];\n        if (el.style[prop] !== undefined) return prop;\n    }\n    return false; // explicit for ie9-\n}\nfunction $126f17a2d0da0791$var$has3DTransforms(tf) {\n    if (!tf) return false;\n    if (!window.getComputedStyle) return false;\n    var doc = document, body = $126f17a2d0da0791$var$getBody(), docOverflow = $126f17a2d0da0791$var$setFakeBody(body), el = doc.createElement(\"p\"), has3d, cssTF = tf.length > 9 ? \"-\" + tf.slice(0, -9).toLowerCase() + \"-\" : \"\";\n    cssTF += \"transform\"; // Add it to the body to get the computed style\n    body.insertBefore(el, null);\n    el.style[tf] = \"translate3d(1px,1px,1px)\";\n    has3d = window.getComputedStyle(el).getPropertyValue(cssTF);\n    body.fake ? $126f17a2d0da0791$var$resetFakeBody(body, docOverflow) : el.remove();\n    return has3d !== undefined && has3d.length > 0 && has3d !== \"none\";\n}\n// get transitionend, animationend based on transitionDuration\n// @propin: string\n// @propOut: string, first-letter uppercase\n// Usage: getEndProperty('WebkitTransitionDuration', 'Transition') => webkitTransitionEnd\nfunction $126f17a2d0da0791$var$getEndProperty(propIn, propOut) {\n    var endProp = false;\n    if (/^Webkit/.test(propIn)) endProp = \"webkit\" + propOut + \"End\";\n    else if (/^O/.test(propIn)) endProp = \"o\" + propOut + \"End\";\n    else if (propIn) endProp = propOut.toLowerCase() + \"end\";\n    return endProp;\n}\n// Test via a getter in the options object to see if the passive property is accessed\nvar $126f17a2d0da0791$var$supportsPassive = false;\ntry {\n    var $126f17a2d0da0791$var$opts = Object.defineProperty({}, \"passive\", {\n        get: function() {\n            $126f17a2d0da0791$var$supportsPassive = true;\n        }\n    });\n    window.addEventListener(\"test\", null, $126f17a2d0da0791$var$opts);\n} catch (e) {}\nvar $126f17a2d0da0791$var$passiveOption = $126f17a2d0da0791$var$supportsPassive ? {\n    passive: true\n} : false;\nfunction $126f17a2d0da0791$var$addEvents(el, obj, preventScrolling) {\n    for(var prop in obj){\n        var option = [\n            \"touchstart\",\n            \"touchmove\"\n        ].indexOf(prop) >= 0 && !preventScrolling ? $126f17a2d0da0791$var$passiveOption : false;\n        el.addEventListener(prop, obj[prop], option);\n    }\n}\nfunction $126f17a2d0da0791$var$removeEvents(el, obj) {\n    for(var prop in obj){\n        var option = [\n            \"touchstart\",\n            \"touchmove\"\n        ].indexOf(prop) >= 0 ? $126f17a2d0da0791$var$passiveOption : false;\n        el.removeEventListener(prop, obj[prop], option);\n    }\n}\nfunction $126f17a2d0da0791$var$Events() {\n    return {\n        topics: {},\n        on: function(eventName, fn) {\n            this.topics[eventName] = this.topics[eventName] || [];\n            this.topics[eventName].push(fn);\n        },\n        off: function(eventName, fn) {\n            if (this.topics[eventName]) {\n                for(var i = 0; i < this.topics[eventName].length; i++)if (this.topics[eventName][i] === fn) {\n                    this.topics[eventName].splice(i, 1);\n                    break;\n                }\n            }\n        },\n        emit: function(eventName, data) {\n            data.type = eventName;\n            if (this.topics[eventName]) this.topics[eventName].forEach(function(fn) {\n                fn(data, eventName);\n            });\n        }\n    };\n}\nfunction $126f17a2d0da0791$var$jsTransform(element, attr, prefix, postfix, to, duration, callback) {\n    var tick = Math.min(duration, 10), unit = to.indexOf(\"%\") >= 0 ? \"%\" : \"px\", to = to.replace(unit, \"\"), from = Number(element.style[attr].replace(prefix, \"\").replace(postfix, \"\").replace(unit, \"\")), positionTick = (to - from) / duration * tick;\n    setTimeout(moveElement, tick);\n    function moveElement() {\n        duration -= tick;\n        from += positionTick;\n        element.style[attr] = prefix + from + unit + postfix;\n        if (duration > 0) setTimeout(moveElement, tick);\n        else callback();\n    }\n}\n// Object.keys\nif (!Object.keys) Object.keys = function(object) {\n    var keys = [];\n    for(var name in object)if (Object.prototype.hasOwnProperty.call(object, name)) keys.push(name);\n    return keys;\n};\n // ChildNode.remove\nif (!(\"remove\" in Element.prototype)) Element.prototype.remove = function() {\n    if (this.parentNode) this.parentNode.removeChild(this);\n};\nvar $126f17a2d0da0791$var$tns = function(options) {\n    options = $126f17a2d0da0791$var$extend({\n        container: \".slider\",\n        mode: \"carousel\",\n        axis: \"horizontal\",\n        items: 1,\n        gutter: 0,\n        edgePadding: 0,\n        fixedWidth: false,\n        autoWidth: false,\n        viewportMax: false,\n        slideBy: 1,\n        center: false,\n        controls: true,\n        controlsPosition: \"top\",\n        controlsText: [\n            \"prev\",\n            \"next\"\n        ],\n        controlsContainer: false,\n        prevButton: false,\n        nextButton: false,\n        nav: true,\n        navPosition: \"top\",\n        navContainer: false,\n        navAsThumbnails: false,\n        arrowKeys: false,\n        speed: 300,\n        autoplay: false,\n        autoplayPosition: \"top\",\n        autoplayTimeout: 5000,\n        autoplayDirection: \"forward\",\n        autoplayText: [\n            \"start\",\n            \"stop\"\n        ],\n        autoplayHoverPause: false,\n        autoplayButton: false,\n        autoplayButtonOutput: true,\n        autoplayResetOnVisibility: true,\n        animateIn: \"tns-fadeIn\",\n        animateOut: \"tns-fadeOut\",\n        animateNormal: \"tns-normal\",\n        animateDelay: false,\n        loop: true,\n        rewind: false,\n        autoHeight: false,\n        responsive: false,\n        lazyload: false,\n        lazyloadSelector: \".tns-lazy-img\",\n        touch: true,\n        mouseDrag: false,\n        swipeAngle: 15,\n        nested: false,\n        preventActionWhenRunning: false,\n        preventScrollOnTouch: false,\n        freezable: true,\n        onInit: false,\n        useLocalStorage: true,\n        nonce: false\n    }, options || {});\n    var doc = document, win = window, KEYS = {\n        ENTER: 13,\n        SPACE: 32,\n        LEFT: 37,\n        RIGHT: 39\n    }, tnsStorage = {}, localStorageAccess = options.useLocalStorage;\n    if (localStorageAccess) {\n        // check browser version and local storage access\n        var browserInfo = navigator.userAgent;\n        var uid = new Date();\n        try {\n            tnsStorage = win.localStorage;\n            if (tnsStorage) {\n                tnsStorage.setItem(uid, uid);\n                localStorageAccess = tnsStorage.getItem(uid) == uid;\n                tnsStorage.removeItem(uid);\n            } else localStorageAccess = false;\n            if (!localStorageAccess) tnsStorage = {};\n        } catch (e) {\n            localStorageAccess = false;\n        }\n        if (localStorageAccess) {\n            // remove storage when browser version changes\n            if (tnsStorage[\"tnsApp\"] && tnsStorage[\"tnsApp\"] !== browserInfo) [\n                \"tC\",\n                \"tPL\",\n                \"tMQ\",\n                \"tTf\",\n                \"t3D\",\n                \"tTDu\",\n                \"tTDe\",\n                \"tADu\",\n                \"tADe\",\n                \"tTE\",\n                \"tAE\"\n            ].forEach(function(item) {\n                tnsStorage.removeItem(item);\n            });\n             // update browserInfo\n            localStorage[\"tnsApp\"] = browserInfo;\n        }\n    }\n    var CALC = tnsStorage[\"tC\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tC\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tC\", $126f17a2d0da0791$var$calc(), localStorageAccess), PERCENTAGELAYOUT = tnsStorage[\"tPL\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tPL\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tPL\", $126f17a2d0da0791$var$percentageLayout(), localStorageAccess), CSSMQ = tnsStorage[\"tMQ\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tMQ\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tMQ\", $126f17a2d0da0791$var$mediaquerySupport(), localStorageAccess), TRANSFORM = tnsStorage[\"tTf\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tTf\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tTf\", $126f17a2d0da0791$var$whichProperty(\"transform\"), localStorageAccess), HAS3DTRANSFORMS = tnsStorage[\"t3D\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"t3D\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"t3D\", $126f17a2d0da0791$var$has3DTransforms(TRANSFORM), localStorageAccess), TRANSITIONDURATION = tnsStorage[\"tTDu\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tTDu\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tTDu\", $126f17a2d0da0791$var$whichProperty(\"transitionDuration\"), localStorageAccess), TRANSITIONDELAY = tnsStorage[\"tTDe\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tTDe\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tTDe\", $126f17a2d0da0791$var$whichProperty(\"transitionDelay\"), localStorageAccess), ANIMATIONDURATION = tnsStorage[\"tADu\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tADu\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tADu\", $126f17a2d0da0791$var$whichProperty(\"animationDuration\"), localStorageAccess), ANIMATIONDELAY = tnsStorage[\"tADe\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tADe\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tADe\", $126f17a2d0da0791$var$whichProperty(\"animationDelay\"), localStorageAccess), TRANSITIONEND = tnsStorage[\"tTE\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tTE\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tTE\", $126f17a2d0da0791$var$getEndProperty(TRANSITIONDURATION, \"Transition\"), localStorageAccess), ANIMATIONEND = tnsStorage[\"tAE\"] ? $126f17a2d0da0791$var$checkStorageValue(tnsStorage[\"tAE\"]) : $126f17a2d0da0791$var$setLocalStorage(tnsStorage, \"tAE\", $126f17a2d0da0791$var$getEndProperty(ANIMATIONDURATION, \"Animation\"), localStorageAccess); // get element nodes from selectors\n    var supportConsoleWarn = win.console && typeof win.console.warn === \"function\", tnsList = [\n        \"container\",\n        \"controlsContainer\",\n        \"prevButton\",\n        \"nextButton\",\n        \"navContainer\",\n        \"autoplayButton\"\n    ], optionsElements = {};\n    tnsList.forEach(function(item) {\n        if (typeof options[item] === \"string\") {\n            var str = options[item], el = doc.querySelector(str);\n            optionsElements[item] = str;\n            if (el && el.nodeName) options[item] = el;\n            else {\n                if (supportConsoleWarn) console.warn(\"Can't find\", options[item]);\n                return;\n            }\n        }\n    }); // make sure at least 1 slide\n    if (options.container.children.length < 1) {\n        if (supportConsoleWarn) console.warn(\"No slides found in\", options.container);\n        return;\n    } // update options\n    var responsive = options.responsive, nested = options.nested, carousel = options.mode === \"carousel\" ? true : false;\n    if (responsive) {\n        // apply responsive[0] to options and remove it\n        if (0 in responsive) {\n            options = $126f17a2d0da0791$var$extend(options, responsive[0]);\n            delete responsive[0];\n        }\n        var responsiveTem = {};\n        for(var key in responsive){\n            var val = responsive[key]; // update responsive\n            // from: 300: 2\n            // to:\n            //   300: {\n            //     items: 2\n            //   }\n            val = typeof val === \"number\" ? {\n                items: val\n            } : val;\n            responsiveTem[key] = val;\n        }\n        responsive = responsiveTem;\n        responsiveTem = null;\n    } // update options\n    function updateOptions(obj) {\n        for(var key in obj){\n            if (!carousel) {\n                if (key === \"slideBy\") obj[key] = \"page\";\n                if (key === \"edgePadding\") obj[key] = false;\n                if (key === \"autoHeight\") obj[key] = false;\n            } // update responsive options\n            if (key === \"responsive\") updateOptions(obj[key]);\n        }\n    }\n    if (!carousel) updateOptions(options);\n     // === define and set variables ===\n    if (!carousel) {\n        options.axis = \"horizontal\";\n        options.slideBy = \"page\";\n        options.edgePadding = false;\n        var animateIn = options.animateIn, animateOut = options.animateOut, animateDelay = options.animateDelay, animateNormal = options.animateNormal;\n    }\n    var horizontal = options.axis === \"horizontal\" ? true : false, outerWrapper = doc.createElement(\"div\"), innerWrapper = doc.createElement(\"div\"), middleWrapper, container = options.container, containerParent = container.parentNode, containerHTML = container.outerHTML, slideItems = container.children, slideCount = slideItems.length, breakpointZone, windowWidth = getWindowWidth(), isOn = false;\n    if (responsive) setBreakpointZone();\n    if (carousel) container.className += \" tns-vpfix\";\n     // fixedWidth: viewport > rightBoundary > indexMax\n    var autoWidth = options.autoWidth, fixedWidth = getOption(\"fixedWidth\"), edgePadding = getOption(\"edgePadding\"), gutter = getOption(\"gutter\"), viewport = getViewportWidth(), center = getOption(\"center\"), items = !autoWidth ? Math.floor(getOption(\"items\")) : 1, slideBy = getOption(\"slideBy\"), viewportMax = options.viewportMax || options.fixedWidthViewportWidth, arrowKeys = getOption(\"arrowKeys\"), speed = getOption(\"speed\"), rewind = options.rewind, loop = rewind ? false : options.loop, autoHeight = getOption(\"autoHeight\"), controls = getOption(\"controls\"), controlsText = getOption(\"controlsText\"), nav = getOption(\"nav\"), touch = getOption(\"touch\"), mouseDrag = getOption(\"mouseDrag\"), autoplay = getOption(\"autoplay\"), autoplayTimeout = getOption(\"autoplayTimeout\"), autoplayText = getOption(\"autoplayText\"), autoplayHoverPause = getOption(\"autoplayHoverPause\"), autoplayResetOnVisibility = getOption(\"autoplayResetOnVisibility\"), sheet = $126f17a2d0da0791$var$createStyleSheet(null, getOption(\"nonce\")), lazyload = options.lazyload, lazyloadSelector = options.lazyloadSelector, slidePositions, // collection of slide positions\n    slideItemsOut = [], cloneCount = loop ? getCloneCountForLoop() : 0, slideCountNew = !carousel ? slideCount + cloneCount : slideCount + cloneCount * 2, hasRightDeadZone = (fixedWidth || autoWidth) && !loop ? true : false, rightBoundary = fixedWidth ? getRightBoundary() : null, updateIndexBeforeTransform = !carousel || !loop ? true : false, // transform\n    transformAttr = horizontal ? \"left\" : \"top\", transformPrefix = \"\", transformPostfix = \"\", // index\n    getIndexMax = function() {\n        if (fixedWidth) return function() {\n            return center && !loop ? slideCount - 1 : Math.ceil(-rightBoundary / (fixedWidth + gutter));\n        };\n        else if (autoWidth) return function() {\n            for(var i = 0; i < slideCountNew; i++){\n                if (slidePositions[i] >= -rightBoundary) return i;\n            }\n        };\n        else return function() {\n            if (center && carousel && !loop) return slideCount - 1;\n            else return loop || carousel ? Math.max(0, slideCountNew - Math.ceil(items)) : slideCountNew - 1;\n        };\n    }(), index = getStartIndex(getOption(\"startIndex\")), indexCached = index;\n    getCurrentSlide();\n    var indexMin = 0, indexMax = !autoWidth ? getIndexMax() : null, preventActionWhenRunning = options.preventActionWhenRunning, swipeAngle = options.swipeAngle, moveDirectionExpected = swipeAngle ? \"?\" : true, running = false, onInit = options.onInit, events = new $126f17a2d0da0791$var$Events(), // id, class\n    newContainerClasses = \" tns-slider tns-\" + options.mode, slideId = container.id || $126f17a2d0da0791$var$getSlideId(), disable = getOption(\"disable\"), disabled = false, freezable = options.freezable, freeze = freezable && !autoWidth ? getFreeze() : false, frozen = false, controlsEvents = {\n        click: onControlsClick,\n        keydown: onControlsKeydown\n    }, navEvents = {\n        click: onNavClick,\n        keydown: onNavKeydown\n    }, hoverEvents = {\n        mouseover: mouseoverPause,\n        mouseout: mouseoutRestart\n    }, visibilityEvent = {\n        visibilitychange: onVisibilityChange\n    }, docmentKeydownEvent = {\n        keydown: onDocumentKeydown\n    }, touchEvents = {\n        touchstart: onPanStart,\n        touchmove: onPanMove,\n        touchend: onPanEnd,\n        touchcancel: onPanEnd\n    }, dragEvents = {\n        mousedown: onPanStart,\n        mousemove: onPanMove,\n        mouseup: onPanEnd,\n        mouseleave: onPanEnd\n    }, hasControls = hasOption(\"controls\"), hasNav = hasOption(\"nav\"), navAsThumbnails = autoWidth ? true : options.navAsThumbnails, hasAutoplay = hasOption(\"autoplay\"), hasTouch = hasOption(\"touch\"), hasMouseDrag = hasOption(\"mouseDrag\"), slideActiveClass = \"tns-slide-active\", slideClonedClass = \"tns-slide-cloned\", imgCompleteClass = \"tns-complete\", imgEvents = {\n        load: onImgLoaded,\n        error: onImgFailed\n    }, imgsComplete, liveregionCurrent, preventScroll = options.preventScrollOnTouch === \"force\" ? true : false; // controls\n    if (hasControls) var controlsContainer = options.controlsContainer, controlsContainerHTML = options.controlsContainer ? options.controlsContainer.outerHTML : \"\", prevButton = options.prevButton, nextButton = options.nextButton, prevButtonHTML = options.prevButton ? options.prevButton.outerHTML : \"\", nextButtonHTML = options.nextButton ? options.nextButton.outerHTML : \"\", prevIsButton, nextIsButton;\n     // nav\n    if (hasNav) var navContainer = options.navContainer, navContainerHTML = options.navContainer ? options.navContainer.outerHTML : \"\", navItems, pages = autoWidth ? slideCount : getPages(), pagesCached = 0, navClicked = -1, navCurrentIndex = getCurrentNavIndex(), navCurrentIndexCached = navCurrentIndex, navActiveClass = \"tns-nav-active\", navStr = \"Carousel Page \", navStrCurrent = \" (Current Slide)\";\n     // autoplay\n    if (hasAutoplay) var autoplayDirection = options.autoplayDirection === \"forward\" ? 1 : -1, autoplayButton = options.autoplayButton, autoplayButtonHTML = options.autoplayButton ? options.autoplayButton.outerHTML : \"\", autoplayHtmlStrings = [\n        \"<span class='tns-visually-hidden'>\",\n        \" animation</span>\"\n    ], autoplayTimer, animating, autoplayHoverPaused, autoplayUserPaused, autoplayVisibilityPaused;\n    if (hasTouch || hasMouseDrag) var initPosition = {}, lastPosition = {}, translateInit, panStart = false, rafIndex, getDist = horizontal ? function(a, b) {\n        return a.x - b.x;\n    } : function(a, b) {\n        return a.y - b.y;\n    };\n     // disable slider when slidecount <= items\n    if (!autoWidth) resetVariblesWhenDisable(disable || freeze);\n    if (TRANSFORM) {\n        transformAttr = TRANSFORM;\n        transformPrefix = \"translate\";\n        if (HAS3DTRANSFORMS) {\n            transformPrefix += horizontal ? \"3d(\" : \"3d(0px, \";\n            transformPostfix = horizontal ? \", 0px, 0px)\" : \", 0px)\";\n        } else {\n            transformPrefix += horizontal ? \"X(\" : \"Y(\";\n            transformPostfix = \")\";\n        }\n    }\n    if (carousel) container.className = container.className.replace(\"tns-vpfix\", \"\");\n    initStructure();\n    initSheet();\n    initSliderTransform(); // === COMMON FUNCTIONS === //\n    function resetVariblesWhenDisable(condition) {\n        if (condition) controls = nav = touch = mouseDrag = arrowKeys = autoplay = autoplayHoverPause = autoplayResetOnVisibility = false;\n    }\n    function getCurrentSlide() {\n        var tem = carousel ? index - cloneCount : index;\n        while(tem < 0)tem += slideCount;\n        return tem % slideCount + 1;\n    }\n    function getStartIndex(ind) {\n        ind = ind ? Math.max(0, Math.min(loop ? slideCount - 1 : slideCount - items, ind)) : 0;\n        return carousel ? ind + cloneCount : ind;\n    }\n    function getAbsIndex(i) {\n        if (i == null) i = index;\n        if (carousel) i -= cloneCount;\n        while(i < 0)i += slideCount;\n        return Math.floor(i % slideCount);\n    }\n    function getCurrentNavIndex() {\n        var absIndex = getAbsIndex(), result;\n        result = navAsThumbnails ? absIndex : fixedWidth || autoWidth ? Math.ceil((absIndex + 1) * pages / slideCount - 1) : Math.floor(absIndex / items); // set active nav to the last one when reaches the right edge\n        if (!loop && carousel && index === indexMax) result = pages - 1;\n        return result;\n    }\n    function getItemsMax() {\n        // fixedWidth or autoWidth while viewportMax is not available\n        if (autoWidth || fixedWidth && !viewportMax) return slideCount - 1; // most cases\n        else {\n            var str = fixedWidth ? \"fixedWidth\" : \"items\", arr = [];\n            if (fixedWidth || options[str] < slideCount) arr.push(options[str]);\n            if (responsive) for(var bp in responsive){\n                var tem = responsive[bp][str];\n                if (tem && (fixedWidth || tem < slideCount)) arr.push(tem);\n            }\n            if (!arr.length) arr.push(0);\n            return Math.ceil(fixedWidth ? viewportMax / Math.min.apply(null, arr) : Math.max.apply(null, arr));\n        }\n    }\n    function getCloneCountForLoop() {\n        var itemsMax = getItemsMax(), result = carousel ? Math.ceil((itemsMax * 5 - slideCount) / 2) : itemsMax * 4 - slideCount;\n        result = Math.max(itemsMax, result);\n        return hasOption(\"edgePadding\") ? result + 1 : result;\n    }\n    function getWindowWidth() {\n        return win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth;\n    }\n    function getInsertPosition(pos) {\n        return pos === \"top\" ? \"afterbegin\" : \"beforeend\";\n    }\n    function getClientWidth(el) {\n        if (el == null) return;\n        var div = doc.createElement(\"div\"), rect, width;\n        el.appendChild(div);\n        rect = div.getBoundingClientRect();\n        width = rect.right - rect.left;\n        div.remove();\n        return width || getClientWidth(el.parentNode);\n    }\n    function getViewportWidth() {\n        var gap = edgePadding ? edgePadding * 2 - gutter : 0;\n        return getClientWidth(containerParent) - gap;\n    }\n    function hasOption(item) {\n        if (options[item]) return true;\n        else {\n            if (responsive) for(var bp in responsive){\n                if (responsive[bp][item]) return true;\n            }\n            return false;\n        }\n    } // get option:\n    // fixed width: viewport, fixedWidth, gutter => items\n    // others: window width => all variables\n    // all: items => slideBy\n    function getOption(item, ww) {\n        if (ww == null) ww = windowWidth;\n        if (item === \"items\" && fixedWidth) return Math.floor((viewport + gutter) / (fixedWidth + gutter)) || 1;\n        else {\n            var result = options[item];\n            if (responsive) for(var bp in responsive){\n                // bp: convert string to number\n                if (ww >= parseInt(bp)) {\n                    if (item in responsive[bp]) result = responsive[bp][item];\n                }\n            }\n            if (item === \"slideBy\" && result === \"page\") result = getOption(\"items\");\n            if (!carousel && (item === \"slideBy\" || item === \"items\")) result = Math.floor(result);\n            return result;\n        }\n    }\n    function getSlideMarginLeft(i) {\n        return CALC ? CALC + \"(\" + i * 100 + \"% / \" + slideCountNew + \")\" : i * 100 / slideCountNew + \"%\";\n    }\n    function getInnerWrapperStyles(edgePaddingTem, gutterTem, fixedWidthTem, speedTem, autoHeightBP) {\n        var str = \"\";\n        if (edgePaddingTem !== undefined) {\n            var gap = edgePaddingTem;\n            if (gutterTem) gap -= gutterTem;\n            str = horizontal ? \"margin: 0 \" + gap + \"px 0 \" + edgePaddingTem + \"px;\" : \"margin: \" + edgePaddingTem + \"px 0 \" + gap + \"px 0;\";\n        } else if (gutterTem && !fixedWidthTem) {\n            var gutterTemUnit = \"-\" + gutterTem + \"px\", dir = horizontal ? gutterTemUnit + \" 0 0\" : \"0 \" + gutterTemUnit + \" 0\";\n            str = \"margin: 0 \" + dir + \";\";\n        }\n        if (!carousel && autoHeightBP && TRANSITIONDURATION && speedTem) str += getTransitionDurationStyle(speedTem);\n        return str;\n    }\n    function getContainerWidth(fixedWidthTem, gutterTem, itemsTem) {\n        if (fixedWidthTem) return (fixedWidthTem + gutterTem) * slideCountNew + \"px\";\n        else return CALC ? CALC + \"(\" + slideCountNew * 100 + \"% / \" + itemsTem + \")\" : slideCountNew * 100 / itemsTem + \"%\";\n    }\n    function getSlideWidthStyle(fixedWidthTem, gutterTem, itemsTem) {\n        var width;\n        if (fixedWidthTem) width = fixedWidthTem + gutterTem + \"px\";\n        else {\n            if (!carousel) itemsTem = Math.floor(itemsTem);\n            var dividend = carousel ? slideCountNew : itemsTem;\n            width = CALC ? CALC + \"(100% / \" + dividend + \")\" : 100 / dividend + \"%\";\n        }\n        width = \"width:\" + width; // inner slider: overwrite outer slider styles\n        return nested !== \"inner\" ? width + \";\" : width + \" !important;\";\n    }\n    function getSlideGutterStyle(gutterTem) {\n        var str = \"\"; // gutter maybe interger || 0\n        // so can't use 'if (gutter)'\n        if (gutterTem !== false) {\n            var prop = horizontal ? \"padding-\" : \"margin-\", dir = horizontal ? \"right\" : \"bottom\";\n            str = prop + dir + \": \" + gutterTem + \"px;\";\n        }\n        return str;\n    }\n    function getCSSPrefix(name, num) {\n        var prefix = name.substring(0, name.length - num).toLowerCase();\n        if (prefix) prefix = \"-\" + prefix + \"-\";\n        return prefix;\n    }\n    function getTransitionDurationStyle(speed) {\n        return getCSSPrefix(TRANSITIONDURATION, 18) + \"transition-duration:\" + speed / 1000 + \"s;\";\n    }\n    function getAnimationDurationStyle(speed) {\n        return getCSSPrefix(ANIMATIONDURATION, 17) + \"animation-duration:\" + speed / 1000 + \"s;\";\n    }\n    function initStructure() {\n        var classOuter = \"tns-outer\", classInner = \"tns-inner\";\n        hasOption(\"gutter\");\n        outerWrapper.className = classOuter;\n        innerWrapper.className = classInner;\n        outerWrapper.id = slideId + \"-ow\";\n        innerWrapper.id = slideId + \"-iw\"; // set container properties\n        if (container.id === \"\") container.id = slideId;\n        newContainerClasses += PERCENTAGELAYOUT || autoWidth ? \" tns-subpixel\" : \" tns-no-subpixel\";\n        newContainerClasses += CALC ? \" tns-calc\" : \" tns-no-calc\";\n        if (autoWidth) newContainerClasses += \" tns-autowidth\";\n        newContainerClasses += \" tns-\" + options.axis;\n        container.className += newContainerClasses; // add constrain layer for carousel\n        if (carousel) {\n            middleWrapper = doc.createElement(\"div\");\n            middleWrapper.id = slideId + \"-mw\";\n            middleWrapper.className = \"tns-ovh\";\n            outerWrapper.appendChild(middleWrapper);\n            middleWrapper.appendChild(innerWrapper);\n        } else outerWrapper.appendChild(innerWrapper);\n        if (autoHeight) {\n            var wp = middleWrapper ? middleWrapper : innerWrapper;\n            wp.className += \" tns-ah\";\n        }\n        containerParent.insertBefore(outerWrapper, container);\n        innerWrapper.appendChild(container); // add id, class, aria attributes\n        // before clone slides\n        $126f17a2d0da0791$var$forEach(slideItems, function(item, i) {\n            $126f17a2d0da0791$var$addClass(item, \"tns-item\");\n            if (!item.id) item.id = slideId + \"-item\" + i;\n            if (!carousel && animateNormal) $126f17a2d0da0791$var$addClass(item, animateNormal);\n            $126f17a2d0da0791$var$setAttrs(item, {\n                \"aria-hidden\": \"true\",\n                tabindex: \"-1\"\n            });\n        }); // ## clone slides\n        // carousel: n + slides + n\n        // gallery:      slides + n\n        if (cloneCount) {\n            var fragmentBefore = doc.createDocumentFragment(), fragmentAfter = doc.createDocumentFragment();\n            for(var j = cloneCount; j--;){\n                var num = j % slideCount, cloneFirst = slideItems[num].cloneNode(true);\n                $126f17a2d0da0791$var$addClass(cloneFirst, slideClonedClass);\n                $126f17a2d0da0791$var$removeAttrs(cloneFirst, \"id\");\n                fragmentAfter.insertBefore(cloneFirst, fragmentAfter.firstChild);\n                if (carousel) {\n                    var cloneLast = slideItems[slideCount - 1 - num].cloneNode(true);\n                    $126f17a2d0da0791$var$addClass(cloneLast, slideClonedClass);\n                    $126f17a2d0da0791$var$removeAttrs(cloneLast, \"id\");\n                    fragmentBefore.appendChild(cloneLast);\n                }\n            }\n            container.insertBefore(fragmentBefore, container.firstChild);\n            container.appendChild(fragmentAfter);\n            slideItems = container.children;\n        }\n    }\n    function initSliderTransform() {\n        // ## images loaded/failed\n        if (hasOption(\"autoHeight\") || autoWidth || !horizontal) {\n            var imgs = container.querySelectorAll(\"img\"); // add img load event listener\n            $126f17a2d0da0791$var$forEach(imgs, function(img) {\n                var src = img.src;\n                if (!lazyload) {\n                    // not data img\n                    if (src && src.indexOf(\"data:image\") < 0) {\n                        img.src = \"\";\n                        $126f17a2d0da0791$var$addEvents(img, imgEvents);\n                        $126f17a2d0da0791$var$addClass(img, \"loading\");\n                        img.src = src; // data img\n                    } else imgLoaded(img);\n                }\n            }); // set imgsComplete\n            raf(function() {\n                imgsLoadedCheck($126f17a2d0da0791$var$arrayFromNodeList(imgs), function() {\n                    imgsComplete = true;\n                });\n            }); // reset imgs for auto height: check visible imgs only\n            if (hasOption(\"autoHeight\")) imgs = getImageArray(index, Math.min(index + items - 1, slideCountNew - 1));\n            lazyload ? initSliderTransformStyleCheck() : raf(function() {\n                imgsLoadedCheck($126f17a2d0da0791$var$arrayFromNodeList(imgs), initSliderTransformStyleCheck);\n            });\n        } else {\n            // set container transform property\n            if (carousel) doContainerTransformSilent();\n             // update slider tools and events\n            initTools();\n            initEvents();\n        }\n    }\n    function initSliderTransformStyleCheck() {\n        if (autoWidth && slideCount > 1) {\n            // check styles application\n            var num = loop ? index : slideCount - 1;\n            (function stylesApplicationCheck() {\n                var left = slideItems[num].getBoundingClientRect().left;\n                var right = slideItems[num - 1].getBoundingClientRect().right;\n                Math.abs(left - right) <= 1 ? initSliderTransformCore() : setTimeout(function() {\n                    stylesApplicationCheck();\n                }, 16);\n            })();\n        } else initSliderTransformCore();\n    }\n    function initSliderTransformCore() {\n        // run Fn()s which are rely on image loading\n        if (!horizontal || autoWidth) {\n            setSlidePositions();\n            if (autoWidth) {\n                rightBoundary = getRightBoundary();\n                if (freezable) freeze = getFreeze();\n                indexMax = getIndexMax(); // <= slidePositions, rightBoundary <=\n                resetVariblesWhenDisable(disable || freeze);\n            } else updateContentWrapperHeight();\n        } // set container transform property\n        if (carousel) doContainerTransformSilent();\n         // update slider tools and events\n        initTools();\n        initEvents();\n    }\n    function initSheet() {\n        // gallery:\n        // set animation classes and left value for gallery slider\n        if (!carousel) for(var i = index, l = index + Math.min(slideCount, items); i < l; i++){\n            var item = slideItems[i];\n            item.style.left = (i - index) * 100 / items + \"%\";\n            $126f17a2d0da0791$var$addClass(item, animateIn);\n            $126f17a2d0da0791$var$removeClass(item, animateNormal);\n        }\n         // #### LAYOUT\n        // ## INLINE-BLOCK VS FLOAT\n        // ## PercentageLayout:\n        // slides: inline-block\n        // remove blank space between slides by set font-size: 0\n        // ## Non PercentageLayout:\n        // slides: float\n        //         margin-right: -100%\n        //         margin-left: ~\n        // Resource: https://docs.google.com/spreadsheets/d/147up245wwTXeQYve3BRSAD4oVcvQmuGsFteJOeA5xNQ/edit?usp=sharing\n        if (horizontal) {\n            if (PERCENTAGELAYOUT || autoWidth) {\n                $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId + \" > .tns-item\", \"font-size:\" + win.getComputedStyle(slideItems[0]).fontSize + \";\", $126f17a2d0da0791$var$getCssRulesLength(sheet));\n                $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId, \"font-size:0;\", $126f17a2d0da0791$var$getCssRulesLength(sheet));\n            } else if (carousel) $126f17a2d0da0791$var$forEach(slideItems, function(slide, i) {\n                slide.style.marginLeft = getSlideMarginLeft(i);\n            });\n        } // ## BASIC STYLES\n        if (CSSMQ) {\n            // middle wrapper style\n            if (TRANSITIONDURATION) {\n                var str = middleWrapper && options.autoHeight ? getTransitionDurationStyle(options.speed) : \"\";\n                $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId + \"-mw\", str, $126f17a2d0da0791$var$getCssRulesLength(sheet));\n            } // inner wrapper styles\n            str = getInnerWrapperStyles(options.edgePadding, options.gutter, options.fixedWidth, options.speed, options.autoHeight);\n            $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId + \"-iw\", str, $126f17a2d0da0791$var$getCssRulesLength(sheet)); // container styles\n            if (carousel) {\n                str = horizontal && !autoWidth ? \"width:\" + getContainerWidth(options.fixedWidth, options.gutter, options.items) + \";\" : \"\";\n                if (TRANSITIONDURATION) str += getTransitionDurationStyle(speed);\n                $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId, str, $126f17a2d0da0791$var$getCssRulesLength(sheet));\n            } // slide styles\n            str = horizontal && !autoWidth ? getSlideWidthStyle(options.fixedWidth, options.gutter, options.items) : \"\";\n            if (options.gutter) str += getSlideGutterStyle(options.gutter);\n             // set gallery items transition-duration\n            if (!carousel) {\n                if (TRANSITIONDURATION) str += getTransitionDurationStyle(speed);\n                if (ANIMATIONDURATION) str += getAnimationDurationStyle(speed);\n            }\n            if (str) $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId + \" > .tns-item\", str, $126f17a2d0da0791$var$getCssRulesLength(sheet));\n             // non CSS mediaqueries: IE8\n        // ## update inner wrapper, container, slides if needed\n        // set inline styles for inner wrapper & container\n        // insert stylesheet (one line) for slides only (since slides are many)\n        } else {\n            // middle wrapper styles\n            update_carousel_transition_duration(); // inner wrapper styles\n            innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, autoHeight); // container styles\n            if (carousel && horizontal && !autoWidth) container.style.width = getContainerWidth(fixedWidth, gutter, items);\n             // slide styles\n            var str = horizontal && !autoWidth ? getSlideWidthStyle(fixedWidth, gutter, items) : \"\";\n            if (gutter) str += getSlideGutterStyle(gutter);\n             // append to the last line\n            if (str) $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId + \" > .tns-item\", str, $126f17a2d0da0791$var$getCssRulesLength(sheet));\n        } // ## MEDIAQUERIES\n        if (responsive && CSSMQ) for(var bp in responsive){\n            // bp: convert string to number\n            bp = parseInt(bp);\n            var opts = responsive[bp], str = \"\", middleWrapperStr = \"\", innerWrapperStr = \"\", containerStr = \"\", slideStr = \"\", itemsBP = !autoWidth ? getOption(\"items\", bp) : null, fixedWidthBP = getOption(\"fixedWidth\", bp), speedBP = getOption(\"speed\", bp), edgePaddingBP = getOption(\"edgePadding\", bp), autoHeightBP = getOption(\"autoHeight\", bp), gutterBP = getOption(\"gutter\", bp); // middle wrapper string\n            if (TRANSITIONDURATION && middleWrapper && getOption(\"autoHeight\", bp) && \"speed\" in opts) middleWrapperStr = \"#\" + slideId + \"-mw{\" + getTransitionDurationStyle(speedBP) + \"}\";\n             // inner wrapper string\n            if (\"edgePadding\" in opts || \"gutter\" in opts) innerWrapperStr = \"#\" + slideId + \"-iw{\" + getInnerWrapperStyles(edgePaddingBP, gutterBP, fixedWidthBP, speedBP, autoHeightBP) + \"}\";\n             // container string\n            if (carousel && horizontal && !autoWidth && (\"fixedWidth\" in opts || \"items\" in opts || fixedWidth && \"gutter\" in opts)) containerStr = \"width:\" + getContainerWidth(fixedWidthBP, gutterBP, itemsBP) + \";\";\n            if (TRANSITIONDURATION && \"speed\" in opts) containerStr += getTransitionDurationStyle(speedBP);\n            if (containerStr) containerStr = \"#\" + slideId + \"{\" + containerStr + \"}\";\n             // slide string\n            if (\"fixedWidth\" in opts || fixedWidth && \"gutter\" in opts || !carousel && \"items\" in opts) slideStr += getSlideWidthStyle(fixedWidthBP, gutterBP, itemsBP);\n            if (\"gutter\" in opts) slideStr += getSlideGutterStyle(gutterBP);\n             // set gallery items transition-duration\n            if (!carousel && \"speed\" in opts) {\n                if (TRANSITIONDURATION) slideStr += getTransitionDurationStyle(speedBP);\n                if (ANIMATIONDURATION) slideStr += getAnimationDurationStyle(speedBP);\n            }\n            if (slideStr) slideStr = \"#\" + slideId + \" > .tns-item{\" + slideStr + \"}\";\n             // add up\n            str = middleWrapperStr + innerWrapperStr + containerStr + slideStr;\n            if (str) sheet.insertRule(\"@media (min-width: \" + bp / 16 + \"em) {\" + str + \"}\", sheet.cssRules.length);\n        }\n    }\n    function initTools() {\n        // == slides ==\n        updateSlideStatus(); // == live region ==\n        outerWrapper.insertAdjacentHTML(\"afterbegin\", '<div class=\"tns-liveregion tns-visually-hidden\" aria-live=\"polite\" aria-atomic=\"true\">slide <span class=\"current\">' + getLiveRegionStr() + \"</span>  of \" + slideCount + \"</div>\");\n        liveregionCurrent = outerWrapper.querySelector(\".tns-liveregion .current\"); // == autoplayInit ==\n        if (hasAutoplay) {\n            var txt = autoplay ? \"stop\" : \"start\";\n            if (autoplayButton) $126f17a2d0da0791$var$setAttrs(autoplayButton, {\n                \"data-action\": txt\n            });\n            else if (options.autoplayButtonOutput) {\n                outerWrapper.insertAdjacentHTML(getInsertPosition(options.autoplayPosition), '<button type=\"button\" data-action=\"' + txt + '\">' + autoplayHtmlStrings[0] + txt + autoplayHtmlStrings[1] + autoplayText[0] + \"</button>\");\n                autoplayButton = outerWrapper.querySelector(\"[data-action]\");\n            } // add event\n            if (autoplayButton) $126f17a2d0da0791$var$addEvents(autoplayButton, {\n                click: toggleAutoplay\n            });\n            if (autoplay) {\n                startAutoplay();\n                if (autoplayHoverPause) $126f17a2d0da0791$var$addEvents(container, hoverEvents);\n                if (autoplayResetOnVisibility) $126f17a2d0da0791$var$addEvents(container, visibilityEvent);\n            }\n        } // == navInit ==\n        if (hasNav) {\n            // will not hide the navs in case they're thumbnails\n            if (navContainer) {\n                $126f17a2d0da0791$var$setAttrs(navContainer, {\n                    \"aria-label\": \"Carousel Pagination\"\n                });\n                navItems = navContainer.children;\n                $126f17a2d0da0791$var$forEach(navItems, function(item, i) {\n                    $126f17a2d0da0791$var$setAttrs(item, {\n                        \"data-nav\": i,\n                        tabindex: \"-1\",\n                        \"aria-label\": navStr + (i + 1),\n                        \"aria-controls\": slideId\n                    });\n                }); // generated nav\n            } else {\n                var navHtml = \"\", hiddenStr = navAsThumbnails ? \"\" : 'style=\"display:none\"';\n                for(var i = 0; i < slideCount; i++)// hide nav items by default\n                navHtml += '<button type=\"button\" data-nav=\"' + i + '\" tabindex=\"-1\" aria-controls=\"' + slideId + '\" ' + hiddenStr + ' aria-label=\"' + navStr + (i + 1) + '\"></button>';\n                navHtml = '<div class=\"tns-nav\" aria-label=\"Carousel Pagination\">' + navHtml + \"</div>\";\n                outerWrapper.insertAdjacentHTML(getInsertPosition(options.navPosition), navHtml);\n                navContainer = outerWrapper.querySelector(\".tns-nav\");\n                navItems = navContainer.children;\n            }\n            updateNavVisibility(); // add transition\n            if (TRANSITIONDURATION) {\n                var prefix = TRANSITIONDURATION.substring(0, TRANSITIONDURATION.length - 18).toLowerCase(), str = \"transition: all \" + speed / 1000 + \"s\";\n                if (prefix) str = \"-\" + prefix + \"-\" + str;\n                $126f17a2d0da0791$var$addCSSRule(sheet, \"[aria-controls^=\" + slideId + \"-item]\", str, $126f17a2d0da0791$var$getCssRulesLength(sheet));\n            }\n            $126f17a2d0da0791$var$setAttrs(navItems[navCurrentIndex], {\n                \"aria-label\": navStr + (navCurrentIndex + 1) + navStrCurrent\n            });\n            $126f17a2d0da0791$var$removeAttrs(navItems[navCurrentIndex], \"tabindex\");\n            $126f17a2d0da0791$var$addClass(navItems[navCurrentIndex], navActiveClass); // add events\n            $126f17a2d0da0791$var$addEvents(navContainer, navEvents);\n        } // == controlsInit ==\n        if (hasControls) {\n            if (!controlsContainer && (!prevButton || !nextButton)) {\n                outerWrapper.insertAdjacentHTML(getInsertPosition(options.controlsPosition), '<div class=\"tns-controls\" aria-label=\"Carousel Navigation\" tabindex=\"0\"><button type=\"button\" data-controls=\"prev\" tabindex=\"-1\" aria-controls=\"' + slideId + '\">' + controlsText[0] + '</button><button type=\"button\" data-controls=\"next\" tabindex=\"-1\" aria-controls=\"' + slideId + '\">' + controlsText[1] + \"</button></div>\");\n                controlsContainer = outerWrapper.querySelector(\".tns-controls\");\n            }\n            if (!prevButton || !nextButton) {\n                prevButton = controlsContainer.children[0];\n                nextButton = controlsContainer.children[1];\n            }\n            if (options.controlsContainer) $126f17a2d0da0791$var$setAttrs(controlsContainer, {\n                \"aria-label\": \"Carousel Navigation\",\n                tabindex: \"0\"\n            });\n            if (options.controlsContainer || options.prevButton && options.nextButton) $126f17a2d0da0791$var$setAttrs([\n                prevButton,\n                nextButton\n            ], {\n                \"aria-controls\": slideId,\n                tabindex: \"-1\"\n            });\n            if (options.controlsContainer || options.prevButton && options.nextButton) {\n                $126f17a2d0da0791$var$setAttrs(prevButton, {\n                    \"data-controls\": \"prev\"\n                });\n                $126f17a2d0da0791$var$setAttrs(nextButton, {\n                    \"data-controls\": \"next\"\n                });\n            }\n            prevIsButton = isButton(prevButton);\n            nextIsButton = isButton(nextButton);\n            updateControlsStatus(); // add events\n            if (controlsContainer) $126f17a2d0da0791$var$addEvents(controlsContainer, controlsEvents);\n            else {\n                $126f17a2d0da0791$var$addEvents(prevButton, controlsEvents);\n                $126f17a2d0da0791$var$addEvents(nextButton, controlsEvents);\n            }\n        } // hide tools if needed\n        disableUI();\n    }\n    function initEvents() {\n        // add events\n        if (carousel && TRANSITIONEND) {\n            var eve = {};\n            eve[TRANSITIONEND] = onTransitionEnd;\n            $126f17a2d0da0791$var$addEvents(container, eve);\n        }\n        if (touch) $126f17a2d0da0791$var$addEvents(container, touchEvents, options.preventScrollOnTouch);\n        if (mouseDrag) $126f17a2d0da0791$var$addEvents(container, dragEvents);\n        if (arrowKeys) $126f17a2d0da0791$var$addEvents(doc, docmentKeydownEvent);\n        if (nested === \"inner\") events.on(\"outerResized\", function() {\n            resizeTasks();\n            events.emit(\"innerLoaded\", info());\n        });\n        else if (responsive || fixedWidth || autoWidth || autoHeight || !horizontal) $126f17a2d0da0791$var$addEvents(win, {\n            resize: onResize\n        });\n        if (autoHeight) {\n            if (nested === \"outer\") events.on(\"innerLoaded\", doAutoHeight);\n            else if (!disable) doAutoHeight();\n        }\n        doLazyLoad();\n        if (disable) disableSlider();\n        else if (freeze) freezeSlider();\n        events.on(\"indexChanged\", additionalUpdates);\n        if (nested === \"inner\") events.emit(\"innerLoaded\", info());\n        if (typeof onInit === \"function\") onInit(info());\n        isOn = true;\n    }\n    function destroy() {\n        // sheet\n        sheet.disabled = true;\n        if (sheet.ownerNode) sheet.ownerNode.remove();\n         // remove win event listeners\n        $126f17a2d0da0791$var$removeEvents(win, {\n            resize: onResize\n        }); // arrowKeys, controls, nav\n        if (arrowKeys) $126f17a2d0da0791$var$removeEvents(doc, docmentKeydownEvent);\n        if (controlsContainer) $126f17a2d0da0791$var$removeEvents(controlsContainer, controlsEvents);\n        if (navContainer) $126f17a2d0da0791$var$removeEvents(navContainer, navEvents);\n         // autoplay\n        $126f17a2d0da0791$var$removeEvents(container, hoverEvents);\n        $126f17a2d0da0791$var$removeEvents(container, visibilityEvent);\n        if (autoplayButton) $126f17a2d0da0791$var$removeEvents(autoplayButton, {\n            click: toggleAutoplay\n        });\n        if (autoplay) clearInterval(autoplayTimer);\n         // container\n        if (carousel && TRANSITIONEND) {\n            var eve = {};\n            eve[TRANSITIONEND] = onTransitionEnd;\n            $126f17a2d0da0791$var$removeEvents(container, eve);\n        }\n        if (touch) $126f17a2d0da0791$var$removeEvents(container, touchEvents);\n        if (mouseDrag) $126f17a2d0da0791$var$removeEvents(container, dragEvents);\n         // cache Object values in options && reset HTML\n        var htmlList = [\n            containerHTML,\n            controlsContainerHTML,\n            prevButtonHTML,\n            nextButtonHTML,\n            navContainerHTML,\n            autoplayButtonHTML\n        ];\n        tnsList.forEach(function(item, i) {\n            var el = item === \"container\" ? outerWrapper : options[item];\n            if (typeof el === \"object\" && el) {\n                var prevEl = el.previousElementSibling ? el.previousElementSibling : false, parentEl = el.parentNode;\n                el.outerHTML = htmlList[i];\n                options[item] = prevEl ? prevEl.nextElementSibling : parentEl.firstElementChild;\n            }\n        }); // reset variables\n        tnsList = animateIn = animateOut = animateDelay = animateNormal = horizontal = outerWrapper = innerWrapper = container = containerParent = containerHTML = slideItems = slideCount = breakpointZone = windowWidth = autoWidth = fixedWidth = edgePadding = gutter = viewport = items = slideBy = viewportMax = arrowKeys = speed = rewind = loop = autoHeight = sheet = lazyload = slidePositions = slideItemsOut = cloneCount = slideCountNew = hasRightDeadZone = rightBoundary = updateIndexBeforeTransform = transformAttr = transformPrefix = transformPostfix = getIndexMax = index = indexCached = indexMin = indexMax = swipeAngle = moveDirectionExpected = running = onInit = events = newContainerClasses = slideId = disable = disabled = freezable = freeze = frozen = controlsEvents = navEvents = hoverEvents = visibilityEvent = docmentKeydownEvent = touchEvents = dragEvents = hasControls = hasNav = navAsThumbnails = hasAutoplay = hasTouch = hasMouseDrag = slideActiveClass = imgCompleteClass = imgEvents = imgsComplete = controls = controlsText = controlsContainer = controlsContainerHTML = prevButton = nextButton = prevIsButton = nextIsButton = nav = navContainer = navContainerHTML = navItems = pages = pagesCached = navClicked = navCurrentIndex = navCurrentIndexCached = navActiveClass = navStr = navStrCurrent = autoplay = autoplayTimeout = autoplayDirection = autoplayText = autoplayHoverPause = autoplayButton = autoplayButtonHTML = autoplayResetOnVisibility = autoplayHtmlStrings = autoplayTimer = animating = autoplayHoverPaused = autoplayUserPaused = autoplayVisibilityPaused = initPosition = lastPosition = translateInit = panStart = rafIndex = getDist = touch = mouseDrag = null; // check variables\n        // [animateIn, animateOut, animateDelay, animateNormal, horizontal, outerWrapper, innerWrapper, container, containerParent, containerHTML, slideItems, slideCount, breakpointZone, windowWidth, autoWidth, fixedWidth, edgePadding, gutter, viewport, items, slideBy, viewportMax, arrowKeys, speed, rewind, loop, autoHeight, sheet, lazyload, slidePositions, slideItemsOut, cloneCount, slideCountNew, hasRightDeadZone, rightBoundary, updateIndexBeforeTransform, transformAttr, transformPrefix, transformPostfix, getIndexMax, index, indexCached, indexMin, indexMax, resizeTimer, swipeAngle, moveDirectionExpected, running, onInit, events, newContainerClasses, slideId, disable, disabled, freezable, freeze, frozen, controlsEvents, navEvents, hoverEvents, visibilityEvent, docmentKeydownEvent, touchEvents, dragEvents, hasControls, hasNav, navAsThumbnails, hasAutoplay, hasTouch, hasMouseDrag, slideActiveClass, imgCompleteClass, imgEvents, imgsComplete, controls, controlsText, controlsContainer, controlsContainerHTML, prevButton, nextButton, prevIsButton, nextIsButton, nav, navContainer, navContainerHTML, navItems, pages, pagesCached, navClicked, navCurrentIndex, navCurrentIndexCached, navActiveClass, navStr, navStrCurrent, autoplay, autoplayTimeout, autoplayDirection, autoplayText, autoplayHoverPause, autoplayButton, autoplayButtonHTML, autoplayResetOnVisibility, autoplayHtmlStrings, autoplayTimer, animating, autoplayHoverPaused, autoplayUserPaused, autoplayVisibilityPaused, initPosition, lastPosition, translateInit, disX, disY, panStart, rafIndex, getDist, touch, mouseDrag ].forEach(function(item) { if (item !== null) { console.log(item); } });\n        for(var a in this)if (a !== \"rebuild\") this[a] = null;\n        isOn = false;\n    } // === ON RESIZE ===\n    // responsive || fixedWidth || autoWidth || !horizontal\n    function onResize(e) {\n        raf(function() {\n            resizeTasks(getEvent(e));\n        });\n    }\n    function resizeTasks(e) {\n        if (!isOn) return;\n        if (nested === \"outer\") events.emit(\"outerResized\", info(e));\n        windowWidth = getWindowWidth();\n        var bpChanged, breakpointZoneTem = breakpointZone, needContainerTransform = false;\n        if (responsive) {\n            setBreakpointZone();\n            bpChanged = breakpointZoneTem !== breakpointZone; // if (hasRightDeadZone) { needContainerTransform = true; } // *?\n            if (bpChanged) events.emit(\"newBreakpointStart\", info(e));\n        }\n        var indChanged, itemsChanged, itemsTem = items, disableTem = disable, freezeTem = freeze, arrowKeysTem = arrowKeys, controlsTem = controls, navTem = nav, touchTem = touch, mouseDragTem = mouseDrag, autoplayTem = autoplay, autoplayHoverPauseTem = autoplayHoverPause, autoplayResetOnVisibilityTem = autoplayResetOnVisibility, indexTem = index;\n        if (bpChanged) {\n            var fixedWidthTem = fixedWidth, autoHeightTem = autoHeight, controlsTextTem = controlsText, centerTem = center, autoplayTextTem = autoplayText;\n            if (!CSSMQ) var gutterTem = gutter, edgePaddingTem = edgePadding;\n        } // get option:\n        // fixed width: viewport, fixedWidth, gutter => items\n        // others: window width => all variables\n        // all: items => slideBy\n        arrowKeys = getOption(\"arrowKeys\");\n        controls = getOption(\"controls\");\n        nav = getOption(\"nav\");\n        touch = getOption(\"touch\");\n        center = getOption(\"center\");\n        mouseDrag = getOption(\"mouseDrag\");\n        autoplay = getOption(\"autoplay\");\n        autoplayHoverPause = getOption(\"autoplayHoverPause\");\n        autoplayResetOnVisibility = getOption(\"autoplayResetOnVisibility\");\n        if (bpChanged) {\n            disable = getOption(\"disable\");\n            fixedWidth = getOption(\"fixedWidth\");\n            speed = getOption(\"speed\");\n            autoHeight = getOption(\"autoHeight\");\n            controlsText = getOption(\"controlsText\");\n            autoplayText = getOption(\"autoplayText\");\n            autoplayTimeout = getOption(\"autoplayTimeout\");\n            if (!CSSMQ) {\n                edgePadding = getOption(\"edgePadding\");\n                gutter = getOption(\"gutter\");\n            }\n        } // update options\n        resetVariblesWhenDisable(disable);\n        viewport = getViewportWidth(); // <= edgePadding, gutter\n        if ((!horizontal || autoWidth) && !disable) {\n            setSlidePositions();\n            if (!horizontal) {\n                updateContentWrapperHeight(); // <= setSlidePositions\n                needContainerTransform = true;\n            }\n        }\n        if (fixedWidth || autoWidth) {\n            rightBoundary = getRightBoundary(); // autoWidth: <= viewport, slidePositions, gutter\n            // fixedWidth: <= viewport, fixedWidth, gutter\n            indexMax = getIndexMax(); // autoWidth: <= rightBoundary, slidePositions\n        // fixedWidth: <= rightBoundary, fixedWidth, gutter\n        }\n        if (bpChanged || fixedWidth) {\n            items = getOption(\"items\");\n            slideBy = getOption(\"slideBy\");\n            itemsChanged = items !== itemsTem;\n            if (itemsChanged) {\n                if (!fixedWidth && !autoWidth) indexMax = getIndexMax();\n                 // <= items\n                // check index before transform in case\n                // slider reach the right edge then items become bigger\n                updateIndex();\n            }\n        }\n        if (bpChanged) {\n            if (disable !== disableTem) {\n                if (disable) disableSlider();\n                else enableSlider(); // <= slidePositions, rightBoundary, indexMax\n            }\n        }\n        if (freezable && (bpChanged || fixedWidth || autoWidth)) {\n            freeze = getFreeze(); // <= autoWidth: slidePositions, gutter, viewport, rightBoundary\n            // <= fixedWidth: fixedWidth, gutter, rightBoundary\n            // <= others: items\n            if (freeze !== freezeTem) {\n                if (freeze) {\n                    doContainerTransform(getContainerTransformValue(getStartIndex(0)));\n                    freezeSlider();\n                } else {\n                    unfreezeSlider();\n                    needContainerTransform = true;\n                }\n            }\n        }\n        resetVariblesWhenDisable(disable || freeze); // controls, nav, touch, mouseDrag, arrowKeys, autoplay, autoplayHoverPause, autoplayResetOnVisibility\n        if (!autoplay) autoplayHoverPause = autoplayResetOnVisibility = false;\n        if (arrowKeys !== arrowKeysTem) arrowKeys ? $126f17a2d0da0791$var$addEvents(doc, docmentKeydownEvent) : $126f17a2d0da0791$var$removeEvents(doc, docmentKeydownEvent);\n        if (controls !== controlsTem) {\n            if (controls) {\n                if (controlsContainer) $126f17a2d0da0791$var$showElement(controlsContainer);\n                else {\n                    if (prevButton) $126f17a2d0da0791$var$showElement(prevButton);\n                    if (nextButton) $126f17a2d0da0791$var$showElement(nextButton);\n                }\n            } else if (controlsContainer) $126f17a2d0da0791$var$hideElement(controlsContainer);\n            else {\n                if (prevButton) $126f17a2d0da0791$var$hideElement(prevButton);\n                if (nextButton) $126f17a2d0da0791$var$hideElement(nextButton);\n            }\n        }\n        if (nav !== navTem) {\n            if (nav) {\n                $126f17a2d0da0791$var$showElement(navContainer);\n                updateNavVisibility();\n            } else $126f17a2d0da0791$var$hideElement(navContainer);\n        }\n        if (touch !== touchTem) touch ? $126f17a2d0da0791$var$addEvents(container, touchEvents, options.preventScrollOnTouch) : $126f17a2d0da0791$var$removeEvents(container, touchEvents);\n        if (mouseDrag !== mouseDragTem) mouseDrag ? $126f17a2d0da0791$var$addEvents(container, dragEvents) : $126f17a2d0da0791$var$removeEvents(container, dragEvents);\n        if (autoplay !== autoplayTem) {\n            if (autoplay) {\n                if (autoplayButton) $126f17a2d0da0791$var$showElement(autoplayButton);\n                if (!animating && !autoplayUserPaused) startAutoplay();\n            } else {\n                if (autoplayButton) $126f17a2d0da0791$var$hideElement(autoplayButton);\n                if (animating) stopAutoplay();\n            }\n        }\n        if (autoplayHoverPause !== autoplayHoverPauseTem) autoplayHoverPause ? $126f17a2d0da0791$var$addEvents(container, hoverEvents) : $126f17a2d0da0791$var$removeEvents(container, hoverEvents);\n        if (autoplayResetOnVisibility !== autoplayResetOnVisibilityTem) autoplayResetOnVisibility ? $126f17a2d0da0791$var$addEvents(doc, visibilityEvent) : $126f17a2d0da0791$var$removeEvents(doc, visibilityEvent);\n        if (bpChanged) {\n            if (fixedWidth !== fixedWidthTem || center !== centerTem) needContainerTransform = true;\n            if (autoHeight !== autoHeightTem) {\n                if (!autoHeight) innerWrapper.style.height = \"\";\n            }\n            if (controls && controlsText !== controlsTextTem) {\n                prevButton.innerHTML = controlsText[0];\n                nextButton.innerHTML = controlsText[1];\n            }\n            if (autoplayButton && autoplayText !== autoplayTextTem) {\n                var i = autoplay ? 1 : 0, html = autoplayButton.innerHTML, len = html.length - autoplayTextTem[i].length;\n                if (html.substring(len) === autoplayTextTem[i]) autoplayButton.innerHTML = html.substring(0, len) + autoplayText[i];\n            }\n        } else if (center && (fixedWidth || autoWidth)) needContainerTransform = true;\n        if (itemsChanged || fixedWidth && !autoWidth) {\n            pages = getPages();\n            updateNavVisibility();\n        }\n        indChanged = index !== indexTem;\n        if (indChanged) {\n            events.emit(\"indexChanged\", info());\n            needContainerTransform = true;\n        } else if (itemsChanged) {\n            if (!indChanged) additionalUpdates();\n        } else if (fixedWidth || autoWidth) {\n            doLazyLoad();\n            updateSlideStatus();\n            updateLiveRegion();\n        }\n        if (itemsChanged && !carousel) updateGallerySlidePositions();\n        if (!disable && !freeze) {\n            // non-mediaqueries: IE8\n            if (bpChanged && !CSSMQ) {\n                // middle wrapper styles\n                // inner wrapper styles\n                if (edgePadding !== edgePaddingTem || gutter !== gutterTem) innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, speed, autoHeight);\n                if (horizontal) {\n                    // container styles\n                    if (carousel) container.style.width = getContainerWidth(fixedWidth, gutter, items);\n                     // slide styles\n                    var str = getSlideWidthStyle(fixedWidth, gutter, items) + getSlideGutterStyle(gutter); // remove the last line and\n                    // add new styles\n                    $126f17a2d0da0791$var$removeCSSRule(sheet, $126f17a2d0da0791$var$getCssRulesLength(sheet) - 1);\n                    $126f17a2d0da0791$var$addCSSRule(sheet, \"#\" + slideId + \" > .tns-item\", str, $126f17a2d0da0791$var$getCssRulesLength(sheet));\n                }\n            } // auto height\n            if (autoHeight) doAutoHeight();\n            if (needContainerTransform) {\n                doContainerTransformSilent();\n                indexCached = index;\n            }\n        }\n        if (bpChanged) events.emit(\"newBreakpointEnd\", info(e));\n    } // === INITIALIZATION FUNCTIONS === //\n    function getFreeze() {\n        if (!fixedWidth && !autoWidth) {\n            var a = center ? items - (items - 1) / 2 : items;\n            return slideCount <= a;\n        }\n        var width = fixedWidth ? (fixedWidth + gutter) * slideCount : slidePositions[slideCount], vp = edgePadding ? viewport + edgePadding * 2 : viewport + gutter;\n        if (center) vp -= fixedWidth ? (viewport - fixedWidth) / 2 : (viewport - (slidePositions[index + 1] - slidePositions[index] - gutter)) / 2;\n        return width <= vp;\n    }\n    function setBreakpointZone() {\n        breakpointZone = 0;\n        for(var bp in responsive){\n            bp = parseInt(bp); // convert string to number\n            if (windowWidth >= bp) breakpointZone = bp;\n        }\n    } // (slideBy, indexMin, indexMax) => index\n    var updateIndex = function() {\n        return loop ? carousel // loop + carousel\n         ? function() {\n            var leftEdge = indexMin, rightEdge = indexMax;\n            leftEdge += slideBy;\n            rightEdge -= slideBy; // adjust edges when has edge paddings\n            // or fixed-width slider with extra space on the right side\n            if (edgePadding) {\n                leftEdge += 1;\n                rightEdge -= 1;\n            } else if (fixedWidth) {\n                if ((viewport + gutter) % (fixedWidth + gutter)) rightEdge -= 1;\n            }\n            if (cloneCount) {\n                if (index > rightEdge) index -= slideCount;\n                else if (index < leftEdge) index += slideCount;\n            }\n        } // loop + gallery\n         : function() {\n            if (index > indexMax) while(index >= indexMin + slideCount)index -= slideCount;\n            else if (index < indexMin) while(index <= indexMax - slideCount)index += slideCount;\n        } // non-loop\n         : function() {\n            index = Math.max(indexMin, Math.min(indexMax, index));\n        };\n    }();\n    function disableUI() {\n        if (!autoplay && autoplayButton) $126f17a2d0da0791$var$hideElement(autoplayButton);\n        if (!nav && navContainer) $126f17a2d0da0791$var$hideElement(navContainer);\n        if (!controls) {\n            if (controlsContainer) $126f17a2d0da0791$var$hideElement(controlsContainer);\n            else {\n                if (prevButton) $126f17a2d0da0791$var$hideElement(prevButton);\n                if (nextButton) $126f17a2d0da0791$var$hideElement(nextButton);\n            }\n        }\n    }\n    function enableUI() {\n        if (autoplay && autoplayButton) $126f17a2d0da0791$var$showElement(autoplayButton);\n        if (nav && navContainer) $126f17a2d0da0791$var$showElement(navContainer);\n        if (controls) {\n            if (controlsContainer) $126f17a2d0da0791$var$showElement(controlsContainer);\n            else {\n                if (prevButton) $126f17a2d0da0791$var$showElement(prevButton);\n                if (nextButton) $126f17a2d0da0791$var$showElement(nextButton);\n            }\n        }\n    }\n    function freezeSlider() {\n        if (frozen) return;\n         // remove edge padding from inner wrapper\n        if (edgePadding) innerWrapper.style.margin = \"0px\";\n         // add class tns-transparent to cloned slides\n        if (cloneCount) {\n            var str = \"tns-transparent\";\n            for(var i = cloneCount; i--;){\n                if (carousel) $126f17a2d0da0791$var$addClass(slideItems[i], str);\n                $126f17a2d0da0791$var$addClass(slideItems[slideCountNew - i - 1], str);\n            }\n        } // update tools\n        disableUI();\n        frozen = true;\n    }\n    function unfreezeSlider() {\n        if (!frozen) return;\n         // restore edge padding for inner wrapper\n        // for mordern browsers\n        if (edgePadding && CSSMQ) innerWrapper.style.margin = \"\";\n         // remove class tns-transparent to cloned slides\n        if (cloneCount) {\n            var str = \"tns-transparent\";\n            for(var i = cloneCount; i--;){\n                if (carousel) $126f17a2d0da0791$var$removeClass(slideItems[i], str);\n                $126f17a2d0da0791$var$removeClass(slideItems[slideCountNew - i - 1], str);\n            }\n        } // update tools\n        enableUI();\n        frozen = false;\n    }\n    function disableSlider() {\n        if (disabled) return;\n        sheet.disabled = true;\n        container.className = container.className.replace(newContainerClasses.substring(1), \"\");\n        $126f17a2d0da0791$var$removeAttrs(container, [\n            \"style\"\n        ]);\n        if (loop) for(var j = cloneCount; j--;){\n            if (carousel) $126f17a2d0da0791$var$hideElement(slideItems[j]);\n            $126f17a2d0da0791$var$hideElement(slideItems[slideCountNew - j - 1]);\n        }\n         // vertical slider\n        if (!horizontal || !carousel) $126f17a2d0da0791$var$removeAttrs(innerWrapper, [\n            \"style\"\n        ]);\n         // gallery\n        if (!carousel) for(var i = index, l = index + slideCount; i < l; i++){\n            var item = slideItems[i];\n            $126f17a2d0da0791$var$removeAttrs(item, [\n                \"style\"\n            ]);\n            $126f17a2d0da0791$var$removeClass(item, animateIn);\n            $126f17a2d0da0791$var$removeClass(item, animateNormal);\n        }\n         // update tools\n        disableUI();\n        disabled = true;\n    }\n    function enableSlider() {\n        if (!disabled) return;\n        sheet.disabled = false;\n        container.className += newContainerClasses;\n        doContainerTransformSilent();\n        if (loop) for(var j = cloneCount; j--;){\n            if (carousel) $126f17a2d0da0791$var$showElement(slideItems[j]);\n            $126f17a2d0da0791$var$showElement(slideItems[slideCountNew - j - 1]);\n        }\n         // gallery\n        if (!carousel) for(var i = index, l = index + slideCount; i < l; i++){\n            var item = slideItems[i], classN = i < index + items ? animateIn : animateNormal;\n            item.style.left = (i - index) * 100 / items + \"%\";\n            $126f17a2d0da0791$var$addClass(item, classN);\n        }\n         // update tools\n        enableUI();\n        disabled = false;\n    }\n    function updateLiveRegion() {\n        var str = getLiveRegionStr();\n        if (liveregionCurrent.innerHTML !== str) liveregionCurrent.innerHTML = str;\n    }\n    function getLiveRegionStr() {\n        var arr = getVisibleSlideRange(), start = arr[0] + 1, end = arr[1] + 1;\n        return start === end ? start + \"\" : start + \" to \" + end;\n    }\n    function getVisibleSlideRange(val) {\n        if (val == null) val = getContainerTransformValue();\n        var start = index, end, rangestart, rangeend; // get range start, range end for autoWidth and fixedWidth\n        if (center || edgePadding) {\n            if (autoWidth || fixedWidth) {\n                rangestart = -(parseFloat(val) + edgePadding);\n                rangeend = rangestart + viewport + edgePadding * 2;\n            }\n        } else if (autoWidth) {\n            rangestart = slidePositions[index];\n            rangeend = rangestart + viewport;\n        }\n         // get start, end\n        // - check auto width\n        if (autoWidth) slidePositions.forEach(function(point, i) {\n            if (i < slideCountNew) {\n                if ((center || edgePadding) && point <= rangestart + 0.5) start = i;\n                if (rangeend - point >= 0.5) end = i;\n            }\n        }); // - check percentage width, fixed width\n        else {\n            if (fixedWidth) {\n                var cell = fixedWidth + gutter;\n                if (center || edgePadding) {\n                    start = Math.floor(rangestart / cell);\n                    end = Math.ceil(rangeend / cell - 1);\n                } else end = start + Math.ceil(viewport / cell) - 1;\n            } else if (center || edgePadding) {\n                var a = items - 1;\n                if (center) {\n                    start -= a / 2;\n                    end = index + a / 2;\n                } else end = index + a;\n                if (edgePadding) {\n                    var b = edgePadding * items / viewport;\n                    start -= b;\n                    end += b;\n                }\n                start = Math.floor(start);\n                end = Math.ceil(end);\n            } else end = start + items - 1;\n            start = Math.max(start, 0);\n            end = Math.min(end, slideCountNew - 1);\n        }\n        return [\n            start,\n            end\n        ];\n    }\n    function doLazyLoad() {\n        if (lazyload && !disable) {\n            var arg = getVisibleSlideRange();\n            arg.push(lazyloadSelector);\n            getImageArray.apply(null, arg).forEach(function(img) {\n                if (!$126f17a2d0da0791$var$hasClass(img, imgCompleteClass)) {\n                    // stop propagation transitionend event to container\n                    var eve = {};\n                    eve[TRANSITIONEND] = function(e) {\n                        e.stopPropagation();\n                    };\n                    $126f17a2d0da0791$var$addEvents(img, eve);\n                    $126f17a2d0da0791$var$addEvents(img, imgEvents); // update src\n                    img.src = $126f17a2d0da0791$var$getAttr(img, \"data-src\"); // update srcset\n                    var srcset = $126f17a2d0da0791$var$getAttr(img, \"data-srcset\");\n                    if (srcset) img.srcset = srcset;\n                    $126f17a2d0da0791$var$addClass(img, \"loading\");\n                }\n            });\n        }\n    }\n    function onImgLoaded(e) {\n        imgLoaded(getTarget(e));\n    }\n    function onImgFailed(e) {\n        imgFailed(getTarget(e));\n    }\n    function imgLoaded(img) {\n        $126f17a2d0da0791$var$addClass(img, \"loaded\");\n        imgCompleted(img);\n    }\n    function imgFailed(img) {\n        $126f17a2d0da0791$var$addClass(img, \"failed\");\n        imgCompleted(img);\n    }\n    function imgCompleted(img) {\n        $126f17a2d0da0791$var$addClass(img, imgCompleteClass);\n        $126f17a2d0da0791$var$removeClass(img, \"loading\");\n        $126f17a2d0da0791$var$removeEvents(img, imgEvents);\n    }\n    function getImageArray(start, end, imgSelector) {\n        var imgs = [];\n        if (!imgSelector) imgSelector = \"img\";\n        while(start <= end){\n            $126f17a2d0da0791$var$forEach(slideItems[start].querySelectorAll(imgSelector), function(img) {\n                imgs.push(img);\n            });\n            start++;\n        }\n        return imgs;\n    } // check if all visible images are loaded\n    // and update container height if it's done\n    function doAutoHeight() {\n        var imgs = getImageArray.apply(null, getVisibleSlideRange());\n        raf(function() {\n            imgsLoadedCheck(imgs, updateInnerWrapperHeight);\n        });\n    }\n    function imgsLoadedCheck(imgs, cb) {\n        // execute callback function if all images are complete\n        if (imgsComplete) return cb();\n         // check image classes\n        imgs.forEach(function(img, index) {\n            if (!lazyload && img.complete) imgCompleted(img);\n             // Check image.complete\n            if ($126f17a2d0da0791$var$hasClass(img, imgCompleteClass)) imgs.splice(index, 1);\n        }); // execute callback function if selected images are all complete\n        if (!imgs.length) return cb();\n         // otherwise execute this functiona again\n        raf(function() {\n            imgsLoadedCheck(imgs, cb);\n        });\n    }\n    function additionalUpdates() {\n        doLazyLoad();\n        updateSlideStatus();\n        updateLiveRegion();\n        updateControlsStatus();\n        updateNavStatus();\n    }\n    function update_carousel_transition_duration() {\n        if (carousel && autoHeight) middleWrapper.style[TRANSITIONDURATION] = speed / 1000 + \"s\";\n    }\n    function getMaxSlideHeight(slideStart, slideRange) {\n        var heights = [];\n        for(var i = slideStart, l = Math.min(slideStart + slideRange, slideCountNew); i < l; i++)heights.push(slideItems[i].offsetHeight);\n        return Math.max.apply(null, heights);\n    } // update inner wrapper height\n    // 1. get the max-height of the visible slides\n    // 2. set transitionDuration to speed\n    // 3. update inner wrapper height to max-height\n    // 4. set transitionDuration to 0s after transition done\n    function updateInnerWrapperHeight() {\n        var maxHeight = autoHeight ? getMaxSlideHeight(index, items) : getMaxSlideHeight(cloneCount, slideCount), wp = middleWrapper ? middleWrapper : innerWrapper;\n        if (wp.style.height !== maxHeight) wp.style.height = maxHeight + \"px\";\n    } // get the distance from the top edge of the first slide to each slide\n    // (init) => slidePositions\n    function setSlidePositions() {\n        slidePositions = [\n            0\n        ];\n        var attr = horizontal ? \"left\" : \"top\", attr2 = horizontal ? \"right\" : \"bottom\", base = slideItems[0].getBoundingClientRect()[attr];\n        $126f17a2d0da0791$var$forEach(slideItems, function(item, i) {\n            // skip the first slide\n            if (i) slidePositions.push(item.getBoundingClientRect()[attr] - base);\n             // add the end edge\n            if (i === slideCountNew - 1) slidePositions.push(item.getBoundingClientRect()[attr2] - base);\n        });\n    } // update slide\n    function updateSlideStatus() {\n        var range = getVisibleSlideRange(), start = range[0], end = range[1];\n        $126f17a2d0da0791$var$forEach(slideItems, function(item, i) {\n            // show slides\n            if (i >= start && i <= end) {\n                if ($126f17a2d0da0791$var$hasAttr(item, \"aria-hidden\")) {\n                    $126f17a2d0da0791$var$removeAttrs(item, [\n                        \"aria-hidden\",\n                        \"tabindex\"\n                    ]);\n                    $126f17a2d0da0791$var$addClass(item, slideActiveClass);\n                } // hide slides\n            } else if (!$126f17a2d0da0791$var$hasAttr(item, \"aria-hidden\")) {\n                $126f17a2d0da0791$var$setAttrs(item, {\n                    \"aria-hidden\": \"true\",\n                    tabindex: \"-1\"\n                });\n                $126f17a2d0da0791$var$removeClass(item, slideActiveClass);\n            }\n        });\n    } // gallery: update slide position\n    function updateGallerySlidePositions() {\n        var l = index + Math.min(slideCount, items);\n        for(var i = slideCountNew; i--;){\n            var item = slideItems[i];\n            if (i >= index && i < l) {\n                // add transitions to visible slides when adjusting their positions\n                $126f17a2d0da0791$var$addClass(item, \"tns-moving\");\n                item.style.left = (i - index) * 100 / items + \"%\";\n                $126f17a2d0da0791$var$addClass(item, animateIn);\n                $126f17a2d0da0791$var$removeClass(item, animateNormal);\n            } else if (item.style.left) {\n                item.style.left = \"\";\n                $126f17a2d0da0791$var$addClass(item, animateNormal);\n                $126f17a2d0da0791$var$removeClass(item, animateIn);\n            } // remove outlet animation\n            $126f17a2d0da0791$var$removeClass(item, animateOut);\n        } // removing '.tns-moving'\n        setTimeout(function() {\n            $126f17a2d0da0791$var$forEach(slideItems, function(el) {\n                $126f17a2d0da0791$var$removeClass(el, \"tns-moving\");\n            });\n        }, 300);\n    } // set tabindex on Nav\n    function updateNavStatus() {\n        // get current nav\n        if (nav) {\n            navCurrentIndex = navClicked >= 0 ? navClicked : getCurrentNavIndex();\n            navClicked = -1;\n            if (navCurrentIndex !== navCurrentIndexCached) {\n                var navPrev = navItems[navCurrentIndexCached], navCurrent = navItems[navCurrentIndex];\n                $126f17a2d0da0791$var$setAttrs(navPrev, {\n                    tabindex: \"-1\",\n                    \"aria-label\": navStr + (navCurrentIndexCached + 1)\n                });\n                $126f17a2d0da0791$var$removeClass(navPrev, navActiveClass);\n                $126f17a2d0da0791$var$setAttrs(navCurrent, {\n                    \"aria-label\": navStr + (navCurrentIndex + 1) + navStrCurrent\n                });\n                $126f17a2d0da0791$var$removeAttrs(navCurrent, \"tabindex\");\n                $126f17a2d0da0791$var$addClass(navCurrent, navActiveClass);\n                navCurrentIndexCached = navCurrentIndex;\n            }\n        }\n    }\n    function getLowerCaseNodeName(el) {\n        return el.nodeName.toLowerCase();\n    }\n    function isButton(el) {\n        return getLowerCaseNodeName(el) === \"button\";\n    }\n    function isAriaDisabled(el) {\n        return el.getAttribute(\"aria-disabled\") === \"true\";\n    }\n    function disEnableElement(isButton, el, val) {\n        if (isButton) el.disabled = val;\n        else el.setAttribute(\"aria-disabled\", val.toString());\n    } // set 'disabled' to true on controls when reach the edges\n    function updateControlsStatus() {\n        if (!controls || rewind || loop) return;\n        var prevDisabled = prevIsButton ? prevButton.disabled : isAriaDisabled(prevButton), nextDisabled = nextIsButton ? nextButton.disabled : isAriaDisabled(nextButton), disablePrev = index <= indexMin ? true : false, disableNext = !rewind && index >= indexMax ? true : false;\n        if (disablePrev && !prevDisabled) disEnableElement(prevIsButton, prevButton, true);\n        if (!disablePrev && prevDisabled) disEnableElement(prevIsButton, prevButton, false);\n        if (disableNext && !nextDisabled) disEnableElement(nextIsButton, nextButton, true);\n        if (!disableNext && nextDisabled) disEnableElement(nextIsButton, nextButton, false);\n    } // set duration\n    function resetDuration(el, str) {\n        if (TRANSITIONDURATION) el.style[TRANSITIONDURATION] = str;\n    }\n    function getSliderWidth() {\n        return fixedWidth ? (fixedWidth + gutter) * slideCountNew : slidePositions[slideCountNew];\n    }\n    function getCenterGap(num) {\n        if (num == null) num = index;\n        var gap = edgePadding ? gutter : 0;\n        return autoWidth ? (viewport - gap - (slidePositions[num + 1] - slidePositions[num] - gutter)) / 2 : fixedWidth ? (viewport - fixedWidth) / 2 : (items - 1) / 2;\n    }\n    function getRightBoundary() {\n        var gap = edgePadding ? gutter : 0, result = viewport + gap - getSliderWidth();\n        if (center && !loop) result = fixedWidth ? -(fixedWidth + gutter) * (slideCountNew - 1) - getCenterGap() : getCenterGap(slideCountNew - 1) - slidePositions[slideCountNew - 1];\n        if (result > 0) result = 0;\n        return result;\n    }\n    function getContainerTransformValue(num) {\n        if (num == null) num = index;\n        var val;\n        if (horizontal && !autoWidth) {\n            if (fixedWidth) {\n                val = -(fixedWidth + gutter) * num;\n                if (center) val += getCenterGap();\n            } else {\n                var denominator = TRANSFORM ? slideCountNew : items;\n                if (center) num -= getCenterGap();\n                val = -num * 100 / denominator;\n            }\n        } else {\n            val = -slidePositions[num];\n            if (center && autoWidth) val += getCenterGap();\n        }\n        if (hasRightDeadZone) val = Math.max(val, rightBoundary);\n        val += horizontal && !autoWidth && !fixedWidth ? \"%\" : \"px\";\n        return val;\n    }\n    function doContainerTransformSilent(val) {\n        resetDuration(container, \"0s\");\n        doContainerTransform(val);\n    }\n    function doContainerTransform(val) {\n        if (val == null) val = getContainerTransformValue();\n        container.style[transformAttr] = transformPrefix + val + transformPostfix;\n    }\n    function animateSlide(number, classOut, classIn, isOut) {\n        var l = number + items;\n        if (!loop) l = Math.min(l, slideCountNew);\n        for(var i = number; i < l; i++){\n            var item = slideItems[i]; // set item positions\n            if (!isOut) item.style.left = (i - index) * 100 / items + \"%\";\n            if (animateDelay && TRANSITIONDELAY) item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] = animateDelay * (i - number) / 1000 + \"s\";\n            $126f17a2d0da0791$var$removeClass(item, classOut);\n            $126f17a2d0da0791$var$addClass(item, classIn);\n            if (isOut) slideItemsOut.push(item);\n        }\n    } // make transfer after click/drag:\n    // 1. change 'transform' property for mordern browsers\n    // 2. change 'left' property for legacy browsers\n    var transformCore = function() {\n        return carousel ? function() {\n            resetDuration(container, \"\");\n            if (TRANSITIONDURATION || !speed) {\n                // for morden browsers with non-zero duration or\n                // zero duration for all browsers\n                doContainerTransform(); // run fallback function manually\n                // when duration is 0 / container is hidden\n                if (!speed || !$126f17a2d0da0791$var$isVisible(container)) onTransitionEnd();\n            } else // for old browser with non-zero duration\n            $126f17a2d0da0791$var$jsTransform(container, transformAttr, transformPrefix, transformPostfix, getContainerTransformValue(), speed, onTransitionEnd);\n            if (!horizontal) updateContentWrapperHeight();\n        } : function() {\n            slideItemsOut = [];\n            var eve = {};\n            eve[TRANSITIONEND] = eve[ANIMATIONEND] = onTransitionEnd;\n            $126f17a2d0da0791$var$removeEvents(slideItems[indexCached], eve);\n            $126f17a2d0da0791$var$addEvents(slideItems[index], eve);\n            animateSlide(indexCached, animateIn, animateOut, true);\n            animateSlide(index, animateNormal, animateIn); // run fallback function manually\n            // when transition or animation not supported / duration is 0\n            if (!TRANSITIONEND || !ANIMATIONEND || !speed || !$126f17a2d0da0791$var$isVisible(container)) onTransitionEnd();\n        };\n    }();\n    function render(e, sliderMoved) {\n        if (updateIndexBeforeTransform) updateIndex();\n         // render when slider was moved (touch or drag) even though index may not change\n        if (index !== indexCached || sliderMoved) {\n            // events\n            events.emit(\"indexChanged\", info());\n            events.emit(\"transitionStart\", info());\n            if (autoHeight) doAutoHeight();\n             // pause autoplay when click or keydown from user\n            if (animating && e && [\n                \"click\",\n                \"keydown\"\n            ].indexOf(e.type) >= 0) stopAutoplay();\n            running = true;\n            transformCore();\n        }\n    }\n    /*\n   * Transfer prefixed properties to the same format\n   * CSS: -Webkit-Transform => webkittransform\n   * JS: WebkitTransform => webkittransform\n   * @param {string} str - property\n   *\n   */ function strTrans(str) {\n        return str.toLowerCase().replace(/-/g, \"\");\n    } // AFTER TRANSFORM\n    // Things need to be done after a transfer:\n    // 1. check index\n    // 2. add classes to visible slide\n    // 3. disable controls buttons when reach the first/last slide in non-loop slider\n    // 4. update nav status\n    // 5. lazyload images\n    // 6. update container height\n    function onTransitionEnd(event) {\n        // check running on gallery mode\n        // make sure trantionend/animationend events run only once\n        if (carousel || running) {\n            events.emit(\"transitionEnd\", info(event));\n            if (!carousel && slideItemsOut.length > 0) for(var i = 0; i < slideItemsOut.length; i++){\n                var item = slideItemsOut[i]; // set item positions\n                item.style.left = \"\";\n                if (ANIMATIONDELAY && TRANSITIONDELAY) {\n                    item.style[ANIMATIONDELAY] = \"\";\n                    item.style[TRANSITIONDELAY] = \"\";\n                }\n                $126f17a2d0da0791$var$removeClass(item, animateOut);\n                $126f17a2d0da0791$var$addClass(item, animateNormal);\n            }\n            /* update slides, nav, controls after checking ...\n       * => legacy browsers who don't support 'event'\n       *    have to check event first, otherwise event.target will cause an error\n       * => or 'gallery' mode:\n       *   + event target is slide item\n       * => or 'carousel' mode:\n       *   + event target is container,\n       *   + event.property is the same with transform attribute\n       */ if (!event || !carousel && event.target.parentNode === container || event.target === container && strTrans(event.propertyName) === strTrans(transformAttr)) {\n                if (!updateIndexBeforeTransform) {\n                    var indexTem = index;\n                    updateIndex();\n                    if (index !== indexTem) {\n                        events.emit(\"indexChanged\", info());\n                        doContainerTransformSilent();\n                    }\n                }\n                if (nested === \"inner\") events.emit(\"innerLoaded\", info());\n                running = false;\n                indexCached = index;\n            }\n        }\n    } // # ACTIONS\n    function goTo(targetIndex, e) {\n        if (freeze) return;\n         // prev slideBy\n        if (targetIndex === \"prev\") onControlsClick(e, -1); // next slideBy\n        else if (targetIndex === \"next\") onControlsClick(e, 1); // go to exact slide\n        else {\n            if (running) {\n                if (preventActionWhenRunning) return;\n                else onTransitionEnd();\n            }\n            var absIndex = getAbsIndex(), indexGap = 0;\n            if (targetIndex === \"first\") indexGap = -absIndex;\n            else if (targetIndex === \"last\") indexGap = carousel ? slideCount - items - absIndex : slideCount - 1 - absIndex;\n            else {\n                if (typeof targetIndex !== \"number\") targetIndex = parseInt(targetIndex);\n                if (!isNaN(targetIndex)) {\n                    // from directly called goTo function\n                    if (!e) targetIndex = Math.max(0, Math.min(slideCount - 1, targetIndex));\n                    indexGap = targetIndex - absIndex;\n                }\n            } // gallery: make sure new page won't overlap with current page\n            if (!carousel && indexGap && Math.abs(indexGap) < items) {\n                var factor = indexGap > 0 ? 1 : -1;\n                indexGap += index + indexGap - slideCount >= indexMin ? slideCount * factor : slideCount * 2 * factor * -1;\n            }\n            index += indexGap; // make sure index is in range\n            if (carousel && loop) {\n                if (index < indexMin) index += slideCount;\n                if (index > indexMax) index -= slideCount;\n            } // if index is changed, start rendering\n            if (getAbsIndex(index) !== getAbsIndex(indexCached)) render(e);\n        }\n    } // on controls click\n    function onControlsClick(e, dir) {\n        if (running) {\n            if (preventActionWhenRunning) return;\n            else onTransitionEnd();\n        }\n        var passEventObject;\n        if (!dir) {\n            e = getEvent(e);\n            var target = getTarget(e);\n            while(target !== controlsContainer && [\n                prevButton,\n                nextButton\n            ].indexOf(target) < 0)target = target.parentNode;\n            var targetIn = [\n                prevButton,\n                nextButton\n            ].indexOf(target);\n            if (targetIn >= 0) {\n                passEventObject = true;\n                dir = targetIn === 0 ? -1 : 1;\n            }\n        }\n        if (rewind) {\n            if (index === indexMin && dir === -1) {\n                goTo(\"last\", e);\n                return;\n            } else if (index === indexMax && dir === 1) {\n                goTo(\"first\", e);\n                return;\n            }\n        }\n        if (dir) {\n            index += slideBy * dir;\n            if (autoWidth) index = Math.floor(index);\n             // pass e when click control buttons or keydown\n            render(passEventObject || e && e.type === \"keydown\" ? e : null);\n        }\n    } // on nav click\n    function onNavClick(e) {\n        if (running) {\n            if (preventActionWhenRunning) return;\n            else onTransitionEnd();\n        }\n        e = getEvent(e);\n        var target = getTarget(e), navIndex; // find the clicked nav item\n        while(target !== navContainer && !$126f17a2d0da0791$var$hasAttr(target, \"data-nav\"))target = target.parentNode;\n        if ($126f17a2d0da0791$var$hasAttr(target, \"data-nav\")) {\n            var navIndex = navClicked = Number($126f17a2d0da0791$var$getAttr(target, \"data-nav\")), targetIndexBase = fixedWidth || autoWidth ? navIndex * slideCount / pages : navIndex * items, targetIndex = navAsThumbnails ? navIndex : Math.min(Math.ceil(targetIndexBase), slideCount - 1);\n            goTo(targetIndex, e);\n            if (navCurrentIndex === navIndex) {\n                if (animating) stopAutoplay();\n                navClicked = -1; // reset navClicked\n            }\n        }\n    } // autoplay functions\n    function setAutoplayTimer() {\n        autoplayTimer = setInterval(function() {\n            onControlsClick(null, autoplayDirection);\n        }, autoplayTimeout);\n        animating = true;\n    }\n    function stopAutoplayTimer() {\n        clearInterval(autoplayTimer);\n        animating = false;\n    }\n    function updateAutoplayButton(action, txt) {\n        $126f17a2d0da0791$var$setAttrs(autoplayButton, {\n            \"data-action\": action\n        });\n        autoplayButton.innerHTML = autoplayHtmlStrings[0] + action + autoplayHtmlStrings[1] + txt;\n    }\n    function startAutoplay() {\n        setAutoplayTimer();\n        if (autoplayButton) updateAutoplayButton(\"stop\", autoplayText[1]);\n    }\n    function stopAutoplay() {\n        stopAutoplayTimer();\n        if (autoplayButton) updateAutoplayButton(\"start\", autoplayText[0]);\n    } // programaitcally play/pause the slider\n    function play() {\n        if (autoplay && !animating) {\n            startAutoplay();\n            autoplayUserPaused = false;\n        }\n    }\n    function pause() {\n        if (animating) {\n            stopAutoplay();\n            autoplayUserPaused = true;\n        }\n    }\n    function toggleAutoplay() {\n        if (animating) {\n            stopAutoplay();\n            autoplayUserPaused = true;\n        } else {\n            startAutoplay();\n            autoplayUserPaused = false;\n        }\n    }\n    function onVisibilityChange() {\n        if (doc.hidden) {\n            if (animating) {\n                stopAutoplayTimer();\n                autoplayVisibilityPaused = true;\n            }\n        } else if (autoplayVisibilityPaused) {\n            setAutoplayTimer();\n            autoplayVisibilityPaused = false;\n        }\n    }\n    function mouseoverPause() {\n        if (animating) {\n            stopAutoplayTimer();\n            autoplayHoverPaused = true;\n        }\n    }\n    function mouseoutRestart() {\n        if (autoplayHoverPaused) {\n            setAutoplayTimer();\n            autoplayHoverPaused = false;\n        }\n    } // keydown events on document\n    function onDocumentKeydown(e) {\n        e = getEvent(e);\n        var keyIndex = [\n            KEYS.LEFT,\n            KEYS.RIGHT\n        ].indexOf(e.keyCode);\n        if (keyIndex >= 0) onControlsClick(e, keyIndex === 0 ? -1 : 1);\n    } // on key control\n    function onControlsKeydown(e) {\n        e = getEvent(e);\n        var keyIndex = [\n            KEYS.LEFT,\n            KEYS.RIGHT\n        ].indexOf(e.keyCode);\n        if (keyIndex >= 0) {\n            if (keyIndex === 0) {\n                if (!prevButton.disabled) onControlsClick(e, -1);\n            } else if (!nextButton.disabled) onControlsClick(e, 1);\n        }\n    } // set focus\n    function setFocus(el) {\n        el.focus();\n    } // on key nav\n    function onNavKeydown(e) {\n        e = getEvent(e);\n        var curElement = doc.activeElement;\n        if (!$126f17a2d0da0791$var$hasAttr(curElement, \"data-nav\")) return;\n         // var code = e.keyCode,\n        var keyIndex = [\n            KEYS.LEFT,\n            KEYS.RIGHT,\n            KEYS.ENTER,\n            KEYS.SPACE\n        ].indexOf(e.keyCode), navIndex = Number($126f17a2d0da0791$var$getAttr(curElement, \"data-nav\"));\n        if (keyIndex >= 0) {\n            if (keyIndex === 0) {\n                if (navIndex > 0) setFocus(navItems[navIndex - 1]);\n            } else if (keyIndex === 1) {\n                if (navIndex < pages - 1) setFocus(navItems[navIndex + 1]);\n            } else {\n                navClicked = navIndex;\n                goTo(navIndex, e);\n            }\n        }\n    }\n    function getEvent(e) {\n        e = e || win.event;\n        return isTouchEvent(e) ? e.changedTouches[0] : e;\n    }\n    function getTarget(e) {\n        return e.target || win.event.srcElement;\n    }\n    function isTouchEvent(e) {\n        return e.type.indexOf(\"touch\") >= 0;\n    }\n    function preventDefaultBehavior(e) {\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n    }\n    function getMoveDirectionExpected() {\n        return $126f17a2d0da0791$var$getTouchDirection($126f17a2d0da0791$var$toDegree(lastPosition.y - initPosition.y, lastPosition.x - initPosition.x), swipeAngle) === options.axis;\n    }\n    function onPanStart(e) {\n        if (running) {\n            if (preventActionWhenRunning) return;\n            else onTransitionEnd();\n        }\n        if (autoplay && animating) stopAutoplayTimer();\n        panStart = true;\n        if (rafIndex) {\n            $126f17a2d0da0791$var$caf(rafIndex);\n            rafIndex = null;\n        }\n        var $ = getEvent(e);\n        events.emit(isTouchEvent(e) ? \"touchStart\" : \"dragStart\", info(e));\n        if (!isTouchEvent(e) && [\n            \"img\",\n            \"a\"\n        ].indexOf(getLowerCaseNodeName(getTarget(e))) >= 0) preventDefaultBehavior(e);\n        lastPosition.x = initPosition.x = $.clientX;\n        lastPosition.y = initPosition.y = $.clientY;\n        if (carousel) {\n            translateInit = parseFloat(container.style[transformAttr].replace(transformPrefix, \"\"));\n            resetDuration(container, \"0s\");\n        }\n    }\n    function onPanMove(e) {\n        if (panStart) {\n            var $ = getEvent(e);\n            lastPosition.x = $.clientX;\n            lastPosition.y = $.clientY;\n            if (carousel) {\n                if (!rafIndex) rafIndex = raf(function() {\n                    panUpdate(e);\n                });\n            } else {\n                if (moveDirectionExpected === \"?\") moveDirectionExpected = getMoveDirectionExpected();\n                if (moveDirectionExpected) preventScroll = true;\n            }\n            if ((typeof e.cancelable !== \"boolean\" || e.cancelable) && preventScroll) e.preventDefault();\n        }\n    }\n    function panUpdate(e) {\n        if (!moveDirectionExpected) {\n            panStart = false;\n            return;\n        }\n        $126f17a2d0da0791$var$caf(rafIndex);\n        if (panStart) rafIndex = raf(function() {\n            panUpdate(e);\n        });\n        if (moveDirectionExpected === \"?\") moveDirectionExpected = getMoveDirectionExpected();\n        if (moveDirectionExpected) {\n            if (!preventScroll && isTouchEvent(e)) preventScroll = true;\n            try {\n                if (e.type) events.emit(isTouchEvent(e) ? \"touchMove\" : \"dragMove\", info(e));\n            } catch (err) {}\n            var x = translateInit, dist = getDist(lastPosition, initPosition);\n            if (!horizontal || fixedWidth || autoWidth) {\n                x += dist;\n                x += \"px\";\n            } else {\n                var percentageX = TRANSFORM ? dist * items * 100 / ((viewport + gutter) * slideCountNew) : dist * 100 / (viewport + gutter);\n                x += percentageX;\n                x += \"%\";\n            }\n            container.style[transformAttr] = transformPrefix + x + transformPostfix;\n        }\n    }\n    function onPanEnd(e) {\n        if (panStart) {\n            if (rafIndex) {\n                $126f17a2d0da0791$var$caf(rafIndex);\n                rafIndex = null;\n            }\n            if (carousel) resetDuration(container, \"\");\n            panStart = false;\n            var $ = getEvent(e);\n            lastPosition.x = $.clientX;\n            lastPosition.y = $.clientY;\n            var dist = getDist(lastPosition, initPosition);\n            if (Math.abs(dist)) {\n                // drag vs click\n                if (!isTouchEvent(e)) {\n                    // prevent \"click\"\n                    var target = getTarget(e);\n                    $126f17a2d0da0791$var$addEvents(target, {\n                        click: function preventClick(e) {\n                            preventDefaultBehavior(e);\n                            $126f17a2d0da0791$var$removeEvents(target, {\n                                click: preventClick\n                            });\n                        }\n                    });\n                }\n                if (carousel) rafIndex = raf(function() {\n                    if (horizontal && !autoWidth) {\n                        var indexMoved = -dist * items / (viewport + gutter);\n                        indexMoved = dist > 0 ? Math.floor(indexMoved) : Math.ceil(indexMoved);\n                        index += indexMoved;\n                    } else {\n                        var moved = -(translateInit + dist);\n                        if (moved <= 0) index = indexMin;\n                        else if (moved >= slidePositions[slideCountNew - 1]) index = indexMax;\n                        else {\n                            var i = 0;\n                            while(i < slideCountNew && moved >= slidePositions[i]){\n                                index = i;\n                                if (moved > slidePositions[i] && dist < 0) index += 1;\n                                i++;\n                            }\n                        }\n                    }\n                    render(e, dist);\n                    events.emit(isTouchEvent(e) ? \"touchEnd\" : \"dragEnd\", info(e));\n                });\n                else if (moveDirectionExpected) onControlsClick(e, dist > 0 ? -1 : 1);\n            }\n        } // reset\n        if (options.preventScrollOnTouch === \"auto\") preventScroll = false;\n        if (swipeAngle) moveDirectionExpected = \"?\";\n        if (autoplay && !animating) setAutoplayTimer();\n    } // === RESIZE FUNCTIONS === //\n    // (slidePositions, index, items) => vertical_conentWrapper.height\n    function updateContentWrapperHeight() {\n        var wp = middleWrapper ? middleWrapper : innerWrapper;\n        wp.style.height = slidePositions[index + items] - slidePositions[index] + \"px\";\n    }\n    function getPages() {\n        var rough = fixedWidth ? (fixedWidth + gutter) * slideCount / viewport : slideCount / items;\n        return Math.min(Math.ceil(rough), slideCount);\n    }\n    /*\n   * 1. update visible nav items list\n   * 2. add \"hidden\" attributes to previous visible nav items\n   * 3. remove \"hidden\" attrubutes to new visible nav items\n   */ function updateNavVisibility() {\n        if (!nav || navAsThumbnails) return;\n        if (pages !== pagesCached) {\n            var min = pagesCached, max = pages, fn = $126f17a2d0da0791$var$showElement;\n            if (pagesCached > pages) {\n                min = pages;\n                max = pagesCached;\n                fn = $126f17a2d0da0791$var$hideElement;\n            }\n            while(min < max){\n                fn(navItems[min]);\n                min++;\n            } // cache pages\n            pagesCached = pages;\n        }\n    }\n    function info(e) {\n        return {\n            container: container,\n            slideItems: slideItems,\n            navContainer: navContainer,\n            navItems: navItems,\n            controlsContainer: controlsContainer,\n            hasControls: hasControls,\n            prevButton: prevButton,\n            nextButton: nextButton,\n            items: items,\n            slideBy: slideBy,\n            cloneCount: cloneCount,\n            slideCount: slideCount,\n            slideCountNew: slideCountNew,\n            index: index,\n            indexCached: indexCached,\n            displayIndex: getCurrentSlide(),\n            navCurrentIndex: navCurrentIndex,\n            navCurrentIndexCached: navCurrentIndexCached,\n            pages: pages,\n            pagesCached: pagesCached,\n            sheet: sheet,\n            isOn: isOn,\n            event: e || {}\n        };\n    }\n    return {\n        version: \"2.9.4\",\n        getInfo: info,\n        events: events,\n        goTo: goTo,\n        play: play,\n        pause: pause,\n        isOn: isOn,\n        updateSliderHeight: updateInnerWrapperHeight,\n        refresh: initSliderTransform,\n        destroy: destroy,\n        rebuild: function() {\n            return $126f17a2d0da0791$var$tns($126f17a2d0da0791$var$extend(options, optionsElements));\n        }\n    };\n};\n$126f17a2d0da0791$exports.tns = $126f17a2d0da0791$var$tns;\n\n\nclass $5e027fb9b135ff22$var$VanillaScrollspy {\n    constructor({ menu: menu, speed: speed = 2000, easing: easing = \"easeOutSine\" }){\n        this.$menu = menu;\n        this.speed = speed;\n        this.easing = easing;\n    }\n    scrollToY(targetY = 0) {\n        let currentTime = 0;\n        const scrollTargetY = targetY;\n        const scrollY = window.scrollY || document.documentElement.scrollTop;\n        const time = Math.max(0.1, Math.min(Math.abs(scrollY - scrollTargetY) / this.speed, 0.8));\n        const easingEquations = {\n            easeOutSine (pos) {\n                return Math.sin(pos * (Math.PI / 2));\n            },\n            easeInOutSine (pos) {\n                return -0.5 * (Math.cos(Math.PI * pos) - 1);\n            },\n            easeInOutQuint (pos) {\n                if ((pos /= 0.5) < 1) return 0.5 * pos ** 5;\n                return 0.5 * ((pos - 2) ** 5 + 2);\n            }\n        };\n        const tick = ()=>{\n            currentTime += 1 / 60;\n            const p = currentTime / time;\n            const t = easingEquations[this.easing](p);\n            if (p < 1) {\n                window.requestAnimationFrame(tick);\n                window.scrollTo(0, scrollY + (scrollTargetY - scrollY) * t);\n                return;\n            }\n            window.scrollTo(0, scrollTargetY);\n        };\n        tick();\n    }\n    menuControl() {\n        const $links = this.$menu.querySelectorAll('a[href^=\"#\"]');\n        const scrollPos = window.scrollY || document.documentElement.scrollTop;\n        $links.forEach((link)=>{\n            const $elem = document.querySelector(link.getAttribute(\"href\"));\n            return $elem.offsetTop <= scrollPos && $elem.offsetTop + $elem.clientHeight > scrollPos ? link.classList.add(\"active\") : link.classList.remove(\"active\");\n        });\n    }\n    animated() {\n        const $links = this.$menu.querySelectorAll('a[href^=\"#\"]');\n        const self = this;\n        function control(e) {\n            e.preventDefault();\n            const $target = document.querySelector(this.hash);\n            self.scrollToY($target.offsetTop);\n        }\n        $links.forEach((link)=>link.addEventListener(\"click\", control));\n    }\n    init() {\n        this.animated();\n        document.addEventListener(\"scroll\", ()=>this.menuControl());\n    }\n}\nfunction $5e027fb9b135ff22$export$2e2bcd8739ae039(...args) {\n    return new $5e027fb9b135ff22$var$VanillaScrollspy(...args);\n}\n\n\nconst $212038711ef1a1fe$var$slider = (0, $126f17a2d0da0791$exports.tns)({\n    container: \".how-it-works__slider\",\n    items: 1,\n    slideBy: \"page\",\n    controls: false,\n    autoplay: true,\n    autoplayButtonOutput: false,\n    navPosition: \"bottom\"\n});\nconst $212038711ef1a1fe$var$slider2 = (0, $126f17a2d0da0791$exports.tns)({\n    container: \".white-papers__slider\",\n    items: 1,\n    slideBy: 1,\n    mouseDrag: true,\n    swipeAngle: false,\n    loop: false,\n    controlsContainer: \"#customize-controls\"\n});\nconst $212038711ef1a1fe$var$menu = document.querySelector(\"#vertical-nav\");\nconst $212038711ef1a1fe$var$scrollspy = (0, $5e027fb9b135ff22$export$2e2bcd8739ae039)({\n    menu: $212038711ef1a1fe$var$menu\n});\n$212038711ef1a1fe$var$scrollspy.init();\nwindow.addEventListener(\"DOMContentLoaded\", function() {\n    function updateHeight() {\n        if (window.innerWidth > 992) {\n            document.querySelector(\".jumbotron__movie\").style.height = \"\";\n            document.querySelector(\".jumbotron__movie\").style.left = \"\";\n            return;\n        }\n        const topHeight = document.querySelector(\".jumbotron__top\").offsetHeight;\n        document.querySelector(\".jumbotron__movie\").style.height = topHeight + \"px\";\n        const movieWidth = document.querySelector(\".jumbotron__movie\").offsetWidth;\n        const containerWidth = document.querySelector(\".jumbotron__movie__container\").offsetWidth;\n        const difference = (movieWidth - containerWidth) / 2;\n        document.querySelector(\".jumbotron__movie\").style.left = -difference + \"px\";\n    }\n    window.addEventListener(\"resize\", updateHeight);\n    updateHeight();\n});\n\n\n//# sourceMappingURL=index.547b0150.js.map\n","import { tns } from './tiny-slider.js';\nimport VanillaScrollspy from './vanillajs-scrollspy.js';\n\nconst slider = tns({\n  container: '.how-it-works__slider',\n  items: 1,\n  slideBy: 'page',\n  controls: false,\n  autoplay: true,\n  autoplayButtonOutput: false,\n  navPosition: 'bottom',\n});\n\nconst slider2 = tns({\n  container: '.white-papers__slider',\n  items: 1,\n  slideBy: 1,\n  mouseDrag: true,\n  swipeAngle: false,\n  loop: false,\n  controlsContainer: '#customize-controls',\n});\n\nconst menu = document.querySelector('#vertical-nav');\nconst scrollspy = VanillaScrollspy({ menu });\nscrollspy.init();\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  function updateHeight() {\n    if (window.innerWidth > 992) {\n      document.querySelector('.jumbotron__movie').style.height = '';\n      document.querySelector('.jumbotron__movie').style.left = '';\n      return;\n    }\n\n    const topHeight = document.querySelector('.jumbotron__top').offsetHeight;\n    document.querySelector('.jumbotron__movie').style.height = topHeight + 'px';\n    const movieWidth = document.querySelector('.jumbotron__movie').offsetWidth;\n    const containerWidth = document.querySelector(\n      '.jumbotron__movie__container'\n    ).offsetWidth;\n    const difference = (movieWidth - containerWidth) / 2;\n    document.querySelector('.jumbotron__movie').style.left = -difference + 'px';\n  }\n\n  window.addEventListener('resize', updateHeight);\n  updateHeight();\n});\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar win = window;\nvar caf =\n  win.cancelAnimationFrame ||\n  win.mozCancelAnimationFrame ||\n  function (id) {\n    clearTimeout(id);\n  };\n\nfunction extend() {\n  var obj,\n    name,\n    copy,\n    target = arguments[0] || {},\n    i = 1,\n    length = arguments.length;\n\n  for (; i < length; i++) {\n    if ((obj = arguments[i]) !== null) {\n      for (name in obj) {\n        copy = obj[name];\n\n        if (target === copy) {\n          continue;\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction checkStorageValue(value) {\n  return ['true', 'false'].indexOf(value) >= 0 ? JSON.parse(value) : value;\n}\n\nfunction setLocalStorage(storage, key, value, access) {\n  if (access) {\n    try {\n      storage.setItem(key, value);\n    } catch (e) {}\n  }\n\n  return value;\n}\n\nfunction getSlideId() {\n  var id = window.tnsId;\n  window.tnsId = !id ? 1 : id + 1;\n  return 'tns' + window.tnsId;\n}\n\nfunction getBody() {\n  var doc = document,\n    body = doc.body;\n\n  if (!body) {\n    body = doc.createElement('body');\n    body.fake = true;\n  }\n\n  return body;\n}\n\nvar docElement = document.documentElement;\n\nfunction setFakeBody(body) {\n  var docOverflow = '';\n\n  if (body.fake) {\n    docOverflow = docElement.style.overflow; //avoid crashing IE8, if background image is used\n\n    body.style.background = ''; //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n\n    body.style.overflow = docElement.style.overflow = 'hidden';\n    docElement.appendChild(body);\n  }\n\n  return docOverflow;\n}\n\nfunction resetFakeBody(body, docOverflow) {\n  if (body.fake) {\n    body.remove();\n    docElement.style.overflow = docOverflow; // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n    // eslint-disable-next-line\n\n    docElement.offsetHeight;\n  }\n}\n\n// get css-calc\nfunction calc() {\n  var doc = document,\n    body = getBody(),\n    docOverflow = setFakeBody(body),\n    div = doc.createElement('div'),\n    result = false;\n  body.appendChild(div);\n\n  try {\n    var str = '(10px * 10)',\n      vals = ['calc' + str, '-moz-calc' + str, '-webkit-calc' + str],\n      val;\n\n    for (var i = 0; i < 3; i++) {\n      val = vals[i];\n      div.style.width = val;\n\n      if (div.offsetWidth === 100) {\n        result = val.replace(str, '');\n        break;\n      }\n    }\n  } catch (e) {}\n\n  body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n  return result;\n}\n\n// get subpixel support value\nfunction percentageLayout() {\n  // check subpixel layout supporting\n  var doc = document,\n    body = getBody(),\n    docOverflow = setFakeBody(body),\n    wrapper = doc.createElement('div'),\n    outer = doc.createElement('div'),\n    str = '',\n    count = 70,\n    perPage = 3,\n    supported = false;\n  wrapper.className = 'tns-t-subp2';\n  outer.className = 'tns-t-ct';\n\n  for (var i = 0; i < count; i++) {\n    str += '<div></div>';\n  }\n\n  outer.innerHTML = str;\n  wrapper.appendChild(outer);\n  body.appendChild(wrapper);\n  supported =\n    Math.abs(\n      wrapper.getBoundingClientRect().left -\n        outer.children[count - perPage].getBoundingClientRect().left\n    ) < 2;\n  body.fake ? resetFakeBody(body, docOverflow) : wrapper.remove();\n  return supported;\n}\n\nfunction mediaquerySupport() {\n  if (window.matchMedia || window.msMatchMedia) {\n    return true;\n  }\n\n  var doc = document,\n    body = getBody(),\n    docOverflow = setFakeBody(body),\n    div = doc.createElement('div'),\n    style = doc.createElement('style'),\n    rule = '@media all and (min-width:1px){.tns-mq-test{position:absolute}}',\n    position;\n  style.type = 'text/css';\n  div.className = 'tns-mq-test';\n  body.appendChild(style);\n  body.appendChild(div);\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = rule;\n  } else {\n    style.appendChild(doc.createTextNode(rule));\n  }\n\n  position = window.getComputedStyle\n    ? window.getComputedStyle(div).position\n    : div.currentStyle['position'];\n  body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n  return position === 'absolute';\n}\n\n// create and append style sheet\nfunction createStyleSheet(media, nonce) {\n  // Create the <style> tag\n  var style = document.createElement('style'); // style.setAttribute(\"type\", \"text/css\");\n  // Add a media (and/or media query) here if you'd like!\n  // style.setAttribute(\"media\", \"screen\")\n  // style.setAttribute(\"media\", \"only screen and (max-width : 1024px)\")\n\n  if (media) {\n    style.setAttribute('media', media);\n  } // Add nonce attribute for Content Security Policy\n\n  if (nonce) {\n    style.setAttribute('nonce', nonce);\n  } // WebKit hack :(\n  // style.appendChild(document.createTextNode(\"\"));\n  // Add the <style> element to the page\n\n  document.querySelector('head').appendChild(style);\n  return style.sheet ? style.sheet : style.styleSheet;\n}\n\n// cross browsers addRule method\nfunction addCSSRule(sheet, selector, rules, index) {\n  // return raf(function() {\n  'insertRule' in sheet\n    ? sheet.insertRule(selector + '{' + rules + '}', index)\n    : sheet.addRule(selector, rules, index); // });\n}\n\n// cross browsers addRule method\nfunction removeCSSRule(sheet, index) {\n  // return raf(function() {\n  'deleteRule' in sheet ? sheet.deleteRule(index) : sheet.removeRule(index); // });\n}\n\nfunction getCssRulesLength(sheet) {\n  var rule = 'insertRule' in sheet ? sheet.cssRules : sheet.rules;\n  return rule.length;\n}\n\nfunction toDegree(y, x) {\n  return Math.atan2(y, x) * (180 / Math.PI);\n}\n\nfunction getTouchDirection(angle, range) {\n  var direction = false,\n    gap = Math.abs(90 - Math.abs(angle));\n\n  if (gap >= 90 - range) {\n    direction = 'horizontal';\n  } else if (gap <= range) {\n    direction = 'vertical';\n  }\n\n  return direction;\n}\n\n// https://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\nfunction forEach(arr, callback, scope) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    callback.call(scope, arr[i], i);\n  }\n}\n\nvar classListSupport = 'classList' in document.createElement('_');\n\nvar hasClass = classListSupport\n  ? function (el, str) {\n      return el.classList.contains(str);\n    }\n  : function (el, str) {\n      return el.className.indexOf(str) >= 0;\n    };\n\nvar addClass = classListSupport\n  ? function (el, str) {\n      if (!hasClass(el, str)) {\n        el.classList.add(str);\n      }\n    }\n  : function (el, str) {\n      if (!hasClass(el, str)) {\n        el.className += ' ' + str;\n      }\n    };\n\nvar removeClass = classListSupport\n  ? function (el, str) {\n      if (hasClass(el, str)) {\n        el.classList.remove(str);\n      }\n    }\n  : function (el, str) {\n      if (hasClass(el, str)) {\n        el.className = el.className.replace(str, '');\n      }\n    };\n\nfunction hasAttr(el, attr) {\n  return el.hasAttribute(attr);\n}\n\nfunction getAttr(el, attr) {\n  return el.getAttribute(attr);\n}\n\nfunction isNodeList(el) {\n  // Only NodeList has the \"item()\" function\n  return typeof el.item !== 'undefined';\n}\n\nfunction setAttrs(els, attrs) {\n  els = isNodeList(els) || els instanceof Array ? els : [els];\n\n  if (Object.prototype.toString.call(attrs) !== '[object Object]') {\n    return;\n  }\n\n  for (var i = els.length; i--; ) {\n    for (var key in attrs) {\n      els[i].setAttribute(key, attrs[key]);\n    }\n  }\n}\n\nfunction removeAttrs(els, attrs) {\n  els = isNodeList(els) || els instanceof Array ? els : [els];\n  attrs = attrs instanceof Array ? attrs : [attrs];\n  var attrLength = attrs.length;\n\n  for (var i = els.length; i--; ) {\n    for (var j = attrLength; j--; ) {\n      els[i].removeAttribute(attrs[j]);\n    }\n  }\n}\n\nfunction arrayFromNodeList(nl) {\n  var arr = [];\n\n  for (var i = 0, l = nl.length; i < l; i++) {\n    arr.push(nl[i]);\n  }\n\n  return arr;\n}\n\nfunction hideElement(el, forceHide) {\n  if (el.style.display !== 'none') {\n    el.style.display = 'none';\n  }\n}\n\nfunction showElement(el, forceHide) {\n  if (el.style.display === 'none') {\n    el.style.display = '';\n  }\n}\n\nfunction isVisible(el) {\n  return window.getComputedStyle(el).display !== 'none';\n}\n\nfunction whichProperty(props) {\n  if (typeof props === 'string') {\n    var arr = [props],\n      Props = props.charAt(0).toUpperCase() + props.substr(1),\n      prefixes = ['Webkit', 'Moz', 'ms', 'O'];\n    prefixes.forEach(function (prefix) {\n      if (prefix !== 'ms' || props === 'transform') {\n        arr.push(prefix + Props);\n      }\n    });\n    props = arr;\n  }\n\n  var el = document.createElement('fakeelement');\n  props.length;\n\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n\n    if (el.style[prop] !== undefined) {\n      return prop;\n    }\n  }\n\n  return false; // explicit for ie9-\n}\n\nfunction has3DTransforms(tf) {\n  if (!tf) {\n    return false;\n  }\n\n  if (!window.getComputedStyle) {\n    return false;\n  }\n\n  var doc = document,\n    body = getBody(),\n    docOverflow = setFakeBody(body),\n    el = doc.createElement('p'),\n    has3d,\n    cssTF = tf.length > 9 ? '-' + tf.slice(0, -9).toLowerCase() + '-' : '';\n  cssTF += 'transform'; // Add it to the body to get the computed style\n\n  body.insertBefore(el, null);\n  el.style[tf] = 'translate3d(1px,1px,1px)';\n  has3d = window.getComputedStyle(el).getPropertyValue(cssTF);\n  body.fake ? resetFakeBody(body, docOverflow) : el.remove();\n  return has3d !== undefined && has3d.length > 0 && has3d !== 'none';\n}\n\n// get transitionend, animationend based on transitionDuration\n// @propin: string\n// @propOut: string, first-letter uppercase\n// Usage: getEndProperty('WebkitTransitionDuration', 'Transition') => webkitTransitionEnd\nfunction getEndProperty(propIn, propOut) {\n  var endProp = false;\n\n  if (/^Webkit/.test(propIn)) {\n    endProp = 'webkit' + propOut + 'End';\n  } else if (/^O/.test(propIn)) {\n    endProp = 'o' + propOut + 'End';\n  } else if (propIn) {\n    endProp = propOut.toLowerCase() + 'end';\n  }\n\n  return endProp;\n}\n\n// Test via a getter in the options object to see if the passive property is accessed\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function () {\n      supportsPassive = true;\n    },\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n\nvar passiveOption = supportsPassive\n  ? {\n      passive: true,\n    }\n  : false;\n\nfunction addEvents(el, obj, preventScrolling) {\n  for (var prop in obj) {\n    var option =\n      ['touchstart', 'touchmove'].indexOf(prop) >= 0 && !preventScrolling\n        ? passiveOption\n        : false;\n    el.addEventListener(prop, obj[prop], option);\n  }\n}\n\nfunction removeEvents(el, obj) {\n  for (var prop in obj) {\n    var option =\n      ['touchstart', 'touchmove'].indexOf(prop) >= 0 ? passiveOption : false;\n    el.removeEventListener(prop, obj[prop], option);\n  }\n}\n\nfunction Events() {\n  return {\n    topics: {},\n    on: function (eventName, fn) {\n      this.topics[eventName] = this.topics[eventName] || [];\n      this.topics[eventName].push(fn);\n    },\n    off: function (eventName, fn) {\n      if (this.topics[eventName]) {\n        for (var i = 0; i < this.topics[eventName].length; i++) {\n          if (this.topics[eventName][i] === fn) {\n            this.topics[eventName].splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    emit: function (eventName, data) {\n      data.type = eventName;\n\n      if (this.topics[eventName]) {\n        this.topics[eventName].forEach(function (fn) {\n          fn(data, eventName);\n        });\n      }\n    },\n  };\n}\n\nfunction jsTransform(element, attr, prefix, postfix, to, duration, callback) {\n  var tick = Math.min(duration, 10),\n    unit = to.indexOf('%') >= 0 ? '%' : 'px',\n    to = to.replace(unit, ''),\n    from = Number(\n      element.style[attr]\n        .replace(prefix, '')\n        .replace(postfix, '')\n        .replace(unit, '')\n    ),\n    positionTick = ((to - from) / duration) * tick;\n  setTimeout(moveElement, tick);\n\n  function moveElement() {\n    duration -= tick;\n    from += positionTick;\n    element.style[attr] = prefix + from + unit + postfix;\n\n    if (duration > 0) {\n      setTimeout(moveElement, tick);\n    } else {\n      callback();\n    }\n  }\n}\n\n// Object.keys\nif (!Object.keys) {\n  Object.keys = function (object) {\n    var keys = [];\n\n    for (var name in object) {\n      if (Object.prototype.hasOwnProperty.call(object, name)) {\n        keys.push(name);\n      }\n    }\n\n    return keys;\n  };\n} // ChildNode.remove\n\nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\nvar tns = function (options) {\n  options = extend(\n    {\n      container: '.slider',\n      mode: 'carousel',\n      axis: 'horizontal',\n      items: 1,\n      gutter: 0,\n      edgePadding: 0,\n      fixedWidth: false,\n      autoWidth: false,\n      viewportMax: false,\n      slideBy: 1,\n      center: false,\n      controls: true,\n      controlsPosition: 'top',\n      controlsText: ['prev', 'next'],\n      controlsContainer: false,\n      prevButton: false,\n      nextButton: false,\n      nav: true,\n      navPosition: 'top',\n      navContainer: false,\n      navAsThumbnails: false,\n      arrowKeys: false,\n      speed: 300,\n      autoplay: false,\n      autoplayPosition: 'top',\n      autoplayTimeout: 5000,\n      autoplayDirection: 'forward',\n      autoplayText: ['start', 'stop'],\n      autoplayHoverPause: false,\n      autoplayButton: false,\n      autoplayButtonOutput: true,\n      autoplayResetOnVisibility: true,\n      animateIn: 'tns-fadeIn',\n      animateOut: 'tns-fadeOut',\n      animateNormal: 'tns-normal',\n      animateDelay: false,\n      loop: true,\n      rewind: false,\n      autoHeight: false,\n      responsive: false,\n      lazyload: false,\n      lazyloadSelector: '.tns-lazy-img',\n      touch: true,\n      mouseDrag: false,\n      swipeAngle: 15,\n      nested: false,\n      preventActionWhenRunning: false,\n      preventScrollOnTouch: false,\n      freezable: true,\n      onInit: false,\n      useLocalStorage: true,\n      nonce: false,\n    },\n    options || {}\n  );\n  var doc = document,\n    win = window,\n    KEYS = {\n      ENTER: 13,\n      SPACE: 32,\n      LEFT: 37,\n      RIGHT: 39,\n    },\n    tnsStorage = {},\n    localStorageAccess = options.useLocalStorage;\n\n  if (localStorageAccess) {\n    // check browser version and local storage access\n    var browserInfo = navigator.userAgent;\n    var uid = new Date();\n\n    try {\n      tnsStorage = win.localStorage;\n\n      if (tnsStorage) {\n        tnsStorage.setItem(uid, uid);\n        localStorageAccess = tnsStorage.getItem(uid) == uid;\n        tnsStorage.removeItem(uid);\n      } else {\n        localStorageAccess = false;\n      }\n\n      if (!localStorageAccess) {\n        tnsStorage = {};\n      }\n    } catch (e) {\n      localStorageAccess = false;\n    }\n\n    if (localStorageAccess) {\n      // remove storage when browser version changes\n      if (tnsStorage['tnsApp'] && tnsStorage['tnsApp'] !== browserInfo) {\n        [\n          'tC',\n          'tPL',\n          'tMQ',\n          'tTf',\n          't3D',\n          'tTDu',\n          'tTDe',\n          'tADu',\n          'tADe',\n          'tTE',\n          'tAE',\n        ].forEach(function (item) {\n          tnsStorage.removeItem(item);\n        });\n      } // update browserInfo\n\n      localStorage['tnsApp'] = browserInfo;\n    }\n  }\n\n  var CALC = tnsStorage['tC']\n      ? checkStorageValue(tnsStorage['tC'])\n      : setLocalStorage(tnsStorage, 'tC', calc(), localStorageAccess),\n    PERCENTAGELAYOUT = tnsStorage['tPL']\n      ? checkStorageValue(tnsStorage['tPL'])\n      : setLocalStorage(\n          tnsStorage,\n          'tPL',\n          percentageLayout(),\n          localStorageAccess\n        ),\n    CSSMQ = tnsStorage['tMQ']\n      ? checkStorageValue(tnsStorage['tMQ'])\n      : setLocalStorage(\n          tnsStorage,\n          'tMQ',\n          mediaquerySupport(),\n          localStorageAccess\n        ),\n    TRANSFORM = tnsStorage['tTf']\n      ? checkStorageValue(tnsStorage['tTf'])\n      : setLocalStorage(\n          tnsStorage,\n          'tTf',\n          whichProperty('transform'),\n          localStorageAccess\n        ),\n    HAS3DTRANSFORMS = tnsStorage['t3D']\n      ? checkStorageValue(tnsStorage['t3D'])\n      : setLocalStorage(\n          tnsStorage,\n          't3D',\n          has3DTransforms(TRANSFORM),\n          localStorageAccess\n        ),\n    TRANSITIONDURATION = tnsStorage['tTDu']\n      ? checkStorageValue(tnsStorage['tTDu'])\n      : setLocalStorage(\n          tnsStorage,\n          'tTDu',\n          whichProperty('transitionDuration'),\n          localStorageAccess\n        ),\n    TRANSITIONDELAY = tnsStorage['tTDe']\n      ? checkStorageValue(tnsStorage['tTDe'])\n      : setLocalStorage(\n          tnsStorage,\n          'tTDe',\n          whichProperty('transitionDelay'),\n          localStorageAccess\n        ),\n    ANIMATIONDURATION = tnsStorage['tADu']\n      ? checkStorageValue(tnsStorage['tADu'])\n      : setLocalStorage(\n          tnsStorage,\n          'tADu',\n          whichProperty('animationDuration'),\n          localStorageAccess\n        ),\n    ANIMATIONDELAY = tnsStorage['tADe']\n      ? checkStorageValue(tnsStorage['tADe'])\n      : setLocalStorage(\n          tnsStorage,\n          'tADe',\n          whichProperty('animationDelay'),\n          localStorageAccess\n        ),\n    TRANSITIONEND = tnsStorage['tTE']\n      ? checkStorageValue(tnsStorage['tTE'])\n      : setLocalStorage(\n          tnsStorage,\n          'tTE',\n          getEndProperty(TRANSITIONDURATION, 'Transition'),\n          localStorageAccess\n        ),\n    ANIMATIONEND = tnsStorage['tAE']\n      ? checkStorageValue(tnsStorage['tAE'])\n      : setLocalStorage(\n          tnsStorage,\n          'tAE',\n          getEndProperty(ANIMATIONDURATION, 'Animation'),\n          localStorageAccess\n        ); // get element nodes from selectors\n\n  var supportConsoleWarn =\n      win.console && typeof win.console.warn === 'function',\n    tnsList = [\n      'container',\n      'controlsContainer',\n      'prevButton',\n      'nextButton',\n      'navContainer',\n      'autoplayButton',\n    ],\n    optionsElements = {};\n  tnsList.forEach(function (item) {\n    if (typeof options[item] === 'string') {\n      var str = options[item],\n        el = doc.querySelector(str);\n      optionsElements[item] = str;\n\n      if (el && el.nodeName) {\n        options[item] = el;\n      } else {\n        if (supportConsoleWarn) {\n          console.warn(\"Can't find\", options[item]);\n        }\n\n        return;\n      }\n    }\n  }); // make sure at least 1 slide\n\n  if (options.container.children.length < 1) {\n    if (supportConsoleWarn) {\n      console.warn('No slides found in', options.container);\n    }\n\n    return;\n  } // update options\n\n  var responsive = options.responsive,\n    nested = options.nested,\n    carousel = options.mode === 'carousel' ? true : false;\n\n  if (responsive) {\n    // apply responsive[0] to options and remove it\n    if (0 in responsive) {\n      options = extend(options, responsive[0]);\n      delete responsive[0];\n    }\n\n    var responsiveTem = {};\n\n    for (var key in responsive) {\n      var val = responsive[key]; // update responsive\n      // from: 300: 2\n      // to:\n      //   300: {\n      //     items: 2\n      //   }\n\n      val =\n        typeof val === 'number'\n          ? {\n              items: val,\n            }\n          : val;\n      responsiveTem[key] = val;\n    }\n\n    responsive = responsiveTem;\n    responsiveTem = null;\n  } // update options\n\n  function updateOptions(obj) {\n    for (var key in obj) {\n      if (!carousel) {\n        if (key === 'slideBy') {\n          obj[key] = 'page';\n        }\n\n        if (key === 'edgePadding') {\n          obj[key] = false;\n        }\n\n        if (key === 'autoHeight') {\n          obj[key] = false;\n        }\n      } // update responsive options\n\n      if (key === 'responsive') {\n        updateOptions(obj[key]);\n      }\n    }\n  }\n\n  if (!carousel) {\n    updateOptions(options);\n  } // === define and set variables ===\n\n  if (!carousel) {\n    options.axis = 'horizontal';\n    options.slideBy = 'page';\n    options.edgePadding = false;\n    var animateIn = options.animateIn,\n      animateOut = options.animateOut,\n      animateDelay = options.animateDelay,\n      animateNormal = options.animateNormal;\n  }\n\n  var horizontal = options.axis === 'horizontal' ? true : false,\n    outerWrapper = doc.createElement('div'),\n    innerWrapper = doc.createElement('div'),\n    middleWrapper,\n    container = options.container,\n    containerParent = container.parentNode,\n    containerHTML = container.outerHTML,\n    slideItems = container.children,\n    slideCount = slideItems.length,\n    breakpointZone,\n    windowWidth = getWindowWidth(),\n    isOn = false;\n\n  if (responsive) {\n    setBreakpointZone();\n  }\n\n  if (carousel) {\n    container.className += ' tns-vpfix';\n  } // fixedWidth: viewport > rightBoundary > indexMax\n\n  var autoWidth = options.autoWidth,\n    fixedWidth = getOption('fixedWidth'),\n    edgePadding = getOption('edgePadding'),\n    gutter = getOption('gutter'),\n    viewport = getViewportWidth(),\n    center = getOption('center'),\n    items = !autoWidth ? Math.floor(getOption('items')) : 1,\n    slideBy = getOption('slideBy'),\n    viewportMax = options.viewportMax || options.fixedWidthViewportWidth,\n    arrowKeys = getOption('arrowKeys'),\n    speed = getOption('speed'),\n    rewind = options.rewind,\n    loop = rewind ? false : options.loop,\n    autoHeight = getOption('autoHeight'),\n    controls = getOption('controls'),\n    controlsText = getOption('controlsText'),\n    nav = getOption('nav'),\n    touch = getOption('touch'),\n    mouseDrag = getOption('mouseDrag'),\n    autoplay = getOption('autoplay'),\n    autoplayTimeout = getOption('autoplayTimeout'),\n    autoplayText = getOption('autoplayText'),\n    autoplayHoverPause = getOption('autoplayHoverPause'),\n    autoplayResetOnVisibility = getOption('autoplayResetOnVisibility'),\n    sheet = createStyleSheet(null, getOption('nonce')),\n    lazyload = options.lazyload,\n    lazyloadSelector = options.lazyloadSelector,\n    slidePositions,\n    // collection of slide positions\n    slideItemsOut = [],\n    cloneCount = loop ? getCloneCountForLoop() : 0,\n    slideCountNew = !carousel\n      ? slideCount + cloneCount\n      : slideCount + cloneCount * 2,\n    hasRightDeadZone = (fixedWidth || autoWidth) && !loop ? true : false,\n    rightBoundary = fixedWidth ? getRightBoundary() : null,\n    updateIndexBeforeTransform = !carousel || !loop ? true : false,\n    // transform\n    transformAttr = horizontal ? 'left' : 'top',\n    transformPrefix = '',\n    transformPostfix = '',\n    // index\n    getIndexMax = (function () {\n      if (fixedWidth) {\n        return function () {\n          return center && !loop\n            ? slideCount - 1\n            : Math.ceil(-rightBoundary / (fixedWidth + gutter));\n        };\n      } else if (autoWidth) {\n        return function () {\n          for (var i = 0; i < slideCountNew; i++) {\n            if (slidePositions[i] >= -rightBoundary) {\n              return i;\n            }\n          }\n        };\n      } else {\n        return function () {\n          if (center && carousel && !loop) {\n            return slideCount - 1;\n          } else {\n            return loop || carousel\n              ? Math.max(0, slideCountNew - Math.ceil(items))\n              : slideCountNew - 1;\n          }\n        };\n      }\n    })(),\n    index = getStartIndex(getOption('startIndex')),\n    indexCached = index;\n  getCurrentSlide();\n  var indexMin = 0,\n    indexMax = !autoWidth ? getIndexMax() : null,\n    preventActionWhenRunning = options.preventActionWhenRunning,\n    swipeAngle = options.swipeAngle,\n    moveDirectionExpected = swipeAngle ? '?' : true,\n    running = false,\n    onInit = options.onInit,\n    events = new Events(),\n    // id, class\n    newContainerClasses = ' tns-slider tns-' + options.mode,\n    slideId = container.id || getSlideId(),\n    disable = getOption('disable'),\n    disabled = false,\n    freezable = options.freezable,\n    freeze = freezable && !autoWidth ? getFreeze() : false,\n    frozen = false,\n    controlsEvents = {\n      click: onControlsClick,\n      keydown: onControlsKeydown,\n    },\n    navEvents = {\n      click: onNavClick,\n      keydown: onNavKeydown,\n    },\n    hoverEvents = {\n      mouseover: mouseoverPause,\n      mouseout: mouseoutRestart,\n    },\n    visibilityEvent = {\n      visibilitychange: onVisibilityChange,\n    },\n    docmentKeydownEvent = {\n      keydown: onDocumentKeydown,\n    },\n    touchEvents = {\n      touchstart: onPanStart,\n      touchmove: onPanMove,\n      touchend: onPanEnd,\n      touchcancel: onPanEnd,\n    },\n    dragEvents = {\n      mousedown: onPanStart,\n      mousemove: onPanMove,\n      mouseup: onPanEnd,\n      mouseleave: onPanEnd,\n    },\n    hasControls = hasOption('controls'),\n    hasNav = hasOption('nav'),\n    navAsThumbnails = autoWidth ? true : options.navAsThumbnails,\n    hasAutoplay = hasOption('autoplay'),\n    hasTouch = hasOption('touch'),\n    hasMouseDrag = hasOption('mouseDrag'),\n    slideActiveClass = 'tns-slide-active',\n    slideClonedClass = 'tns-slide-cloned',\n    imgCompleteClass = 'tns-complete',\n    imgEvents = {\n      load: onImgLoaded,\n      error: onImgFailed,\n    },\n    imgsComplete,\n    liveregionCurrent,\n    preventScroll = options.preventScrollOnTouch === 'force' ? true : false; // controls\n\n  if (hasControls) {\n    var controlsContainer = options.controlsContainer,\n      controlsContainerHTML = options.controlsContainer\n        ? options.controlsContainer.outerHTML\n        : '',\n      prevButton = options.prevButton,\n      nextButton = options.nextButton,\n      prevButtonHTML = options.prevButton ? options.prevButton.outerHTML : '',\n      nextButtonHTML = options.nextButton ? options.nextButton.outerHTML : '',\n      prevIsButton,\n      nextIsButton;\n  } // nav\n\n  if (hasNav) {\n    var navContainer = options.navContainer,\n      navContainerHTML = options.navContainer\n        ? options.navContainer.outerHTML\n        : '',\n      navItems,\n      pages = autoWidth ? slideCount : getPages(),\n      pagesCached = 0,\n      navClicked = -1,\n      navCurrentIndex = getCurrentNavIndex(),\n      navCurrentIndexCached = navCurrentIndex,\n      navActiveClass = 'tns-nav-active',\n      navStr = 'Carousel Page ',\n      navStrCurrent = ' (Current Slide)';\n  } // autoplay\n\n  if (hasAutoplay) {\n    var autoplayDirection = options.autoplayDirection === 'forward' ? 1 : -1,\n      autoplayButton = options.autoplayButton,\n      autoplayButtonHTML = options.autoplayButton\n        ? options.autoplayButton.outerHTML\n        : '',\n      autoplayHtmlStrings = [\n        \"<span class='tns-visually-hidden'>\",\n        ' animation</span>',\n      ],\n      autoplayTimer,\n      animating,\n      autoplayHoverPaused,\n      autoplayUserPaused,\n      autoplayVisibilityPaused;\n  }\n\n  if (hasTouch || hasMouseDrag) {\n    var initPosition = {},\n      lastPosition = {},\n      translateInit,\n      panStart = false,\n      rafIndex,\n      getDist = horizontal\n        ? function (a, b) {\n            return a.x - b.x;\n          }\n        : function (a, b) {\n            return a.y - b.y;\n          };\n  } // disable slider when slidecount <= items\n\n  if (!autoWidth) {\n    resetVariblesWhenDisable(disable || freeze);\n  }\n\n  if (TRANSFORM) {\n    transformAttr = TRANSFORM;\n    transformPrefix = 'translate';\n\n    if (HAS3DTRANSFORMS) {\n      transformPrefix += horizontal ? '3d(' : '3d(0px, ';\n      transformPostfix = horizontal ? ', 0px, 0px)' : ', 0px)';\n    } else {\n      transformPrefix += horizontal ? 'X(' : 'Y(';\n      transformPostfix = ')';\n    }\n  }\n\n  if (carousel) {\n    container.className = container.className.replace('tns-vpfix', '');\n  }\n\n  initStructure();\n  initSheet();\n  initSliderTransform(); // === COMMON FUNCTIONS === //\n\n  function resetVariblesWhenDisable(condition) {\n    if (condition) {\n      controls =\n        nav =\n        touch =\n        mouseDrag =\n        arrowKeys =\n        autoplay =\n        autoplayHoverPause =\n        autoplayResetOnVisibility =\n          false;\n    }\n  }\n\n  function getCurrentSlide() {\n    var tem = carousel ? index - cloneCount : index;\n\n    while (tem < 0) {\n      tem += slideCount;\n    }\n\n    return (tem % slideCount) + 1;\n  }\n\n  function getStartIndex(ind) {\n    ind = ind\n      ? Math.max(0, Math.min(loop ? slideCount - 1 : slideCount - items, ind))\n      : 0;\n    return carousel ? ind + cloneCount : ind;\n  }\n\n  function getAbsIndex(i) {\n    if (i == null) {\n      i = index;\n    }\n\n    if (carousel) {\n      i -= cloneCount;\n    }\n\n    while (i < 0) {\n      i += slideCount;\n    }\n\n    return Math.floor(i % slideCount);\n  }\n\n  function getCurrentNavIndex() {\n    var absIndex = getAbsIndex(),\n      result;\n    result = navAsThumbnails\n      ? absIndex\n      : fixedWidth || autoWidth\n      ? Math.ceil(((absIndex + 1) * pages) / slideCount - 1)\n      : Math.floor(absIndex / items); // set active nav to the last one when reaches the right edge\n\n    if (!loop && carousel && index === indexMax) {\n      result = pages - 1;\n    }\n\n    return result;\n  }\n\n  function getItemsMax() {\n    // fixedWidth or autoWidth while viewportMax is not available\n    if (autoWidth || (fixedWidth && !viewportMax)) {\n      return slideCount - 1; // most cases\n    } else {\n      var str = fixedWidth ? 'fixedWidth' : 'items',\n        arr = [];\n\n      if (fixedWidth || options[str] < slideCount) {\n        arr.push(options[str]);\n      }\n\n      if (responsive) {\n        for (var bp in responsive) {\n          var tem = responsive[bp][str];\n\n          if (tem && (fixedWidth || tem < slideCount)) {\n            arr.push(tem);\n          }\n        }\n      }\n\n      if (!arr.length) {\n        arr.push(0);\n      }\n\n      return Math.ceil(\n        fixedWidth\n          ? viewportMax / Math.min.apply(null, arr)\n          : Math.max.apply(null, arr)\n      );\n    }\n  }\n\n  function getCloneCountForLoop() {\n    var itemsMax = getItemsMax(),\n      result = carousel\n        ? Math.ceil((itemsMax * 5 - slideCount) / 2)\n        : itemsMax * 4 - slideCount;\n    result = Math.max(itemsMax, result);\n    return hasOption('edgePadding') ? result + 1 : result;\n  }\n\n  function getWindowWidth() {\n    return (\n      win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth\n    );\n  }\n\n  function getInsertPosition(pos) {\n    return pos === 'top' ? 'afterbegin' : 'beforeend';\n  }\n\n  function getClientWidth(el) {\n    if (el == null) {\n      return;\n    }\n\n    var div = doc.createElement('div'),\n      rect,\n      width;\n    el.appendChild(div);\n    rect = div.getBoundingClientRect();\n    width = rect.right - rect.left;\n    div.remove();\n    return width || getClientWidth(el.parentNode);\n  }\n\n  function getViewportWidth() {\n    var gap = edgePadding ? edgePadding * 2 - gutter : 0;\n    return getClientWidth(containerParent) - gap;\n  }\n\n  function hasOption(item) {\n    if (options[item]) {\n      return true;\n    } else {\n      if (responsive) {\n        for (var bp in responsive) {\n          if (responsive[bp][item]) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  } // get option:\n  // fixed width: viewport, fixedWidth, gutter => items\n  // others: window width => all variables\n  // all: items => slideBy\n\n  function getOption(item, ww) {\n    if (ww == null) {\n      ww = windowWidth;\n    }\n\n    if (item === 'items' && fixedWidth) {\n      return Math.floor((viewport + gutter) / (fixedWidth + gutter)) || 1;\n    } else {\n      var result = options[item];\n\n      if (responsive) {\n        for (var bp in responsive) {\n          // bp: convert string to number\n          if (ww >= parseInt(bp)) {\n            if (item in responsive[bp]) {\n              result = responsive[bp][item];\n            }\n          }\n        }\n      }\n\n      if (item === 'slideBy' && result === 'page') {\n        result = getOption('items');\n      }\n\n      if (!carousel && (item === 'slideBy' || item === 'items')) {\n        result = Math.floor(result);\n      }\n\n      return result;\n    }\n  }\n\n  function getSlideMarginLeft(i) {\n    return CALC\n      ? CALC + '(' + i * 100 + '% / ' + slideCountNew + ')'\n      : (i * 100) / slideCountNew + '%';\n  }\n\n  function getInnerWrapperStyles(\n    edgePaddingTem,\n    gutterTem,\n    fixedWidthTem,\n    speedTem,\n    autoHeightBP\n  ) {\n    var str = '';\n\n    if (edgePaddingTem !== undefined) {\n      var gap = edgePaddingTem;\n\n      if (gutterTem) {\n        gap -= gutterTem;\n      }\n\n      str = horizontal\n        ? 'margin: 0 ' + gap + 'px 0 ' + edgePaddingTem + 'px;'\n        : 'margin: ' + edgePaddingTem + 'px 0 ' + gap + 'px 0;';\n    } else if (gutterTem && !fixedWidthTem) {\n      var gutterTemUnit = '-' + gutterTem + 'px',\n        dir = horizontal ? gutterTemUnit + ' 0 0' : '0 ' + gutterTemUnit + ' 0';\n      str = 'margin: 0 ' + dir + ';';\n    }\n\n    if (!carousel && autoHeightBP && TRANSITIONDURATION && speedTem) {\n      str += getTransitionDurationStyle(speedTem);\n    }\n\n    return str;\n  }\n\n  function getContainerWidth(fixedWidthTem, gutterTem, itemsTem) {\n    if (fixedWidthTem) {\n      return (fixedWidthTem + gutterTem) * slideCountNew + 'px';\n    } else {\n      return CALC\n        ? CALC + '(' + slideCountNew * 100 + '% / ' + itemsTem + ')'\n        : (slideCountNew * 100) / itemsTem + '%';\n    }\n  }\n\n  function getSlideWidthStyle(fixedWidthTem, gutterTem, itemsTem) {\n    var width;\n\n    if (fixedWidthTem) {\n      width = fixedWidthTem + gutterTem + 'px';\n    } else {\n      if (!carousel) {\n        itemsTem = Math.floor(itemsTem);\n      }\n\n      var dividend = carousel ? slideCountNew : itemsTem;\n      width = CALC ? CALC + '(100% / ' + dividend + ')' : 100 / dividend + '%';\n    }\n\n    width = 'width:' + width; // inner slider: overwrite outer slider styles\n\n    return nested !== 'inner' ? width + ';' : width + ' !important;';\n  }\n\n  function getSlideGutterStyle(gutterTem) {\n    var str = ''; // gutter maybe interger || 0\n    // so can't use 'if (gutter)'\n\n    if (gutterTem !== false) {\n      var prop = horizontal ? 'padding-' : 'margin-',\n        dir = horizontal ? 'right' : 'bottom';\n      str = prop + dir + ': ' + gutterTem + 'px;';\n    }\n\n    return str;\n  }\n\n  function getCSSPrefix(name, num) {\n    var prefix = name.substring(0, name.length - num).toLowerCase();\n\n    if (prefix) {\n      prefix = '-' + prefix + '-';\n    }\n\n    return prefix;\n  }\n\n  function getTransitionDurationStyle(speed) {\n    return (\n      getCSSPrefix(TRANSITIONDURATION, 18) +\n      'transition-duration:' +\n      speed / 1000 +\n      's;'\n    );\n  }\n\n  function getAnimationDurationStyle(speed) {\n    return (\n      getCSSPrefix(ANIMATIONDURATION, 17) +\n      'animation-duration:' +\n      speed / 1000 +\n      's;'\n    );\n  }\n\n  function initStructure() {\n    var classOuter = 'tns-outer',\n      classInner = 'tns-inner';\n    hasOption('gutter');\n    outerWrapper.className = classOuter;\n    innerWrapper.className = classInner;\n    outerWrapper.id = slideId + '-ow';\n    innerWrapper.id = slideId + '-iw'; // set container properties\n\n    if (container.id === '') {\n      container.id = slideId;\n    }\n\n    newContainerClasses +=\n      PERCENTAGELAYOUT || autoWidth ? ' tns-subpixel' : ' tns-no-subpixel';\n    newContainerClasses += CALC ? ' tns-calc' : ' tns-no-calc';\n\n    if (autoWidth) {\n      newContainerClasses += ' tns-autowidth';\n    }\n\n    newContainerClasses += ' tns-' + options.axis;\n    container.className += newContainerClasses; // add constrain layer for carousel\n\n    if (carousel) {\n      middleWrapper = doc.createElement('div');\n      middleWrapper.id = slideId + '-mw';\n      middleWrapper.className = 'tns-ovh';\n      outerWrapper.appendChild(middleWrapper);\n      middleWrapper.appendChild(innerWrapper);\n    } else {\n      outerWrapper.appendChild(innerWrapper);\n    }\n\n    if (autoHeight) {\n      var wp = middleWrapper ? middleWrapper : innerWrapper;\n      wp.className += ' tns-ah';\n    }\n\n    containerParent.insertBefore(outerWrapper, container);\n    innerWrapper.appendChild(container); // add id, class, aria attributes\n    // before clone slides\n\n    forEach(slideItems, function (item, i) {\n      addClass(item, 'tns-item');\n\n      if (!item.id) {\n        item.id = slideId + '-item' + i;\n      }\n\n      if (!carousel && animateNormal) {\n        addClass(item, animateNormal);\n      }\n\n      setAttrs(item, {\n        'aria-hidden': 'true',\n        tabindex: '-1',\n      });\n    }); // ## clone slides\n    // carousel: n + slides + n\n    // gallery:      slides + n\n\n    if (cloneCount) {\n      var fragmentBefore = doc.createDocumentFragment(),\n        fragmentAfter = doc.createDocumentFragment();\n\n      for (var j = cloneCount; j--; ) {\n        var num = j % slideCount,\n          cloneFirst = slideItems[num].cloneNode(true);\n        addClass(cloneFirst, slideClonedClass);\n        removeAttrs(cloneFirst, 'id');\n        fragmentAfter.insertBefore(cloneFirst, fragmentAfter.firstChild);\n\n        if (carousel) {\n          var cloneLast = slideItems[slideCount - 1 - num].cloneNode(true);\n          addClass(cloneLast, slideClonedClass);\n          removeAttrs(cloneLast, 'id');\n          fragmentBefore.appendChild(cloneLast);\n        }\n      }\n\n      container.insertBefore(fragmentBefore, container.firstChild);\n      container.appendChild(fragmentAfter);\n      slideItems = container.children;\n    }\n  }\n\n  function initSliderTransform() {\n    // ## images loaded/failed\n    if (hasOption('autoHeight') || autoWidth || !horizontal) {\n      var imgs = container.querySelectorAll('img'); // add img load event listener\n\n      forEach(imgs, function (img) {\n        var src = img.src;\n\n        if (!lazyload) {\n          // not data img\n          if (src && src.indexOf('data:image') < 0) {\n            img.src = '';\n            addEvents(img, imgEvents);\n            addClass(img, 'loading');\n            img.src = src; // data img\n          } else {\n            imgLoaded(img);\n          }\n        }\n      }); // set imgsComplete\n\n      raf(function () {\n        imgsLoadedCheck(arrayFromNodeList(imgs), function () {\n          imgsComplete = true;\n        });\n      }); // reset imgs for auto height: check visible imgs only\n\n      if (hasOption('autoHeight')) {\n        imgs = getImageArray(\n          index,\n          Math.min(index + items - 1, slideCountNew - 1)\n        );\n      }\n\n      lazyload\n        ? initSliderTransformStyleCheck()\n        : raf(function () {\n            imgsLoadedCheck(\n              arrayFromNodeList(imgs),\n              initSliderTransformStyleCheck\n            );\n          });\n    } else {\n      // set container transform property\n      if (carousel) {\n        doContainerTransformSilent();\n      } // update slider tools and events\n\n      initTools();\n      initEvents();\n    }\n  }\n\n  function initSliderTransformStyleCheck() {\n    if (autoWidth && slideCount > 1) {\n      // check styles application\n      var num = loop ? index : slideCount - 1;\n\n      (function stylesApplicationCheck() {\n        var left = slideItems[num].getBoundingClientRect().left;\n        var right = slideItems[num - 1].getBoundingClientRect().right;\n        Math.abs(left - right) <= 1\n          ? initSliderTransformCore()\n          : setTimeout(function () {\n              stylesApplicationCheck();\n            }, 16);\n      })();\n    } else {\n      initSliderTransformCore();\n    }\n  }\n\n  function initSliderTransformCore() {\n    // run Fn()s which are rely on image loading\n    if (!horizontal || autoWidth) {\n      setSlidePositions();\n\n      if (autoWidth) {\n        rightBoundary = getRightBoundary();\n\n        if (freezable) {\n          freeze = getFreeze();\n        }\n\n        indexMax = getIndexMax(); // <= slidePositions, rightBoundary <=\n\n        resetVariblesWhenDisable(disable || freeze);\n      } else {\n        updateContentWrapperHeight();\n      }\n    } // set container transform property\n\n    if (carousel) {\n      doContainerTransformSilent();\n    } // update slider tools and events\n\n    initTools();\n    initEvents();\n  }\n\n  function initSheet() {\n    // gallery:\n    // set animation classes and left value for gallery slider\n    if (!carousel) {\n      for (var i = index, l = index + Math.min(slideCount, items); i < l; i++) {\n        var item = slideItems[i];\n        item.style.left = ((i - index) * 100) / items + '%';\n        addClass(item, animateIn);\n        removeClass(item, animateNormal);\n      }\n    } // #### LAYOUT\n    // ## INLINE-BLOCK VS FLOAT\n    // ## PercentageLayout:\n    // slides: inline-block\n    // remove blank space between slides by set font-size: 0\n    // ## Non PercentageLayout:\n    // slides: float\n    //         margin-right: -100%\n    //         margin-left: ~\n    // Resource: https://docs.google.com/spreadsheets/d/147up245wwTXeQYve3BRSAD4oVcvQmuGsFteJOeA5xNQ/edit?usp=sharing\n\n    if (horizontal) {\n      if (PERCENTAGELAYOUT || autoWidth) {\n        addCSSRule(\n          sheet,\n          '#' + slideId + ' > .tns-item',\n          'font-size:' + win.getComputedStyle(slideItems[0]).fontSize + ';',\n          getCssRulesLength(sheet)\n        );\n        addCSSRule(\n          sheet,\n          '#' + slideId,\n          'font-size:0;',\n          getCssRulesLength(sheet)\n        );\n      } else if (carousel) {\n        forEach(slideItems, function (slide, i) {\n          slide.style.marginLeft = getSlideMarginLeft(i);\n        });\n      }\n    } // ## BASIC STYLES\n\n    if (CSSMQ) {\n      // middle wrapper style\n      if (TRANSITIONDURATION) {\n        var str =\n          middleWrapper && options.autoHeight\n            ? getTransitionDurationStyle(options.speed)\n            : '';\n        addCSSRule(sheet, '#' + slideId + '-mw', str, getCssRulesLength(sheet));\n      } // inner wrapper styles\n\n      str = getInnerWrapperStyles(\n        options.edgePadding,\n        options.gutter,\n        options.fixedWidth,\n        options.speed,\n        options.autoHeight\n      );\n      addCSSRule(sheet, '#' + slideId + '-iw', str, getCssRulesLength(sheet)); // container styles\n\n      if (carousel) {\n        str =\n          horizontal && !autoWidth\n            ? 'width:' +\n              getContainerWidth(\n                options.fixedWidth,\n                options.gutter,\n                options.items\n              ) +\n              ';'\n            : '';\n\n        if (TRANSITIONDURATION) {\n          str += getTransitionDurationStyle(speed);\n        }\n\n        addCSSRule(sheet, '#' + slideId, str, getCssRulesLength(sheet));\n      } // slide styles\n\n      str =\n        horizontal && !autoWidth\n          ? getSlideWidthStyle(\n              options.fixedWidth,\n              options.gutter,\n              options.items\n            )\n          : '';\n\n      if (options.gutter) {\n        str += getSlideGutterStyle(options.gutter);\n      } // set gallery items transition-duration\n\n      if (!carousel) {\n        if (TRANSITIONDURATION) {\n          str += getTransitionDurationStyle(speed);\n        }\n\n        if (ANIMATIONDURATION) {\n          str += getAnimationDurationStyle(speed);\n        }\n      }\n\n      if (str) {\n        addCSSRule(\n          sheet,\n          '#' + slideId + ' > .tns-item',\n          str,\n          getCssRulesLength(sheet)\n        );\n      } // non CSS mediaqueries: IE8\n      // ## update inner wrapper, container, slides if needed\n      // set inline styles for inner wrapper & container\n      // insert stylesheet (one line) for slides only (since slides are many)\n    } else {\n      // middle wrapper styles\n      update_carousel_transition_duration(); // inner wrapper styles\n\n      innerWrapper.style.cssText = getInnerWrapperStyles(\n        edgePadding,\n        gutter,\n        fixedWidth,\n        autoHeight\n      ); // container styles\n\n      if (carousel && horizontal && !autoWidth) {\n        container.style.width = getContainerWidth(fixedWidth, gutter, items);\n      } // slide styles\n\n      var str =\n        horizontal && !autoWidth\n          ? getSlideWidthStyle(fixedWidth, gutter, items)\n          : '';\n\n      if (gutter) {\n        str += getSlideGutterStyle(gutter);\n      } // append to the last line\n\n      if (str) {\n        addCSSRule(\n          sheet,\n          '#' + slideId + ' > .tns-item',\n          str,\n          getCssRulesLength(sheet)\n        );\n      }\n    } // ## MEDIAQUERIES\n\n    if (responsive && CSSMQ) {\n      for (var bp in responsive) {\n        // bp: convert string to number\n        bp = parseInt(bp);\n        var opts = responsive[bp],\n          str = '',\n          middleWrapperStr = '',\n          innerWrapperStr = '',\n          containerStr = '',\n          slideStr = '',\n          itemsBP = !autoWidth ? getOption('items', bp) : null,\n          fixedWidthBP = getOption('fixedWidth', bp),\n          speedBP = getOption('speed', bp),\n          edgePaddingBP = getOption('edgePadding', bp),\n          autoHeightBP = getOption('autoHeight', bp),\n          gutterBP = getOption('gutter', bp); // middle wrapper string\n\n        if (\n          TRANSITIONDURATION &&\n          middleWrapper &&\n          getOption('autoHeight', bp) &&\n          'speed' in opts\n        ) {\n          middleWrapperStr =\n            '#' + slideId + '-mw{' + getTransitionDurationStyle(speedBP) + '}';\n        } // inner wrapper string\n\n        if ('edgePadding' in opts || 'gutter' in opts) {\n          innerWrapperStr =\n            '#' +\n            slideId +\n            '-iw{' +\n            getInnerWrapperStyles(\n              edgePaddingBP,\n              gutterBP,\n              fixedWidthBP,\n              speedBP,\n              autoHeightBP\n            ) +\n            '}';\n        } // container string\n\n        if (\n          carousel &&\n          horizontal &&\n          !autoWidth &&\n          ('fixedWidth' in opts ||\n            'items' in opts ||\n            (fixedWidth && 'gutter' in opts))\n        ) {\n          containerStr =\n            'width:' + getContainerWidth(fixedWidthBP, gutterBP, itemsBP) + ';';\n        }\n\n        if (TRANSITIONDURATION && 'speed' in opts) {\n          containerStr += getTransitionDurationStyle(speedBP);\n        }\n\n        if (containerStr) {\n          containerStr = '#' + slideId + '{' + containerStr + '}';\n        } // slide string\n\n        if (\n          'fixedWidth' in opts ||\n          (fixedWidth && 'gutter' in opts) ||\n          (!carousel && 'items' in opts)\n        ) {\n          slideStr += getSlideWidthStyle(fixedWidthBP, gutterBP, itemsBP);\n        }\n\n        if ('gutter' in opts) {\n          slideStr += getSlideGutterStyle(gutterBP);\n        } // set gallery items transition-duration\n\n        if (!carousel && 'speed' in opts) {\n          if (TRANSITIONDURATION) {\n            slideStr += getTransitionDurationStyle(speedBP);\n          }\n\n          if (ANIMATIONDURATION) {\n            slideStr += getAnimationDurationStyle(speedBP);\n          }\n        }\n\n        if (slideStr) {\n          slideStr = '#' + slideId + ' > .tns-item{' + slideStr + '}';\n        } // add up\n\n        str = middleWrapperStr + innerWrapperStr + containerStr + slideStr;\n\n        if (str) {\n          sheet.insertRule(\n            '@media (min-width: ' + bp / 16 + 'em) {' + str + '}',\n            sheet.cssRules.length\n          );\n        }\n      }\n    }\n  }\n\n  function initTools() {\n    // == slides ==\n    updateSlideStatus(); // == live region ==\n\n    outerWrapper.insertAdjacentHTML(\n      'afterbegin',\n      '<div class=\"tns-liveregion tns-visually-hidden\" aria-live=\"polite\" aria-atomic=\"true\">slide <span class=\"current\">' +\n        getLiveRegionStr() +\n        '</span>  of ' +\n        slideCount +\n        '</div>'\n    );\n    liveregionCurrent = outerWrapper.querySelector('.tns-liveregion .current'); // == autoplayInit ==\n\n    if (hasAutoplay) {\n      var txt = autoplay ? 'stop' : 'start';\n\n      if (autoplayButton) {\n        setAttrs(autoplayButton, {\n          'data-action': txt,\n        });\n      } else if (options.autoplayButtonOutput) {\n        outerWrapper.insertAdjacentHTML(\n          getInsertPosition(options.autoplayPosition),\n          '<button type=\"button\" data-action=\"' +\n            txt +\n            '\">' +\n            autoplayHtmlStrings[0] +\n            txt +\n            autoplayHtmlStrings[1] +\n            autoplayText[0] +\n            '</button>'\n        );\n        autoplayButton = outerWrapper.querySelector('[data-action]');\n      } // add event\n\n      if (autoplayButton) {\n        addEvents(autoplayButton, {\n          click: toggleAutoplay,\n        });\n      }\n\n      if (autoplay) {\n        startAutoplay();\n\n        if (autoplayHoverPause) {\n          addEvents(container, hoverEvents);\n        }\n\n        if (autoplayResetOnVisibility) {\n          addEvents(container, visibilityEvent);\n        }\n      }\n    } // == navInit ==\n\n    if (hasNav) {\n      // will not hide the navs in case they're thumbnails\n\n      if (navContainer) {\n        setAttrs(navContainer, {\n          'aria-label': 'Carousel Pagination',\n        });\n        navItems = navContainer.children;\n        forEach(navItems, function (item, i) {\n          setAttrs(item, {\n            'data-nav': i,\n            tabindex: '-1',\n            'aria-label': navStr + (i + 1),\n            'aria-controls': slideId,\n          });\n        }); // generated nav\n      } else {\n        var navHtml = '',\n          hiddenStr = navAsThumbnails ? '' : 'style=\"display:none\"';\n\n        for (var i = 0; i < slideCount; i++) {\n          // hide nav items by default\n          navHtml +=\n            '<button type=\"button\" data-nav=\"' +\n            i +\n            '\" tabindex=\"-1\" aria-controls=\"' +\n            slideId +\n            '\" ' +\n            hiddenStr +\n            ' aria-label=\"' +\n            navStr +\n            (i + 1) +\n            '\"></button>';\n        }\n\n        navHtml =\n          '<div class=\"tns-nav\" aria-label=\"Carousel Pagination\">' +\n          navHtml +\n          '</div>';\n        outerWrapper.insertAdjacentHTML(\n          getInsertPosition(options.navPosition),\n          navHtml\n        );\n        navContainer = outerWrapper.querySelector('.tns-nav');\n        navItems = navContainer.children;\n      }\n\n      updateNavVisibility(); // add transition\n\n      if (TRANSITIONDURATION) {\n        var prefix = TRANSITIONDURATION.substring(\n            0,\n            TRANSITIONDURATION.length - 18\n          ).toLowerCase(),\n          str = 'transition: all ' + speed / 1000 + 's';\n\n        if (prefix) {\n          str = '-' + prefix + '-' + str;\n        }\n\n        addCSSRule(\n          sheet,\n          '[aria-controls^=' + slideId + '-item]',\n          str,\n          getCssRulesLength(sheet)\n        );\n      }\n\n      setAttrs(navItems[navCurrentIndex], {\n        'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent,\n      });\n      removeAttrs(navItems[navCurrentIndex], 'tabindex');\n      addClass(navItems[navCurrentIndex], navActiveClass); // add events\n\n      addEvents(navContainer, navEvents);\n    } // == controlsInit ==\n\n    if (hasControls) {\n      if (!controlsContainer && (!prevButton || !nextButton)) {\n        outerWrapper.insertAdjacentHTML(\n          getInsertPosition(options.controlsPosition),\n          '<div class=\"tns-controls\" aria-label=\"Carousel Navigation\" tabindex=\"0\"><button type=\"button\" data-controls=\"prev\" tabindex=\"-1\" aria-controls=\"' +\n            slideId +\n            '\">' +\n            controlsText[0] +\n            '</button><button type=\"button\" data-controls=\"next\" tabindex=\"-1\" aria-controls=\"' +\n            slideId +\n            '\">' +\n            controlsText[1] +\n            '</button></div>'\n        );\n        controlsContainer = outerWrapper.querySelector('.tns-controls');\n      }\n\n      if (!prevButton || !nextButton) {\n        prevButton = controlsContainer.children[0];\n        nextButton = controlsContainer.children[1];\n      }\n\n      if (options.controlsContainer) {\n        setAttrs(controlsContainer, {\n          'aria-label': 'Carousel Navigation',\n          tabindex: '0',\n        });\n      }\n\n      if (\n        options.controlsContainer ||\n        (options.prevButton && options.nextButton)\n      ) {\n        setAttrs([prevButton, nextButton], {\n          'aria-controls': slideId,\n          tabindex: '-1',\n        });\n      }\n\n      if (\n        options.controlsContainer ||\n        (options.prevButton && options.nextButton)\n      ) {\n        setAttrs(prevButton, {\n          'data-controls': 'prev',\n        });\n        setAttrs(nextButton, {\n          'data-controls': 'next',\n        });\n      }\n\n      prevIsButton = isButton(prevButton);\n      nextIsButton = isButton(nextButton);\n      updateControlsStatus(); // add events\n\n      if (controlsContainer) {\n        addEvents(controlsContainer, controlsEvents);\n      } else {\n        addEvents(prevButton, controlsEvents);\n        addEvents(nextButton, controlsEvents);\n      }\n    } // hide tools if needed\n\n    disableUI();\n  }\n\n  function initEvents() {\n    // add events\n    if (carousel && TRANSITIONEND) {\n      var eve = {};\n      eve[TRANSITIONEND] = onTransitionEnd;\n      addEvents(container, eve);\n    }\n\n    if (touch) {\n      addEvents(container, touchEvents, options.preventScrollOnTouch);\n    }\n\n    if (mouseDrag) {\n      addEvents(container, dragEvents);\n    }\n\n    if (arrowKeys) {\n      addEvents(doc, docmentKeydownEvent);\n    }\n\n    if (nested === 'inner') {\n      events.on('outerResized', function () {\n        resizeTasks();\n        events.emit('innerLoaded', info());\n      });\n    } else if (\n      responsive ||\n      fixedWidth ||\n      autoWidth ||\n      autoHeight ||\n      !horizontal\n    ) {\n      addEvents(win, {\n        resize: onResize,\n      });\n    }\n\n    if (autoHeight) {\n      if (nested === 'outer') {\n        events.on('innerLoaded', doAutoHeight);\n      } else if (!disable) {\n        doAutoHeight();\n      }\n    }\n\n    doLazyLoad();\n\n    if (disable) {\n      disableSlider();\n    } else if (freeze) {\n      freezeSlider();\n    }\n\n    events.on('indexChanged', additionalUpdates);\n\n    if (nested === 'inner') {\n      events.emit('innerLoaded', info());\n    }\n\n    if (typeof onInit === 'function') {\n      onInit(info());\n    }\n\n    isOn = true;\n  }\n\n  function destroy() {\n    // sheet\n    sheet.disabled = true;\n\n    if (sheet.ownerNode) {\n      sheet.ownerNode.remove();\n    } // remove win event listeners\n\n    removeEvents(win, {\n      resize: onResize,\n    }); // arrowKeys, controls, nav\n\n    if (arrowKeys) {\n      removeEvents(doc, docmentKeydownEvent);\n    }\n\n    if (controlsContainer) {\n      removeEvents(controlsContainer, controlsEvents);\n    }\n\n    if (navContainer) {\n      removeEvents(navContainer, navEvents);\n    } // autoplay\n\n    removeEvents(container, hoverEvents);\n    removeEvents(container, visibilityEvent);\n\n    if (autoplayButton) {\n      removeEvents(autoplayButton, {\n        click: toggleAutoplay,\n      });\n    }\n\n    if (autoplay) {\n      clearInterval(autoplayTimer);\n    } // container\n\n    if (carousel && TRANSITIONEND) {\n      var eve = {};\n      eve[TRANSITIONEND] = onTransitionEnd;\n      removeEvents(container, eve);\n    }\n\n    if (touch) {\n      removeEvents(container, touchEvents);\n    }\n\n    if (mouseDrag) {\n      removeEvents(container, dragEvents);\n    } // cache Object values in options && reset HTML\n\n    var htmlList = [\n      containerHTML,\n      controlsContainerHTML,\n      prevButtonHTML,\n      nextButtonHTML,\n      navContainerHTML,\n      autoplayButtonHTML,\n    ];\n    tnsList.forEach(function (item, i) {\n      var el = item === 'container' ? outerWrapper : options[item];\n\n      if (typeof el === 'object' && el) {\n        var prevEl = el.previousElementSibling\n            ? el.previousElementSibling\n            : false,\n          parentEl = el.parentNode;\n        el.outerHTML = htmlList[i];\n        options[item] = prevEl\n          ? prevEl.nextElementSibling\n          : parentEl.firstElementChild;\n      }\n    }); // reset variables\n\n    tnsList =\n      animateIn =\n      animateOut =\n      animateDelay =\n      animateNormal =\n      horizontal =\n      outerWrapper =\n      innerWrapper =\n      container =\n      containerParent =\n      containerHTML =\n      slideItems =\n      slideCount =\n      breakpointZone =\n      windowWidth =\n      autoWidth =\n      fixedWidth =\n      edgePadding =\n      gutter =\n      viewport =\n      items =\n      slideBy =\n      viewportMax =\n      arrowKeys =\n      speed =\n      rewind =\n      loop =\n      autoHeight =\n      sheet =\n      lazyload =\n      slidePositions =\n      slideItemsOut =\n      cloneCount =\n      slideCountNew =\n      hasRightDeadZone =\n      rightBoundary =\n      updateIndexBeforeTransform =\n      transformAttr =\n      transformPrefix =\n      transformPostfix =\n      getIndexMax =\n      index =\n      indexCached =\n      indexMin =\n      indexMax =\n      swipeAngle =\n      moveDirectionExpected =\n      running =\n      onInit =\n      events =\n      newContainerClasses =\n      slideId =\n      disable =\n      disabled =\n      freezable =\n      freeze =\n      frozen =\n      controlsEvents =\n      navEvents =\n      hoverEvents =\n      visibilityEvent =\n      docmentKeydownEvent =\n      touchEvents =\n      dragEvents =\n      hasControls =\n      hasNav =\n      navAsThumbnails =\n      hasAutoplay =\n      hasTouch =\n      hasMouseDrag =\n      slideActiveClass =\n      imgCompleteClass =\n      imgEvents =\n      imgsComplete =\n      controls =\n      controlsText =\n      controlsContainer =\n      controlsContainerHTML =\n      prevButton =\n      nextButton =\n      prevIsButton =\n      nextIsButton =\n      nav =\n      navContainer =\n      navContainerHTML =\n      navItems =\n      pages =\n      pagesCached =\n      navClicked =\n      navCurrentIndex =\n      navCurrentIndexCached =\n      navActiveClass =\n      navStr =\n      navStrCurrent =\n      autoplay =\n      autoplayTimeout =\n      autoplayDirection =\n      autoplayText =\n      autoplayHoverPause =\n      autoplayButton =\n      autoplayButtonHTML =\n      autoplayResetOnVisibility =\n      autoplayHtmlStrings =\n      autoplayTimer =\n      animating =\n      autoplayHoverPaused =\n      autoplayUserPaused =\n      autoplayVisibilityPaused =\n      initPosition =\n      lastPosition =\n      translateInit =\n      panStart =\n      rafIndex =\n      getDist =\n      touch =\n      mouseDrag =\n        null; // check variables\n    // [animateIn, animateOut, animateDelay, animateNormal, horizontal, outerWrapper, innerWrapper, container, containerParent, containerHTML, slideItems, slideCount, breakpointZone, windowWidth, autoWidth, fixedWidth, edgePadding, gutter, viewport, items, slideBy, viewportMax, arrowKeys, speed, rewind, loop, autoHeight, sheet, lazyload, slidePositions, slideItemsOut, cloneCount, slideCountNew, hasRightDeadZone, rightBoundary, updateIndexBeforeTransform, transformAttr, transformPrefix, transformPostfix, getIndexMax, index, indexCached, indexMin, indexMax, resizeTimer, swipeAngle, moveDirectionExpected, running, onInit, events, newContainerClasses, slideId, disable, disabled, freezable, freeze, frozen, controlsEvents, navEvents, hoverEvents, visibilityEvent, docmentKeydownEvent, touchEvents, dragEvents, hasControls, hasNav, navAsThumbnails, hasAutoplay, hasTouch, hasMouseDrag, slideActiveClass, imgCompleteClass, imgEvents, imgsComplete, controls, controlsText, controlsContainer, controlsContainerHTML, prevButton, nextButton, prevIsButton, nextIsButton, nav, navContainer, navContainerHTML, navItems, pages, pagesCached, navClicked, navCurrentIndex, navCurrentIndexCached, navActiveClass, navStr, navStrCurrent, autoplay, autoplayTimeout, autoplayDirection, autoplayText, autoplayHoverPause, autoplayButton, autoplayButtonHTML, autoplayResetOnVisibility, autoplayHtmlStrings, autoplayTimer, animating, autoplayHoverPaused, autoplayUserPaused, autoplayVisibilityPaused, initPosition, lastPosition, translateInit, disX, disY, panStart, rafIndex, getDist, touch, mouseDrag ].forEach(function(item) { if (item !== null) { console.log(item); } });\n\n    for (var a in this) {\n      if (a !== 'rebuild') {\n        this[a] = null;\n      }\n    }\n\n    isOn = false;\n  } // === ON RESIZE ===\n  // responsive || fixedWidth || autoWidth || !horizontal\n\n  function onResize(e) {\n    raf(function () {\n      resizeTasks(getEvent(e));\n    });\n  }\n\n  function resizeTasks(e) {\n    if (!isOn) {\n      return;\n    }\n\n    if (nested === 'outer') {\n      events.emit('outerResized', info(e));\n    }\n\n    windowWidth = getWindowWidth();\n    var bpChanged,\n      breakpointZoneTem = breakpointZone,\n      needContainerTransform = false;\n\n    if (responsive) {\n      setBreakpointZone();\n      bpChanged = breakpointZoneTem !== breakpointZone; // if (hasRightDeadZone) { needContainerTransform = true; } // *?\n\n      if (bpChanged) {\n        events.emit('newBreakpointStart', info(e));\n      }\n    }\n\n    var indChanged,\n      itemsChanged,\n      itemsTem = items,\n      disableTem = disable,\n      freezeTem = freeze,\n      arrowKeysTem = arrowKeys,\n      controlsTem = controls,\n      navTem = nav,\n      touchTem = touch,\n      mouseDragTem = mouseDrag,\n      autoplayTem = autoplay,\n      autoplayHoverPauseTem = autoplayHoverPause,\n      autoplayResetOnVisibilityTem = autoplayResetOnVisibility,\n      indexTem = index;\n\n    if (bpChanged) {\n      var fixedWidthTem = fixedWidth,\n        autoHeightTem = autoHeight,\n        controlsTextTem = controlsText,\n        centerTem = center,\n        autoplayTextTem = autoplayText;\n\n      if (!CSSMQ) {\n        var gutterTem = gutter,\n          edgePaddingTem = edgePadding;\n      }\n    } // get option:\n    // fixed width: viewport, fixedWidth, gutter => items\n    // others: window width => all variables\n    // all: items => slideBy\n\n    arrowKeys = getOption('arrowKeys');\n    controls = getOption('controls');\n    nav = getOption('nav');\n    touch = getOption('touch');\n    center = getOption('center');\n    mouseDrag = getOption('mouseDrag');\n    autoplay = getOption('autoplay');\n    autoplayHoverPause = getOption('autoplayHoverPause');\n    autoplayResetOnVisibility = getOption('autoplayResetOnVisibility');\n\n    if (bpChanged) {\n      disable = getOption('disable');\n      fixedWidth = getOption('fixedWidth');\n      speed = getOption('speed');\n      autoHeight = getOption('autoHeight');\n      controlsText = getOption('controlsText');\n      autoplayText = getOption('autoplayText');\n      autoplayTimeout = getOption('autoplayTimeout');\n\n      if (!CSSMQ) {\n        edgePadding = getOption('edgePadding');\n        gutter = getOption('gutter');\n      }\n    } // update options\n\n    resetVariblesWhenDisable(disable);\n    viewport = getViewportWidth(); // <= edgePadding, gutter\n\n    if ((!horizontal || autoWidth) && !disable) {\n      setSlidePositions();\n\n      if (!horizontal) {\n        updateContentWrapperHeight(); // <= setSlidePositions\n\n        needContainerTransform = true;\n      }\n    }\n\n    if (fixedWidth || autoWidth) {\n      rightBoundary = getRightBoundary(); // autoWidth: <= viewport, slidePositions, gutter\n      // fixedWidth: <= viewport, fixedWidth, gutter\n\n      indexMax = getIndexMax(); // autoWidth: <= rightBoundary, slidePositions\n      // fixedWidth: <= rightBoundary, fixedWidth, gutter\n    }\n\n    if (bpChanged || fixedWidth) {\n      items = getOption('items');\n      slideBy = getOption('slideBy');\n      itemsChanged = items !== itemsTem;\n\n      if (itemsChanged) {\n        if (!fixedWidth && !autoWidth) {\n          indexMax = getIndexMax();\n        } // <= items\n        // check index before transform in case\n        // slider reach the right edge then items become bigger\n\n        updateIndex();\n      }\n    }\n\n    if (bpChanged) {\n      if (disable !== disableTem) {\n        if (disable) {\n          disableSlider();\n        } else {\n          enableSlider(); // <= slidePositions, rightBoundary, indexMax\n        }\n      }\n    }\n\n    if (freezable && (bpChanged || fixedWidth || autoWidth)) {\n      freeze = getFreeze(); // <= autoWidth: slidePositions, gutter, viewport, rightBoundary\n      // <= fixedWidth: fixedWidth, gutter, rightBoundary\n      // <= others: items\n\n      if (freeze !== freezeTem) {\n        if (freeze) {\n          doContainerTransform(getContainerTransformValue(getStartIndex(0)));\n          freezeSlider();\n        } else {\n          unfreezeSlider();\n          needContainerTransform = true;\n        }\n      }\n    }\n\n    resetVariblesWhenDisable(disable || freeze); // controls, nav, touch, mouseDrag, arrowKeys, autoplay, autoplayHoverPause, autoplayResetOnVisibility\n\n    if (!autoplay) {\n      autoplayHoverPause = autoplayResetOnVisibility = false;\n    }\n\n    if (arrowKeys !== arrowKeysTem) {\n      arrowKeys\n        ? addEvents(doc, docmentKeydownEvent)\n        : removeEvents(doc, docmentKeydownEvent);\n    }\n\n    if (controls !== controlsTem) {\n      if (controls) {\n        if (controlsContainer) {\n          showElement(controlsContainer);\n        } else {\n          if (prevButton) {\n            showElement(prevButton);\n          }\n\n          if (nextButton) {\n            showElement(nextButton);\n          }\n        }\n      } else {\n        if (controlsContainer) {\n          hideElement(controlsContainer);\n        } else {\n          if (prevButton) {\n            hideElement(prevButton);\n          }\n\n          if (nextButton) {\n            hideElement(nextButton);\n          }\n        }\n      }\n    }\n\n    if (nav !== navTem) {\n      if (nav) {\n        showElement(navContainer);\n        updateNavVisibility();\n      } else {\n        hideElement(navContainer);\n      }\n    }\n\n    if (touch !== touchTem) {\n      touch\n        ? addEvents(container, touchEvents, options.preventScrollOnTouch)\n        : removeEvents(container, touchEvents);\n    }\n\n    if (mouseDrag !== mouseDragTem) {\n      mouseDrag\n        ? addEvents(container, dragEvents)\n        : removeEvents(container, dragEvents);\n    }\n\n    if (autoplay !== autoplayTem) {\n      if (autoplay) {\n        if (autoplayButton) {\n          showElement(autoplayButton);\n        }\n\n        if (!animating && !autoplayUserPaused) {\n          startAutoplay();\n        }\n      } else {\n        if (autoplayButton) {\n          hideElement(autoplayButton);\n        }\n\n        if (animating) {\n          stopAutoplay();\n        }\n      }\n    }\n\n    if (autoplayHoverPause !== autoplayHoverPauseTem) {\n      autoplayHoverPause\n        ? addEvents(container, hoverEvents)\n        : removeEvents(container, hoverEvents);\n    }\n\n    if (autoplayResetOnVisibility !== autoplayResetOnVisibilityTem) {\n      autoplayResetOnVisibility\n        ? addEvents(doc, visibilityEvent)\n        : removeEvents(doc, visibilityEvent);\n    }\n\n    if (bpChanged) {\n      if (fixedWidth !== fixedWidthTem || center !== centerTem) {\n        needContainerTransform = true;\n      }\n\n      if (autoHeight !== autoHeightTem) {\n        if (!autoHeight) {\n          innerWrapper.style.height = '';\n        }\n      }\n\n      if (controls && controlsText !== controlsTextTem) {\n        prevButton.innerHTML = controlsText[0];\n        nextButton.innerHTML = controlsText[1];\n      }\n\n      if (autoplayButton && autoplayText !== autoplayTextTem) {\n        var i = autoplay ? 1 : 0,\n          html = autoplayButton.innerHTML,\n          len = html.length - autoplayTextTem[i].length;\n\n        if (html.substring(len) === autoplayTextTem[i]) {\n          autoplayButton.innerHTML = html.substring(0, len) + autoplayText[i];\n        }\n      }\n    } else {\n      if (center && (fixedWidth || autoWidth)) {\n        needContainerTransform = true;\n      }\n    }\n\n    if (itemsChanged || (fixedWidth && !autoWidth)) {\n      pages = getPages();\n      updateNavVisibility();\n    }\n\n    indChanged = index !== indexTem;\n\n    if (indChanged) {\n      events.emit('indexChanged', info());\n      needContainerTransform = true;\n    } else if (itemsChanged) {\n      if (!indChanged) {\n        additionalUpdates();\n      }\n    } else if (fixedWidth || autoWidth) {\n      doLazyLoad();\n      updateSlideStatus();\n      updateLiveRegion();\n    }\n\n    if (itemsChanged && !carousel) {\n      updateGallerySlidePositions();\n    }\n\n    if (!disable && !freeze) {\n      // non-mediaqueries: IE8\n      if (bpChanged && !CSSMQ) {\n        // middle wrapper styles\n        // inner wrapper styles\n        if (edgePadding !== edgePaddingTem || gutter !== gutterTem) {\n          innerWrapper.style.cssText = getInnerWrapperStyles(\n            edgePadding,\n            gutter,\n            fixedWidth,\n            speed,\n            autoHeight\n          );\n        }\n\n        if (horizontal) {\n          // container styles\n          if (carousel) {\n            container.style.width = getContainerWidth(\n              fixedWidth,\n              gutter,\n              items\n            );\n          } // slide styles\n\n          var str =\n            getSlideWidthStyle(fixedWidth, gutter, items) +\n            getSlideGutterStyle(gutter); // remove the last line and\n          // add new styles\n\n          removeCSSRule(sheet, getCssRulesLength(sheet) - 1);\n          addCSSRule(\n            sheet,\n            '#' + slideId + ' > .tns-item',\n            str,\n            getCssRulesLength(sheet)\n          );\n        }\n      } // auto height\n\n      if (autoHeight) {\n        doAutoHeight();\n      }\n\n      if (needContainerTransform) {\n        doContainerTransformSilent();\n        indexCached = index;\n      }\n    }\n\n    if (bpChanged) {\n      events.emit('newBreakpointEnd', info(e));\n    }\n  } // === INITIALIZATION FUNCTIONS === //\n\n  function getFreeze() {\n    if (!fixedWidth && !autoWidth) {\n      var a = center ? items - (items - 1) / 2 : items;\n      return slideCount <= a;\n    }\n\n    var width = fixedWidth\n        ? (fixedWidth + gutter) * slideCount\n        : slidePositions[slideCount],\n      vp = edgePadding ? viewport + edgePadding * 2 : viewport + gutter;\n\n    if (center) {\n      vp -= fixedWidth\n        ? (viewport - fixedWidth) / 2\n        : (viewport -\n            (slidePositions[index + 1] - slidePositions[index] - gutter)) /\n          2;\n    }\n\n    return width <= vp;\n  }\n\n  function setBreakpointZone() {\n    breakpointZone = 0;\n\n    for (var bp in responsive) {\n      bp = parseInt(bp); // convert string to number\n\n      if (windowWidth >= bp) {\n        breakpointZone = bp;\n      }\n    }\n  } // (slideBy, indexMin, indexMax) => index\n\n  var updateIndex = (function () {\n    return loop\n      ? carousel // loop + carousel\n        ? function () {\n            var leftEdge = indexMin,\n              rightEdge = indexMax;\n            leftEdge += slideBy;\n            rightEdge -= slideBy; // adjust edges when has edge paddings\n            // or fixed-width slider with extra space on the right side\n\n            if (edgePadding) {\n              leftEdge += 1;\n              rightEdge -= 1;\n            } else if (fixedWidth) {\n              if ((viewport + gutter) % (fixedWidth + gutter)) {\n                rightEdge -= 1;\n              }\n            }\n\n            if (cloneCount) {\n              if (index > rightEdge) {\n                index -= slideCount;\n              } else if (index < leftEdge) {\n                index += slideCount;\n              }\n            }\n          } // loop + gallery\n        : function () {\n            if (index > indexMax) {\n              while (index >= indexMin + slideCount) {\n                index -= slideCount;\n              }\n            } else if (index < indexMin) {\n              while (index <= indexMax - slideCount) {\n                index += slideCount;\n              }\n            }\n          } // non-loop\n      : function () {\n          index = Math.max(indexMin, Math.min(indexMax, index));\n        };\n  })();\n\n  function disableUI() {\n    if (!autoplay && autoplayButton) {\n      hideElement(autoplayButton);\n    }\n\n    if (!nav && navContainer) {\n      hideElement(navContainer);\n    }\n\n    if (!controls) {\n      if (controlsContainer) {\n        hideElement(controlsContainer);\n      } else {\n        if (prevButton) {\n          hideElement(prevButton);\n        }\n\n        if (nextButton) {\n          hideElement(nextButton);\n        }\n      }\n    }\n  }\n\n  function enableUI() {\n    if (autoplay && autoplayButton) {\n      showElement(autoplayButton);\n    }\n\n    if (nav && navContainer) {\n      showElement(navContainer);\n    }\n\n    if (controls) {\n      if (controlsContainer) {\n        showElement(controlsContainer);\n      } else {\n        if (prevButton) {\n          showElement(prevButton);\n        }\n\n        if (nextButton) {\n          showElement(nextButton);\n        }\n      }\n    }\n  }\n\n  function freezeSlider() {\n    if (frozen) {\n      return;\n    } // remove edge padding from inner wrapper\n\n    if (edgePadding) {\n      innerWrapper.style.margin = '0px';\n    } // add class tns-transparent to cloned slides\n\n    if (cloneCount) {\n      var str = 'tns-transparent';\n\n      for (var i = cloneCount; i--; ) {\n        if (carousel) {\n          addClass(slideItems[i], str);\n        }\n\n        addClass(slideItems[slideCountNew - i - 1], str);\n      }\n    } // update tools\n\n    disableUI();\n    frozen = true;\n  }\n\n  function unfreezeSlider() {\n    if (!frozen) {\n      return;\n    } // restore edge padding for inner wrapper\n    // for mordern browsers\n\n    if (edgePadding && CSSMQ) {\n      innerWrapper.style.margin = '';\n    } // remove class tns-transparent to cloned slides\n\n    if (cloneCount) {\n      var str = 'tns-transparent';\n\n      for (var i = cloneCount; i--; ) {\n        if (carousel) {\n          removeClass(slideItems[i], str);\n        }\n\n        removeClass(slideItems[slideCountNew - i - 1], str);\n      }\n    } // update tools\n\n    enableUI();\n    frozen = false;\n  }\n\n  function disableSlider() {\n    if (disabled) {\n      return;\n    }\n\n    sheet.disabled = true;\n    container.className = container.className.replace(\n      newContainerClasses.substring(1),\n      ''\n    );\n    removeAttrs(container, ['style']);\n\n    if (loop) {\n      for (var j = cloneCount; j--; ) {\n        if (carousel) {\n          hideElement(slideItems[j]);\n        }\n\n        hideElement(slideItems[slideCountNew - j - 1]);\n      }\n    } // vertical slider\n\n    if (!horizontal || !carousel) {\n      removeAttrs(innerWrapper, ['style']);\n    } // gallery\n\n    if (!carousel) {\n      for (var i = index, l = index + slideCount; i < l; i++) {\n        var item = slideItems[i];\n        removeAttrs(item, ['style']);\n        removeClass(item, animateIn);\n        removeClass(item, animateNormal);\n      }\n    } // update tools\n\n    disableUI();\n    disabled = true;\n  }\n\n  function enableSlider() {\n    if (!disabled) {\n      return;\n    }\n\n    sheet.disabled = false;\n    container.className += newContainerClasses;\n    doContainerTransformSilent();\n\n    if (loop) {\n      for (var j = cloneCount; j--; ) {\n        if (carousel) {\n          showElement(slideItems[j]);\n        }\n\n        showElement(slideItems[slideCountNew - j - 1]);\n      }\n    } // gallery\n\n    if (!carousel) {\n      for (var i = index, l = index + slideCount; i < l; i++) {\n        var item = slideItems[i],\n          classN = i < index + items ? animateIn : animateNormal;\n        item.style.left = ((i - index) * 100) / items + '%';\n        addClass(item, classN);\n      }\n    } // update tools\n\n    enableUI();\n    disabled = false;\n  }\n\n  function updateLiveRegion() {\n    var str = getLiveRegionStr();\n\n    if (liveregionCurrent.innerHTML !== str) {\n      liveregionCurrent.innerHTML = str;\n    }\n  }\n\n  function getLiveRegionStr() {\n    var arr = getVisibleSlideRange(),\n      start = arr[0] + 1,\n      end = arr[1] + 1;\n    return start === end ? start + '' : start + ' to ' + end;\n  }\n\n  function getVisibleSlideRange(val) {\n    if (val == null) {\n      val = getContainerTransformValue();\n    }\n\n    var start = index,\n      end,\n      rangestart,\n      rangeend; // get range start, range end for autoWidth and fixedWidth\n\n    if (center || edgePadding) {\n      if (autoWidth || fixedWidth) {\n        rangestart = -(parseFloat(val) + edgePadding);\n        rangeend = rangestart + viewport + edgePadding * 2;\n      }\n    } else {\n      if (autoWidth) {\n        rangestart = slidePositions[index];\n        rangeend = rangestart + viewport;\n      }\n    } // get start, end\n    // - check auto width\n\n    if (autoWidth) {\n      slidePositions.forEach(function (point, i) {\n        if (i < slideCountNew) {\n          if ((center || edgePadding) && point <= rangestart + 0.5) {\n            start = i;\n          }\n\n          if (rangeend - point >= 0.5) {\n            end = i;\n          }\n        }\n      }); // - check percentage width, fixed width\n    } else {\n      if (fixedWidth) {\n        var cell = fixedWidth + gutter;\n\n        if (center || edgePadding) {\n          start = Math.floor(rangestart / cell);\n          end = Math.ceil(rangeend / cell - 1);\n        } else {\n          end = start + Math.ceil(viewport / cell) - 1;\n        }\n      } else {\n        if (center || edgePadding) {\n          var a = items - 1;\n\n          if (center) {\n            start -= a / 2;\n            end = index + a / 2;\n          } else {\n            end = index + a;\n          }\n\n          if (edgePadding) {\n            var b = (edgePadding * items) / viewport;\n            start -= b;\n            end += b;\n          }\n\n          start = Math.floor(start);\n          end = Math.ceil(end);\n        } else {\n          end = start + items - 1;\n        }\n      }\n\n      start = Math.max(start, 0);\n      end = Math.min(end, slideCountNew - 1);\n    }\n\n    return [start, end];\n  }\n\n  function doLazyLoad() {\n    if (lazyload && !disable) {\n      var arg = getVisibleSlideRange();\n      arg.push(lazyloadSelector);\n      getImageArray.apply(null, arg).forEach(function (img) {\n        if (!hasClass(img, imgCompleteClass)) {\n          // stop propagation transitionend event to container\n          var eve = {};\n\n          eve[TRANSITIONEND] = function (e) {\n            e.stopPropagation();\n          };\n\n          addEvents(img, eve);\n          addEvents(img, imgEvents); // update src\n\n          img.src = getAttr(img, 'data-src'); // update srcset\n\n          var srcset = getAttr(img, 'data-srcset');\n\n          if (srcset) {\n            img.srcset = srcset;\n          }\n\n          addClass(img, 'loading');\n        }\n      });\n    }\n  }\n\n  function onImgLoaded(e) {\n    imgLoaded(getTarget(e));\n  }\n\n  function onImgFailed(e) {\n    imgFailed(getTarget(e));\n  }\n\n  function imgLoaded(img) {\n    addClass(img, 'loaded');\n    imgCompleted(img);\n  }\n\n  function imgFailed(img) {\n    addClass(img, 'failed');\n    imgCompleted(img);\n  }\n\n  function imgCompleted(img) {\n    addClass(img, imgCompleteClass);\n    removeClass(img, 'loading');\n    removeEvents(img, imgEvents);\n  }\n\n  function getImageArray(start, end, imgSelector) {\n    var imgs = [];\n\n    if (!imgSelector) {\n      imgSelector = 'img';\n    }\n\n    while (start <= end) {\n      forEach(slideItems[start].querySelectorAll(imgSelector), function (img) {\n        imgs.push(img);\n      });\n      start++;\n    }\n\n    return imgs;\n  } // check if all visible images are loaded\n  // and update container height if it's done\n\n  function doAutoHeight() {\n    var imgs = getImageArray.apply(null, getVisibleSlideRange());\n    raf(function () {\n      imgsLoadedCheck(imgs, updateInnerWrapperHeight);\n    });\n  }\n\n  function imgsLoadedCheck(imgs, cb) {\n    // execute callback function if all images are complete\n    if (imgsComplete) {\n      return cb();\n    } // check image classes\n\n    imgs.forEach(function (img, index) {\n      if (!lazyload && img.complete) {\n        imgCompleted(img);\n      } // Check image.complete\n\n      if (hasClass(img, imgCompleteClass)) {\n        imgs.splice(index, 1);\n      }\n    }); // execute callback function if selected images are all complete\n\n    if (!imgs.length) {\n      return cb();\n    } // otherwise execute this functiona again\n\n    raf(function () {\n      imgsLoadedCheck(imgs, cb);\n    });\n  }\n\n  function additionalUpdates() {\n    doLazyLoad();\n    updateSlideStatus();\n    updateLiveRegion();\n    updateControlsStatus();\n    updateNavStatus();\n  }\n\n  function update_carousel_transition_duration() {\n    if (carousel && autoHeight) {\n      middleWrapper.style[TRANSITIONDURATION] = speed / 1000 + 's';\n    }\n  }\n\n  function getMaxSlideHeight(slideStart, slideRange) {\n    var heights = [];\n\n    for (\n      var i = slideStart, l = Math.min(slideStart + slideRange, slideCountNew);\n      i < l;\n      i++\n    ) {\n      heights.push(slideItems[i].offsetHeight);\n    }\n\n    return Math.max.apply(null, heights);\n  } // update inner wrapper height\n  // 1. get the max-height of the visible slides\n  // 2. set transitionDuration to speed\n  // 3. update inner wrapper height to max-height\n  // 4. set transitionDuration to 0s after transition done\n\n  function updateInnerWrapperHeight() {\n    var maxHeight = autoHeight\n        ? getMaxSlideHeight(index, items)\n        : getMaxSlideHeight(cloneCount, slideCount),\n      wp = middleWrapper ? middleWrapper : innerWrapper;\n\n    if (wp.style.height !== maxHeight) {\n      wp.style.height = maxHeight + 'px';\n    }\n  } // get the distance from the top edge of the first slide to each slide\n  // (init) => slidePositions\n\n  function setSlidePositions() {\n    slidePositions = [0];\n    var attr = horizontal ? 'left' : 'top',\n      attr2 = horizontal ? 'right' : 'bottom',\n      base = slideItems[0].getBoundingClientRect()[attr];\n    forEach(slideItems, function (item, i) {\n      // skip the first slide\n      if (i) {\n        slidePositions.push(item.getBoundingClientRect()[attr] - base);\n      } // add the end edge\n\n      if (i === slideCountNew - 1) {\n        slidePositions.push(item.getBoundingClientRect()[attr2] - base);\n      }\n    });\n  } // update slide\n\n  function updateSlideStatus() {\n    var range = getVisibleSlideRange(),\n      start = range[0],\n      end = range[1];\n    forEach(slideItems, function (item, i) {\n      // show slides\n      if (i >= start && i <= end) {\n        if (hasAttr(item, 'aria-hidden')) {\n          removeAttrs(item, ['aria-hidden', 'tabindex']);\n          addClass(item, slideActiveClass);\n        } // hide slides\n      } else {\n        if (!hasAttr(item, 'aria-hidden')) {\n          setAttrs(item, {\n            'aria-hidden': 'true',\n            tabindex: '-1',\n          });\n          removeClass(item, slideActiveClass);\n        }\n      }\n    });\n  } // gallery: update slide position\n\n  function updateGallerySlidePositions() {\n    var l = index + Math.min(slideCount, items);\n\n    for (var i = slideCountNew; i--; ) {\n      var item = slideItems[i];\n\n      if (i >= index && i < l) {\n        // add transitions to visible slides when adjusting their positions\n        addClass(item, 'tns-moving');\n        item.style.left = ((i - index) * 100) / items + '%';\n        addClass(item, animateIn);\n        removeClass(item, animateNormal);\n      } else if (item.style.left) {\n        item.style.left = '';\n        addClass(item, animateNormal);\n        removeClass(item, animateIn);\n      } // remove outlet animation\n\n      removeClass(item, animateOut);\n    } // removing '.tns-moving'\n\n    setTimeout(function () {\n      forEach(slideItems, function (el) {\n        removeClass(el, 'tns-moving');\n      });\n    }, 300);\n  } // set tabindex on Nav\n\n  function updateNavStatus() {\n    // get current nav\n    if (nav) {\n      navCurrentIndex = navClicked >= 0 ? navClicked : getCurrentNavIndex();\n      navClicked = -1;\n\n      if (navCurrentIndex !== navCurrentIndexCached) {\n        var navPrev = navItems[navCurrentIndexCached],\n          navCurrent = navItems[navCurrentIndex];\n        setAttrs(navPrev, {\n          tabindex: '-1',\n          'aria-label': navStr + (navCurrentIndexCached + 1),\n        });\n        removeClass(navPrev, navActiveClass);\n        setAttrs(navCurrent, {\n          'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent,\n        });\n        removeAttrs(navCurrent, 'tabindex');\n        addClass(navCurrent, navActiveClass);\n        navCurrentIndexCached = navCurrentIndex;\n      }\n    }\n  }\n\n  function getLowerCaseNodeName(el) {\n    return el.nodeName.toLowerCase();\n  }\n\n  function isButton(el) {\n    return getLowerCaseNodeName(el) === 'button';\n  }\n\n  function isAriaDisabled(el) {\n    return el.getAttribute('aria-disabled') === 'true';\n  }\n\n  function disEnableElement(isButton, el, val) {\n    if (isButton) {\n      el.disabled = val;\n    } else {\n      el.setAttribute('aria-disabled', val.toString());\n    }\n  } // set 'disabled' to true on controls when reach the edges\n\n  function updateControlsStatus() {\n    if (!controls || rewind || loop) {\n      return;\n    }\n\n    var prevDisabled = prevIsButton\n        ? prevButton.disabled\n        : isAriaDisabled(prevButton),\n      nextDisabled = nextIsButton\n        ? nextButton.disabled\n        : isAriaDisabled(nextButton),\n      disablePrev = index <= indexMin ? true : false,\n      disableNext = !rewind && index >= indexMax ? true : false;\n\n    if (disablePrev && !prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, true);\n    }\n\n    if (!disablePrev && prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, false);\n    }\n\n    if (disableNext && !nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, true);\n    }\n\n    if (!disableNext && nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, false);\n    }\n  } // set duration\n\n  function resetDuration(el, str) {\n    if (TRANSITIONDURATION) {\n      el.style[TRANSITIONDURATION] = str;\n    }\n  }\n\n  function getSliderWidth() {\n    return fixedWidth\n      ? (fixedWidth + gutter) * slideCountNew\n      : slidePositions[slideCountNew];\n  }\n\n  function getCenterGap(num) {\n    if (num == null) {\n      num = index;\n    }\n\n    var gap = edgePadding ? gutter : 0;\n    return autoWidth\n      ? (viewport -\n          gap -\n          (slidePositions[num + 1] - slidePositions[num] - gutter)) /\n          2\n      : fixedWidth\n      ? (viewport - fixedWidth) / 2\n      : (items - 1) / 2;\n  }\n\n  function getRightBoundary() {\n    var gap = edgePadding ? gutter : 0,\n      result = viewport + gap - getSliderWidth();\n\n    if (center && !loop) {\n      result = fixedWidth\n        ? -(fixedWidth + gutter) * (slideCountNew - 1) - getCenterGap()\n        : getCenterGap(slideCountNew - 1) - slidePositions[slideCountNew - 1];\n    }\n\n    if (result > 0) {\n      result = 0;\n    }\n\n    return result;\n  }\n\n  function getContainerTransformValue(num) {\n    if (num == null) {\n      num = index;\n    }\n\n    var val;\n\n    if (horizontal && !autoWidth) {\n      if (fixedWidth) {\n        val = -(fixedWidth + gutter) * num;\n\n        if (center) {\n          val += getCenterGap();\n        }\n      } else {\n        var denominator = TRANSFORM ? slideCountNew : items;\n\n        if (center) {\n          num -= getCenterGap();\n        }\n\n        val = (-num * 100) / denominator;\n      }\n    } else {\n      val = -slidePositions[num];\n\n      if (center && autoWidth) {\n        val += getCenterGap();\n      }\n    }\n\n    if (hasRightDeadZone) {\n      val = Math.max(val, rightBoundary);\n    }\n\n    val += horizontal && !autoWidth && !fixedWidth ? '%' : 'px';\n    return val;\n  }\n\n  function doContainerTransformSilent(val) {\n    resetDuration(container, '0s');\n    doContainerTransform(val);\n  }\n\n  function doContainerTransform(val) {\n    if (val == null) {\n      val = getContainerTransformValue();\n    }\n\n    container.style[transformAttr] = transformPrefix + val + transformPostfix;\n  }\n\n  function animateSlide(number, classOut, classIn, isOut) {\n    var l = number + items;\n\n    if (!loop) {\n      l = Math.min(l, slideCountNew);\n    }\n\n    for (var i = number; i < l; i++) {\n      var item = slideItems[i]; // set item positions\n\n      if (!isOut) {\n        item.style.left = ((i - index) * 100) / items + '%';\n      }\n\n      if (animateDelay && TRANSITIONDELAY) {\n        item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] =\n          (animateDelay * (i - number)) / 1000 + 's';\n      }\n\n      removeClass(item, classOut);\n      addClass(item, classIn);\n\n      if (isOut) {\n        slideItemsOut.push(item);\n      }\n    }\n  } // make transfer after click/drag:\n  // 1. change 'transform' property for mordern browsers\n  // 2. change 'left' property for legacy browsers\n\n  var transformCore = (function () {\n    return carousel\n      ? function () {\n          resetDuration(container, '');\n\n          if (TRANSITIONDURATION || !speed) {\n            // for morden browsers with non-zero duration or\n            // zero duration for all browsers\n            doContainerTransform(); // run fallback function manually\n            // when duration is 0 / container is hidden\n\n            if (!speed || !isVisible(container)) {\n              onTransitionEnd();\n            }\n          } else {\n            // for old browser with non-zero duration\n            jsTransform(\n              container,\n              transformAttr,\n              transformPrefix,\n              transformPostfix,\n              getContainerTransformValue(),\n              speed,\n              onTransitionEnd\n            );\n          }\n\n          if (!horizontal) {\n            updateContentWrapperHeight();\n          }\n        }\n      : function () {\n          slideItemsOut = [];\n          var eve = {};\n          eve[TRANSITIONEND] = eve[ANIMATIONEND] = onTransitionEnd;\n          removeEvents(slideItems[indexCached], eve);\n          addEvents(slideItems[index], eve);\n          animateSlide(indexCached, animateIn, animateOut, true);\n          animateSlide(index, animateNormal, animateIn); // run fallback function manually\n          // when transition or animation not supported / duration is 0\n\n          if (\n            !TRANSITIONEND ||\n            !ANIMATIONEND ||\n            !speed ||\n            !isVisible(container)\n          ) {\n            onTransitionEnd();\n          }\n        };\n  })();\n\n  function render(e, sliderMoved) {\n    if (updateIndexBeforeTransform) {\n      updateIndex();\n    } // render when slider was moved (touch or drag) even though index may not change\n\n    if (index !== indexCached || sliderMoved) {\n      // events\n      events.emit('indexChanged', info());\n      events.emit('transitionStart', info());\n\n      if (autoHeight) {\n        doAutoHeight();\n      } // pause autoplay when click or keydown from user\n\n      if (animating && e && ['click', 'keydown'].indexOf(e.type) >= 0) {\n        stopAutoplay();\n      }\n\n      running = true;\n      transformCore();\n    }\n  }\n  /*\n   * Transfer prefixed properties to the same format\n   * CSS: -Webkit-Transform => webkittransform\n   * JS: WebkitTransform => webkittransform\n   * @param {string} str - property\n   *\n   */\n\n  function strTrans(str) {\n    return str.toLowerCase().replace(/-/g, '');\n  } // AFTER TRANSFORM\n  // Things need to be done after a transfer:\n  // 1. check index\n  // 2. add classes to visible slide\n  // 3. disable controls buttons when reach the first/last slide in non-loop slider\n  // 4. update nav status\n  // 5. lazyload images\n  // 6. update container height\n\n  function onTransitionEnd(event) {\n    // check running on gallery mode\n    // make sure trantionend/animationend events run only once\n    if (carousel || running) {\n      events.emit('transitionEnd', info(event));\n\n      if (!carousel && slideItemsOut.length > 0) {\n        for (var i = 0; i < slideItemsOut.length; i++) {\n          var item = slideItemsOut[i]; // set item positions\n\n          item.style.left = '';\n\n          if (ANIMATIONDELAY && TRANSITIONDELAY) {\n            item.style[ANIMATIONDELAY] = '';\n            item.style[TRANSITIONDELAY] = '';\n          }\n\n          removeClass(item, animateOut);\n          addClass(item, animateNormal);\n        }\n      }\n      /* update slides, nav, controls after checking ...\n       * => legacy browsers who don't support 'event'\n       *    have to check event first, otherwise event.target will cause an error\n       * => or 'gallery' mode:\n       *   + event target is slide item\n       * => or 'carousel' mode:\n       *   + event target is container,\n       *   + event.property is the same with transform attribute\n       */\n\n      if (\n        !event ||\n        (!carousel && event.target.parentNode === container) ||\n        (event.target === container &&\n          strTrans(event.propertyName) === strTrans(transformAttr))\n      ) {\n        if (!updateIndexBeforeTransform) {\n          var indexTem = index;\n          updateIndex();\n\n          if (index !== indexTem) {\n            events.emit('indexChanged', info());\n            doContainerTransformSilent();\n          }\n        }\n\n        if (nested === 'inner') {\n          events.emit('innerLoaded', info());\n        }\n\n        running = false;\n        indexCached = index;\n      }\n    }\n  } // # ACTIONS\n\n  function goTo(targetIndex, e) {\n    if (freeze) {\n      return;\n    } // prev slideBy\n\n    if (targetIndex === 'prev') {\n      onControlsClick(e, -1); // next slideBy\n    } else if (targetIndex === 'next') {\n      onControlsClick(e, 1); // go to exact slide\n    } else {\n      if (running) {\n        if (preventActionWhenRunning) {\n          return;\n        } else {\n          onTransitionEnd();\n        }\n      }\n\n      var absIndex = getAbsIndex(),\n        indexGap = 0;\n\n      if (targetIndex === 'first') {\n        indexGap = -absIndex;\n      } else if (targetIndex === 'last') {\n        indexGap = carousel\n          ? slideCount - items - absIndex\n          : slideCount - 1 - absIndex;\n      } else {\n        if (typeof targetIndex !== 'number') {\n          targetIndex = parseInt(targetIndex);\n        }\n\n        if (!isNaN(targetIndex)) {\n          // from directly called goTo function\n          if (!e) {\n            targetIndex = Math.max(0, Math.min(slideCount - 1, targetIndex));\n          }\n\n          indexGap = targetIndex - absIndex;\n        }\n      } // gallery: make sure new page won't overlap with current page\n\n      if (!carousel && indexGap && Math.abs(indexGap) < items) {\n        var factor = indexGap > 0 ? 1 : -1;\n        indexGap +=\n          index + indexGap - slideCount >= indexMin\n            ? slideCount * factor\n            : slideCount * 2 * factor * -1;\n      }\n\n      index += indexGap; // make sure index is in range\n\n      if (carousel && loop) {\n        if (index < indexMin) {\n          index += slideCount;\n        }\n\n        if (index > indexMax) {\n          index -= slideCount;\n        }\n      } // if index is changed, start rendering\n\n      if (getAbsIndex(index) !== getAbsIndex(indexCached)) {\n        render(e);\n      }\n    }\n  } // on controls click\n\n  function onControlsClick(e, dir) {\n    if (running) {\n      if (preventActionWhenRunning) {\n        return;\n      } else {\n        onTransitionEnd();\n      }\n    }\n\n    var passEventObject;\n\n    if (!dir) {\n      e = getEvent(e);\n      var target = getTarget(e);\n\n      while (\n        target !== controlsContainer &&\n        [prevButton, nextButton].indexOf(target) < 0\n      ) {\n        target = target.parentNode;\n      }\n\n      var targetIn = [prevButton, nextButton].indexOf(target);\n\n      if (targetIn >= 0) {\n        passEventObject = true;\n        dir = targetIn === 0 ? -1 : 1;\n      }\n    }\n\n    if (rewind) {\n      if (index === indexMin && dir === -1) {\n        goTo('last', e);\n        return;\n      } else if (index === indexMax && dir === 1) {\n        goTo('first', e);\n        return;\n      }\n    }\n\n    if (dir) {\n      index += slideBy * dir;\n\n      if (autoWidth) {\n        index = Math.floor(index);\n      } // pass e when click control buttons or keydown\n\n      render(passEventObject || (e && e.type === 'keydown') ? e : null);\n    }\n  } // on nav click\n\n  function onNavClick(e) {\n    if (running) {\n      if (preventActionWhenRunning) {\n        return;\n      } else {\n        onTransitionEnd();\n      }\n    }\n\n    e = getEvent(e);\n    var target = getTarget(e),\n      navIndex; // find the clicked nav item\n\n    while (target !== navContainer && !hasAttr(target, 'data-nav')) {\n      target = target.parentNode;\n    }\n\n    if (hasAttr(target, 'data-nav')) {\n      var navIndex = (navClicked = Number(getAttr(target, 'data-nav'))),\n        targetIndexBase =\n          fixedWidth || autoWidth\n            ? (navIndex * slideCount) / pages\n            : navIndex * items,\n        targetIndex = navAsThumbnails\n          ? navIndex\n          : Math.min(Math.ceil(targetIndexBase), slideCount - 1);\n      goTo(targetIndex, e);\n\n      if (navCurrentIndex === navIndex) {\n        if (animating) {\n          stopAutoplay();\n        }\n\n        navClicked = -1; // reset navClicked\n      }\n    }\n  } // autoplay functions\n\n  function setAutoplayTimer() {\n    autoplayTimer = setInterval(function () {\n      onControlsClick(null, autoplayDirection);\n    }, autoplayTimeout);\n    animating = true;\n  }\n\n  function stopAutoplayTimer() {\n    clearInterval(autoplayTimer);\n    animating = false;\n  }\n\n  function updateAutoplayButton(action, txt) {\n    setAttrs(autoplayButton, {\n      'data-action': action,\n    });\n    autoplayButton.innerHTML =\n      autoplayHtmlStrings[0] + action + autoplayHtmlStrings[1] + txt;\n  }\n\n  function startAutoplay() {\n    setAutoplayTimer();\n\n    if (autoplayButton) {\n      updateAutoplayButton('stop', autoplayText[1]);\n    }\n  }\n\n  function stopAutoplay() {\n    stopAutoplayTimer();\n\n    if (autoplayButton) {\n      updateAutoplayButton('start', autoplayText[0]);\n    }\n  } // programaitcally play/pause the slider\n\n  function play() {\n    if (autoplay && !animating) {\n      startAutoplay();\n      autoplayUserPaused = false;\n    }\n  }\n\n  function pause() {\n    if (animating) {\n      stopAutoplay();\n      autoplayUserPaused = true;\n    }\n  }\n\n  function toggleAutoplay() {\n    if (animating) {\n      stopAutoplay();\n      autoplayUserPaused = true;\n    } else {\n      startAutoplay();\n      autoplayUserPaused = false;\n    }\n  }\n\n  function onVisibilityChange() {\n    if (doc.hidden) {\n      if (animating) {\n        stopAutoplayTimer();\n        autoplayVisibilityPaused = true;\n      }\n    } else if (autoplayVisibilityPaused) {\n      setAutoplayTimer();\n      autoplayVisibilityPaused = false;\n    }\n  }\n\n  function mouseoverPause() {\n    if (animating) {\n      stopAutoplayTimer();\n      autoplayHoverPaused = true;\n    }\n  }\n\n  function mouseoutRestart() {\n    if (autoplayHoverPaused) {\n      setAutoplayTimer();\n      autoplayHoverPaused = false;\n    }\n  } // keydown events on document\n\n  function onDocumentKeydown(e) {\n    e = getEvent(e);\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n    if (keyIndex >= 0) {\n      onControlsClick(e, keyIndex === 0 ? -1 : 1);\n    }\n  } // on key control\n\n  function onControlsKeydown(e) {\n    e = getEvent(e);\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n    if (keyIndex >= 0) {\n      if (keyIndex === 0) {\n        if (!prevButton.disabled) {\n          onControlsClick(e, -1);\n        }\n      } else if (!nextButton.disabled) {\n        onControlsClick(e, 1);\n      }\n    }\n  } // set focus\n\n  function setFocus(el) {\n    el.focus();\n  } // on key nav\n\n  function onNavKeydown(e) {\n    e = getEvent(e);\n    var curElement = doc.activeElement;\n\n    if (!hasAttr(curElement, 'data-nav')) {\n      return;\n    } // var code = e.keyCode,\n\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT, KEYS.ENTER, KEYS.SPACE].indexOf(\n        e.keyCode\n      ),\n      navIndex = Number(getAttr(curElement, 'data-nav'));\n\n    if (keyIndex >= 0) {\n      if (keyIndex === 0) {\n        if (navIndex > 0) {\n          setFocus(navItems[navIndex - 1]);\n        }\n      } else if (keyIndex === 1) {\n        if (navIndex < pages - 1) {\n          setFocus(navItems[navIndex + 1]);\n        }\n      } else {\n        navClicked = navIndex;\n        goTo(navIndex, e);\n      }\n    }\n  }\n\n  function getEvent(e) {\n    e = e || win.event;\n    return isTouchEvent(e) ? e.changedTouches[0] : e;\n  }\n\n  function getTarget(e) {\n    return e.target || win.event.srcElement;\n  }\n\n  function isTouchEvent(e) {\n    return e.type.indexOf('touch') >= 0;\n  }\n\n  function preventDefaultBehavior(e) {\n    e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n  }\n\n  function getMoveDirectionExpected() {\n    return (\n      getTouchDirection(\n        toDegree(\n          lastPosition.y - initPosition.y,\n          lastPosition.x - initPosition.x\n        ),\n        swipeAngle\n      ) === options.axis\n    );\n  }\n\n  function onPanStart(e) {\n    if (running) {\n      if (preventActionWhenRunning) {\n        return;\n      } else {\n        onTransitionEnd();\n      }\n    }\n\n    if (autoplay && animating) {\n      stopAutoplayTimer();\n    }\n\n    panStart = true;\n\n    if (rafIndex) {\n      caf(rafIndex);\n      rafIndex = null;\n    }\n\n    var $ = getEvent(e);\n    events.emit(isTouchEvent(e) ? 'touchStart' : 'dragStart', info(e));\n\n    if (\n      !isTouchEvent(e) &&\n      ['img', 'a'].indexOf(getLowerCaseNodeName(getTarget(e))) >= 0\n    ) {\n      preventDefaultBehavior(e);\n    }\n\n    lastPosition.x = initPosition.x = $.clientX;\n    lastPosition.y = initPosition.y = $.clientY;\n\n    if (carousel) {\n      translateInit = parseFloat(\n        container.style[transformAttr].replace(transformPrefix, '')\n      );\n      resetDuration(container, '0s');\n    }\n  }\n\n  function onPanMove(e) {\n    if (panStart) {\n      var $ = getEvent(e);\n      lastPosition.x = $.clientX;\n      lastPosition.y = $.clientY;\n\n      if (carousel) {\n        if (!rafIndex) {\n          rafIndex = raf(function () {\n            panUpdate(e);\n          });\n        }\n      } else {\n        if (moveDirectionExpected === '?') {\n          moveDirectionExpected = getMoveDirectionExpected();\n        }\n\n        if (moveDirectionExpected) {\n          preventScroll = true;\n        }\n      }\n\n      if (\n        (typeof e.cancelable !== 'boolean' || e.cancelable) &&\n        preventScroll\n      ) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  function panUpdate(e) {\n    if (!moveDirectionExpected) {\n      panStart = false;\n      return;\n    }\n\n    caf(rafIndex);\n\n    if (panStart) {\n      rafIndex = raf(function () {\n        panUpdate(e);\n      });\n    }\n\n    if (moveDirectionExpected === '?') {\n      moveDirectionExpected = getMoveDirectionExpected();\n    }\n\n    if (moveDirectionExpected) {\n      if (!preventScroll && isTouchEvent(e)) {\n        preventScroll = true;\n      }\n\n      try {\n        if (e.type) {\n          events.emit(isTouchEvent(e) ? 'touchMove' : 'dragMove', info(e));\n        }\n      } catch (err) {}\n\n      var x = translateInit,\n        dist = getDist(lastPosition, initPosition);\n\n      if (!horizontal || fixedWidth || autoWidth) {\n        x += dist;\n        x += 'px';\n      } else {\n        var percentageX = TRANSFORM\n          ? (dist * items * 100) / ((viewport + gutter) * slideCountNew)\n          : (dist * 100) / (viewport + gutter);\n        x += percentageX;\n        x += '%';\n      }\n\n      container.style[transformAttr] = transformPrefix + x + transformPostfix;\n    }\n  }\n\n  function onPanEnd(e) {\n    if (panStart) {\n      if (rafIndex) {\n        caf(rafIndex);\n        rafIndex = null;\n      }\n\n      if (carousel) {\n        resetDuration(container, '');\n      }\n\n      panStart = false;\n      var $ = getEvent(e);\n      lastPosition.x = $.clientX;\n      lastPosition.y = $.clientY;\n      var dist = getDist(lastPosition, initPosition);\n\n      if (Math.abs(dist)) {\n        // drag vs click\n        if (!isTouchEvent(e)) {\n          // prevent \"click\"\n          var target = getTarget(e);\n          addEvents(target, {\n            click: function preventClick(e) {\n              preventDefaultBehavior(e);\n              removeEvents(target, {\n                click: preventClick,\n              });\n            },\n          });\n        }\n\n        if (carousel) {\n          rafIndex = raf(function () {\n            if (horizontal && !autoWidth) {\n              var indexMoved = (-dist * items) / (viewport + gutter);\n              indexMoved =\n                dist > 0 ? Math.floor(indexMoved) : Math.ceil(indexMoved);\n              index += indexMoved;\n            } else {\n              var moved = -(translateInit + dist);\n\n              if (moved <= 0) {\n                index = indexMin;\n              } else if (moved >= slidePositions[slideCountNew - 1]) {\n                index = indexMax;\n              } else {\n                var i = 0;\n\n                while (i < slideCountNew && moved >= slidePositions[i]) {\n                  index = i;\n\n                  if (moved > slidePositions[i] && dist < 0) {\n                    index += 1;\n                  }\n\n                  i++;\n                }\n              }\n            }\n\n            render(e, dist);\n            events.emit(isTouchEvent(e) ? 'touchEnd' : 'dragEnd', info(e));\n          });\n        } else {\n          if (moveDirectionExpected) {\n            onControlsClick(e, dist > 0 ? -1 : 1);\n          }\n        }\n      }\n    } // reset\n\n    if (options.preventScrollOnTouch === 'auto') {\n      preventScroll = false;\n    }\n\n    if (swipeAngle) {\n      moveDirectionExpected = '?';\n    }\n\n    if (autoplay && !animating) {\n      setAutoplayTimer();\n    }\n  } // === RESIZE FUNCTIONS === //\n  // (slidePositions, index, items) => vertical_conentWrapper.height\n\n  function updateContentWrapperHeight() {\n    var wp = middleWrapper ? middleWrapper : innerWrapper;\n    wp.style.height =\n      slidePositions[index + items] - slidePositions[index] + 'px';\n  }\n\n  function getPages() {\n    var rough = fixedWidth\n      ? ((fixedWidth + gutter) * slideCount) / viewport\n      : slideCount / items;\n    return Math.min(Math.ceil(rough), slideCount);\n  }\n  /*\n   * 1. update visible nav items list\n   * 2. add \"hidden\" attributes to previous visible nav items\n   * 3. remove \"hidden\" attrubutes to new visible nav items\n   */\n\n  function updateNavVisibility() {\n    if (!nav || navAsThumbnails) {\n      return;\n    }\n\n    if (pages !== pagesCached) {\n      var min = pagesCached,\n        max = pages,\n        fn = showElement;\n\n      if (pagesCached > pages) {\n        min = pages;\n        max = pagesCached;\n        fn = hideElement;\n      }\n\n      while (min < max) {\n        fn(navItems[min]);\n        min++;\n      } // cache pages\n\n      pagesCached = pages;\n    }\n  }\n\n  function info(e) {\n    return {\n      container: container,\n      slideItems: slideItems,\n      navContainer: navContainer,\n      navItems: navItems,\n      controlsContainer: controlsContainer,\n      hasControls: hasControls,\n      prevButton: prevButton,\n      nextButton: nextButton,\n      items: items,\n      slideBy: slideBy,\n      cloneCount: cloneCount,\n      slideCount: slideCount,\n      slideCountNew: slideCountNew,\n      index: index,\n      indexCached: indexCached,\n      displayIndex: getCurrentSlide(),\n      navCurrentIndex: navCurrentIndex,\n      navCurrentIndexCached: navCurrentIndexCached,\n      pages: pages,\n      pagesCached: pagesCached,\n      sheet: sheet,\n      isOn: isOn,\n      event: e || {},\n    };\n  }\n\n  return {\n    version: '2.9.4',\n    getInfo: info,\n    events: events,\n    goTo: goTo,\n    play: play,\n    pause: pause,\n    isOn: isOn,\n    updateSliderHeight: updateInnerWrapperHeight,\n    refresh: initSliderTransform,\n    destroy: destroy,\n    rebuild: function () {\n      return tns(extend(options, optionsElements));\n    },\n  };\n};\n\nexports.tns = tns;\n","class VanillaScrollspy {\n  constructor({ menu, speed = 2000, easing = 'easeOutSine' }) {\n    this.$menu = menu;\n    this.speed = speed;\n    this.easing = easing;\n  }\n\n  scrollToY(targetY = 0) {\n    let currentTime = 0;\n    const scrollTargetY = targetY;\n    const scrollY = window.scrollY || document.documentElement.scrollTop;\n    const time = Math.max(\n      0.1,\n      Math.min(Math.abs(scrollY - scrollTargetY) / this.speed, 0.8)\n    );\n\n    const easingEquations = {\n      easeOutSine(pos) {\n        return Math.sin(pos * (Math.PI / 2));\n      },\n\n      easeInOutSine(pos) {\n        return -0.5 * (Math.cos(Math.PI * pos) - 1);\n      },\n\n      easeInOutQuint(pos) {\n        if ((pos /= 0.5) < 1) return 0.5 * pos ** 5;\n        return 0.5 * ((pos - 2) ** 5 + 2);\n      },\n    };\n\n    const tick = () => {\n      currentTime += 1 / 60;\n\n      const p = currentTime / time;\n      const t = easingEquations[this.easing](p);\n\n      if (p < 1) {\n        window.requestAnimationFrame(tick);\n        window.scrollTo(0, scrollY + (scrollTargetY - scrollY) * t);\n        return;\n      }\n\n      window.scrollTo(0, scrollTargetY);\n    };\n\n    tick();\n  }\n\n  menuControl() {\n    const $links = this.$menu.querySelectorAll('a[href^=\"#\"]');\n    const scrollPos = window.scrollY || document.documentElement.scrollTop;\n\n    $links.forEach((link) => {\n      const $elem = document.querySelector(link.getAttribute('href'));\n\n      return $elem.offsetTop <= scrollPos &&\n        $elem.offsetTop + $elem.clientHeight > scrollPos\n        ? link.classList.add('active')\n        : link.classList.remove('active');\n    });\n  }\n\n  animated() {\n    const $links = this.$menu.querySelectorAll('a[href^=\"#\"]');\n    const self = this;\n\n    function control(e) {\n      e.preventDefault();\n      const $target = document.querySelector(this.hash);\n      self.scrollToY($target.offsetTop);\n    }\n\n    $links.forEach((link) => link.addEventListener('click', control));\n  }\n\n  init() {\n    this.animated();\n    document.addEventListener('scroll', () => this.menuControl());\n  }\n}\n\nexport default function vanillaScrollspy(...args) {\n  return new VanillaScrollspy(...args);\n}\n"],"names":["$126f17a2d0da0791$exports","Object","defineProperty","value","$126f17a2d0da0791$var$win","window","$126f17a2d0da0791$var$caf","cancelAnimationFrame","mozCancelAnimationFrame","id","clearTimeout","$126f17a2d0da0791$var$extend","obj","name","copy","target","arguments","i","length","undefined","$126f17a2d0da0791$var$checkStorageValue","indexOf","JSON","parse","$126f17a2d0da0791$var$setLocalStorage","storage","key","access","setItem","e","$126f17a2d0da0791$var$getBody","doc","document","body","createElement","fake","$126f17a2d0da0791$var$docElement","documentElement","$126f17a2d0da0791$var$setFakeBody","docOverflow","style","overflow","background","appendChild","$126f17a2d0da0791$var$resetFakeBody","remove","offsetHeight","$126f17a2d0da0791$var$addCSSRule","sheet","selector","rules","index","insertRule","addRule","$126f17a2d0da0791$var$getCssRulesLength","rule","cssRules","$126f17a2d0da0791$var$forEach","arr","callback","scope","l","call","$126f17a2d0da0791$var$classListSupport","$126f17a2d0da0791$var$hasClass","el","str","classList","contains","className","$126f17a2d0da0791$var$addClass","add","$126f17a2d0da0791$var$removeClass","replace","$126f17a2d0da0791$var$hasAttr","attr","hasAttribute","$126f17a2d0da0791$var$getAttr","getAttribute","$126f17a2d0da0791$var$isNodeList","item","$126f17a2d0da0791$var$setAttrs","els","attrs","Array","prototype","toString","setAttribute","$126f17a2d0da0791$var$removeAttrs","attrLength","j","removeAttribute","$126f17a2d0da0791$var$arrayFromNodeList","nl","push","$126f17a2d0da0791$var$hideElement","forceHide","display","$126f17a2d0da0791$var$showElement","$126f17a2d0da0791$var$isVisible","getComputedStyle","$126f17a2d0da0791$var$whichProperty","props","Props","charAt","toUpperCase","substr","prefixes","forEach","prefix","prop","$126f17a2d0da0791$var$getEndProperty","propIn","propOut","endProp","test","toLowerCase","$126f17a2d0da0791$var$supportsPassive","$126f17a2d0da0791$var$opts","get","addEventListener","$126f17a2d0da0791$var$passiveOption","passive","$126f17a2d0da0791$var$addEvents","preventScrolling","option","$126f17a2d0da0791$var$removeEvents","removeEventListener","$126f17a2d0da0791$var$Events","topics","on","eventName","fn","off","splice","emit","data","type","keys","object","hasOwnProperty","Element","parentNode","removeChild","$126f17a2d0da0791$var$tns","options","container","mode","axis","items","gutter","edgePadding","fixedWidth","autoWidth","viewportMax","slideBy","center","controls","controlsPosition","controlsText","controlsContainer","prevButton","nextButton","nav","navPosition","navContainer","navAsThumbnails","arrowKeys","speed","autoplay","autoplayPosition","autoplayTimeout","autoplayDirection","autoplayText","autoplayHoverPause","autoplayButton","autoplayButtonOutput","autoplayResetOnVisibility","animateIn","animateOut","animateNormal","animateDelay","loop","rewind","autoHeight","responsive","lazyload","lazyloadSelector","touch","mouseDrag","swipeAngle","nested","preventActionWhenRunning","preventScrollOnTouch","freezable","onInit","useLocalStorage","nonce","win","KEYS","ENTER","SPACE","LEFT","RIGHT","tnsStorage","localStorageAccess","browserInfo","navigator","userAgent","uid","Date","localStorage","getItem","removeItem","CALC","$126f17a2d0da0791$var$calc","div","result","val","vals","width","offsetWidth","PERCENTAGELAYOUT","$126f17a2d0da0791$var$percentageLayout","wrapper","outer","supported","innerHTML","Math","abs","getBoundingClientRect","left","children","count","CSSMQ","$126f17a2d0da0791$var$mediaquerySupport","matchMedia","msMatchMedia","position","styleSheet","cssText","createTextNode","currentStyle","TRANSFORM","HAS3DTRANSFORMS","$126f17a2d0da0791$var$has3DTransforms","tf","has3d","cssTF","slice","insertBefore","getPropertyValue","TRANSITIONDURATION","TRANSITIONDELAY","ANIMATIONDURATION","ANIMATIONDELAY","TRANSITIONEND","ANIMATIONEND","supportConsoleWarn","console","warn","tnsList","optionsElements","querySelector","nodeName","carousel","responsiveTem","updateOptions","middleWrapper","breakpointZone","horizontal","outerWrapper","innerWrapper","containerParent","containerHTML","outerHTML","slideItems","slideCount","windowWidth","getWindowWidth","isOn","setBreakpointZone","itemsMax","slidePositions","getOption","viewport","getViewportWidth","floor","fixedWidthViewportWidth","slideItemsOut","cloneCount","getItemsMax","bp","tem","ceil","min","apply","max","hasOption","slideCountNew","hasRightDeadZone","rightBoundary","getRightBoundary","updateIndexBeforeTransform","transformAttr","transformPrefix","transformPostfix","getIndexMax","getStartIndex","indexCached","getCurrentSlide","imgsComplete","liveregionCurrent","indexMin","indexMax","moveDirectionExpected","running","events","newContainerClasses","slideId","tnsId","disable","disabled","freeze","getFreeze","frozen","controlsEvents","click","onControlsClick","keydown","getEvent","keyIndex","keyCode","navEvents","onTransitionEnd","navIndex","getTarget","navClicked","Number","targetIndexBase","pages","goTo","navCurrentIndex","animating","stopAutoplay","curElement","activeElement","setFocus","focus","navItems","hoverEvents","mouseover","stopAutoplayTimer","autoplayHoverPaused","mouseout","setAutoplayTimer","visibilityEvent","visibilitychange","hidden","autoplayVisibilityPaused","docmentKeydownEvent","touchEvents","touchstart","onPanStart","touchmove","onPanMove","touchend","onPanEnd","touchcancel","dragEvents","mousedown","mousemove","mouseup","mouseleave","hasControls","hasNav","hasAutoplay","hasTouch","hasMouseDrag","slideActiveClass","slideClonedClass","imgCompleteClass","imgEvents","load","imgLoaded","error","img","imgCompleted","preventScroll","prevIsButton","nextIsButton","controlsContainerHTML","prevButtonHTML","nextButtonHTML","navContainerHTML","getPages","pagesCached","getCurrentNavIndex","navCurrentIndexCached","navActiveClass","navStr","navStrCurrent","autoplayTimer","autoplayUserPaused","autoplayButtonHTML","autoplayHtmlStrings","translateInit","rafIndex","initPosition","lastPosition","panStart","getDist","a","b","x","y","resetVariblesWhenDisable","condition","ind","getAbsIndex","absIndex","innerWidth","clientWidth","getInsertPosition","pos","gap","getClientWidth","rect","right","ww","parseInt","getInnerWrapperStyles","edgePaddingTem","gutterTem","fixedWidthTem","speedTem","autoHeightBP","gutterTemUnit","getTransitionDurationStyle","getContainerWidth","itemsTem","getSlideWidthStyle","dividend","getSlideGutterStyle","getCSSPrefix","num","substring","getAnimationDurationStyle","initSliderTransform","imgs","querySelectorAll","src","raf","imgsLoadedCheck","getImageArray","initSliderTransformStyleCheck","doContainerTransformSilent","initTools","initEvents","stylesApplicationCheck","initSliderTransformCore","setTimeout","setSlidePositions","updateContentWrapperHeight","updateSlideStatus","insertAdjacentHTML","getLiveRegionStr","txt","toggleAutoplay","startAutoplay","tabindex","navHtml","hiddenStr","updateNavVisibility","isButton","updateControlsStatus","disableUI","eve","resizeTasks","info","resize","onResize","doAutoHeight","doLazyLoad","disableSlider","freezeSlider","additionalUpdates","bpChanged","breakpointZoneTem","needContainerTransform","indChanged","itemsChanged","disableTem","freezeTem","arrowKeysTem","controlsTem","navTem","touchTem","mouseDragTem","autoplayTem","autoplayHoverPauseTem","autoplayResetOnVisibilityTem","indexTem","autoHeightTem","controlsTextTem","centerTem","autoplayTextTem","updateIndex","enableSlider","classN","enableUI","doContainerTransform","getContainerTransformValue","unfreezeSlider","margin","height","html","len","updateLiveRegion","updateGallerySlidePositions","deleteRule","removeRule","vp","initStructure","wp","fragmentBefore","createDocumentFragment","fragmentAfter","cloneFirst","cloneNode","firstChild","cloneLast","initSheet","fontSize","slide","marginLeft","opts","middleWrapperStr","innerWrapperStr","containerStr","slideStr","itemsBP","fixedWidthBP","speedBP","edgePaddingBP","gutterBP","leftEdge","rightEdge","getVisibleSlideRange","start","end","rangestart","rangeend","parseFloat","point","cell","arg","stopPropagation","srcset","imgSelector","updateInnerWrapperHeight","cb","complete","updateNavStatus","navPrev","navCurrent","getMaxSlideHeight","slideStart","slideRange","heights","maxHeight","attr2","base","range","getLowerCaseNodeName","isAriaDisabled","disEnableElement","prevDisabled","nextDisabled","disablePrev","disableNext","resetDuration","getCenterGap","denominator","animateSlide","number","classOut","classIn","isOut","transformCore","$126f17a2d0da0791$var$jsTransform","element","postfix","duration","tick","unit","to","from","positionTick","moveElement","render","sliderMoved","strTrans","event","propertyName","targetIndex","indexGap","isNaN","factor","dir","passEventObject","targetIn","setInterval","clearInterval","updateAutoplayButton","action","isTouchEvent","changedTouches","srcElement","preventDefaultBehavior","preventDefault","returnValue","getMoveDirectionExpected","angle","direction","$126f17a2d0da0791$var$getTouchDirection","atan2","PI","$","clientX","clientY","panUpdate","err","dist","cancelable","preventClick","indexMoved","moved","displayIndex","version","getInfo","play","pause","updateSliderHeight","refresh","destroy","ownerNode","htmlList","prevEl","previousElementSibling","parentEl","nextElementSibling","firstElementChild","rebuild","tns","$5e027fb9b135ff22$var$VanillaScrollspy","constructor","menu","easing","$menu","scrollToY","targetY","currentTime","scrollY","scrollTop","time","easingEquations","easeOutSine","sin","easeInOutSine","cos","easeInOutQuint","p","t","requestAnimationFrame","scrollTo","scrollTargetY","menuControl","$links","scrollPos","link","$elem","offsetTop","clientHeight","animated","self","control","$target","hash","init","$212038711ef1a1fe$var$menu","$212038711ef1a1fe$var$scrollspy","args","updateHeight","topHeight","movieWidth","containerWidth"],"version":3,"file":"index.547b0150.js.map"}